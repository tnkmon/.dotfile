{"version":3,"file":"popup/main.js","mappings":"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C,sCAVsC,qFAM9B,iE,uBAUA,kCAA0C,e,sBAA0B,qB,MAA1B,+E,uBAC1C,kCAA2C,e,sBAAuB,qB,MAAvB,4E,uHAW7C,gCACE,qEAME,kH,sBAGA,6DAKF,sDACF,oD,sCAVI,sGAEA,gDAIE,wG,yDA6Dd,gCACE,0DACE,kEAKE,mGAIA,8DACE,gEACE,6DACA,6DACF,qDACA,gEAAM,gB,uBAAyB,oBACjC,mDACF,iDACF,+CACF,6C,4DAZM,kEAK2C,sDACW,uDAE9C,+E,yDAzShB,iCACE,wBACA,mEAGA,mEAGA,wBACA,mEAYA,wBACA,0DACE,4DACE,8DACE,kEAAkB,gB,uBAAmB,oBACrC,kEAIE,8GAJF,oBAOF,iDACF,+CACA,4DACE,gB,uBACF,oBACF,6CACA,yBACA,8DA2BA,yBACA,8DAeA,yBACA,+DA6BA,yBACA,0DACE,2DACE,gB,uBACF,oBACA,4DACE,6BACA,8DACE,kEAAwB,gB,uBAA4B,oBACpD,kEAIE,6GAJF,oBAOF,iDACF,+CACF,6CACA,yBACA,0DACE,wDACE,iEAGE,8HAGA,gB,uBACA,kCACA,iEACF,iDACF,+CACF,6CACA,yDACE,8EAKE,6GAAiC,+FAGnC,+CACA,2BACA,4DACE,8DACE,gEACE,oEAAgC,gB,uBAAiC,oBACjE,oEAKE,wHALF,oBAQF,mDACF,iDACA,8DACE,gB,uBACF,oBACF,+CACA,2BACA,kEAcA,4BACA,8DACE,gEACE,kEACE,oEACE,2EACA,2EACA,wEAKE,6GALF,oBASF,sDACA,uEAiBF,oDACF,kDACA,gEACE,iB,wBACF,oBACF,gDACA,4BACA,8DACE,gEACE,kEACE,sEAAmB,iB,wBAAoB,oBACvC,yEAIE,+GAED,oBACH,oDACF,kDACA,gEACE,iB,wBACF,oBACF,gDACA,4BACA,8DACE,gEACE,kEACE,sEAAuB,iB,wBAAwB,oBAC/C,sEAIE,mHAJF,oBAOF,oDACF,kDACF,gDACA,4BACA,8DACE,gEACE,kEACE,sEAAyB,iB,wBAA8B,oBACvD,sEAIE,kHAJF,oBAOF,oDACF,kDACF,gDACF,8CACA,0BACA,g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AGA,4DACE,8DACE,yDACF,kDACA,4DAAM,gB,uBAAwB,oBAChC,iDACF,+C,MAFU,+E,yDAGV,mCAKE,kGAGA,4DACE,8DACE,yDACF,kDACA,4DAAM,gB,uBAAiC,oBACzC,iDACF,+C,MAFU,wF,yDAGV,mCAKE,oGAGA,4DACE,8DACE,yDACF,kDACA,4DAAM,gB,uBAA0B,oBAClC,iDACF,+C,MAFU,iF,0BAmBV,6BACE,0DAAgC,e,sBAAmC,oBACnE,e,sBACF,qB,mCAFkC,8FAChC,wI,mEAEF,6BACE,0DAAgC,e,sBAA+B,oBAC/D,0D,sBAME,eACF,oBACF,+C,mCATkC,0FAK9B,8FAFA,sEAIA,wG,yDA7fV,gCACE,qDACE,uDACE,e,sBACF,oBACA,wDACE,2DACE,gEAAkB,gB,uBAAmB,oBACrC,2DACF,+CACA,2BACA,+DA6JA,2BACA,gEAoFA,2BACA,gEA6CF,6CACF,2CACA,2DAiDA,4DAgBA,2DAOA,4DA+BA,wDACE,0DACE,mEAeA,mEAeA,mEAeA,mEAeA,mEAeA,+DAAwE,kGACtE,8DACE,gEACE,2DACF,mDACA,8DAAM,gB,uBAAwE,oBAChF,iDACF,+CACF,6CACF,2CACA,uDACE,0DACE,yDACE,4DAAgC,gB,uBAA2B,oBAC3D,gB,uBACF,oBACA,+DAIA,iEAWF,6CACF,2CACF,yC,qCA/fM,wGAIoB,yEACW,yDAGzB,yDA8JA,wDAqFA,4DA+CQ,iFAiDA,yDAgBA,6DASf,oIAqCI,oHAeA,+GAeA,wFAeA,mEAeA,6DAcO,2HAQwB,yFAChC,0HAEI,+EAIA,uECreZ,MAAM,GAA4B,qBAM3B,MAAMC,WAAsB,GAQjChjE,YACE8nD,EACApX,EACAswB,EACA79D,EACAqT,EACAzP,EACAghD,EACQpiD,EACAJ,EACAoZ,EACRuX,EACAljB,EACAo1B,EACAh0B,EACA63B,EACQmxB,EACA53D,EACAqd,EACRrP,EACAy0C,EACAx8C,EACA0gC,GAEAhsC,MACE2nD,EACApX,EACAswB,EACA79D,EACAqT,EACAzP,EACAghD,EACA57C,OACA+pB,EACAljB,EACAo1B,EACA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AAY2iB,kBACjE6jH,KAAM,CAAC1mI,KAET,CACEhC,QAASooI,GACTloI,SAAU,aAEZ,CACEF,QAASqoI,GACTI,WAAav9H,GAAmBA,EAAO+F,UAAU03H,SACjDD,KAAM,CAAClgE,KAET,CACExoE,QAASgoI,GACT9nI,SAAU,IAAIopE,GAAayB,GAAa,KAE1C,CACE/qE,QAASioI,GACT/nI,UAAU,GAEZ,CACEF,QAASkoI,GACTO,WACGlkI,GAAkD,CAACygC,EAAkBtX,IACpEnpB,EAAiBQ,KAAK,SAAU,CAAEigC,QAASA,EAAStX,OAAQA,IAChEg7G,KAAM,CAACxkI,KAET,CACElE,QAASmoI,GACTjoI,SAAU,MAEZ,CACEF,QAASsoI,GACTpoI,UAAU,GAEZ,CACEF,QAASgzB,GACTqwC,SAAU,GACVqlE,KAAM,CAAC1/D,KAET,CACEhpE,QAASymD,GACT4c,SAAU,GACVqlE,KAAM,CAAC71H,GAAkCnJ,KAE3C,CACE1J,QAASiE,GACTo/D,SAAU,GACVqlE,KAAM,CACJ7yH,GACAnM,GACAo2D,GACA9sC,GACAptB,GACA1B,GACAyF,GACAxF,GACA0B,GACA,GACAsqB,GACAnuB,KAGJ,CACEhC,QAASwmD,GACTiiF,WAAY,CACVlzH,EACA+oF,EACA/rF,EACAgsF,EACAr8F,EACA01C,EACAptC,EACA2I,IAEA,IAAI,GACFoC,EACA+oF,EACA/rF,EACAgsF,EACAr8F,GACA,IAAM01C,EAASluB,IAAIgb,KACnBl6B,EACA2I,GAEJu1H,KAAM,CACJ7yH,GACAizD,GACAp/D,GACAi/D,GACA3mE,GACA,EAAA4mI,SACAj/H,GACA,KAGJ,CACE3J,QAASmuC,GACTk1B,SAAU,GACVqlE,KAAM,CACJ7yH,GACA7T,GACAwkD,GACA,KAGJ,CACExmD,QrVhNC,cAA6CmuC,KqViN9CpK,YAAaoK,IAEf,CACEnuC,QAASouC,GACTi1B,SAAU+1C,GACVsvB,KAAM,CAACv6F,GAA0BzkC,KAEnC,CAAE1J,QAAS2J,GAAY8+H,WAAY,IAAM,IAAIniC,IAAkB,IAC/D,CACEtmG,QAAS0mD,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C,qBAAiC,CAC/C,SACA,WACA,gBACA,kBACA,QACA,UACA,cACA,cACA,WACA,aACA,SACA,QACA,UACA,QACA,UACA,kBACA,0BACA,mBAGc,GAAAC,0BAAsC,CACpD,QACA,UACA,QACA,UACA,kBACA,2BAGc,GAAAC,sBAAkC,CAChD,YACA,eACA,WACA,aACA,QACA,UACA,SACA,cACA,YACA,wBACA,mBACA,QACA,OACA,UACA,SACA,cACA,YACA,SACA,QACA,eACA,YACA,eACA,YACA,oBACA,iBACA,oBACA,iBACA,gBACA,kBACA,aACA,eACA,0BACA,wBACA,qBACA,UACA,cACA,cACA,eACA,UAGc,GAAAC,qBAAiC,CAC/C,WACA,cACA,UACA,YACA,QACA,UACA,SACA,cACA,YACA,uBACA,kBACA,QACA,OACA,UACA,SACA,cACA,YACA,SACA,QACA,UACA,YACA,gBACA,cACA,cACA,YACA,cACA,YACA,mBACA,iBACA,mBACA,iBACA,cACA,gBACA,iBACA,mBACA,yBACA,uBACA,cACA,qBACA,uBACA,gBACA,gBACA,UAGc,GAAAC,cAA0B,CACxC,MACA,MACA,OACA,SACA,SACA,WACA,WACA,MACA,MACA,OACA,MACA,OACA,UACA,YACA,gBACA,gBACA,SACA,aACA,oBACA,MACA,OAGc,GAAAC,oBAAgC,CAC9C,UACA,YACA,aACA,WACA,WAKc,GAAAC,UAAY,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAC3C,GAAAC,cAAgB,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAC/C,GAAAC,aAAe,CAAC,OAAQ,OAAQ,OAAQ,KAAM,OAAQ,QAGjE,MAAMC,IACK,GAAAC,mBAA+B,CAC7C,mBACA,cACA,WACA,SACA,YACA,cACA,aACA,YACA,gBAGc,GAAAC,mBAA+B,CAAC,OAAQ,YAAa,aAErD,GAAAC,wBAAoC,CAAC,YAAa,aAElD,GAAAC,gBAA4B,CAAC,mBAAoB,SAAU,SAE3D,GAAAC,oBAAgC,CAE9C,SACA,aACA,aACA,UAEA,WAGc,GAAAC,qBAAiC,CAC/C,SACA,cACA,kBA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","sources":["webpack:///webpack/runtime/chunk loaded","webpack:///../../node_modules/@angular/core/__ivy_ngcc__/bundles/ lazy namespace object","webpack:///../../libs/angular/src/components/toastr.component.ts","webpack:///../../libs/angular/src/pipes/credit-card-number.pipe.ts","webpack:///../../libs/common/src/abstractions/i18n.service.ts","webpack:///../../libs/angular/src/pipes/i18n.pipe.ts","webpack:///../../libs/angular/src/pipes/search.pipe.ts","webpack:///../../libs/angular/src/pipes/user-name.pipe.ts","webpack:///../../libs/angular/src/jslib.module.ts","webpack:///../../libs/common/src/enums/authenticationStatus.ts","webpack:///../../libs/common/src/abstractions/auth.service.ts","webpack:///../../libs/common/src/abstractions/messaging.service.ts","webpack:///../../libs/common/src/abstractions/keyConnector.service.ts","webpack:///../../libs/angular/src/guards/auth.guard.ts","webpack:///../../libs/angular/src/guards/lock.guard.ts","webpack:///../../libs/angular/src/guards/unauth.guard.ts","webpack:///../../libs/common/src/abstractions/platformUtils.service.ts","webpack:///../../libs/common/src/abstractions/environment.service.ts","webpack:///../../libs/angular/src/components/environment.component.ts","webpack:///../../libs/angular/src/directives/blur-click.directive.ts","webpack:///../../libs/angular/src/directives/box-row.directive.ts","webpack:///../../libs/angular/src/directives/input-verbatim.directive.ts","webpack:///./src/popup/accounts/environment.component.ts","webpack:///./src/popup/accounts/environment.component.html","webpack:///../../libs/common/src/models/request/passwordHintRequest.ts","webpack:///../../libs/common/src/abstractions/api.service.ts","webpack:///../../libs/common/src/abstractions/log.service.ts","webpack:///../../libs/angular/src/services/validation.service.ts","webpack:///../../libs/angular/src/directives/api-action.directive.ts","webpack:///../../libs/common/src/misc/utils.ts","webpack:///../../libs/angular/src/directives/autofocus.directive.ts","webpack:///./src/popup/accounts/hint.component.ts","webpack:///../../libs/angular/src/components/hint.component.ts","webpack:///./src/popup/accounts/hint.component.html","webpack:///../../libs/common/src/abstractions/passwordGeneration.service.ts","webpack:///../../libs/common/src/abstractions/state.service.ts","webpack:///../../libs/common/src/abstractions/cryptoFunction.service.ts","webpack:///../../libs/common/src/enums/hashPurpose.ts","webpack:///../../libs/common/src/enums/keySuffixOptions.ts","webpack:///../../libs/common/src/enums/encryptionType.ts","webpack:///./src/popup/accounts/home.component.ts","webpack:///./src/popup/accounts/home.component.html","webpack:///../../libs/common/src/models/domain/encString.ts","webpack:///../../libs/common/src/models/request/secretVerificationRequest.ts","webpack:///../../libs/common/src/abstractions/crypto.service.ts","webpack:///../../libs/common/src/abstractions/vaultTimeout.service.ts","webpack:///../../libs/angular/src/components/lock.component.ts","webpack:///./src/models/biometricErrors.ts","webpack:///../../libs/angular/src/directives/stop-click.directive.ts","webpack:///./src/browser/browserApi.ts","webpack:///./src/popup/services/popup-utils.service.ts","webpack:///../../libs/common/src/models/domain/domainBase.ts","webpack:///../../libs/common/src/models/domain/masterPasswordPolicyOptions.ts","webpack:///../../libs/angular/src/components/callout.component.html","webpack:///../../libs/angular/src/components/callout.component.ts","webpack:///./src/popup/components/private-mode-warning.component.html","webpack:///./src/popup/components/private-mode-warning.component.ts","webpack:///../../libs/angular/src/directives/a11y-title.directive.ts","webpack:///./src/popup/accounts/lock.component.html","webpack:///./src/popup/accounts/lock.component.ts","webpack:///../../libs/common/src/enums/authenticationType.ts","webpack:///../../libs/common/src/models/domain/logInCredentials.ts","webpack:///../../libs/common/src/misc/captcha_iframe.ts","webpack:///../../libs/common/src/misc/iframe_component.ts","webpack:///../../libs/angular/src/components/captchaProtected.component.ts","webpack:///../../libs/angular/src/components/login.component.ts","webpack:///../../libs/common/src/abstractions/sync.service.ts","webpack:///./src/popup/accounts/login.component.ts","webpack:///./src/popup/accounts/login.component.html","webpack:///../../libs/angular/src/validators/inputsFieldMatch.validator.ts","webpack:///../../libs/common/src/enums/kdfType.ts","webpack:///../../libs/common/src/models/request/keysRequest.ts","webpack:///../../libs/common/src/models/request/registerRequest.ts","webpack:///../../libs/common/src/abstractions/formValidationErrors.service.ts","webpack:///../../libs/angular/src/components/register.component.ts","webpack:///./src/popup/accounts/register.component.html","webpack:///./src/popup/accounts/register.component.ts","webpack:///../../libs/angular/src/components/remove-password.component.ts","webpack:///./src/popup/accounts/remove-password.component.html","webpack:///./src/popup/accounts/remove-password.component.ts","webpack:///../../libs/common/src/models/request/organizationUserResetPasswordEnrollmentRequest.ts","webpack:///../../libs/common/src/models/request/setPasswordRequest.ts","webpack:///../../libs/common/src/abstractions/policy.service.ts","webpack:///../../libs/angular/src/components/change-password.component.ts","webpack:///../../libs/angular/src/components/set-password.component.ts","webpack:///./src/popup/accounts/set-password.component.html","webpack:///./src/popup/accounts/set-password.component.ts","webpack:///../../libs/angular/src/components/sso.component.ts","webpack:///./src/popup/accounts/sso.component.ts","webpack:///../../libs/common/src/abstractions/twoFactor.service.ts","webpack:///../../libs/angular/src/components/two-factor-options.component.ts","webpack:///./src/popup/accounts/two-factor-options.component.html","webpack:///./src/popup/accounts/two-factor-options.component.ts","webpack:///../../libs/common/src/enums/twoFactorProviderType.ts","webpack:///../../libs/common/src/misc/webauthn_iframe.ts","webpack:///../../libs/common/src/models/request/identityToken/tokenRequestTwoFactor.ts","webpack:///../../libs/common/src/models/request/twoFactorEmailRequest.ts","webpack:///../../libs/common/src/services/twoFactor.service.ts","webpack:///../../libs/common/src/abstractions/appId.service.ts","webpack:///../../libs/angular/src/components/two-factor.component.ts","webpack:///../../libs/common/src/abstractions/broadcaster.service.ts","webpack:///./src/popup/accounts/two-factor.component.html","webpack:///./src/popup/accounts/two-factor.component.ts","webpack:///../../libs/common/src/models/request/updateTempPasswordRequest.ts","webpack:///../../libs/common/src/models/request/organizationUserResetPasswordRequest.ts","webpack:///../../libs/angular/src/components/update-temp-password.component.ts","webpack:///./src/popup/accounts/update-temp-password.component.html","webpack:///./src/popup/accounts/update-temp-password.component.ts","webpack:///../../libs/common/src/abstractions/usernameGeneration.service.ts","webpack:///../../libs/angular/src/components/generator.component.ts","webpack:///./src/popup/components/pop-out.component.html","webpack:///./src/popup/components/pop-out.component.ts","webpack:///../../libs/angular/src/directives/select-copy.directive.ts","webpack:///../../libs/angular/src/pipes/color-password.pipe.ts","webpack:///./src/popup/generator/generator.component.html","webpack:///./src/popup/generator/generator.component.ts","webpack:///../../libs/common/src/enums/policyType.ts","webpack:///../../libs/common/src/enums/sendType.ts","webpack:///../../libs/angular/src/components/password-generator-history.component.ts","webpack:///./src/popup/generator/password-generator-history.component.html","webpack:///./src/popup/generator/password-generator-history.component.ts","webpack:///../../libs/common/src/models/view/sendFileView.ts","webpack:///../../libs/common/src/models/view/sendTextView.ts","webpack:///../../libs/common/src/models/view/sendView.ts","webpack:///../../libs/common/src/abstractions/send.service.ts","webpack:///../../libs/angular/src/components/send/efflux-dates.component.ts","webpack:///../../libs/angular/src/components/send/add-edit.component.ts","webpack:///./src/services/abstractions/state.service.ts","webpack:///./src/popup/send/efflux-dates.component.html","webpack:///./src/popup/send/efflux-dates.component.ts","webpack:///./src/popup/send/send-add-edit.component.html","webpack:///./src/popup/send/send-add-edit.component.ts","webpack:///../../libs/common/src/abstractions/search.service.ts","webpack:///../../libs/angular/src/components/send/send.component.ts","webpack:///../../libs/angular/src/directives/stop-prop.directive.ts","webpack:///./src/popup/components/send-list.component.html","webpack:///./src/popup/components/send-list.component.ts","webpack:///./src/popup/send/send-groupings.component.html","webpack:///./src/popup/send/send-groupings.component.ts","webpack:///./src/popup/send/send-type.component.html","webpack:///./src/popup/send/send-type.component.ts","webpack:///./src/popup/services/debounceNavigationService.ts","webpack:///./src/popup/settings/excluded-domains.component.html","webpack:///./src/popup/settings/excluded-domains.component.ts","webpack:///../../libs/common/src/enums/eventType.ts","webpack:///../../libs/common/src/abstractions/export.service.ts","webpack:///../../libs/common/src/abstractions/event.service.ts","webpack:///../../libs/common/src/abstractions/userVerification.service.ts","webpack:///../../libs/common/src/abstractions/fileDownload/fileDownload.service.ts","webpack:///../../libs/common/src/enums/verificationType.ts","webpack:///../../libs/angular/src/components/export.component.ts","webpack:///../../libs/angular/src/components/user-verification.component.html","webpack:///../../libs/angular/src/components/user-verification.component.ts","webpack:///./src/popup/components/user-verification.component.html","webpack:///./src/popup/components/user-verification.component.ts","webpack:///../../libs/common/src/abstractions/organization.service.ts","webpack:///../../libs/angular/src/components/export-scope-callout.component.html","webpack:///../../libs/angular/src/components/export-scope-callout.component.ts","webpack:///./src/popup/settings/export.component.html","webpack:///./src/popup/settings/export.component.ts","webpack:///../../libs/common/src/models/view/folderView.ts","webpack:///../../libs/common/src/abstractions/folder/folder.service.abstraction.ts","webpack:///../../libs/common/src/abstractions/folder/folder-api.service.abstraction.ts","webpack:///../../libs/angular/src/components/folder-add-edit.component.ts","webpack:///./src/popup/settings/folder-add-edit.component.html","webpack:///./src/popup/settings/folder-add-edit.component.ts","webpack:///../../libs/common/src/enums/themeType.ts","webpack:///../../libs/common/src/enums/uriMatchType.ts","webpack:///./src/popup/settings/folders.component.html","webpack:///./src/popup/settings/folders.component.ts","webpack:///../../libs/common/src/abstractions/totp.service.ts","webpack:///../../libs/angular/src/services/theming/theming.service.abstraction.ts","webpack:///./src/popup/settings/options.component.html","webpack:///./src/popup/settings/options.component.ts","webpack:///../../libs/angular/src/components/premium.component.ts","webpack:///./src/popup/settings/premium.component.html","webpack:///./src/popup/settings/premium.component.ts","webpack:///../../libs/angular/src/components/modal/modal.ref.ts","webpack:///../../libs/angular/src/components/modal/dynamic-modal.component.ts","webpack:///../../libs/angular/src/components/modal/modal-injector.ts","webpack:///../../libs/common/src/enums/deviceType.ts","webpack:///../../libs/angular/src/services/modal.service.ts","webpack:///../../libs/angular/src/components/set-pin.component.ts","webpack:///./src/popup/components/set-pin.component.html","webpack:///./src/popup/components/set-pin.component.ts","webpack:///../../libs/angular/src/components/settings/vault-timeout-input.component.ts","webpack:///./src/popup/settings/vault-timeout-input.component.html","webpack:///./src/popup/settings/vault-timeout-input.component.ts","webpack:///./src/popup/settings/settings.component.html","webpack:///./src/popup/settings/settings.component.ts","webpack:///../../libs/common/src/enums/cipherRepromptType.ts","webpack:///../../libs/common/src/enums/cipherType.ts","webpack:///../../libs/common/src/enums/organizationUserStatusType.ts","webpack:///../../libs/common/src/enums/secureNoteType.ts","webpack:///../../libs/common/src/enums/linkedIdType.ts","webpack:///./src/popup/settings/sync.component.ts","webpack:///./src/popup/tabs.component.html","webpack:///./src/popup/settings/sync.component.html","webpack:///./src/popup/tabs.component.ts","webpack:///../../libs/common/src/misc/linkedFieldOption.decorator.ts","webpack:///../../libs/common/src/models/view/itemView.ts","webpack:///../../libs/common/src/models/view/cardView.ts","webpack:///../../libs/common/src/models/view/identityView.ts","webpack:///../../libs/common/src/models/view/loginView.ts","webpack:///../../libs/common/src/models/view/secureNoteView.ts","webpack:///../../libs/common/src/models/view/cipherView.ts","webpack:///../../libs/common/src/models/view/loginUriView.ts","webpack:///../../libs/common/src/abstractions/cipher.service.ts","webpack:///../../libs/common/src/abstractions/audit.service.ts","webpack:///../../libs/common/src/abstractions/collection.service.ts","webpack:///../../libs/common/src/abstractions/passwordReprompt.service.ts","webpack:///../../libs/common/src/enums/fieldType.ts","webpack:///../../libs/angular/src/components/add-edit.component.ts","webpack:///../../libs/common/src/models/view/fieldView.ts","webpack:///../../libs/angular/src/components/add-edit-custom-fields.component.ts","webpack:///../../libs/angular/src/directives/true-false-value.directive.ts","webpack:///./src/popup/vault/add-edit-custom-fields.component.html","webpack:///./src/popup/vault/add-edit-custom-fields.component.ts","webpack:///./src/popup/vault/add-edit.component.html","webpack:///./src/popup/vault/add-edit.component.ts","webpack:///../../libs/common/src/models/response/baseResponse.ts","webpack:///../../libs/common/src/models/response/errorResponse.ts","webpack:///../../libs/angular/src/components/attachments.component.ts","webpack:///./src/popup/vault/attachments.component.html","webpack:///./src/popup/vault/attachments.component.ts","webpack:///../../libs/angular/src/components/ciphers.component.ts","webpack:///../../libs/angular/src/modules/vault-filter/models/vault-filter.model.ts","webpack:///../../libs/common/src/models/domain/treeNode.ts","webpack:///../../libs/common/src/misc/serviceUtils.ts","webpack:///../../libs/angular/src/modules/vault-filter/models/dynamic-tree-node.model.ts","webpack:///../../libs/angular/src/modules/vault-filter/vault-filter.service.ts","webpack:///./src/services/vaultFilter.service.ts","webpack:///../../libs/angular/src/pipes/ellipsis.pipe.ts","webpack:///./src/popup/vault/vault-select.component.html","webpack:///./src/popup/vault/vault-select.component.ts","webpack:///../../libs/angular/src/directives/fallback-src.directive.ts","webpack:///../../libs/angular/src/components/icon.component.html","webpack:///../../libs/angular/src/components/icon.component.ts","webpack:///./src/popup/components/action-buttons.component.html","webpack:///./src/popup/components/action-buttons.component.ts","webpack:///./src/popup/components/cipher-row.component.html","webpack:///./src/popup/components/cipher-row.component.ts","webpack:///./src/popup/vault/ciphers.component.html","webpack:///./src/popup/vault/ciphers.component.ts","webpack:///../../libs/angular/src/components/collections.component.ts","webpack:///./src/popup/vault/collections.component.html","webpack:///./src/popup/vault/collections.component.ts","webpack:///./src/services/abstractions/autofill.service.ts","webpack:///./src/popup/vault/current-tab.component.html","webpack:///./src/popup/vault/current-tab.component.ts","webpack:///../../libs/angular/src/components/password-history.component.ts","webpack:///./src/popup/vault/password-history.component.html","webpack:///./src/popup/vault/password-history.component.ts","webpack:///../../libs/angular/src/components/share.component.ts","webpack:///./src/popup/vault/share.component.html","webpack:///./src/popup/vault/share.component.ts","webpack:///./src/popup/vault/vault-filter.component.html","webpack:///./src/popup/vault/vault-filter.component.ts","webpack:///../../libs/common/src/abstractions/token.service.ts","webpack:///../../libs/angular/src/components/view.component.ts","webpack:///../../libs/angular/src/components/view-custom-fields.component.ts","webpack:///../../libs/angular/src/pipes/color-password-count.pipe.ts","webpack:///./src/popup/vault/view-custom-fields.component.html","webpack:///./src/popup/vault/view-custom-fields.component.ts","webpack:///./src/popup/vault/view.component.html","webpack:///./src/popup/vault/view.component.ts","webpack:///./src/popup/app-routing.module.ts","webpack:///./src/popup/app-routing.animations.ts","webpack:///./src/popup/app.component.ts","webpack:///../../libs/angular/src/services/theming/themeBuilder.ts","webpack:///../../libs/common/src/enums/stateVersion.ts","webpack:///../../libs/common/src/enums/ssoEnums.ts","webpack:///../../libs/angular/src/services/theming/theming.service.ts","webpack:///../../libs/common/src/abstractions/abstractEncrypt.service.ts","webpack:///../../libs/common/src/abstractions/fileUpload.service.ts","webpack:///../../libs/common/src/abstractions/notifications.service.ts","webpack:///../../libs/common/src/abstractions/provider.service.ts","webpack:///../../libs/common/src/abstractions/settings.service.ts","webpack:///../../libs/common/src/abstractions/stateMigration.service.ts","webpack:///../../libs/common/src/abstractions/storage.service.ts","webpack:///../../libs/common/src/factories/accountFactory.ts","webpack:///../../libs/common/src/factories/globalStateFactory.ts","webpack:///../../libs/common/src/factories/stateFactory.ts","webpack:///../../libs/common/src/models/domain/environmentUrls.ts","webpack:///../../libs/common/src/models/domain/account.ts","webpack:///../../libs/common/src/models/domain/windowState.ts","webpack:///../../libs/common/src/models/domain/globalState.ts","webpack:///../../libs/common/src/models/request/deviceRequest.ts","webpack:///../../libs/common/src/models/request/identityToken/tokenRequest.ts","webpack:///../../libs/common/src/models/request/identityToken/apiTokenRequest.ts","webpack:///../../libs/common/src/models/response/apiKeyResponse.ts","webpack:///../../libs/common/src/models/response/attachmentResponse.ts","webpack:///../../libs/common/src/models/api/cardApi.ts","webpack:///../../libs/common/src/models/api/fieldApi.ts","webpack:///../../libs/common/src/models/api/identityApi.ts","webpack:///../../libs/common/src/models/api/loginUriApi.ts","webpack:///../../libs/common/src/models/api/loginApi.ts","webpack:///../../libs/common/src/models/api/secureNoteApi.ts","webpack:///../../libs/common/src/models/response/passwordHistoryResponse.ts","webpack:///../../libs/common/src/models/response/cipherResponse.ts","webpack:///../../libs/common/src/models/response/attachmentUploadDataResponse.ts","webpack:///../../libs/common/src/models/response/billingResponse.ts","webpack:///../../libs/common/src/models/response/billingHistoryResponse.ts","webpack:///../../libs/common/src/models/response/billingPaymentResponse.ts","webpack:///../../libs/common/src/models/response/breachAccountResponse.ts","webpack:///../../libs/common/src/models/response/selectionReadOnlyResponse.ts","webpack:///../../libs/common/src/models/response/collectionResponse.ts","webpack:///../../libs/common/src/models/response/deviceVerificationResponse.ts","webpack:///../../libs/common/src/models/response/globalDomainResponse.ts","webpack:///../../libs/common/src/models/response/domainsResponse.ts","webpack:///../../libs/common/src/models/response/emergencyAccessResponse.ts","webpack:///../../libs/common/src/models/response/eventResponse.ts","webpack:///../../libs/common/src/models/response/groupResponse.ts","webpack:///../../libs/common/src/models/response/identityCaptchaResponse.ts","webpack:///../../libs/common/src/models/response/identityTokenResponse.ts","webpack:///../../libs/common/src/models/response/identityTwoFactorResponse.ts","webpack:///../../libs/common/src/models/response/keyConnectorUserKeyResponse.ts","webpack:///../../libs/common/src/models/response/listResponse.ts","webpack:///../../libs/common/src/models/api/ssoConfigApi.ts","webpack:///../../libs/common/src/models/response/organization/organizationSsoResponse.ts","webpack:///../../libs/common/src/models/response/organizationApiKeyInformationResponse.ts","webpack:///../../libs/common/src/models/response/organizationAutoEnrollStatusResponse.ts","webpack:///../../libs/common/src/models/response/organizationConnectionResponse.ts","webpack:///../../libs/common/src/models/response/keysResponse.ts","webpack:///../../libs/common/src/models/response/organizationKeysResponse.ts","webpack:///../../libs/common/src/models/response/planResponse.ts","webpack:///../../libs/common/src/models/response/organizationResponse.ts","webpack:///../../libs/common/src/models/response/organizationSponsorshipSyncStatusResponse.ts","webpack:///../../libs/common/src/models/response/subscriptionResponse.ts","webpack:///../../libs/common/src/models/response/organizationSubscriptionResponse.ts","webpack:///../../libs/common/src/models/response/organizationUserBulkPublicKeyResponse.ts","webpack:///../../libs/common/src/models/response/organizationUserBulkResponse.ts","webpack:///../../libs/common/src/models/api/permissionsApi.ts","webpack:///../../libs/common/src/models/response/organizationUserResponse.ts","webpack:///../../libs/common/src/models/response/profileOrganizationResponse.ts","webpack:///../../libs/common/src/models/response/profileProviderOrganizationResponse.ts","webpack:///../../libs/common/src/models/response/profileProviderResponse.ts","webpack:///../../libs/common/src/models/response/profileResponse.ts","webpack:///../../libs/common/src/models/response/paymentResponse.ts","webpack:///../../libs/common/src/models/response/policyResponse.ts","webpack:///../../libs/common/src/models/response/preloginResponse.ts","webpack:///../../libs/common/src/models/response/provider/providerOrganizationResponse.ts","webpack:///../../libs/common/src/models/response/provider/providerResponse.ts","webpack:///../../libs/common/src/models/response/provider/providerUserBulkPublicKeyResponse.ts","webpack:///../../libs/common/src/models/response/provider/providerUserBulkResponse.ts","webpack:///../../libs/common/src/models/response/provider/providerUserResponse.ts","webpack:///../../libs/common/src/models/api/sendFileApi.ts","webpack:///../../libs/common/src/models/api/sendTextApi.ts","webpack:///../../libs/common/src/models/response/sendAccessResponse.ts","webpack:///../../libs/common/src/models/response/sendFileDownloadDataResponse.ts","webpack:///../../libs/common/src/models/response/sendResponse.ts","webpack:///../../libs/common/src/models/response/sendFileUploadDataResponse.ts","webpack:///../../libs/common/src/models/response/ssoPreValidateResponse.ts","webpack:///../../libs/common/src/models/response/folderResponse.ts","webpack:///../../libs/common/src/models/response/syncResponse.ts","webpack:///../../libs/common/src/models/response/taxInfoResponse.ts","webpack:///../../libs/common/src/models/response/taxRateResponse.ts","webpack:///../../libs/common/src/models/response/twoFactorAuthenticatorResponse.ts","webpack:///../../libs/common/src/models/response/twoFactorDuoResponse.ts","webpack:///../../libs/common/src/models/response/twoFactorEmailResponse.ts","webpack:///../../libs/common/src/models/response/twoFactorProviderResponse.ts","webpack:///../../libs/common/src/models/response/twoFactorRescoverResponse.ts","webpack:///../../libs/common/src/models/response/twoFactorWebAuthnResponse.ts","webpack:///../../libs/common/src/models/response/twoFactorYubiKeyResponse.ts","webpack:///../../libs/common/src/models/response/userKeyResponse.ts","webpack:///../../libs/common/src/enums/htmlStorageLocation.ts","webpack:///../../libs/common/src/services/api.service.ts","webpack:///../../libs/common/src/services/appId.service.ts","webpack:///../../libs/common/src/services/audit.service.ts","webpack:///../../libs/common/src/misc/throttle.ts","webpack:///../../libs/common/src/models/domain/authResult.ts","webpack:///../../libs/common/src/misc/logInStrategies/logIn.strategy.ts","webpack:///../../libs/common/src/misc/logInStrategies/apiLogin.strategy.ts","webpack:///../../libs/common/src/models/request/identityToken/passwordTokenRequest.ts","webpack:///../../libs/common/src/misc/logInStrategies/passwordLogin.strategy.ts","webpack:///../../libs/common/src/models/request/identityToken/ssoTokenRequest.ts","webpack:///../../libs/common/src/misc/logInStrategies/ssoLogin.strategy.ts","webpack:///../../libs/common/src/models/request/preloginRequest.ts","webpack:///../../libs/common/src/services/auth.service.ts","webpack:///../../libs/common/src/misc/sequentialize.ts","webpack:///../../libs/common/src/models/data/attachmentData.ts","webpack:///../../libs/common/src/models/data/cardData.ts","webpack:///../../libs/common/src/models/data/fieldData.ts","webpack:///../../libs/common/src/models/data/identityData.ts","webpack:///../../libs/common/src/models/data/loginUriData.ts","webpack:///../../libs/common/src/models/data/loginData.ts","webpack:///../../libs/common/src/models/data/passwordHistoryData.ts","webpack:///../../libs/common/src/models/data/secureNoteData.ts","webpack:///../../libs/common/src/models/data/cipherData.ts","webpack:///../../libs/common/src/models/view/attachmentView.ts","webpack:///../../libs/common/src/models/domain/symmetricCryptoKey.ts","webpack:///../../libs/common/src/models/domain/attachment.ts","webpack:///../../libs/common/src/models/domain/card.ts","webpack:///../../libs/common/src/models/domain/field.ts","webpack:///../../libs/common/src/models/domain/identity.ts","webpack:///../../libs/common/src/models/domain/loginUri.ts","webpack:///../../libs/common/src/models/domain/login.ts","webpack:///../../libs/common/src/models/view/passwordHistoryView.ts","webpack:///../../libs/common/src/models/domain/password.ts","webpack:///../../libs/common/src/models/domain/secureNote.ts","webpack:///../../libs/common/src/models/domain/cipher.ts","webpack:///../../libs/common/src/models/domain/sortedCiphersCache.ts","webpack:///../../libs/common/src/models/request/cipherBulkDeleteRequest.ts","webpack:///../../libs/common/src/models/request/cipherBulkMoveRequest.ts","webpack:///../../libs/common/src/models/request/cipherBulkRestoreRequest.ts","webpack:///../../libs/common/src/models/request/attachmentRequest.ts","webpack:///../../libs/common/src/models/request/cipherRequest.ts","webpack:///../../libs/common/src/models/request/cipherWithIdRequest.ts","webpack:///../../libs/common/src/models/request/cipherBulkShareRequest.ts","webpack:///../../libs/common/src/models/request/cipherCollectionsRequest.ts","webpack:///../../libs/common/src/models/request/cipherCreateRequest.ts","webpack:///../../libs/common/src/models/request/cipherShareRequest.ts","webpack:///../../libs/common/src/services/cipher.service.ts","webpack:///../../libs/common/src/models/data/collectionData.ts","webpack:///../../libs/common/src/models/view/collectionView.ts","webpack:///../../libs/common/src/models/domain/collection.ts","webpack:///../../libs/common/src/services/collection.service.ts","webpack:///../../libs/common/src/enums/logLevelType.ts","webpack:///../../libs/common/src/services/consoleLog.service.ts","webpack:///../../libs/common/src/misc/wordlist.ts","webpack:///../../libs/common/src/models/domain/encArrayBuffer.ts","webpack:///../../libs/common/src/models/domain/encryptedObject.ts","webpack:///../../libs/common/src/models/domain/encryptedOrganizationKey.ts","webpack:///../../libs/common/src/services/crypto.service.ts","webpack:///../../libs/common/src/services/encrypt.service.ts","webpack:///../../libs/common/src/services/environment.service.ts","webpack:///../../libs/common/src/models/data/eventData.ts","webpack:///../../libs/common/src/models/request/eventRequest.ts","webpack:///../../libs/common/src/services/event.service.ts","webpack:///../../libs/common/src/models/export/cardExport.ts","webpack:///../../libs/common/src/models/export/fieldExport.ts","webpack:///../../libs/common/src/models/export/identityExport.ts","webpack:///../../libs/common/src/models/export/loginUriExport.ts","webpack:///../../libs/common/src/models/export/loginExport.ts","webpack:///../../libs/common/src/models/export/secureNoteExport.ts","webpack:///../../libs/common/src/models/export/cipherExport.ts","webpack:///../../libs/common/src/models/export/cipherWithIdsExport.ts","webpack:///../../libs/common/src/models/export/collectionExport.ts","webpack:///../../libs/common/src/models/export/collectionWithIdExport.ts","webpack:///../../libs/common/src/models/export/eventExport.ts","webpack:///../../libs/common/src/models/domain/folder.ts","webpack:///../../libs/common/src/models/export/folderExport.ts","webpack:///../../libs/common/src/models/export/folderWithIdExport.ts","webpack:///../../libs/common/src/enums/fileUploadType.ts","webpack:///../../libs/common/src/services/export.service.ts","webpack:///../../libs/common/src/services/azureFileUpload.service.ts","webpack:///../../libs/common/src/services/bitwardenFileUpload.service.ts","webpack:///../../libs/common/src/services/fileUpload.service.ts","webpack:///../../libs/common/src/models/data/folderData.ts","webpack:///../../libs/common/src/models/request/folderRequest.ts","webpack:///../../libs/common/src/services/folder/folder-api.service.ts","webpack:///../../libs/common/src/enums/organizationUserType.ts","webpack:///../../libs/common/src/services/folder/folder.service.ts","webpack:///../../libs/common/src/models/request/account/setKeyConnectorKeyRequest.ts","webpack:///../../libs/common/src/models/request/keyConnectorUserKeyRequest.ts","webpack:///../../libs/common/src/services/keyConnector.service.ts","webpack:///../../libs/common/src/enums/notificationType.ts","webpack:///../../libs/common/src/models/response/notificationResponse.ts","webpack:///../../libs/common/src/enums/permissions.ts","webpack:///../../libs/common/src/services/notifications.service.ts","webpack:///../../libs/common/src/models/domain/organization.ts","webpack:///../../libs/common/src/services/organization.service.ts","webpack:///../../libs/common/src/models/domain/generatedPasswordHistory.ts","webpack:///../../libs/common/src/models/domain/passwordGeneratorPolicyOptions.ts","webpack:///../../libs/common/src/services/passwordGeneration.service.ts","webpack:///../../libs/common/src/models/data/policyData.ts","webpack:///../../libs/common/src/models/domain/policy.ts","webpack:///../../libs/common/src/models/domain/resetPasswordPolicyOptions.ts","webpack:///../../libs/common/src/enums/providerUserStatusType.ts","webpack:///../../libs/common/src/enums/providerUserType.ts","webpack:///../../libs/common/src/services/policy.service.ts","webpack:///../../libs/common/src/models/domain/provider.ts","webpack:///../../libs/common/src/services/provider.service.ts","webpack:///../../libs/common/src/services/search.service.ts","webpack:///../../libs/common/src/models/data/sendFileData.ts","webpack:///../../libs/common/src/models/data/sendTextData.ts","webpack:///../../libs/common/src/models/data/sendData.ts","webpack:///../../libs/common/src/models/domain/sendFile.ts","webpack:///../../libs/common/src/models/domain/sendText.ts","webpack:///../../libs/common/src/models/domain/send.ts","webpack:///../../libs/common/src/models/request/sendRequest.ts","webpack:///../../libs/common/src/services/send.service.ts","webpack:///../../libs/common/src/services/settings.service.ts","webpack:///../../libs/common/src/enums/storageLocation.ts","webpack:///../../libs/common/src/models/data/providerData.ts","webpack:///../../libs/common/src/models/domain/state.ts","webpack:///../../libs/common/src/services/state.service.ts","webpack:///../../libs/common/src/services/token.service.ts","webpack:///../../libs/common/src/services/stateMigration.service.ts","webpack:///../../libs/common/src/models/data/organizationData.ts","webpack:///../../libs/common/src/services/sync.service.ts","webpack:///../../libs/common/src/services/totp.service.ts","webpack:///../../libs/common/src/models/request/account/verifyOTPRequest.ts","webpack:///../../libs/common/src/services/userVerification.service.ts","webpack:///../../libs/common/src/services/usernameGeneration.service.ts","webpack:///../../libs/common/src/services/vaultTimeout.service.ts","webpack:///../../libs/common/src/models/domain/decryptParameters.ts","webpack:///../../libs/common/src/services/webCryptoFunction.service.ts","webpack:///../../libs/angular/src/services/broadcaster.service.ts","webpack:///../../libs/common/src/services/broadcaster.service.ts","webpack:///../../libs/angular/src/components/password-reprompt.component.ts","webpack:///../../libs/angular/src/services/passwordReprompt.service.ts","webpack:///../../libs/angular/src/services/jslib-services.module.ts","webpack:///../../libs/common/src/services/formValidationErrors.service.ts","webpack:///../../libs/common/src/services/container.service.ts","webpack:///../../libs/common/src/services/memoryStorage.service.ts","webpack:///../../libs/common/src/services/system.service.ts","webpack:///./src/browser/safariApp.ts","webpack:///./src/models/browserComponentState.ts","webpack:///./src/models/browserGroupingsComponentState.ts","webpack:///./src/models/browserSendComponentState.ts","webpack:///./src/models/account.ts","webpack:///./src/models/autofillScript.ts","webpack:///./src/services/autofillConstants.ts","webpack:///./src/services/autofill.service.ts","webpack:///./src/services/browserCrypto.service.ts","webpack:///../../libs/common/src/enums/clientType.ts","webpack:///./src/services/abstractChromeStorageApi.service.ts","webpack:///./src/services/browserLocalStorage.service.ts","webpack:///./src/services/browserMessaging.service.ts","webpack:///./src/services/browserMessagingPrivateModeBackground.service.ts","webpack:///./src/services/browserPlatformUtils.service.ts","webpack:///./src/services/i18n.service.ts","webpack:///../../libs/common/src/services/i18n.service.ts","webpack:///./src/services/keyGeneration.service.ts","webpack:///./src/services/browserMemoryStorage.service.ts","webpack:///./src/services/localBackedSessionStorage.service.ts","webpack:///./src/services/state.service.ts","webpack:///./src/services/vaultTimeout.service.ts","webpack:///./src/background/commands.background.ts","webpack:///./src/background/contextMenus.background.ts","webpack:///./src/background/idle.background.ts","webpack:///./src/background/nativeMessaging.background.ts","webpack:///./src/background/models/notificationQueueMessageType.ts","webpack:///./src/background/notification.background.ts","webpack:///./src/background/runtime.background.ts","webpack:///./src/background/tabs.background.ts","webpack:///./src/background/webRequest.background.ts","webpack:///./src/background/main.background.ts","webpack:///../../libs/common/src/abstractions/fileDownload/fileDownloadBuilder.ts","webpack:///./src/services/browserFileDownloadService.ts","webpack:///./src/services/browserMessagingPrivateModePopup.service.ts","webpack:///./src/popup/services/init.service.ts","webpack:///./src/popup/services/lock-guard.service.ts","webpack:///./src/popup/components/password-reprompt.component.ts","webpack:///./src/popup/components/password-reprompt.component.html","webpack:///./src/popup/services/password-reprompt.service.ts","webpack:///./src/popup/services/popup-search.service.ts","webpack:///./src/popup/services/unauth-guard.service.ts","webpack:///./src/popup/services/services.module.ts","webpack:///./src/popup/app.module.ts","webpack:///./src/popup/main.ts","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/node module decorator","webpack:///webpack/runtime/jsonp chunk loading","webpack:///webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 28536;\nmodule.exports = webpackEmptyAsyncContext;","import { animate, state, style, transition, trigger } from \"@angular/animations\";\nimport { CommonModule } from \"@angular/common\";\nimport { Component, ModuleWithProviders, NgModule } from \"@angular/core\";\nimport {\n  DefaultNoComponentGlobalConfig,\n  GlobalConfig,\n  Toast as BaseToast,\n  ToastPackage,\n  ToastrService,\n  TOAST_CONFIG,\n} from \"ngx-toastr\";\n\n@Component({\n  selector: \"[toast-component2]\",\n  template: `\n    <button\n      *ngIf=\"options.closeButton\"\n      (click)=\"remove()\"\n      type=\"button\"\n      class=\"toast-close-button\"\n      aria-label=\"Close\"\n    >\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <div class=\"icon\">\n      <i></i>\n    </div>\n    <div>\n      <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n        {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n      </div>\n      <div\n        *ngIf=\"message && options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [innerHTML]=\"message\"\n      ></div>\n      <div\n        *ngIf=\"message && !options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [attr.aria-label]=\"message\"\n      >\n        {{ message }}\n      </div>\n    </div>\n    <div *ngIf=\"options.progressBar\">\n      <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n    </div>\n  `,\n  animations: [\n    trigger(\"flyInOut\", [\n      state(\"inactive\", style({ opacity: 0 })),\n      state(\"active\", style({ opacity: 1 })),\n      state(\"removed\", style({ opacity: 0 })),\n      transition(\"inactive => active\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n      transition(\"active => removed\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n    ]),\n  ],\n  preserveWhitespaces: false,\n})\nexport class BitwardenToast extends BaseToast {\n  constructor(protected toastrService: ToastrService, public toastPackage: ToastPackage) {\n    super(toastrService, toastPackage);\n  }\n}\n\nexport const BitwardenToastGlobalConfig: GlobalConfig = {\n  ...DefaultNoComponentGlobalConfig,\n  toastComponent: BitwardenToast,\n};\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitwardenToast],\n  exports: [BitwardenToast],\n})\nexport class BitwardenToastModule {\n  static forRoot(config: Partial<GlobalConfig> = {}): ModuleWithProviders<BitwardenToastModule> {\n    return {\n      ngModule: BitwardenToastModule,\n      providers: [\n        {\n          provide: TOAST_CONFIG,\n          useValue: {\n            default: BitwardenToastGlobalConfig,\n            config: config,\n          },\n        },\n      ],\n    };\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\ninterface CardRuleEntry {\n  cardLength: number;\n  blocks: number[];\n}\n\n// See https://baymard.com/checkout-usability/credit-card-patterns for\n// all possible credit card spacing patterns. For now, we just handle\n// the below.\nconst numberFormats: Record<string, CardRuleEntry[]> = {\n  Visa: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  Mastercard: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  Maestro: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 13, blocks: [4, 4, 5] },\n    { cardLength: 15, blocks: [4, 6, 5] },\n    { cardLength: 19, blocks: [4, 4, 4, 4, 3] },\n  ],\n  Discover: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  \"Diners Club\": [{ cardLength: 14, blocks: [4, 6, 4] }],\n  JCB: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  UnionPay: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 19, blocks: [6, 13] },\n  ],\n  Amex: [{ cardLength: 15, blocks: [4, 6, 5] }],\n  Other: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n};\n\n@Pipe({ name: \"creditCardNumber\" })\nexport class CreditCardNumberPipe implements PipeTransform {\n  transform(creditCardNumber: string, brand: string): string {\n    let rules = numberFormats[brand];\n\n    if (rules == null) {\n      rules = numberFormats[\"Other\"];\n    }\n\n    const cardLength = creditCardNumber.length;\n\n    let matchingRule = rules.find((r) => r.cardLength == cardLength);\n    if (matchingRule == null) {\n      matchingRule = rules[0];\n    }\n\n    const blocks = matchingRule.blocks;\n\n    const chunks: string[] = [];\n    let total = 0;\n\n    blocks.forEach((c) => {\n      chunks.push(creditCardNumber.slice(total, total + c));\n      total += c;\n    });\n\n    // Append the remaining part\n    if (cardLength > total) {\n      chunks.push(creditCardNumber.slice(total));\n    }\n\n    return chunks.join(\" \");\n  }\n}\n","import { Observable } from \"rxjs\";\n\nexport abstract class I18nService {\n  locale$: Observable<string>;\n  supportedTranslationLocales: string[];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames: Map<string, string>;\n  t: (id: string, p1?: string, p2?: string, p3?: string) => string;\n  translate: (id: string, p1?: string, p2?: string, p3?: string) => string;\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n@Pipe({\n  name: \"i18n\",\n})\nexport class I18nPipe implements PipeTransform {\n  constructor(private i18nService: I18nService) {}\n\n  transform(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.i18nService.t(id, p1, p2, p3);\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"search\",\n})\nexport class SearchPipe implements PipeTransform {\n  transform(\n    items: any[],\n    searchText: string,\n    prop1?: string,\n    prop2?: string,\n    prop3?: string\n  ): any[] {\n    if (items == null || items.length === 0) {\n      return [];\n    }\n\n    if (searchText == null || searchText.length < 2) {\n      return items;\n    }\n\n    searchText = searchText.trim().toLowerCase();\n    return items.filter((i) => {\n      if (\n        prop1 != null &&\n        i[prop1] != null &&\n        i[prop1].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      if (\n        prop2 != null &&\n        i[prop2] != null &&\n        i[prop2].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      if (\n        prop3 != null &&\n        i[prop3] != null &&\n        i[prop3].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      return false;\n    });\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\ninterface User {\n  name?: string;\n  email: string;\n}\n\n@Pipe({\n  name: \"userName\",\n})\nexport class UserNamePipe implements PipeTransform {\n  transform(user?: User): string {\n    if (user == null) {\n      return null;\n    }\n\n    return user.name == null || user.name.trim() === \"\" ? user.email : user.name;\n  }\n}\n","import { CommonModule, DatePipe } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { AvatarComponent } from \"./components/avatar.component\";\nimport { CalloutComponent } from \"./components/callout.component\";\nimport { ExportScopeCalloutComponent } from \"./components/export-scope-callout.component\";\nimport { IconComponent } from \"./components/icon.component\";\nimport { BitwardenToastModule } from \"./components/toastr.component\";\nimport { A11yInvalidDirective } from \"./directives/a11y-invalid.directive\";\nimport { A11yTitleDirective } from \"./directives/a11y-title.directive\";\nimport { ApiActionDirective } from \"./directives/api-action.directive\";\nimport { AutofocusDirective } from \"./directives/autofocus.directive\";\nimport { BlurClickDirective } from \"./directives/blur-click.directive\";\nimport { BoxRowDirective } from \"./directives/box-row.directive\";\nimport { FallbackSrcDirective } from \"./directives/fallback-src.directive\";\nimport { InputStripSpacesDirective } from \"./directives/input-strip-spaces.directive\";\nimport { InputVerbatimDirective } from \"./directives/input-verbatim.directive\";\nimport { NotPremiumDirective } from \"./directives/not-premium.directive\";\nimport { SelectCopyDirective } from \"./directives/select-copy.directive\";\nimport { StopClickDirective } from \"./directives/stop-click.directive\";\nimport { StopPropDirective } from \"./directives/stop-prop.directive\";\nimport { TrueFalseValueDirective } from \"./directives/true-false-value.directive\";\nimport { ColorPasswordCountPipe } from \"./pipes/color-password-count.pipe\";\nimport { ColorPasswordPipe } from \"./pipes/color-password.pipe\";\nimport { CreditCardNumberPipe } from \"./pipes/credit-card-number.pipe\";\nimport { EllipsisPipe } from \"./pipes/ellipsis.pipe\";\nimport { I18nPipe } from \"./pipes/i18n.pipe\";\nimport { SearchCiphersPipe } from \"./pipes/search-ciphers.pipe\";\nimport { SearchPipe } from \"./pipes/search.pipe\";\nimport { UserNamePipe } from \"./pipes/user-name.pipe\";\n\n@NgModule({\n  imports: [\n    BitwardenToastModule.forRoot({\n      maxOpened: 5,\n      autoDismiss: true,\n      closeButton: true,\n    }),\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [\n    A11yInvalidDirective,\n    A11yTitleDirective,\n    ApiActionDirective,\n    AutofocusDirective,\n    AvatarComponent,\n    BlurClickDirective,\n    BoxRowDirective,\n    CalloutComponent,\n    ColorPasswordCountPipe,\n    ColorPasswordPipe,\n    CreditCardNumberPipe,\n    EllipsisPipe,\n    ExportScopeCalloutComponent,\n    FallbackSrcDirective,\n    I18nPipe,\n    IconComponent,\n    InputStripSpacesDirective,\n    InputVerbatimDirective,\n    NotPremiumDirective,\n    SearchCiphersPipe,\n    SearchPipe,\n    SelectCopyDirective,\n    StopClickDirective,\n    StopPropDirective,\n    TrueFalseValueDirective,\n    UserNamePipe,\n  ],\n  exports: [\n    A11yInvalidDirective,\n    A11yTitleDirective,\n    ApiActionDirective,\n    AutofocusDirective,\n    AvatarComponent,\n    BitwardenToastModule,\n    BlurClickDirective,\n    BoxRowDirective,\n    CalloutComponent,\n    ColorPasswordCountPipe,\n    ColorPasswordPipe,\n    CreditCardNumberPipe,\n    EllipsisPipe,\n    ExportScopeCalloutComponent,\n    FallbackSrcDirective,\n    I18nPipe,\n    IconComponent,\n    InputStripSpacesDirective,\n    InputVerbatimDirective,\n    NotPremiumDirective,\n    SearchCiphersPipe,\n    SearchPipe,\n    SelectCopyDirective,\n    StopClickDirective,\n    StopPropDirective,\n    TrueFalseValueDirective,\n    UserNamePipe,\n  ],\n  providers: [CreditCardNumberPipe, DatePipe, I18nPipe, SearchPipe, UserNamePipe],\n})\nexport class JslibModule {}\n","export enum AuthenticationStatus {\n  LoggedOut = 0,\n  Locked = 1,\n  Unlocked = 2,\n}\n","import { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { AuthResult } from \"../models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n} from \"../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TokenRequestTwoFactor } from \"../models/request/identityToken/tokenRequestTwoFactor\";\n\nexport abstract class AuthService {\n  masterPasswordHash: string;\n  email: string;\n  logIn: (\n    credentials: ApiLogInCredentials | PasswordLogInCredentials | SsoLogInCredentials\n  ) => Promise<AuthResult>;\n  logInTwoFactor: (\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ) => Promise<AuthResult>;\n  logOut: (callback: () => void) => void;\n  makePreloginKey: (masterPassword: string, email: string) => Promise<SymmetricCryptoKey>;\n  authingWithApiKey: () => boolean;\n  authingWithSso: () => boolean;\n  authingWithPassword: () => boolean;\n  getAuthStatus: (userId?: string) => Promise<AuthenticationStatus>;\n}\n","export abstract class MessagingService {\n  send: (subscriber: string, arg?: any) => void;\n}\n","import { Organization } from \"../models/domain/organization\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport abstract class KeyConnectorService {\n  getAndSetKey: (url?: string) => Promise<void>;\n  getManagingOrganization: () => Promise<Organization>;\n  getUsesKeyConnector: () => Promise<boolean>;\n  migrateUser: () => Promise<void>;\n  userNeedsMigration: () => Promise<boolean>;\n  convertNewSsoUserToKeyConnector: (\n    tokenResponse: IdentityTokenResponse,\n    orgId: string\n  ) => Promise<void>;\n  setUsesKeyConnector: (enabled: boolean) => Promise<void>;\n  setConvertAccountRequired: (status: boolean) => Promise<void>;\n  getConvertAccountRequired: () => Promise<boolean>;\n  removeConvertAccountRequired: () => Promise<void>;\n  clear: () => Promise<void>;\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private messagingService: MessagingService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      this.messagingService.send(\"authBlocked\", { url: routerState.url });\n      return false;\n    }\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      if (routerState != null) {\n        this.messagingService.send(\"lockedUrl\", { url: routerState.url });\n      }\n      return this.router.createUrlTree([\"lock\"], { queryParams: { promptBiometric: true } });\n    }\n\n    if (\n      !routerState.url.includes(\"remove-password\") &&\n      (await this.keyConnectorService.getConvertAccountRequired())\n    ) {\n      return this.router.createUrlTree([\"/remove-password\"]);\n    }\n\n    return true;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class LockGuard implements CanActivate {\n  protected homepage = \"vault\";\n  protected loginpage = \"login\";\n  constructor(private authService: AuthService, private router: Router) {}\n\n  async canActivate() {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      return true;\n    }\n\n    const redirectUrl =\n      authStatus === AuthenticationStatus.LoggedOut ? this.loginpage : this.homepage;\n\n    return this.router.createUrlTree([redirectUrl]);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class UnauthGuard implements CanActivate {\n  protected homepage = \"vault\";\n  constructor(private authService: AuthService, private router: Router) {}\n\n  async canActivate() {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      return true;\n    }\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      return this.router.createUrlTree([\"lock\"]);\n    }\n\n    return this.router.createUrlTree([this.homepage]);\n  }\n}\n","import { ClientType } from \"../enums/clientType\";\nimport { DeviceType } from \"../enums/deviceType\";\n\ninterface ToastOptions {\n  timeout?: number;\n}\n\nexport abstract class PlatformUtilsService {\n  getDevice: () => DeviceType;\n  getDeviceString: () => string;\n  getClientType: () => ClientType;\n  isFirefox: () => boolean;\n  isChrome: () => boolean;\n  isEdge: () => boolean;\n  isOpera: () => boolean;\n  isVivaldi: () => boolean;\n  isSafari: () => boolean;\n  isMacAppStore: () => boolean;\n  isViewOpen: () => Promise<boolean>;\n  launchUri: (uri: string, options?: any) => void;\n  getApplicationVersion: () => Promise<string>;\n  supportsWebAuthn: (win: Window) => boolean;\n  supportsDuo: () => boolean;\n  showToast: (\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: ToastOptions\n  ) => void;\n  showDialog: (\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml?: boolean\n  ) => Promise<boolean>;\n  isDev: () => boolean;\n  isSelfHost: () => boolean;\n  copyToClipboard: (text: string, options?: any) => void | boolean;\n  readFromClipboard: (options?: any) => Promise<string>;\n  supportsBiometric: () => Promise<boolean>;\n  authenticateBiometric: () => Promise<boolean>;\n  supportsSecureStorage: () => boolean;\n}\n","import { Observable } from \"rxjs\";\n\nexport type Urls = {\n  base?: string;\n  webVault?: string;\n  api?: string;\n  identity?: string;\n  icons?: string;\n  notifications?: string;\n  events?: string;\n  keyConnector?: string;\n  scim?: string;\n};\n\nexport type PayPalConfig = {\n  businessId?: string;\n  buttonAction?: string;\n};\n\nexport abstract class EnvironmentService {\n  urls: Observable<Urls>;\n\n  hasBaseUrl: () => boolean;\n  getNotificationsUrl: () => string;\n  getWebVaultUrl: () => string;\n  getSendUrl: () => string;\n  getIconsUrl: () => string;\n  getApiUrl: () => string;\n  getIdentityUrl: () => string;\n  getEventsUrl: () => string;\n  getKeyConnectorUrl: () => string;\n  getScimUrl: () => string;\n  setUrlsFromStorage: () => Promise<void>;\n  setUrls: (urls: Urls) => Promise<Urls>;\n  getUrls: () => Urls;\n}\n","import { Directive, EventEmitter, Output } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Directive()\nexport class EnvironmentComponent {\n  @Output() onSaved = new EventEmitter();\n\n  iconsUrl: string;\n  identityUrl: string;\n  apiUrl: string;\n  webVaultUrl: string;\n  notificationsUrl: string;\n  baseUrl: string;\n  showCustom = false;\n\n  constructor(\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected i18nService: I18nService\n  ) {\n    const urls = this.environmentService.getUrls();\n\n    this.baseUrl = urls.base || \"\";\n    this.webVaultUrl = urls.webVault || \"\";\n    this.apiUrl = urls.api || \"\";\n    this.identityUrl = urls.identity || \"\";\n    this.iconsUrl = urls.icons || \"\";\n    this.notificationsUrl = urls.notifications || \"\";\n  }\n\n  async submit() {\n    const resUrls = await this.environmentService.setUrls({\n      base: this.baseUrl,\n      api: this.apiUrl,\n      identity: this.identityUrl,\n      webVault: this.webVaultUrl,\n      icons: this.iconsUrl,\n      notifications: this.notificationsUrl,\n    });\n\n    // re-set urls since service can change them, ex: prefixing https://\n    this.baseUrl = resUrls.base;\n    this.apiUrl = resUrls.api;\n    this.identityUrl = resUrls.identity;\n    this.webVaultUrl = resUrls.webVault;\n    this.iconsUrl = resUrls.icons;\n    this.notificationsUrl = resUrls.notifications;\n\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"environmentSaved\"));\n    this.saved();\n  }\n\n  toggleCustom() {\n    this.showCustom = !this.showCustom;\n  }\n\n  protected saved() {\n    this.onSaved.emit();\n  }\n}\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appBlurClick]\",\n})\nexport class BlurClickDirective {\n  constructor(private el: ElementRef) {}\n\n  @HostListener(\"click\") onClick() {\n    this.el.nativeElement.blur();\n  }\n}\n","import { Directive, ElementRef, HostListener, OnInit } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appBoxRow]\",\n})\nexport class BoxRowDirective implements OnInit {\n  el: HTMLElement = null;\n  formEls: Element[];\n\n  constructor(elRef: ElementRef) {\n    this.el = elRef.nativeElement;\n  }\n\n  ngOnInit(): void {\n    this.formEls = Array.from(\n      this.el.querySelectorAll('input:not([type=\"hidden\"]), select, textarea')\n    );\n    this.formEls.forEach((formEl) => {\n      formEl.addEventListener(\n        \"focus\",\n        () => {\n          this.el.classList.add(\"active\");\n        },\n        false\n      );\n\n      formEl.addEventListener(\n        \"blur\",\n        () => {\n          this.el.classList.remove(\"active\");\n        },\n        false\n      );\n    });\n  }\n\n  @HostListener(\"click\", [\"$event\"]) onClick(event: Event) {\n    const target = event.target as HTMLElement;\n    if (\n      target !== this.el &&\n      !target.classList.contains(\"progress\") &&\n      !target.classList.contains(\"progress-bar\")\n    ) {\n      return;\n    }\n\n    if (this.formEls.length > 0) {\n      const formEl = this.formEls[0] as HTMLElement;\n      if (formEl.tagName.toLowerCase() === \"input\") {\n        const inputEl = formEl as HTMLInputElement;\n        if (inputEl.type != null && inputEl.type.toLowerCase() === \"checkbox\") {\n          inputEl.click();\n          return;\n        }\n      }\n      formEl.focus();\n    }\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appInputVerbatim]\",\n})\nexport class InputVerbatimDirective {\n  @Input() set appInputVerbatim(condition: boolean | string) {\n    this.disableComplete = condition === \"\" || condition === true;\n  }\n\n  private disableComplete: boolean;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (this.disableComplete && !this.el.nativeElement.hasAttribute(\"autocomplete\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocomplete\", \"off\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocapitalize\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocapitalize\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocorrect\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocorrect\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"spellcheck\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"spellcheck\", \"false\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"inputmode\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"inputmode\", \"verbatim\");\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { EnvironmentComponent as BaseEnvironmentComponent } from \"@bitwarden/angular/components/environment.component\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-environment\",\n  templateUrl: \"environment.component.html\",\n})\nexport class EnvironmentComponent extends BaseEnvironmentComponent {\n  constructor(\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    i18nService: I18nService,\n    private router: Router\n  ) {\n    super(platformUtilsService, environmentService, i18nService);\n    this.showCustom = true;\n  }\n\n  saved() {\n    super.saved();\n    this.router.navigate([\"\"]);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/home\">{{ \"close\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"appName\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"selfHostedEnvironment\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"baseUrl\">{{ \"baseUrl\" | i18n }}</label>\n          <input\n            id=\"baseUrl\"\n            type=\"text\"\n            name=\"BaseUrl\"\n            [(ngModel)]=\"baseUrl\"\n            placeholder=\"ex. https://bitwarden.company.com\"\n            appInputVerbatim\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"selfHostedEnvironmentFooter\" | i18n }}\n      </div>\n    </div>\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"customEnvironment\" | i18n }}\n      </h2>\n      <div class=\"box-content\" [hidden]=\"!showCustom\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"webVaultUrl\">{{ \"webVaultUrl\" | i18n }}</label>\n          <input\n            id=\"webVaultUrl\"\n            type=\"text\"\n            name=\"WebVaultUrl\"\n            [(ngModel)]=\"webVaultUrl\"\n            inputmode=\"url\"\n            appInputVerbatim\n          />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"apiUrl\">{{ \"apiUrl\" | i18n }}</label>\n          <input\n            id=\"apiUrl\"\n            type=\"text\"\n            name=\"ApiUrl\"\n            [(ngModel)]=\"apiUrl\"\n            inputmode=\"url\"\n            appInputVerbatim\n          />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"identityUrl\">{{ \"identityUrl\" | i18n }}</label>\n          <input\n            id=\"identityUrl\"\n            type=\"text\"\n            name=\"IdentityUrl\"\n            [(ngModel)]=\"identityUrl\"\n            inputmode=\"url\"\n            appInputVerbatim\n          />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"notificationsUrl\">{{ \"notificationsUrl\" | i18n }}</label>\n          <input\n            id=\"notificationsUrl\"\n            type=\"text\"\n            name=\"NotificationsUrl\"\n            inputmode=\"url\"\n            [(ngModel)]=\"notificationsUrl\"\n            appInputVerbatim\n          />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"iconsUrl\">{{ \"iconsUrl\" | i18n }}</label>\n          <input\n            id=\"iconsUrl\"\n            type=\"text\"\n            name=\"IconsUrl\"\n            [(ngModel)]=\"iconsUrl\"\n            inputmode=\"url\"\n            appInputVerbatim\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\" [hidden]=\"!showCustom\">\n        {{ \"customEnvironmentFooter\" | i18n }}\n      </div>\n    </div>\n  </main>\n</form>\n","export class PasswordHintRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","import { OrganizationApiKeyType } from \"../enums/organizationApiKeyType\";\nimport { OrganizationConnectionType } from \"../enums/organizationConnectionType\";\nimport { PolicyType } from \"../enums/policyType\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { VerifyOTPRequest } from \"../models/request/account/verifyOTPRequest\";\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { BitPayInvoiceRequest } from \"../models/request/bitPayInvoiceRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipherBulkRestoreRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CollectionRequest } from \"../models/request/collectionRequest\";\nimport { DeleteRecoverRequest } from \"../models/request/deleteRecoverRequest\";\nimport { DeviceVerificationRequest } from \"../models/request/deviceVerificationRequest\";\nimport { EmailRequest } from \"../models/request/emailRequest\";\nimport { EmailTokenRequest } from \"../models/request/emailTokenRequest\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergencyAccessAcceptRequest\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergencyAccessConfirmRequest\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergencyAccessInviteRequest\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergencyAccessPasswordRequest\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergencyAccessUpdateRequest\";\nimport { EventRequest } from \"../models/request/eventRequest\";\nimport { GroupRequest } from \"../models/request/groupRequest\";\nimport { IapCheckRequest } from \"../models/request/iapCheckRequest\";\nimport { ApiTokenRequest } from \"../models/request/identityToken/apiTokenRequest\";\nimport { PasswordTokenRequest } from \"../models/request/identityToken/passwordTokenRequest\";\nimport { SsoTokenRequest } from \"../models/request/identityToken/ssoTokenRequest\";\nimport { ImportCiphersRequest } from \"../models/request/importCiphersRequest\";\nimport { ImportDirectoryRequest } from \"../models/request/importDirectoryRequest\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/importOrganizationCiphersRequest\";\nimport { KdfRequest } from \"../models/request/kdfRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organizationSponsorshipCreateRequest\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organizationSponsorshipRedeemRequest\";\nimport { OrganizationSsoRequest } from \"../models/request/organization/organizationSsoRequest\";\nimport { OrganizationApiKeyRequest } from \"../models/request/organizationApiKeyRequest\";\nimport { OrganizationConnectionRequest } from \"../models/request/organizationConnectionRequest\";\nimport { OrganizationCreateRequest } from \"../models/request/organizationCreateRequest\";\nimport { OrganizationImportRequest } from \"../models/request/organizationImportRequest\";\nimport { OrganizationKeysRequest } from \"../models/request/organizationKeysRequest\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../models/request/organizationSubscriptionUpdateRequest\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../models/request/organizationTaxInfoUpdateRequest\";\nimport { OrganizationUpdateRequest } from \"../models/request/organizationUpdateRequest\";\nimport { OrganizationUpgradeRequest } from \"../models/request/organizationUpgradeRequest\";\nimport { OrganizationUserAcceptRequest } from \"../models/request/organizationUserAcceptRequest\";\nimport { OrganizationUserBulkConfirmRequest } from \"../models/request/organizationUserBulkConfirmRequest\";\nimport { OrganizationUserBulkRequest } from \"../models/request/organizationUserBulkRequest\";\nimport { OrganizationUserConfirmRequest } from \"../models/request/organizationUserConfirmRequest\";\nimport { OrganizationUserInviteRequest } from \"../models/request/organizationUserInviteRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"../models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { OrganizationUserResetPasswordRequest } from \"../models/request/organizationUserResetPasswordRequest\";\nimport { OrganizationUserUpdateGroupsRequest } from \"../models/request/organizationUserUpdateGroupsRequest\";\nimport { OrganizationUserUpdateRequest } from \"../models/request/organizationUserUpdateRequest\";\nimport { PasswordHintRequest } from \"../models/request/passwordHintRequest\";\nimport { PasswordRequest } from \"../models/request/passwordRequest\";\nimport { PaymentRequest } from \"../models/request/paymentRequest\";\nimport { PolicyRequest } from \"../models/request/policyRequest\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/providerAddOrganizationRequest\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/providerOrganizationCreateRequest\";\nimport { ProviderSetupRequest } from \"../models/request/provider/providerSetupRequest\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/providerUpdateRequest\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/providerUserAcceptRequest\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/providerUserBulkConfirmRequest\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/providerUserBulkRequest\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/providerUserConfirmRequest\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/providerUserInviteRequest\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/providerUserUpdateRequest\";\nimport { RegisterRequest } from \"../models/request/registerRequest\";\nimport { SeatRequest } from \"../models/request/seatRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selectionReadOnlyRequest\";\nimport { SendAccessRequest } from \"../models/request/sendAccessRequest\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { SetPasswordRequest } from \"../models/request/setPasswordRequest\";\nimport { StorageRequest } from \"../models/request/storageRequest\";\nimport { TaxInfoUpdateRequest } from \"../models/request/taxInfoUpdateRequest\";\nimport { TwoFactorEmailRequest } from \"../models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviderRequest } from \"../models/request/twoFactorProviderRequest\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/twoFactorRecoveryRequest\";\nimport { UpdateDomainsRequest } from \"../models/request/updateDomainsRequest\";\nimport { UpdateKeyRequest } from \"../models/request/updateKeyRequest\";\nimport { UpdateProfileRequest } from \"../models/request/updateProfileRequest\";\nimport { UpdateTempPasswordRequest } from \"../models/request/updateTempPasswordRequest\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/updateTwoFactorAuthenticatorRequest\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/updateTwoFactorDuoRequest\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/updateTwoFactorEmailRequest\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/updateTwoFactorWebAuthnDeleteRequest\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/updateTwoFactorWebAuthnRequest\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/updateTwoFactorYubioOtpRequest\";\nimport { VerifyBankRequest } from \"../models/request/verifyBankRequest\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verifyDeleteRecoverRequest\";\nimport { VerifyEmailRequest } from \"../models/request/verifyEmailRequest\";\nimport { ApiKeyResponse } from \"../models/response/apiKeyResponse\";\nimport { AttachmentResponse } from \"../models/response/attachmentResponse\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { BillingHistoryResponse } from \"../models/response/billingHistoryResponse\";\nimport { BillingPaymentResponse } from \"../models/response/billingPaymentResponse\";\nimport { BillingResponse } from \"../models/response/billingResponse\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport {\n  CollectionGroupDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collectionResponse\";\nimport { DeviceVerificationResponse } from \"../models/response/deviceVerificationResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergencyAccessResponse\";\nimport { EventResponse } from \"../models/response/eventResponse\";\nimport { GroupDetailsResponse, GroupResponse } from \"../models/response/groupResponse\";\nimport { IdentityCaptchaResponse } from \"../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/keyConnectorUserKeyResponse\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { OrganizationSsoResponse } from \"../models/response/organization/organizationSsoResponse\";\nimport { OrganizationApiKeyInformationResponse } from \"../models/response/organizationApiKeyInformationResponse\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../models/response/organizationAutoEnrollStatusResponse\";\nimport {\n  OrganizationConnectionConfigApis,\n  OrganizationConnectionResponse,\n} from \"../models/response/organizationConnectionResponse\";\nimport { OrganizationKeysResponse } from \"../models/response/organizationKeysResponse\";\nimport { OrganizationResponse } from \"../models/response/organizationResponse\";\nimport { OrganizationSponsorshipSyncStatusResponse } from \"../models/response/organizationSponsorshipSyncStatusResponse\";\nimport { OrganizationSubscriptionResponse } from \"../models/response/organizationSubscriptionResponse\";\nimport { OrganizationUserBulkPublicKeyResponse } from \"../models/response/organizationUserBulkPublicKeyResponse\";\nimport { OrganizationUserBulkResponse } from \"../models/response/organizationUserBulkResponse\";\nimport {\n  OrganizationUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n  OrganizationUserUserDetailsResponse,\n} from \"../models/response/organizationUserResponse\";\nimport { PaymentResponse } from \"../models/response/paymentResponse\";\nimport { PlanResponse } from \"../models/response/planResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { PreloginResponse } from \"../models/response/preloginResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/providerOrganizationResponse\";\nimport { ProviderResponse } from \"../models/response/provider/providerResponse\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/providerUserBulkPublicKeyResponse\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/providerUserBulkResponse\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/providerUserResponse\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selectionReadOnlyResponse\";\nimport { SendAccessResponse } from \"../models/response/sendAccessResponse\";\nimport { SendFileDownloadDataResponse } from \"../models/response/sendFileDownloadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SsoPreValidateResponse } from \"../models/response/ssoPreValidateResponse\";\nimport { SubscriptionResponse } from \"../models/response/subscriptionResponse\";\nimport { SyncResponse } from \"../models/response/syncResponse\";\nimport { TaxInfoResponse } from \"../models/response/taxInfoResponse\";\nimport { TaxRateResponse } from \"../models/response/taxRateResponse\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/twoFactorAuthenticatorResponse\";\nimport { TwoFactorDuoResponse } from \"../models/response/twoFactorDuoResponse\";\nimport { TwoFactorEmailResponse } from \"../models/response/twoFactorEmailResponse\";\nimport { TwoFactorProviderResponse } from \"../models/response/twoFactorProviderResponse\";\nimport { TwoFactorRecoverResponse } from \"../models/response/twoFactorRescoverResponse\";\nimport {\n  ChallengeResponse,\n  TwoFactorWebAuthnResponse,\n} from \"../models/response/twoFactorWebAuthnResponse\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/twoFactorYubiKeyResponse\";\nimport { UserKeyResponse } from \"../models/response/userKeyResponse\";\nimport { SendAccessView } from \"../models/view/sendAccessView\";\n\nexport abstract class ApiService {\n  send: (\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n    path: string,\n    body: any,\n    authed: boolean,\n    hasResponse: boolean,\n    apiUrl?: string,\n    alterHeaders?: (headers: Headers) => void\n  ) => Promise<any>;\n\n  postIdentityToken: (\n    request: PasswordTokenRequest | SsoTokenRequest | ApiTokenRequest\n  ) => Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse>;\n  refreshIdentityToken: () => Promise<any>;\n\n  getProfile: () => Promise<ProfileResponse>;\n  getUserSubscription: () => Promise<SubscriptionResponse>;\n  getTaxInfo: () => Promise<TaxInfoResponse>;\n  putProfile: (request: UpdateProfileRequest) => Promise<ProfileResponse>;\n  putTaxInfo: (request: TaxInfoUpdateRequest) => Promise<any>;\n  postPrelogin: (request: PreloginRequest) => Promise<PreloginResponse>;\n  postEmailToken: (request: EmailTokenRequest) => Promise<any>;\n  postEmail: (request: EmailRequest) => Promise<any>;\n  postPassword: (request: PasswordRequest) => Promise<any>;\n  setPassword: (request: SetPasswordRequest) => Promise<any>;\n  postSetKeyConnectorKey: (request: SetKeyConnectorKeyRequest) => Promise<any>;\n  postSecurityStamp: (request: SecretVerificationRequest) => Promise<any>;\n  deleteAccount: (request: SecretVerificationRequest) => Promise<any>;\n  getAccountRevisionDate: () => Promise<number>;\n  postPasswordHint: (request: PasswordHintRequest) => Promise<any>;\n  postRegister: (request: RegisterRequest) => Promise<any>;\n  postPremium: (data: FormData) => Promise<PaymentResponse>;\n  postIapCheck: (request: IapCheckRequest) => Promise<any>;\n  postReinstatePremium: () => Promise<any>;\n  postCancelPremium: () => Promise<any>;\n  postAccountStorage: (request: StorageRequest) => Promise<PaymentResponse>;\n  postAccountPayment: (request: PaymentRequest) => Promise<any>;\n  postAccountLicense: (data: FormData) => Promise<any>;\n  postAccountKey: (request: UpdateKeyRequest) => Promise<any>;\n  postAccountKeys: (request: KeysRequest) => Promise<any>;\n  postAccountVerifyEmail: () => Promise<any>;\n  postAccountVerifyEmailToken: (request: VerifyEmailRequest) => Promise<any>;\n  postAccountVerifyPassword: (request: SecretVerificationRequest) => Promise<any>;\n  postAccountRecoverDelete: (request: DeleteRecoverRequest) => Promise<any>;\n  postAccountRecoverDeleteToken: (request: VerifyDeleteRecoverRequest) => Promise<any>;\n  postAccountKdf: (request: KdfRequest) => Promise<any>;\n  postUserApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  postUserRotateApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  putUpdateTempPassword: (request: UpdateTempPasswordRequest) => Promise<any>;\n  postAccountRequestOTP: () => Promise<void>;\n  postAccountVerifyOTP: (request: VerifyOTPRequest) => Promise<void>;\n  postConvertToKeyConnector: () => Promise<void>;\n\n  getUserBillingHistory: () => Promise<BillingHistoryResponse>;\n  getUserBillingPayment: () => Promise<BillingPaymentResponse>;\n\n  getSend: (id: string) => Promise<SendResponse>;\n  postSendAccess: (\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendAccessResponse>;\n  getSends: () => Promise<ListResponse<SendResponse>>;\n  postSend: (request: SendRequest) => Promise<SendResponse>;\n  postFileTypeSend: (request: SendRequest) => Promise<SendFileUploadDataResponse>;\n  postSendFile: (sendId: string, fileId: string, data: FormData) => Promise<any>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postSendFileLegacy: (data: FormData) => Promise<SendResponse>;\n  putSend: (id: string, request: SendRequest) => Promise<SendResponse>;\n  putSendRemovePassword: (id: string) => Promise<SendResponse>;\n  deleteSend: (id: string) => Promise<any>;\n  getSendFileDownloadData: (\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendFileDownloadDataResponse>;\n  renewSendFileUploadUrl: (sendId: string, fileId: string) => Promise<SendFileUploadDataResponse>;\n\n  getCipher: (id: string) => Promise<CipherResponse>;\n  getFullCipherDetails: (id: string) => Promise<CipherResponse>;\n  getCipherAdmin: (id: string) => Promise<CipherResponse>;\n  getAttachmentData: (\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ) => Promise<AttachmentResponse>;\n  getCiphersOrganization: (organizationId: string) => Promise<ListResponse<CipherResponse>>;\n  postCipher: (request: CipherRequest) => Promise<CipherResponse>;\n  postCipherCreate: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  postCipherAdmin: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  putCipher: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  putCipherAdmin: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  deleteCipher: (id: string) => Promise<any>;\n  deleteCipherAdmin: (id: string) => Promise<any>;\n  deleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  deleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putMoveCiphers: (request: CipherBulkMoveRequest) => Promise<any>;\n  putShareCipher: (id: string, request: CipherShareRequest) => Promise<CipherResponse>;\n  putShareCiphers: (request: CipherBulkShareRequest) => Promise<any>;\n  putCipherCollections: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  putCipherCollectionsAdmin: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  postPurgeCiphers: (request: SecretVerificationRequest, organizationId?: string) => Promise<any>;\n  postImportCiphers: (request: ImportCiphersRequest) => Promise<any>;\n  postImportOrganizationCiphers: (\n    organizationId: string,\n    request: ImportOrganizationCiphersRequest\n  ) => Promise<any>;\n  putDeleteCipher: (id: string) => Promise<any>;\n  putDeleteCipherAdmin: (id: string) => Promise<any>;\n  putDeleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putDeleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putRestoreCipher: (id: string) => Promise<CipherResponse>;\n  putRestoreCipherAdmin: (id: string) => Promise<CipherResponse>;\n  putRestoreManyCiphers: (\n    request: CipherBulkRestoreRequest\n  ) => Promise<ListResponse<CipherResponse>>;\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentAdminLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  postCipherAttachment: (\n    id: string,\n    request: AttachmentRequest\n  ) => Promise<AttachmentUploadDataResponse>;\n  deleteCipherAttachment: (id: string, attachmentId: string) => Promise<any>;\n  deleteCipherAttachmentAdmin: (id: string, attachmentId: string) => Promise<any>;\n  postShareCipherAttachment: (\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ) => Promise<any>;\n  renewAttachmentUploadUrl: (\n    id: string,\n    attachmentId: string\n  ) => Promise<AttachmentUploadDataResponse>;\n  postAttachmentFile: (id: string, attachmentId: string, data: FormData) => Promise<any>;\n\n  getCollectionDetails: (\n    organizationId: string,\n    id: string\n  ) => Promise<CollectionGroupDetailsResponse>;\n  getUserCollections: () => Promise<ListResponse<CollectionResponse>>;\n  getCollections: (organizationId: string) => Promise<ListResponse<CollectionResponse>>;\n  getCollectionUsers: (organizationId: string, id: string) => Promise<SelectionReadOnlyResponse[]>;\n  postCollection: (\n    organizationId: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  putCollectionUsers: (\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ) => Promise<any>;\n  putCollection: (\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  deleteCollection: (organizationId: string, id: string) => Promise<any>;\n  deleteCollectionUser: (\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ) => Promise<any>;\n\n  getGroupDetails: (organizationId: string, id: string) => Promise<GroupDetailsResponse>;\n  getGroups: (organizationId: string) => Promise<ListResponse<GroupResponse>>;\n  getGroupUsers: (organizationId: string, id: string) => Promise<string[]>;\n  postGroup: (organizationId: string, request: GroupRequest) => Promise<GroupResponse>;\n  putGroup: (organizationId: string, id: string, request: GroupRequest) => Promise<GroupResponse>;\n  putGroupUsers: (organizationId: string, id: string, request: string[]) => Promise<any>;\n  deleteGroup: (organizationId: string, id: string) => Promise<any>;\n  deleteGroupUser: (organizationId: string, id: string, organizationUserId: string) => Promise<any>;\n\n  getPolicy: (organizationId: string, type: PolicyType) => Promise<PolicyResponse>;\n  getPolicies: (organizationId: string) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByToken: (\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByInvitedUser: (\n    organizationId: string,\n    userId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  putPolicy: (\n    organizationId: string,\n    type: PolicyType,\n    request: PolicyRequest\n  ) => Promise<PolicyResponse>;\n\n  getOrganizationUser: (\n    organizationId: string,\n    id: string\n  ) => Promise<OrganizationUserDetailsResponse>;\n  getOrganizationUserGroups: (organizationId: string, id: string) => Promise<string[]>;\n  getOrganizationUsers: (\n    organizationId: string\n  ) => Promise<ListResponse<OrganizationUserUserDetailsResponse>>;\n  getOrganizationUserResetPasswordDetails: (\n    organizationId: string,\n    id: string\n  ) => Promise<OrganizationUserResetPasswordDetailsReponse>;\n  postOrganizationUserInvite: (\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ) => Promise<any>;\n  postOrganizationUserReinvite: (organizationId: string, id: string) => Promise<any>;\n  postManyOrganizationUserReinvite: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n  postOrganizationUserAccept: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ) => Promise<any>;\n  postOrganizationUserConfirm: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ) => Promise<any>;\n  postOrganizationUsersPublicKey: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>>;\n  postOrganizationUserBulkConfirm: (\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  putOrganizationUser: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ) => Promise<any>;\n  putOrganizationUserGroups: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateGroupsRequest\n  ) => Promise<any>;\n  putOrganizationUserResetPasswordEnrollment: (\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ) => Promise<any>;\n  putOrganizationUserResetPassword: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ) => Promise<any>;\n  deleteOrganizationUser: (organizationId: string, id: string) => Promise<any>;\n  deleteManyOrganizationUsers: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n  deactivateOrganizationUser: (organizationId: string, id: string) => Promise<any>;\n  deactivateManyOrganizationUsers: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n  activateOrganizationUser: (organizationId: string, id: string) => Promise<any>;\n  activateManyOrganizationUsers: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  getSync: () => Promise<SyncResponse>;\n  postImportDirectory: (organizationId: string, request: ImportDirectoryRequest) => Promise<any>;\n  postPublicImportDirectory: (request: OrganizationImportRequest) => Promise<any>;\n\n  getSettingsDomains: () => Promise<DomainsResponse>;\n  putSettingsDomains: (request: UpdateDomainsRequest) => Promise<DomainsResponse>;\n\n  getTwoFactorProviders: () => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorOrganizationProviders: (\n    organizationId: string\n  ) => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorAuthenticator: (\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  getTwoFactorEmail: (request: SecretVerificationRequest) => Promise<TwoFactorEmailResponse>;\n  getTwoFactorDuo: (request: SecretVerificationRequest) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorYubiKey: (request: SecretVerificationRequest) => Promise<TwoFactorYubiKeyResponse>;\n  getTwoFactorWebAuthn: (request: SecretVerificationRequest) => Promise<TwoFactorWebAuthnResponse>;\n  getTwoFactorWebAuthnChallenge: (request: SecretVerificationRequest) => Promise<ChallengeResponse>;\n  getTwoFactorRecover: (request: SecretVerificationRequest) => Promise<TwoFactorRecoverResponse>;\n  putTwoFactorAuthenticator: (\n    request: UpdateTwoFactorAuthenticatorRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  putTwoFactorEmail: (request: UpdateTwoFactorEmailRequest) => Promise<TwoFactorEmailResponse>;\n  putTwoFactorDuo: (request: UpdateTwoFactorDuoRequest) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorYubiKey: (\n    request: UpdateTwoFactorYubioOtpRequest\n  ) => Promise<TwoFactorYubiKeyResponse>;\n  putTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  deleteTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  putTwoFactorDisable: (request: TwoFactorProviderRequest) => Promise<TwoFactorProviderResponse>;\n  putTwoFactorOrganizationDisable: (\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ) => Promise<TwoFactorProviderResponse>;\n  postTwoFactorRecover: (request: TwoFactorRecoveryRequest) => Promise<any>;\n  postTwoFactorEmailSetup: (request: TwoFactorEmailRequest) => Promise<any>;\n  postTwoFactorEmail: (request: TwoFactorEmailRequest) => Promise<any>;\n  getDeviceVerificationSettings: () => Promise<DeviceVerificationResponse>;\n  putDeviceVerificationSettings: (\n    request: DeviceVerificationRequest\n  ) => Promise<DeviceVerificationResponse>;\n\n  getEmergencyAccessTrusted: () => Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>>;\n  getEmergencyAccessGranted: () => Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>>;\n  getEmergencyAccess: (id: string) => Promise<EmergencyAccessGranteeDetailsResponse>;\n  getEmergencyGrantorPolicies: (id: string) => Promise<ListResponse<PolicyResponse>>;\n  putEmergencyAccess: (id: string, request: EmergencyAccessUpdateRequest) => Promise<any>;\n  deleteEmergencyAccess: (id: string) => Promise<any>;\n  postEmergencyAccessInvite: (request: EmergencyAccessInviteRequest) => Promise<any>;\n  postEmergencyAccessReinvite: (id: string) => Promise<any>;\n  postEmergencyAccessAccept: (id: string, request: EmergencyAccessAcceptRequest) => Promise<any>;\n  postEmergencyAccessConfirm: (id: string, request: EmergencyAccessConfirmRequest) => Promise<any>;\n  postEmergencyAccessInitiate: (id: string) => Promise<any>;\n  postEmergencyAccessApprove: (id: string) => Promise<any>;\n  postEmergencyAccessReject: (id: string) => Promise<any>;\n  postEmergencyAccessTakeover: (id: string) => Promise<EmergencyAccessTakeoverResponse>;\n  postEmergencyAccessPassword: (\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ) => Promise<any>;\n  postEmergencyAccessView: (id: string) => Promise<EmergencyAccessViewResponse>;\n\n  getOrganization: (id: string) => Promise<OrganizationResponse>;\n  getOrganizationBilling: (id: string) => Promise<BillingResponse>;\n  getOrganizationSubscription: (id: string) => Promise<OrganizationSubscriptionResponse>;\n  getCloudCommunicationsEnabled: () => Promise<boolean>;\n  abstract getOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    id: string,\n    type: OrganizationConnectionType,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  abstract createOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  abstract updateOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig },\n    organizationConnectionId: string\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  deleteOrganizationConnection: (id: string) => Promise<void>;\n  getOrganizationLicense: (id: string, installationId: string) => Promise<any>;\n  getOrganizationTaxInfo: (id: string) => Promise<TaxInfoResponse>;\n  getOrganizationAutoEnrollStatus: (\n    identifier: string\n  ) => Promise<OrganizationAutoEnrollStatusResponse>;\n  getOrganizationSso: (id: string) => Promise<OrganizationSsoResponse>;\n  postOrganization: (request: OrganizationCreateRequest) => Promise<OrganizationResponse>;\n  putOrganization: (\n    id: string,\n    request: OrganizationUpdateRequest\n  ) => Promise<OrganizationResponse>;\n  putOrganizationTaxInfo: (id: string, request: OrganizationTaxInfoUpdateRequest) => Promise<any>;\n  postLeaveOrganization: (id: string) => Promise<any>;\n  postOrganizationLicense: (data: FormData) => Promise<OrganizationResponse>;\n  postOrganizationLicenseUpdate: (id: string, data: FormData) => Promise<any>;\n  postOrganizationApiKey: (\n    id: string,\n    request: OrganizationApiKeyRequest\n  ) => Promise<ApiKeyResponse>;\n  getOrganizationApiKeyInformation: (\n    id: string,\n    type?: OrganizationApiKeyType\n  ) => Promise<ListResponse<OrganizationApiKeyInformationResponse>>;\n  postOrganizationRotateApiKey: (\n    id: string,\n    request: OrganizationApiKeyRequest\n  ) => Promise<ApiKeyResponse>;\n  postOrganizationSso: (\n    id: string,\n    request: OrganizationSsoRequest\n  ) => Promise<OrganizationSsoResponse>;\n  postOrganizationUpgrade: (\n    id: string,\n    request: OrganizationUpgradeRequest\n  ) => Promise<PaymentResponse>;\n  postOrganizationUpdateSubscription: (\n    id: string,\n    request: OrganizationSubscriptionUpdateRequest\n  ) => Promise<void>;\n  postOrganizationSeat: (id: string, request: SeatRequest) => Promise<PaymentResponse>;\n  postOrganizationStorage: (id: string, request: StorageRequest) => Promise<any>;\n  postOrganizationPayment: (id: string, request: PaymentRequest) => Promise<any>;\n  postOrganizationVerifyBank: (id: string, request: VerifyBankRequest) => Promise<any>;\n  postOrganizationCancel: (id: string) => Promise<any>;\n  postOrganizationReinstate: (id: string) => Promise<any>;\n  deleteOrganization: (id: string, request: SecretVerificationRequest) => Promise<any>;\n  getPlans: () => Promise<ListResponse<PlanResponse>>;\n  getTaxRates: () => Promise<ListResponse<TaxRateResponse>>;\n  getOrganizationKeys: (id: string) => Promise<OrganizationKeysResponse>;\n  postOrganizationKeys: (\n    id: string,\n    request: OrganizationKeysRequest\n  ) => Promise<OrganizationKeysResponse>;\n\n  postProviderSetup: (id: string, request: ProviderSetupRequest) => Promise<ProviderResponse>;\n  getProvider: (id: string) => Promise<ProviderResponse>;\n  putProvider: (id: string, request: ProviderUpdateRequest) => Promise<ProviderResponse>;\n\n  getProviderUsers: (providerId: string) => Promise<ListResponse<ProviderUserUserDetailsResponse>>;\n  getProviderUser: (providerId: string, id: string) => Promise<ProviderUserResponse>;\n  postProviderUserInvite: (providerId: string, request: ProviderUserInviteRequest) => Promise<any>;\n  postProviderUserReinvite: (providerId: string, id: string) => Promise<any>;\n  postManyProviderUserReinvite: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  postProviderUserAccept: (\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ) => Promise<any>;\n  postProviderUserConfirm: (\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ) => Promise<any>;\n  postProviderUsersPublicKey: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkPublicKeyResponse>>;\n  postProviderUserBulkConfirm: (\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  putProviderUser: (\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ) => Promise<any>;\n  deleteProviderUser: (organizationId: string, id: string) => Promise<any>;\n  deleteManyProviderUsers: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  getProviderClients: (\n    providerId: string\n  ) => Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>>;\n  postProviderAddOrganization: (\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ) => Promise<any>;\n  postProviderCreateOrganization: (\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ) => Promise<ProviderOrganizationResponse>;\n  deleteProviderOrganization: (providerId: string, organizationId: string) => Promise<any>;\n\n  getEvents: (start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n  getEventsCipher: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganization: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganizationUser: (\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProvider: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProviderUser: (\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  postEventsCollect: (request: EventRequest[]) => Promise<any>;\n\n  deleteSsoUser: (organizationId: string) => Promise<any>;\n  getSsoUserIdentifier: () => Promise<string>;\n\n  getUserPublicKey: (id: string) => Promise<UserKeyResponse>;\n\n  getHibpBreach: (username: string) => Promise<BreachAccountResponse[]>;\n\n  postBitPayInvoice: (request: BitPayInvoiceRequest) => Promise<string>;\n  postSetupPayment: () => Promise<string>;\n\n  getActiveBearerToken: () => Promise<string>;\n  fetch: (request: Request) => Promise<Response>;\n  nativeFetch: (request: Request) => Promise<Response>;\n\n  preValidateSso: (identifier: string) => Promise<SsoPreValidateResponse>;\n\n  postCreateSponsorship: (\n    sponsorshipOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ) => Promise<void>;\n  getSponsorshipSyncStatus: (\n    sponsoredOrgId: string\n  ) => Promise<OrganizationSponsorshipSyncStatusResponse>;\n  deleteRevokeSponsorship: (sponsoringOrganizationId: string) => Promise<void>;\n  deleteRemoveSponsorship: (sponsoringOrgId: string) => Promise<void>;\n  postPreValidateSponsorshipToken: (sponsorshipToken: string) => Promise<boolean>;\n  postRedeemSponsorship: (\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ) => Promise<void>;\n  postResendSponsorshipOffer: (sponsoringOrgId: string) => Promise<void>;\n\n  getUserKeyFromKeyConnector: (keyConnectorUrl: string) => Promise<KeyConnectorUserKeyResponse>;\n  postUserKeyToKeyConnector: (\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ) => Promise<void>;\n  getKeyConnectorAlive: (keyConnectorUrl: string) => Promise<void>;\n}\n","import { LogLevelType } from \"../enums/logLevelType\";\n\nexport abstract class LogService {\n  debug: (message: string) => void;\n  info: (message: string) => void;\n  warning: (message: string) => void;\n  error: (message: string) => void;\n  write: (level: LogLevelType, message: string) => void;\n  time: (label: string) => void;\n  timeEnd: (label: string) => [number, number];\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/errorResponse\";\n\n@Injectable()\nexport class ValidationService {\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  showError(data: any): string[] {\n    const defaultErrorMessage = this.i18nService.t(\"unexpectedError\");\n    let errors: string[] = [];\n\n    if (data != null && typeof data === \"string\") {\n      errors.push(data);\n    } else if (data == null || typeof data !== \"object\") {\n      errors.push(defaultErrorMessage);\n    } else if (data.validationErrors != null) {\n      errors = errors.concat((data as ErrorResponse).getAllMessages());\n    } else {\n      errors.push(data.message ? data.message : defaultErrorMessage);\n    }\n\n    if (errors.length === 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors[0]);\n    } else if (errors.length > 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors, {\n        timeout: 5000 * errors.length,\n      });\n    }\n\n    return errors;\n  }\n}\n","import { Directive, ElementRef, Input, OnChanges } from \"@angular/core\";\n\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/errorResponse\";\n\nimport { ValidationService } from \"../services/validation.service\";\n\n/**\n * Provides error handling, in particular for any error returned by the server in an api call.\n * Attach it to a <form> element and provide the name of the class property that will hold the api call promise.\n * e.g. <form [appApiAction]=\"this.formPromise\">\n * Any errors/rejections that occur will be intercepted and displayed as error toasts.\n */\n@Directive({\n  selector: \"[appApiAction]\",\n})\nexport class ApiActionDirective implements OnChanges {\n  @Input() appApiAction: Promise<any>;\n\n  constructor(\n    private el: ElementRef,\n    private validationService: ValidationService,\n    private logService: LogService\n  ) {}\n\n  ngOnChanges(changes: any) {\n    if (this.appApiAction == null || this.appApiAction.then == null) {\n      return;\n    }\n\n    this.el.nativeElement.loading = true;\n\n    this.appApiAction.then(\n      (response: any) => {\n        this.el.nativeElement.loading = false;\n      },\n      (e: any) => {\n        this.el.nativeElement.loading = false;\n\n        if ((e as ErrorResponse).captchaRequired) {\n          this.logService.error(\"Captcha required error response: \" + e.getSingleMessage());\n          return;\n        }\n        this.logService?.error(`Received API exception: ${e}`);\n        this.validationService.showError(e);\n      }\n    );\n  }\n}\n","/* eslint-disable no-useless-escape */\nimport * as tldjs from \"tldjs\";\n\nimport { I18nService } from \"../abstractions/i18n.service\";\n\nconst nodeURL = typeof window === \"undefined\" ? require(\"url\") : null;\n\nexport class Utils {\n  static inited = false;\n  static isNode = false;\n  static isBrowser = true;\n  static isMobileBrowser = false;\n  static isAppleMobileBrowser = false;\n  static global: any = null;\n  static tldEndingRegex =\n    /.*\\.(com|net|org|edu|uk|gov|ca|de|jp|fr|au|ru|ch|io|es|us|co|xyz|info|ly|mil)$/;\n  // Transpiled version of /\\p{Emoji_Presentation}/gu using https://mothereff.in/regexpu. Used for compatability in older browsers.\n  static regexpEmojiPresentation =\n    /(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])/g;\n\n  static init() {\n    if (Utils.inited) {\n      return;\n    }\n\n    Utils.inited = true;\n    Utils.isNode =\n      typeof process !== \"undefined\" &&\n      (process as any).release != null &&\n      (process as any).release.name === \"node\";\n    Utils.isBrowser = typeof window !== \"undefined\";\n    Utils.isMobileBrowser = Utils.isBrowser && this.isMobile(window);\n    Utils.isAppleMobileBrowser = Utils.isBrowser && this.isAppleMobile(window);\n    Utils.global = Utils.isNode && !Utils.isBrowser ? global : window;\n  }\n\n  static fromB64ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"base64\"));\n    } else {\n      const binaryString = window.atob(str);\n      const bytes = new Uint8Array(binaryString.length);\n      for (let i = 0; i < binaryString.length; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUrlB64ToArray(str: string): Uint8Array {\n    return Utils.fromB64ToArray(Utils.fromUrlB64ToB64(str));\n  }\n\n  static fromHexToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"hex\"));\n    } else {\n      const bytes = new Uint8Array(str.length / 2);\n      for (let i = 0; i < str.length; i += 2) {\n        bytes[i / 2] = parseInt(str.substr(i, 2), 16);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUtf8ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"utf8\"));\n    } else {\n      const strUtf8 = unescape(encodeURIComponent(str));\n      const arr = new Uint8Array(strUtf8.length);\n      for (let i = 0; i < strUtf8.length; i++) {\n        arr[i] = strUtf8.charCodeAt(i);\n      }\n      return arr;\n    }\n  }\n\n  static fromByteStringToArray(str: string): Uint8Array {\n    const arr = new Uint8Array(str.length);\n    for (let i = 0; i < str.length; i++) {\n      arr[i] = str.charCodeAt(i);\n    }\n    return arr;\n  }\n\n  static fromBufferToB64(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"base64\");\n    } else {\n      let binary = \"\";\n      const bytes = new Uint8Array(buffer);\n      for (let i = 0; i < bytes.byteLength; i++) {\n        binary += String.fromCharCode(bytes[i]);\n      }\n      return window.btoa(binary);\n    }\n  }\n\n  static fromBufferToUrlB64(buffer: ArrayBuffer): string {\n    return Utils.fromB64toUrlB64(Utils.fromBufferToB64(buffer));\n  }\n\n  static fromB64toUrlB64(b64Str: string) {\n    return b64Str.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n  }\n\n  static fromBufferToUtf8(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"utf8\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      const encodedString = String.fromCharCode.apply(null, bytes);\n      return decodeURIComponent(escape(encodedString));\n    }\n  }\n\n  static fromBufferToByteString(buffer: ArrayBuffer): string {\n    return String.fromCharCode.apply(null, new Uint8Array(buffer));\n  }\n\n  // ref: https://stackoverflow.com/a/40031979/1090359\n  static fromBufferToHex(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"hex\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      return Array.prototype.map\n        .call(bytes, (x: number) => (\"00\" + x.toString(16)).slice(-2))\n        .join(\"\");\n    }\n  }\n\n  static fromUrlB64ToB64(urlB64Str: string): string {\n    let output = urlB64Str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n      case 0:\n        break;\n      case 2:\n        output += \"==\";\n        break;\n      case 3:\n        output += \"=\";\n        break;\n      default:\n        throw new Error(\"Illegal base64url string!\");\n    }\n\n    return output;\n  }\n\n  static fromUrlB64ToUtf8(urlB64Str: string): string {\n    return Utils.fromB64ToUtf8(Utils.fromUrlB64ToB64(urlB64Str));\n  }\n\n  static fromUtf8ToB64(utfStr: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(utfStr, \"utf8\").toString(\"base64\");\n    } else {\n      return decodeURIComponent(escape(window.btoa(utfStr)));\n    }\n  }\n\n  static fromUtf8ToUrlB64(utfStr: string): string {\n    return Utils.fromBufferToUrlB64(Utils.fromUtf8ToArray(utfStr));\n  }\n\n  static fromB64ToUtf8(b64Str: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(b64Str, \"base64\").toString(\"utf8\");\n    } else {\n      return decodeURIComponent(escape(window.atob(b64Str)));\n    }\n  }\n\n  // ref: http://stackoverflow.com/a/2117523/1090359\n  static newGuid(): string {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\n      const r = (Math.random() * 16) | 0;\n      const v = c === \"x\" ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  }\n\n  static isGuid(id: string) {\n    return RegExp(\n      /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/,\n      \"i\"\n    ).test(id);\n  }\n\n  static getHostname(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.hostname !== \"\" ? url.hostname : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getHost(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.host !== \"\" ? url.host : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getDomain(uriString: string): string {\n    if (uriString == null) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n    if (uriString === \"\") {\n      return null;\n    }\n\n    if (uriString.startsWith(\"data:\")) {\n      return null;\n    }\n\n    let httpUrl = uriString.startsWith(\"http://\") || uriString.startsWith(\"https://\");\n    if (\n      !httpUrl &&\n      uriString.indexOf(\"://\") < 0 &&\n      Utils.tldEndingRegex.test(uriString) &&\n      uriString.indexOf(\"@\") < 0\n    ) {\n      uriString = \"http://\" + uriString;\n      httpUrl = true;\n    }\n\n    if (httpUrl) {\n      try {\n        const url = Utils.getUrlObject(uriString);\n        const validHostname = tldjs?.isValid != null ? tldjs.isValid(url.hostname) : true;\n        if (!validHostname) {\n          return null;\n        }\n\n        if (url.hostname === \"localhost\" || Utils.validIpAddress(url.hostname)) {\n          return url.hostname;\n        }\n\n        const urlDomain =\n          tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(url.hostname) : null;\n        return urlDomain != null ? urlDomain : url.hostname;\n      } catch (e) {\n        // Invalid domain, try another approach below.\n      }\n    }\n\n    try {\n      const domain = tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(uriString) : null;\n\n      if (domain != null) {\n        return domain;\n      }\n    } catch {\n      return null;\n    }\n\n    return null;\n  }\n\n  static getQueryParams(uriString: string): Map<string, string> {\n    const url = Utils.getUrl(uriString);\n    if (url == null || url.search == null || url.search === \"\") {\n      return null;\n    }\n    const map = new Map<string, string>();\n    const pairs = (url.search[0] === \"?\" ? url.search.substr(1) : url.search).split(\"&\");\n    pairs.forEach((pair) => {\n      const parts = pair.split(\"=\");\n      if (parts.length < 1) {\n        return;\n      }\n      map.set(\n        decodeURIComponent(parts[0]).toLowerCase(),\n        parts[1] == null ? \"\" : decodeURIComponent(parts[1])\n      );\n    });\n    return map;\n  }\n\n  static getSortFunction(i18nService: I18nService, prop: string) {\n    return (a: any, b: any) => {\n      if (a[prop] == null && b[prop] != null) {\n        return -1;\n      }\n      if (a[prop] != null && b[prop] == null) {\n        return 1;\n      }\n      if (a[prop] == null && b[prop] == null) {\n        return 0;\n      }\n\n      return i18nService.collator\n        ? i18nService.collator.compare(a[prop], b[prop])\n        : a[prop].localeCompare(b[prop]);\n    };\n  }\n\n  static isNullOrWhitespace(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str.trim() === \"\";\n  }\n\n  static isNullOrEmpty(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str == \"\";\n  }\n\n  static nameOf<T>(name: string & keyof T) {\n    return name;\n  }\n\n  static assign<T>(target: T, source: Partial<T>): T {\n    return Object.assign(target, source);\n  }\n\n  static iterateEnum<O extends object, K extends keyof O = keyof O>(obj: O) {\n    return (Object.keys(obj).filter((k) => Number.isNaN(+k)) as K[]).map((k) => obj[k]);\n  }\n\n  static getUrl(uriString: string): URL {\n    if (uriString == null) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n    if (uriString === \"\") {\n      return null;\n    }\n\n    let url = Utils.getUrlObject(uriString);\n    if (url == null) {\n      const hasHttpProtocol =\n        uriString.indexOf(\"http://\") === 0 || uriString.indexOf(\"https://\") === 0;\n      if (!hasHttpProtocol && uriString.indexOf(\".\") > -1) {\n        url = Utils.getUrlObject(\"http://\" + uriString);\n      }\n    }\n    return url;\n  }\n\n  static camelToPascalCase(s: string) {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  private static validIpAddress(ipString: string): boolean {\n    const ipRegex =\n      /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n    return ipRegex.test(ipString);\n  }\n\n  private static isMobile(win: Window) {\n    let mobile = false;\n    ((a) => {\n      if (\n        /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\n          a\n        ) ||\n        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n          a.substr(0, 4)\n        )\n      ) {\n        mobile = true;\n      }\n    })(win.navigator.userAgent || win.navigator.vendor || (win as any).opera);\n    return mobile || win.navigator.userAgent.match(/iPad/i) != null;\n  }\n\n  private static isAppleMobile(win: Window) {\n    return (\n      win.navigator.userAgent.match(/iPhone/i) != null ||\n      win.navigator.userAgent.match(/iPad/i) != null\n    );\n  }\n\n  private static getUrlObject(uriString: string): URL {\n    try {\n      if (nodeURL != null) {\n        return new nodeURL.URL(uriString);\n      } else if (typeof URL === \"function\") {\n        return new URL(uriString);\n      } else if (window != null) {\n        const hasProtocol = uriString.indexOf(\"://\") > -1;\n        if (!hasProtocol && uriString.indexOf(\".\") > -1) {\n          uriString = \"http://\" + uriString;\n        } else if (!hasProtocol) {\n          return null;\n        }\n        const anchor = window.document.createElement(\"a\");\n        anchor.href = uriString;\n        return anchor as any;\n      }\n    } catch (e) {\n      // Ignore error\n    }\n\n    return null;\n  }\n}\n\nUtils.init();\n","import { Directive, ElementRef, Input, NgZone } from \"@angular/core\";\nimport { take } from \"rxjs/operators\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Directive({\n  selector: \"[appAutofocus]\",\n})\nexport class AutofocusDirective {\n  @Input() set appAutofocus(condition: boolean | string) {\n    this.autofocus = condition === \"\" || condition === true;\n  }\n\n  private autofocus: boolean;\n\n  constructor(private el: ElementRef, private ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (!Utils.isMobileBrowser && this.autofocus) {\n      if (this.ngZone.isStable) {\n        this.el.nativeElement.focus();\n      } else {\n        this.ngZone.onStable.pipe(take(1)).subscribe(() => this.el.nativeElement.focus());\n      }\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { HintComponent as BaseHintComponent } from \"@bitwarden/angular/components/hint.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-hint\",\n  templateUrl: \"hint.component.html\",\n})\nexport class HintComponent extends BaseHintComponent {\n  constructor(\n    router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    apiService: ApiService,\n    logService: LogService\n  ) {\n    super(router, i18nService, apiService, platformUtilsService, logService);\n  }\n}\n","import { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PasswordHintRequest } from \"@bitwarden/common/models/request/passwordHintRequest\";\n\nexport class HintComponent {\n  email = \"\";\n  formPromise: Promise<any>;\n\n  protected successRoute = \"login\";\n  protected onSuccessfulSubmit: () => void;\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    if (this.email == null || this.email === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"emailRequired\")\n      );\n      return;\n    }\n    if (this.email.indexOf(\"@\") === -1) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.apiService.postPasswordHint(new PasswordHintRequest(this.email));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"masterPassSent\"));\n      if (this.onSuccessfulSubmit != null) {\n        this.onSuccessfulSubmit();\n      } else if (this.router != null) {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/login\">{{ \"cancel\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"passwordHint\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n          <input\n            id=\"email\"\n            type=\"text\"\n            name=\"Email\"\n            [(ngModel)]=\"email\"\n            required\n            appAutofocus\n            inputmode=\"email\"\n            appInputVerbatim=\"false\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"enterEmailToGetHint\" | i18n }}\n      </div>\n    </div>\n  </main>\n</form>\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/passwordGeneratorPolicyOptions\";\n\nexport abstract class PasswordGenerationService {\n  generatePassword: (options: any) => Promise<string>;\n  generatePassphrase: (options: any) => Promise<string>;\n  getOptions: () => Promise<[any, PasswordGeneratorPolicyOptions]>;\n  enforcePasswordGeneratorPoliciesOnOptions: (\n    options: any\n  ) => Promise<[any, PasswordGeneratorPolicyOptions]>;\n  getPasswordGeneratorPolicyOptions: () => Promise<PasswordGeneratorPolicyOptions>;\n  saveOptions: (options: any) => Promise<any>;\n  getHistory: () => Promise<GeneratedPasswordHistory[]>;\n  addHistory: (password: string) => Promise<any>;\n  clear: (userId?: string) => Promise<any>;\n  passwordStrength: (password: string, userInputs?: string[]) => zxcvbn.ZXCVBNResult;\n  normalizeOptions: (options: any, enforcedPolicyOptions: PasswordGeneratorPolicyOptions) => void;\n}\n","import { BehaviorSubject, Observable } from \"rxjs\";\n\nimport { KdfType } from \"../enums/kdfType\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encryptedOrganizationKeyData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { Account } from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/encString\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { Policy } from \"../models/domain/policy\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { WindowState } from \"../models/domain/windowState\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class StateService<T extends Account = Account> {\n  accounts: BehaviorSubject<{ [userId: string]: T }>;\n  activeAccount: BehaviorSubject<string>;\n\n  activeAccountUnlocked: Observable<boolean>;\n\n  addAccount: (account: T) => Promise<void>;\n  setActiveUser: (userId: string) => Promise<void>;\n  clean: (options?: StorageOptions) => Promise<void>;\n  init: () => Promise<void>;\n\n  getAccessToken: (options?: StorageOptions) => Promise<string>;\n  setAccessToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getAddEditCipherInfo: (options?: StorageOptions) => Promise<any>;\n  setAddEditCipherInfo: (value: any, options?: StorageOptions) => Promise<void>;\n  getAlwaysShowDock: (options?: StorageOptions) => Promise<boolean>;\n  setAlwaysShowDock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientId: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientId: (value: string, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientSecret: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientSecret: (value: string, options?: StorageOptions) => Promise<void>;\n  getAutoConfirmFingerPrints: (options?: StorageOptions) => Promise<boolean>;\n  setAutoConfirmFingerprints: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getAutoFillOnPageLoadDefault: (options?: StorageOptions) => Promise<boolean>;\n  setAutoFillOnPageLoadDefault: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricAwaitingAcceptance: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricAwaitingAcceptance: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricFingerprintValidated: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricFingerprintValidated: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricLocked: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricLocked: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricText: (options?: StorageOptions) => Promise<string>;\n  setBiometricText: (value: string, options?: StorageOptions) => Promise<void>;\n  getBiometricUnlock: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricUnlock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCanAccessPremium: (options?: StorageOptions) => Promise<boolean>;\n  getHasPremiumPersonally: (options?: StorageOptions) => Promise<boolean>;\n  setHasPremiumPersonally: (value: boolean, options?: StorageOptions) => Promise<void>;\n  setHasPremiumFromOrganization: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getHasPremiumFromOrganization: (options?: StorageOptions) => Promise<boolean>;\n  getClearClipboard: (options?: StorageOptions) => Promise<number>;\n  setClearClipboard: (value: number, options?: StorageOptions) => Promise<void>;\n  getCollapsedGroupings: (options?: StorageOptions) => Promise<string[]>;\n  setCollapsedGroupings: (value: string[], options?: StorageOptions) => Promise<void>;\n  getConvertAccountToKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setConvertAccountToKeyConnector: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setCryptoMasterKey: (value: SymmetricCryptoKey, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyAuto: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyAuto: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyB64: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyB64: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<string>;\n  hasCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setCryptoMasterKeyBiometric: (value: string, options?: StorageOptions) => Promise<void>;\n  getDecodedToken: (options?: StorageOptions) => Promise<any>;\n  setDecodedToken: (value: any, options?: StorageOptions) => Promise<void>;\n  getDecryptedCiphers: (options?: StorageOptions) => Promise<CipherView[]>;\n  setDecryptedCiphers: (value: CipherView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCollections: (options?: StorageOptions) => Promise<CollectionView[]>;\n  setDecryptedCollections: (value: CollectionView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setDecryptedCryptoSymmetricKey: (\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedOrganizationKeys: (\n    options?: StorageOptions\n  ) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedOrganizationKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setDecryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPinProtected: (options?: StorageOptions) => Promise<EncString>;\n  setDecryptedPinProtected: (value: EncString, options?: StorageOptions) => Promise<void>;\n  getDecryptedPolicies: (options?: StorageOptions) => Promise<Policy[]>;\n  setDecryptedPolicies: (value: Policy[], options?: StorageOptions) => Promise<void>;\n  getDecryptedPrivateKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setDecryptedPrivateKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getDecryptedProviderKeys: (options?: StorageOptions) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedProviderKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedSends: (options?: StorageOptions) => Promise<SendView[]>;\n  setDecryptedSends: (value: SendView[], options?: StorageOptions) => Promise<void>;\n  getDefaultUriMatch: (options?: StorageOptions) => Promise<UriMatchType>;\n  setDefaultUriMatch: (value: UriMatchType, options?: StorageOptions) => Promise<void>;\n  getDisableAddLoginNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAddLoginNotification: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoBiometricsPrompt: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoBiometricsPrompt: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoTotpCopy: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoTotpCopy: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableBadgeCounter: (options?: StorageOptions) => Promise<boolean>;\n  setDisableBadgeCounter: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableChangedPasswordNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableChangedPasswordNotification: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDisableContextMenuItem: (options?: StorageOptions) => Promise<boolean>;\n  setDisableContextMenuItem: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableFavicon: (options?: StorageOptions) => Promise<boolean>;\n  setDisableFavicon: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableGa: (options?: StorageOptions) => Promise<boolean>;\n  setDisableGa: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowCardsCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowCardsCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowIdentitiesCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowIdentitiesCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEmail: (options?: StorageOptions) => Promise<string>;\n  setEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getEmailVerified: (options?: StorageOptions) => Promise<boolean>;\n  setEmailVerified: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAlwaysOnTop: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAlwaysOnTop: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAutoFillOnPageLoad: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAutoFillOnPageLoad: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBiometric: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegration: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegration: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegrationFingerprint: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegrationFingerprint: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEnableCloseToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableCloseToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableFullWidth: (options?: StorageOptions) => Promise<boolean>;\n  setEnableFullWidth: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableGravitars: (options?: StorageOptions) => Promise<boolean>;\n  setEnableGravitars: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableMinimizeToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableMinimizeToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableStartToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableStartToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEncryptedCiphers: (options?: StorageOptions) => Promise<{ [id: string]: CipherData }>;\n  setEncryptedCiphers: (\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCollections: (options?: StorageOptions) => Promise<{ [id: string]: CollectionData }>;\n  setEncryptedCollections: (\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedCryptoSymmetricKey: (value: string, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use FolderService\n   */\n  getEncryptedFolders: (options?: StorageOptions) => Promise<{ [id: string]: FolderData }>;\n  /**\n   * @deprecated Do not call this directly, use FolderService\n   */\n  setEncryptedFolders: (\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedOrganizationKeys: (\n    options?: StorageOptions\n  ) => Promise<{ [orgId: string]: EncryptedOrganizationKeyData }>;\n  setEncryptedOrganizationKeys: (\n    value: { [orgId: string]: EncryptedOrganizationKeyData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setEncryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPinProtected: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPinProtected: (value: string, options?: StorageOptions) => Promise<void>;\n  getEncryptedPolicies: (options?: StorageOptions) => Promise<{ [id: string]: PolicyData }>;\n  setEncryptedPolicies: (\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPrivateKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPrivateKey: (value: string, options?: StorageOptions) => Promise<void>;\n  getEncryptedProviderKeys: (options?: StorageOptions) => Promise<any>;\n  setEncryptedProviderKeys: (value: any, options?: StorageOptions) => Promise<void>;\n  getEncryptedSends: (options?: StorageOptions) => Promise<{ [id: string]: SendData }>;\n  setEncryptedSends: (value: { [id: string]: SendData }, options?: StorageOptions) => Promise<void>;\n  getEntityId: (options?: StorageOptions) => Promise<string>;\n  setEntityId: (value: string, options?: StorageOptions) => Promise<void>;\n  getEntityType: (options?: StorageOptions) => Promise<any>;\n  setEntityType: (value: string, options?: StorageOptions) => Promise<void>;\n  getEnvironmentUrls: (options?: StorageOptions) => Promise<EnvironmentUrls>;\n  setEnvironmentUrls: (value: EnvironmentUrls, options?: StorageOptions) => Promise<void>;\n  getEquivalentDomains: (options?: StorageOptions) => Promise<any>;\n  setEquivalentDomains: (value: string, options?: StorageOptions) => Promise<void>;\n  getEventCollection: (options?: StorageOptions) => Promise<EventData[]>;\n  setEventCollection: (value: EventData[], options?: StorageOptions) => Promise<void>;\n  getEverBeenUnlocked: (options?: StorageOptions) => Promise<boolean>;\n  setEverBeenUnlocked: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getForcePasswordReset: (options?: StorageOptions) => Promise<boolean>;\n  setForcePasswordReset: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getInstalledVersion: (options?: StorageOptions) => Promise<string>;\n  setInstalledVersion: (value: string, options?: StorageOptions) => Promise<void>;\n  getIsAuthenticated: (options?: StorageOptions) => Promise<boolean>;\n  getKdfIterations: (options?: StorageOptions) => Promise<number>;\n  setKdfIterations: (value: number, options?: StorageOptions) => Promise<void>;\n  getKdfType: (options?: StorageOptions) => Promise<KdfType>;\n  setKdfType: (value: KdfType, options?: StorageOptions) => Promise<void>;\n  getKeyHash: (options?: StorageOptions) => Promise<string>;\n  setKeyHash: (value: string, options?: StorageOptions) => Promise<void>;\n  getLastActive: (options?: StorageOptions) => Promise<number>;\n  setLastActive: (value: number, options?: StorageOptions) => Promise<void>;\n  getLastSync: (options?: StorageOptions) => Promise<string>;\n  setLastSync: (value: string, options?: StorageOptions) => Promise<void>;\n  getLegacyEtmKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setLegacyEtmKey: (value: SymmetricCryptoKey, options?: StorageOptions) => Promise<void>;\n  getLocalData: (options?: StorageOptions) => Promise<any>;\n  setLocalData: (value: string, options?: StorageOptions) => Promise<void>;\n  getLocale: (options?: StorageOptions) => Promise<string>;\n  setLocale: (value: string, options?: StorageOptions) => Promise<void>;\n  getMainWindowSize: (options?: StorageOptions) => Promise<number>;\n  setMainWindowSize: (value: number, options?: StorageOptions) => Promise<void>;\n  getMinimizeOnCopyToClipboard: (options?: StorageOptions) => Promise<boolean>;\n  setMinimizeOnCopyToClipboard: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNeverDomains: (options?: StorageOptions) => Promise<{ [id: string]: any }>;\n  setNeverDomains: (value: { [id: string]: any }, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometrics: (options?: StorageOptions) => Promise<boolean>;\n  setNoAutoPromptBiometrics: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometricsText: (options?: StorageOptions) => Promise<string>;\n  setNoAutoPromptBiometricsText: (value: string, options?: StorageOptions) => Promise<void>;\n  getOpenAtLogin: (options?: StorageOptions) => Promise<boolean>;\n  setOpenAtLogin: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getOrganizationInvitation: (options?: StorageOptions) => Promise<any>;\n  setOrganizationInvitation: (value: any, options?: StorageOptions) => Promise<void>;\n  getOrganizations: (options?: StorageOptions) => Promise<{ [id: string]: OrganizationData }>;\n  setOrganizations: (\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getPasswordGenerationOptions: (options?: StorageOptions) => Promise<any>;\n  setPasswordGenerationOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getUsernameGenerationOptions: (options?: StorageOptions) => Promise<any>;\n  setUsernameGenerationOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getGeneratorOptions: (options?: StorageOptions) => Promise<any>;\n  setGeneratorOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getProtectedPin: (options?: StorageOptions) => Promise<string>;\n  setProtectedPin: (value: string, options?: StorageOptions) => Promise<void>;\n  getProviders: (options?: StorageOptions) => Promise<{ [id: string]: ProviderData }>;\n  setProviders: (value: { [id: string]: ProviderData }, options?: StorageOptions) => Promise<void>;\n  getPublicKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setPublicKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getRefreshToken: (options?: StorageOptions) => Promise<string>;\n  setRefreshToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getRememberedEmail: (options?: StorageOptions) => Promise<string>;\n  setRememberedEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getSecurityStamp: (options?: StorageOptions) => Promise<string>;\n  setSecurityStamp: (value: string, options?: StorageOptions) => Promise<void>;\n  getSettings: (options?: StorageOptions) => Promise<any>;\n  setSettings: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoCodeVerifier: (options?: StorageOptions) => Promise<string>;\n  setSsoCodeVerifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoOrgIdentifier: (options?: StorageOptions) => Promise<string>;\n  setSsoOrganizationIdentifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoState: (options?: StorageOptions) => Promise<string>;\n  setSsoState: (value: string, options?: StorageOptions) => Promise<void>;\n  getTheme: (options?: StorageOptions) => Promise<ThemeType>;\n  setTheme: (value: ThemeType, options?: StorageOptions) => Promise<void>;\n  getTwoFactorToken: (options?: StorageOptions) => Promise<string>;\n  setTwoFactorToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getUserId: (options?: StorageOptions) => Promise<string>;\n  getUsesKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setUsesKeyConnector: (vaule: boolean, options?: StorageOptions) => Promise<void>;\n  getVaultTimeout: (options?: StorageOptions) => Promise<number>;\n  setVaultTimeout: (value: number, options?: StorageOptions) => Promise<void>;\n  getVaultTimeoutAction: (options?: StorageOptions) => Promise<string>;\n  setVaultTimeoutAction: (value: string, options?: StorageOptions) => Promise<void>;\n  getStateVersion: () => Promise<number>;\n  setStateVersion: (value: number) => Promise<void>;\n  getWindow: () => Promise<WindowState>;\n  setWindow: (value: WindowState) => Promise<void>;\n}\n","import { DecryptParameters } from \"../models/domain/decryptParameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nexport abstract class CryptoFunctionService {\n  pbkdf2: (\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ) => Promise<ArrayBuffer>;\n  hkdf: (\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hkdfExpand: (\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hash: (\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ) => Promise<ArrayBuffer>;\n  hmac: (\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  compare: (a: ArrayBuffer, b: ArrayBuffer) => Promise<boolean>;\n  hmacFast: (\n    value: ArrayBuffer | string,\n    key: ArrayBuffer | string,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer | string>;\n  compareFast: (a: ArrayBuffer | string, b: ArrayBuffer | string) => Promise<boolean>;\n  aesEncrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  aesDecryptFastParameters: (\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ) => DecryptParameters<ArrayBuffer | string>;\n  aesDecryptFast: (parameters: DecryptParameters<ArrayBuffer | string>) => Promise<string>;\n  aesDecrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaEncrypt: (\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaDecrypt: (\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaExtractPublicKey: (privateKey: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaGenerateKeyPair: (length: 1024 | 2048 | 4096) => Promise<[ArrayBuffer, ArrayBuffer]>;\n  randomBytes: (length: number) => Promise<ArrayBuffer>;\n}\n","export enum HashPurpose {\n  ServerAuthorization = 1,\n  LocalAuthorization = 2,\n}\n","export enum KeySuffixOptions {\n  Auto = \"auto\",\n  Biometric = \"biometric\",\n}\n","export enum EncryptionType {\n  AesCbc256_B64 = 0,\n  AesCbc128_HmacSha256_B64 = 1,\n  AesCbc256_HmacSha256_B64 = 2,\n  Rsa2048_OaepSha256_B64 = 3,\n  Rsa2048_OaepSha1_B64 = 4,\n  Rsa2048_OaepSha256_HmacSha256_B64 = 5,\n  Rsa2048_OaepSha1_HmacSha256_B64 = 6,\n}\n","import { Component } from \"@angular/core\";\n\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"app-home\",\n  templateUrl: \"home.component.html\",\n})\nexport class HomeComponent {\n  constructor(\n    protected platformUtilsService: PlatformUtilsService,\n    private passwordGenerationService: PasswordGenerationService,\n    private stateService: StateService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private environmentService: EnvironmentService\n  ) {}\n\n  async launchSsoBrowser() {\n    // Generate necessary sso params\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n\n    const state =\n      (await this.passwordGenerationService.generatePassword(passwordOptions)) +\n      \":clientId=browser\";\n    const codeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const codeVerifierHash = await this.cryptoFunctionService.hash(codeVerifier, \"sha256\");\n    const codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n\n    await this.stateService.setSsoCodeVerifier(codeVerifier);\n    await this.stateService.setSsoState(state);\n\n    let url = this.environmentService.getWebVaultUrl();\n    if (url == null) {\n      url = \"https://vault.bitwarden.com\";\n    }\n\n    const redirectUri = url + \"/sso-connector.html\";\n\n    // Launch browser\n    this.platformUtilsService.launchUri(\n      url +\n        \"/#/sso?clientId=browser\" +\n        \"&redirectUri=\" +\n        encodeURIComponent(redirectUri) +\n        \"&state=\" +\n        state +\n        \"&codeChallenge=\" +\n        codeChallenge\n    );\n  }\n}\n","<div class=\"center-content\">\n  <div class=\"content\">\n    <div class=\"logo-image\"></div>\n    <p class=\"lead text-center\">{{ \"loginOrCreateNewAccount\" | i18n }}</p>\n    <a class=\"btn primary block\" routerLink=\"/login\"\n      ><b>{{ \"login\" | i18n }}</b></a\n    >\n    <button type=\"button\" (click)=\"launchSsoBrowser()\" class=\"btn block\">\n      <i class=\"bwi bwi-bank\" aria-hidden=\"true\"></i> {{ \"enterpriseSingleSignOn\" | i18n }}\n    </button>\n    <a class=\"btn block\" routerLink=\"/register\">{{ \"createAccount\" | i18n }}</a>\n  </div>\n</div>\n<a routerLink=\"/environment\" class=\"settings-icon\">\n  <i class=\"bwi bwi-cog-f bwi-lg\" aria-hidden=\"true\"></i><span>&nbsp;{{ \"settings\" | i18n }}</span>\n</a>\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EncryptionType } from \"../../enums/encryptionType\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncString {\n  encryptedString?: string;\n  encryptionType?: EncryptionType;\n  decryptedValue?: string;\n  data?: string;\n  iv?: string;\n  mac?: string;\n\n  constructor(\n    encryptedStringOrType: string | EncryptionType,\n    data?: string,\n    iv?: string,\n    mac?: string\n  ) {\n    if (data != null) {\n      // data and header\n      const encType = encryptedStringOrType as EncryptionType;\n\n      if (iv != null) {\n        this.encryptedString = encType + \".\" + iv + \"|\" + data;\n      } else {\n        this.encryptedString = encType + \".\" + data;\n      }\n\n      // mac\n      if (mac != null) {\n        this.encryptedString += \"|\" + mac;\n      }\n\n      this.encryptionType = encType;\n      this.data = data;\n      this.iv = iv;\n      this.mac = mac;\n\n      return;\n    }\n\n    this.encryptedString = encryptedStringOrType as string;\n    if (!this.encryptedString) {\n      return;\n    }\n\n    const headerPieces = this.encryptedString.split(\".\");\n    let encPieces: string[] = null;\n\n    if (headerPieces.length === 2) {\n      try {\n        this.encryptionType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        return;\n      }\n    } else {\n      encPieces = this.encryptedString.split(\"|\");\n      this.encryptionType =\n        encPieces.length === 3\n          ? EncryptionType.AesCbc128_HmacSha256_B64\n          : EncryptionType.AesCbc256_B64;\n    }\n\n    switch (this.encryptionType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64:\n        if (encPieces.length !== 3) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        this.mac = encPieces[2];\n        break;\n      case EncryptionType.AesCbc256_B64:\n        if (encPieces.length !== 2) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        break;\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n        if (encPieces.length !== 1) {\n          return;\n        }\n\n        this.data = encPieces[0];\n        break;\n      default:\n        return;\n    }\n  }\n\n  async decrypt(orgId: string, key: SymmetricCryptoKey = null): Promise<string> {\n    if (this.decryptedValue != null) {\n      return this.decryptedValue;\n    }\n\n    let cryptoService: CryptoService;\n    const containerService = (Utils.global as any).bitwardenContainerService;\n    if (containerService) {\n      cryptoService = containerService.getCryptoService();\n    } else {\n      throw new Error(\"global bitwardenContainerService not initialized.\");\n    }\n\n    try {\n      if (key == null) {\n        key = await cryptoService.getOrgKey(orgId);\n      }\n      this.decryptedValue = await cryptoService.decryptToUtf8(this, key);\n    } catch (e) {\n      this.decryptedValue = \"[error: cannot decrypt]\";\n    }\n    return this.decryptedValue;\n  }\n}\n","export class SecretVerificationRequest {\n  masterPasswordHash: string;\n  otp: string;\n}\n","import { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { ProfileOrganizationResponse } from \"../models/response/profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"../models/response/profileProviderResponse\";\n\nexport abstract class CryptoService {\n  setKey: (key: SymmetricCryptoKey) => Promise<any>;\n  setKeyHash: (keyHash: string) => Promise<void>;\n  setEncKey: (encKey: string) => Promise<void>;\n  setEncPrivateKey: (encPrivateKey: string) => Promise<void>;\n  setOrgKeys: (\n    orgs: ProfileOrganizationResponse[],\n    providerOrgs: ProfileProviderOrganizationResponse[]\n  ) => Promise<void>;\n  setProviderKeys: (orgs: ProfileProviderResponse[]) => Promise<void>;\n  getKey: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyFromStorage: (keySuffix: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyHash: () => Promise<string>;\n  compareAndUpdateKeyHash: (masterPassword: string, key: SymmetricCryptoKey) => Promise<boolean>;\n  getEncKey: (key?: SymmetricCryptoKey) => Promise<SymmetricCryptoKey>;\n  getPublicKey: () => Promise<ArrayBuffer>;\n  getPrivateKey: () => Promise<ArrayBuffer>;\n  getFingerprint: (userId: string, publicKey?: ArrayBuffer) => Promise<string[]>;\n  getOrgKeys: () => Promise<Map<string, SymmetricCryptoKey>>;\n  getOrgKey: (orgId: string) => Promise<SymmetricCryptoKey>;\n  getProviderKey: (providerId: string) => Promise<SymmetricCryptoKey>;\n  hasKey: () => Promise<boolean>;\n  hasKeyInMemory: (userId?: string) => Promise<boolean>;\n  hasKeyStored: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<boolean>;\n  hasEncKey: () => Promise<boolean>;\n  clearKey: (clearSecretStorage?: boolean, userId?: string) => Promise<any>;\n  clearKeyHash: () => Promise<any>;\n  clearEncKey: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearKeyPair: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearOrgKeys: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearProviderKeys: (memoryOnly?: boolean) => Promise<any>;\n  clearPinProtectedKey: () => Promise<any>;\n  clearKeys: (userId?: string) => Promise<any>;\n  toggleKey: () => Promise<any>;\n  makeKey: (\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ) => Promise<SymmetricCryptoKey>;\n  makeKeyFromPin: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    protectedKeyCs?: EncString\n  ) => Promise<SymmetricCryptoKey>;\n  makeShareKey: () => Promise<[EncString, SymmetricCryptoKey]>;\n  makeKeyPair: (key?: SymmetricCryptoKey) => Promise<[string, EncString]>;\n  makePinKey: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ) => Promise<SymmetricCryptoKey>;\n  makeSendKey: (keyMaterial: ArrayBuffer) => Promise<SymmetricCryptoKey>;\n  hashPassword: (\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ) => Promise<string>;\n  makeEncKey: (key: SymmetricCryptoKey) => Promise<[SymmetricCryptoKey, EncString]>;\n  remakeEncKey: (\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ) => Promise<[SymmetricCryptoKey, EncString]>;\n  encrypt: (plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncString>;\n  encryptToBytes: (plainValue: ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncArrayBuffer>;\n  rsaEncrypt: (data: ArrayBuffer, publicKey?: ArrayBuffer) => Promise<EncString>;\n  rsaDecrypt: (encValue: string, privateKeyValue?: ArrayBuffer) => Promise<ArrayBuffer>;\n  decryptToBytes: (encString: EncString, key?: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  decryptToUtf8: (encString: EncString, key?: SymmetricCryptoKey) => Promise<string>;\n  decryptFromBytes: (encBuf: ArrayBuffer, key: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  randomNumber: (min: number, max: number) => Promise<number>;\n  validateKey: (key: SymmetricCryptoKey) => Promise<boolean>;\n}\n","export abstract class VaultTimeoutService {\n  checkVaultTimeout: () => Promise<void>;\n  lock: (allowSoftLock?: boolean, userId?: string) => Promise<void>;\n  logOut: (userId?: string) => Promise<void>;\n  setVaultTimeoutOptions: (vaultTimeout: number, vaultTimeoutAction: string) => Promise<void>;\n  getVaultTimeout: () => Promise<number>;\n  isPinLockSet: () => Promise<[boolean, boolean]>;\n  isBiometricLockSet: () => Promise<boolean>;\n  clear: (userId?: string) => Promise<any>;\n}\n","import { Directive, NgZone, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { take } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout.service\";\nimport { HashPurpose } from \"@bitwarden/common/enums/hashPurpose\";\nimport { KeySuffixOptions } from \"@bitwarden/common/enums/keySuffixOptions\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secretVerificationRequest\";\n\n@Directive()\nexport class LockComponent implements OnInit {\n  masterPassword = \"\";\n  pin = \"\";\n  showPassword = false;\n  email: string;\n  pinLock = false;\n  webVaultHostname = \"\";\n  formPromise: Promise<any>;\n  supportsBiometric: boolean;\n  biometricLock: boolean;\n  biometricText: string;\n  hideInput: boolean;\n\n  protected successRoute = \"vault\";\n  protected onSuccessfulSubmit: () => Promise<void>;\n\n  private invalidPinAttempts = 0;\n  private pinSet: [boolean, boolean];\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected cryptoService: CryptoService,\n    protected vaultTimeoutService: VaultTimeoutService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected apiService: ApiService,\n    protected logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    protected ngZone: NgZone\n  ) {}\n\n  async ngOnInit() {\n    // Load the first and observe updates\n    await this.load();\n    this.stateService.activeAccount.subscribe(async () => {\n      await this.load();\n    });\n  }\n\n  async submit() {\n    if (this.pinLock && (this.pin == null || this.pin === \"\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"pinRequired\")\n      );\n      return;\n    }\n    if (!this.pinLock && (this.masterPassword == null || this.masterPassword === \"\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return;\n    }\n\n    const kdf = await this.stateService.getKdfType();\n    const kdfIterations = await this.stateService.getKdfIterations();\n\n    if (this.pinLock) {\n      let failed = true;\n      try {\n        if (this.pinSet[0]) {\n          const key = await this.cryptoService.makeKeyFromPin(\n            this.pin,\n            this.email,\n            kdf,\n            kdfIterations,\n            await this.stateService.getDecryptedPinProtected()\n          );\n          const encKey = await this.cryptoService.getEncKey(key);\n          const protectedPin = await this.stateService.getProtectedPin();\n          const decPin = await this.cryptoService.decryptToUtf8(\n            new EncString(protectedPin),\n            encKey\n          );\n          failed = decPin !== this.pin;\n          if (!failed) {\n            await this.setKeyAndContinue(key);\n          }\n        } else {\n          const key = await this.cryptoService.makeKeyFromPin(\n            this.pin,\n            this.email,\n            kdf,\n            kdfIterations\n          );\n          failed = false;\n          await this.setKeyAndContinue(key);\n        }\n      } catch {\n        failed = true;\n      }\n\n      if (failed) {\n        this.invalidPinAttempts++;\n        if (this.invalidPinAttempts >= 5) {\n          this.messagingService.send(\"logout\");\n          return;\n        }\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"invalidPin\")\n        );\n      }\n    } else {\n      const key = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.email,\n        kdf,\n        kdfIterations\n      );\n      const storedKeyHash = await this.cryptoService.getKeyHash();\n\n      let passwordValid = false;\n\n      if (storedKeyHash != null) {\n        passwordValid = await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, key);\n      } else {\n        const request = new SecretVerificationRequest();\n        const serverKeyHash = await this.cryptoService.hashPassword(\n          this.masterPassword,\n          key,\n          HashPurpose.ServerAuthorization\n        );\n        request.masterPasswordHash = serverKeyHash;\n        try {\n          this.formPromise = this.apiService.postAccountVerifyPassword(request);\n          await this.formPromise;\n          passwordValid = true;\n          const localKeyHash = await this.cryptoService.hashPassword(\n            this.masterPassword,\n            key,\n            HashPurpose.LocalAuthorization\n          );\n          await this.cryptoService.setKeyHash(localKeyHash);\n        } catch (e) {\n          this.logService.error(e);\n        }\n      }\n\n      if (passwordValid) {\n        if (this.pinSet[0]) {\n          const protectedPin = await this.stateService.getProtectedPin();\n          const encKey = await this.cryptoService.getEncKey(key);\n          const decPin = await this.cryptoService.decryptToUtf8(\n            new EncString(protectedPin),\n            encKey\n          );\n          const pinKey = await this.cryptoService.makePinKey(\n            decPin,\n            this.email,\n            kdf,\n            kdfIterations\n          );\n          await this.stateService.setDecryptedPinProtected(\n            await this.cryptoService.encrypt(key.key, pinKey)\n          );\n        }\n        await this.setKeyAndContinue(key);\n      } else {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"invalidMasterPassword\")\n        );\n      }\n    }\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  async unlockBiometric(): Promise<boolean> {\n    if (!this.biometricLock) {\n      return;\n    }\n\n    const success = (await this.cryptoService.getKey(KeySuffixOptions.Biometric)) != null;\n\n    if (success) {\n      await this.doContinue();\n    }\n\n    return success;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    const input = document.getElementById(this.pinLock ? \"pin\" : \"masterPassword\");\n    if (this.ngZone.isStable) {\n      input.focus();\n    } else {\n      this.ngZone.onStable.pipe(take(1)).subscribe(() => input.focus());\n    }\n  }\n\n  private async setKeyAndContinue(key: SymmetricCryptoKey) {\n    await this.cryptoService.setKey(key);\n    await this.doContinue();\n  }\n\n  private async doContinue() {\n    await this.stateService.setBiometricLocked(false);\n    await this.stateService.setEverBeenUnlocked(true);\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    this.messagingService.send(\"unlocked\");\n    if (this.onSuccessfulSubmit != null) {\n      await this.onSuccessfulSubmit();\n    } else if (this.router != null) {\n      this.router.navigate([this.successRoute]);\n    }\n  }\n\n  private async load() {\n    this.pinSet = await this.vaultTimeoutService.isPinLockSet();\n    this.pinLock =\n      (this.pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) ||\n      this.pinSet[1];\n    this.supportsBiometric = await this.platformUtilsService.supportsBiometric();\n    this.biometricLock =\n      (await this.vaultTimeoutService.isBiometricLockSet()) &&\n      ((await this.cryptoService.hasKeyStored(KeySuffixOptions.Biometric)) ||\n        !this.platformUtilsService.supportsSecureStorage());\n    this.biometricText = await this.stateService.getBiometricText();\n    this.email = await this.stateService.getEmail();\n    const usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.hideInput = usesKeyConnector && !this.pinLock;\n\n    // Users with key connector and without biometric or pin has no MP to unlock using\n    if (usesKeyConnector && !(this.biometricLock || this.pinLock)) {\n      await this.vaultTimeoutService.logOut();\n    }\n\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n    const vaultUrl =\n      webVaultUrl === \"https://vault.bitwarden.com\" ? \"https://bitwarden.com\" : webVaultUrl;\n    this.webVaultHostname = Utils.getHostname(vaultUrl);\n  }\n}\n","type BiometricError = {\n  title: string;\n  description: string;\n};\n\nexport type BiometricErrorTypes = \"startDesktop\" | \"desktopIntegrationDisabled\";\n\nexport const BiometricErrors: Record<BiometricErrorTypes, BiometricError> = {\n  startDesktop: {\n    title: \"startDesktopTitle\",\n    description: \"startDesktopDesc\",\n  },\n  desktopIntegrationDisabled: {\n    title: \"desktopIntegrationDisabledTitle\",\n    description: \"desktopIntegrationDisabledDesc\",\n  },\n};\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopClick]\",\n})\nexport class StopClickDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.preventDefault();\n  }\n}\n","export class BrowserApi {\n  static isWebExtensionsApi: boolean = typeof browser !== \"undefined\";\n  static isSafariApi: boolean =\n    navigator.userAgent.indexOf(\" Safari/\") !== -1 &&\n    navigator.userAgent.indexOf(\" Chrome/\") === -1 &&\n    navigator.userAgent.indexOf(\" Chromium/\") === -1;\n  static isChromeApi: boolean = !BrowserApi.isSafariApi && typeof chrome !== \"undefined\";\n  static isFirefoxOnAndroid: boolean =\n    navigator.userAgent.indexOf(\"Firefox/\") !== -1 && navigator.userAgent.indexOf(\"Android\") !== -1;\n\n  static async getTabFromCurrentWindowId(): Promise<chrome.tabs.Tab> | null {\n    return await BrowserApi.tabsQueryFirst({\n      active: true,\n      windowId: chrome.windows.WINDOW_ID_CURRENT,\n    });\n  }\n\n  static async getTabFromCurrentWindow(): Promise<chrome.tabs.Tab> | null {\n    return await BrowserApi.tabsQueryFirst({\n      active: true,\n      currentWindow: true,\n    });\n  }\n\n  static async getActiveTabs(): Promise<chrome.tabs.Tab[]> {\n    return await BrowserApi.tabsQuery({\n      active: true,\n    });\n  }\n\n  static async tabsQuery(options: chrome.tabs.QueryInfo): Promise<chrome.tabs.Tab[]> {\n    return new Promise((resolve) => {\n      chrome.tabs.query(options, (tabs: any[]) => {\n        resolve(tabs);\n      });\n    });\n  }\n\n  static async tabsQueryFirst(options: chrome.tabs.QueryInfo): Promise<chrome.tabs.Tab> | null {\n    const tabs = await BrowserApi.tabsQuery(options);\n    if (tabs.length > 0) {\n      return tabs[0];\n    }\n\n    return null;\n  }\n\n  static tabSendMessageData(\n    tab: chrome.tabs.Tab,\n    command: string,\n    data: any = null\n  ): Promise<any[]> {\n    const obj: any = {\n      command: command,\n    };\n\n    if (data != null) {\n      obj.data = data;\n    }\n\n    return BrowserApi.tabSendMessage(tab, obj);\n  }\n\n  static async tabSendMessage(\n    tab: chrome.tabs.Tab,\n    obj: any,\n    options: chrome.tabs.MessageSendOptions = null\n  ): Promise<any> {\n    if (!tab || !tab.id) {\n      return;\n    }\n\n    return new Promise<void>((resolve) => {\n      chrome.tabs.sendMessage(tab.id, obj, options, () => {\n        if (chrome.runtime.lastError) {\n          // Some error happened\n        }\n        resolve();\n      });\n    });\n  }\n\n  static async getPrivateModeWindows(): Promise<browser.windows.Window[]> {\n    return (await browser.windows.getAll()).filter((win) => win.incognito);\n  }\n\n  static async onWindowCreated(callback: (win: chrome.windows.Window) => any) {\n    return chrome.windows.onCreated.addListener(callback);\n  }\n\n  static getBackgroundPage(): any {\n    return chrome.extension.getBackgroundPage();\n  }\n\n  static getApplicationVersion(): string {\n    return chrome.runtime.getManifest().version;\n  }\n\n  static async isPopupOpen(): Promise<boolean> {\n    return Promise.resolve(chrome.extension.getViews({ type: \"popup\" }).length > 0);\n  }\n\n  static createNewTab(url: string, extensionPage = false, active = true) {\n    chrome.tabs.create({ url: url, active: active });\n  }\n\n  static messageListener(\n    name: string,\n    callback: (message: any, sender: chrome.runtime.MessageSender, response: any) => void\n  ) {\n    chrome.runtime.onMessage.addListener(\n      (msg: any, sender: chrome.runtime.MessageSender, response: any) => {\n        callback(msg, sender, response);\n      }\n    );\n  }\n\n  static async closeLoginTab() {\n    const tabs = await BrowserApi.tabsQuery({\n      active: true,\n      title: \"Bitwarden\",\n      windowType: \"normal\",\n      currentWindow: true,\n    });\n\n    if (tabs.length === 0) {\n      return;\n    }\n\n    const tabToClose = tabs[tabs.length - 1].id;\n    chrome.tabs.remove(tabToClose);\n  }\n\n  static async focusSpecifiedTab(tabId: number) {\n    chrome.tabs.update(tabId, { active: true, highlighted: true });\n  }\n\n  static closePopup(win: Window) {\n    if (BrowserApi.isWebExtensionsApi && BrowserApi.isFirefoxOnAndroid) {\n      // Reactivating the active tab dismisses the popup tab. The promise final\n      // condition is only called if the popup wasn't already dismissed (future proofing).\n      // ref: https://bugzilla.mozilla.org/show_bug.cgi?id=1433604\n      browser.tabs.update({ active: true }).finally(win.close);\n    } else {\n      win.close();\n    }\n  }\n\n  static gaFilter() {\n    return process.env.ENV !== \"production\";\n  }\n\n  static getUILanguage(win: Window) {\n    return chrome.i18n.getUILanguage();\n  }\n\n  static reloadExtension(win: Window) {\n    if (win != null) {\n      return win.location.reload(true);\n    } else {\n      return chrome.runtime.reload();\n    }\n  }\n\n  static reloadOpenWindows() {\n    const views = chrome.extension.getViews() as Window[];\n    views\n      .filter((w) => w.location.href != null)\n      .forEach((w) => {\n        w.location.reload();\n      });\n  }\n\n  static connectNative(application: string): browser.runtime.Port | chrome.runtime.Port {\n    if (BrowserApi.isWebExtensionsApi) {\n      return browser.runtime.connectNative(application);\n    } else if (BrowserApi.isChromeApi) {\n      return chrome.runtime.connectNative(application);\n    }\n  }\n\n  static requestPermission(permission: any) {\n    if (BrowserApi.isWebExtensionsApi) {\n      return browser.permissions.request(permission);\n    }\n    return new Promise((resolve, reject) => {\n      chrome.permissions.request(permission, resolve);\n    });\n  }\n\n  static getPlatformInfo(): Promise<browser.runtime.PlatformInfo | chrome.runtime.PlatformInfo> {\n    if (BrowserApi.isWebExtensionsApi) {\n      return browser.runtime.getPlatformInfo();\n    }\n    return new Promise((resolve) => {\n      chrome.runtime.getPlatformInfo(resolve);\n    });\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\n\n@Injectable()\nexport class PopupUtilsService {\n  constructor(private privateMode: boolean = false) {}\n\n  inSidebar(win: Window): boolean {\n    return win.location.search !== \"\" && win.location.search.indexOf(\"uilocation=sidebar\") > -1;\n  }\n\n  inTab(win: Window): boolean {\n    return win.location.search !== \"\" && win.location.search.indexOf(\"uilocation=tab\") > -1;\n  }\n\n  inPopout(win: Window): boolean {\n    return win.location.search !== \"\" && win.location.search.indexOf(\"uilocation=popout\") > -1;\n  }\n\n  inPopup(win: Window): boolean {\n    return (\n      win.location.search === \"\" ||\n      win.location.search.indexOf(\"uilocation=\") === -1 ||\n      win.location.search.indexOf(\"uilocation=popup\") > -1\n    );\n  }\n\n  inPrivateMode(): boolean {\n    return this.privateMode;\n  }\n\n  getContentScrollY(win: Window, scrollingContainer = \"main\"): number {\n    const content = win.document.getElementsByTagName(scrollingContainer)[0];\n    return content.scrollTop;\n  }\n\n  setContentScrollY(win: Window, scrollY: number, scrollingContainer = \"main\"): void {\n    if (scrollY != null) {\n      const content = win.document.getElementsByTagName(scrollingContainer)[0];\n      content.scrollTop = scrollY;\n    }\n  }\n\n  popOut(win: Window, href: string = null): void {\n    if (href === null) {\n      href = win.location.href;\n    }\n\n    if (typeof chrome !== \"undefined\" && chrome.windows && chrome.windows.create) {\n      if (href.indexOf(\"?uilocation=\") > -1) {\n        href = href\n          .replace(\"uilocation=popup\", \"uilocation=popout\")\n          .replace(\"uilocation=tab\", \"uilocation=popout\")\n          .replace(\"uilocation=sidebar\", \"uilocation=popout\");\n      } else {\n        const hrefParts = href.split(\"#\");\n        href =\n          hrefParts[0] + \"?uilocation=popout\" + (hrefParts.length > 0 ? \"#\" + hrefParts[1] : \"\");\n      }\n\n      const bodyRect = document.querySelector(\"body\").getBoundingClientRect();\n      chrome.windows.create({\n        url: href,\n        type: \"popup\",\n        width: Math.round(bodyRect.width ? bodyRect.width + 60 : 375),\n        height: Math.round(bodyRect.height || 600),\n      });\n\n      if (this.inPopup(win)) {\n        BrowserApi.closePopup(win);\n      }\n    } else if (typeof chrome !== \"undefined\" && chrome.tabs && chrome.tabs.create) {\n      href = href\n        .replace(\"uilocation=popup\", \"uilocation=tab\")\n        .replace(\"uilocation=popout\", \"uilocation=tab\")\n        .replace(\"uilocation=sidebar\", \"uilocation=tab\");\n      chrome.tabs.create({\n        url: href,\n      });\n    }\n  }\n}\n","import { View } from \"../view/view\";\n\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport default class Domain {\n  protected buildDomainModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = dataObj[map[prop] || prop];\n      if (notEncList.indexOf(prop) > -1) {\n        (domain as any)[prop] = objProp ? objProp : null;\n      } else {\n        (domain as any)[prop] = objProp ? new EncString(objProp) : null;\n      }\n    }\n  }\n  protected buildDataModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncStringList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = (domain as any)[map[prop] || prop];\n      if (notEncStringList.indexOf(prop) > -1) {\n        (dataObj as any)[prop] = objProp != null ? objProp : null;\n      } else {\n        (dataObj as any)[prop] = objProp != null ? (objProp as EncString).encryptedString : null;\n      }\n    }\n  }\n\n  protected async decryptObj<T extends View>(\n    viewModel: T,\n    map: any,\n    orgId: string,\n    key: SymmetricCryptoKey = null\n  ): Promise<T> {\n    const promises = [];\n    const self: any = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp) {\n        const p = Promise.resolve()\n          .then(() => {\n            const mapProp = map[theProp] || theProp;\n            if (self[mapProp]) {\n              return self[mapProp].decrypt(orgId, key);\n            }\n            return null;\n          })\n          .then((val: any) => {\n            (viewModel as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop);\n    }\n\n    await Promise.all(promises);\n    return viewModel;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class MasterPasswordPolicyOptions extends Domain {\n  minComplexity = 0;\n  minLength = 0;\n  requireUpper = false;\n  requireLower = false;\n  requireNumbers = false;\n  requireSpecial = false;\n}\n","<div\n  #callout\n  class=\"callout callout-{{ calloutStyle }}\"\n  [ngClass]=\"{ clickable: clickable }\"\n  [attr.role]=\"useAlertRole ? 'alert' : null\"\n>\n  <h3 class=\"callout-heading\" *ngIf=\"title\">\n    <i class=\"bwi {{ icon }}\" *ngIf=\"icon\" aria-hidden=\"true\"></i>\n    {{ title }}\n  </h3>\n  <div class=\"enforced-policy-options\" *ngIf=\"enforcedPolicyOptions\">\n    {{ enforcedPolicyMessage }}\n    <ul>\n      <li *ngIf=\"enforcedPolicyOptions?.minComplexity > 0\">\n        {{ \"policyInEffectMinComplexity\" | i18n: getPasswordScoreAlertDisplay() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.minLength > 0\">\n        {{ \"policyInEffectMinLength\" | i18n: enforcedPolicyOptions?.minLength.toString() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireUpper\">\n        {{ \"policyInEffectUppercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireLower\">\n        {{ \"policyInEffectLowercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireNumbers\">\n        {{ \"policyInEffectNumbers\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireSpecial\">\n        {{ \"policyInEffectSpecial\" | i18n: \"!@#$%^&*\" }}\n      </li>\n    </ul>\n  </div>\n  <ng-content></ng-content>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\n\n@Component({\n  selector: \"app-callout\",\n  templateUrl: \"callout.component.html\",\n})\nexport class CalloutComponent implements OnInit {\n  @Input() type = \"info\";\n  @Input() icon: string;\n  @Input() title: string;\n  @Input() clickable: boolean;\n  @Input() enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  @Input() enforcedPolicyMessage: string;\n  @Input() useAlertRole = false;\n\n  calloutStyle: string;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnInit() {\n    this.calloutStyle = this.type;\n\n    if (this.enforcedPolicyMessage === undefined) {\n      this.enforcedPolicyMessage = this.i18nService.t(\"masterPasswordPolicyInEffect\");\n    }\n\n    if (this.type === \"warning\" || this.type === \"danger\") {\n      if (this.type === \"danger\") {\n        this.calloutStyle = \"danger\";\n      }\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"warning\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-exclamation-triangle\";\n      }\n    } else if (this.type === \"error\") {\n      this.calloutStyle = \"danger\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"error\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-error\";\n      }\n    } else if (this.type === \"tip\") {\n      this.calloutStyle = \"success\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"tip\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-lightbulb\";\n      }\n    }\n  }\n\n  getPasswordScoreAlertDisplay() {\n    if (this.enforcedPolicyOptions == null) {\n      return \"\";\n    }\n\n    let str: string;\n    switch (this.enforcedPolicyOptions.minComplexity) {\n      case 4:\n        str = this.i18nService.t(\"strong\");\n        break;\n      case 3:\n        str = this.i18nService.t(\"good\");\n        break;\n      default:\n        str = this.i18nService.t(\"weak\");\n        break;\n    }\n    return str + \" (\" + this.enforcedPolicyOptions.minComplexity + \")\";\n  }\n}\n","<app-callout type=\"warning\" *ngIf=\"showWarning\">\n  {{ \"privateModeWarning\" | i18n }}\n  <a href=\"https://bitwarden.com/help/article/private-mode/\" target=\"_blank\" rel=\"noopener\">{{\n    \"learnMore\" | i18n\n  }}</a>\n</app-callout>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\n@Component({\n  selector: \"app-private-mode-warning\",\n  templateUrl: \"private-mode-warning.component.html\",\n})\nexport class PrivateModeWarningComponent implements OnInit {\n  showWarning = false;\n\n  constructor(private popupUtilsService: PopupUtilsService) {}\n\n  ngOnInit() {\n    this.showWarning = this.popupUtilsService.inPrivateMode();\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appA11yTitle]\",\n})\nexport class A11yTitleDirective {\n  @Input() set appA11yTitle(title: string) {\n    this.title = title;\n  }\n\n  private title: string;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (!this.el.nativeElement.hasAttribute(\"title\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"title\", this.title);\n    }\n    if (!this.el.nativeElement.hasAttribute(\"aria-label\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"aria-label\", this.title);\n    }\n  }\n}\n","<form (ngSubmit)=\"submit()\">\n  <header>\n    <div class=\"left\"></div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"verifyIdentity\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick *ngIf=\"!hideInput\">{{ \"unlock\" | i18n }}</button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-flex\" appBoxRow *ngIf=\"!hideInput\">\n          <div class=\"row-main\" *ngIf=\"pinLock\">\n            <label for=\"pin\">{{ \"pin\" | i18n }}</label>\n            <input\n              id=\"pin\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"PIN\"\n              class=\"monospaced\"\n              [(ngModel)]=\"pin\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"row-main\" *ngIf=\"!pinLock\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <input\n              id=\"masterPassword\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"MasterPassword\"\n              class=\"monospaced\"\n              [(ngModel)]=\"masterPassword\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appBlurClick\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        <p>{{ \"yourVaultIsLocked\" | i18n }}</p>\n        {{ \"loggedInAsOn\" | i18n: email:webVaultHostname }}\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"biometricLock\">\n      <div class=\"box-footer\">\n        <button\n          type=\"button\"\n          class=\"btn primary block\"\n          (click)=\"unlockBiometric()\"\n          appStopClick\n          [disabled]=\"pendingBiometric\"\n        >\n          {{ \"unlockWithBiometrics\" | i18n }}\n        </button>\n      </div>\n    </div>\n    <p class=\"text-center\">\n      <button type=\"button\" appStopClick (click)=\"logOut()\">{{ \"logOut\" | i18n }}</button>\n    </p>\n    <app-private-mode-warning></app-private-mode-warning>\n    <app-callout *ngIf=\"biometricError\" type=\"error\">{{ biometricError }}</app-callout>\n    <p class=\"text-center text-muted\" *ngIf=\"pendingBiometric\">\n      <i class=\"bwi bwi-spinner bwi-spin\" aria-hidden=\"true\"></i> {{ \"awaitDesktop\" | i18n }}\n    </p>\n  </main>\n</form>\n","import { Component, NgZone } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { LockComponent as BaseLockComponent } from \"@bitwarden/angular/components/lock.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\nimport { BiometricErrors, BiometricErrorTypes } from \"../../models/biometricErrors\";\n\n@Component({\n  selector: \"app-lock\",\n  templateUrl: \"lock.component.html\",\n})\nexport class LockComponent extends BaseLockComponent {\n  private isInitialLockScreen: boolean;\n\n  biometricError: string;\n  pendingBiometric = false;\n\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    cryptoService: CryptoService,\n    vaultTimeoutService: VaultTimeoutService,\n    environmentService: EnvironmentService,\n    stateService: StateService,\n    apiService: ApiService,\n    logService: LogService,\n    keyConnectorService: KeyConnectorService,\n    ngZone: NgZone,\n    private authService: AuthService\n  ) {\n    super(\n      router,\n      i18nService,\n      platformUtilsService,\n      messagingService,\n      cryptoService,\n      vaultTimeoutService,\n      environmentService,\n      stateService,\n      apiService,\n      logService,\n      keyConnectorService,\n      ngZone\n    );\n    this.successRoute = \"/tabs/current\";\n    this.isInitialLockScreen = (window as any).previousPopupUrl == null;\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    const disableAutoBiometricsPrompt =\n      (await this.stateService.getDisableAutoBiometricsPrompt()) ?? true;\n\n    window.setTimeout(async () => {\n      document.getElementById(this.pinLock ? \"pin\" : \"masterPassword\").focus();\n      if (\n        this.biometricLock &&\n        !disableAutoBiometricsPrompt &&\n        this.isInitialLockScreen &&\n        (await this.authService.getAuthStatus()) === AuthenticationStatus.Locked\n      ) {\n        await this.unlockBiometric();\n      }\n    }, 100);\n  }\n\n  async unlockBiometric(): Promise<boolean> {\n    if (!this.biometricLock) {\n      return;\n    }\n\n    this.pendingBiometric = true;\n    this.biometricError = null;\n\n    let success;\n    try {\n      success = await super.unlockBiometric();\n    } catch (e) {\n      const error = BiometricErrors[e as BiometricErrorTypes];\n\n      if (error == null) {\n        this.logService.error(\"Unknown error: \" + e);\n      }\n\n      this.biometricError = this.i18nService.t(error.description);\n    }\n    this.pendingBiometric = false;\n\n    return success;\n  }\n}\n","export enum AuthenticationType {\n  Password = 0,\n  Sso = 1,\n  Api = 2,\n}\n","import { AuthenticationType } from \"../../enums/authenticationType\";\nimport { TokenRequestTwoFactor } from \"../request/identityToken/tokenRequestTwoFactor\";\n\nexport class PasswordLogInCredentials {\n  readonly type = AuthenticationType.Password;\n\n  constructor(\n    public email: string,\n    public masterPassword: string,\n    public captchaToken?: string,\n    public twoFactor?: TokenRequestTwoFactor\n  ) {}\n}\n\nexport class SsoLogInCredentials {\n  readonly type = AuthenticationType.Sso;\n\n  constructor(\n    public code: string,\n    public codeVerifier: string,\n    public redirectUrl: string,\n    public orgId: string,\n    public twoFactor?: TokenRequestTwoFactor\n  ) {}\n}\n\nexport class ApiLogInCredentials {\n  readonly type = AuthenticationType.Api;\n\n  constructor(public clientId: string, public clientSecret: string) {}\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\n\nimport { IFrameComponent } from \"./iframe_component\";\n\nexport class CaptchaIFrame extends IFrameComponent {\n  constructor(\n    win: Window,\n    webVaultUrl: string,\n    private i18nService: I18nService,\n    successCallback: (message: string) => any,\n    errorCallback: (message: string) => any,\n    infoCallback: (message: string) => any\n  ) {\n    super(\n      win,\n      webVaultUrl,\n      \"captcha-connector.html\",\n      \"hcaptcha_iframe\",\n      successCallback,\n      errorCallback,\n      (message: string) => {\n        const parsedMessage = JSON.parse(message);\n        if (typeof parsedMessage !== \"string\") {\n          this.iframe.height = parsedMessage.height.toString();\n          this.iframe.width = parsedMessage.width.toString();\n        } else {\n          infoCallback(parsedMessage);\n        }\n      }\n    );\n  }\n\n  init(siteKey: string): void {\n    super.initComponent(\n      this.createParams({ siteKey: siteKey, locale: this.i18nService.translationLocale }, 1)\n    );\n  }\n}\n","export abstract class IFrameComponent {\n  iframe: HTMLIFrameElement;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    protected webVaultUrl: string,\n    private path: string,\n    private iframeId: string,\n    public successCallback?: (message: string) => any,\n    public errorCallback?: (message: string) => any,\n    public infoCallback?: (message: string) => any\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  protected createParams(data: any, version: number) {\n    return new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      v: version.toString(),\n    });\n  }\n\n  protected initComponent(params: URLSearchParams): void {\n    this.connectorLink.href = `${this.webVaultUrl}/${this.path}?${params}`;\n    this.iframe = this.win.document.getElementById(this.iframeId) as HTMLIFrameElement;\n    this.iframe.src = this.connectorLink.href;\n\n    this.win.addEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","import { Directive, Input } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CaptchaIFrame } from \"@bitwarden/common/misc/captcha_iframe\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Directive()\nexport abstract class CaptchaProtectedComponent {\n  @Input() captchaSiteKey: string = null;\n  captchaToken: string = null;\n  captcha: CaptchaIFrame;\n\n  constructor(\n    protected environmentService: EnvironmentService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async setupCaptcha() {\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n\n    this.captcha = new CaptchaIFrame(\n      window,\n      webVaultUrl,\n      this.i18nService,\n      (token: string) => {\n        this.captchaToken = token;\n      },\n      (error: string) => {\n        this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n      },\n      (info: string) => {\n        this.platformUtilsService.showToast(\"info\", this.i18nService.t(\"info\"), info);\n      }\n    );\n  }\n\n  showCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  protected handleCaptchaRequired(response: { captchaSiteKey: string }): boolean {\n    if (Utils.isNullOrWhitespace(response.captchaSiteKey)) {\n      return false;\n    }\n\n    this.captchaSiteKey = response.captchaSiteKey;\n    this.captcha.init(response.captchaSiteKey);\n    return true;\n  }\n}\n","import { Directive, Input, NgZone, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { take } from \"rxjs/operators\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { AuthResult } from \"@bitwarden/common/models/domain/authResult\";\nimport { PasswordLogInCredentials } from \"@bitwarden/common/models/domain/logInCredentials\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class LoginComponent extends CaptchaProtectedComponent implements OnInit {\n  @Input() email = \"\";\n  @Input() rememberEmail = true;\n\n  masterPassword = \"\";\n  showPassword = false;\n  formPromise: Promise<AuthResult>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"vault\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  protected alwaysRememberEmail = false;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    protected stateService: StateService,\n    environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected logService: LogService,\n    protected ngZone: NgZone\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n  }\n\n  async ngOnInit() {\n    if (this.email == null || this.email === \"\") {\n      this.email = await this.stateService.getRememberedEmail();\n      if (this.email == null) {\n        this.email = \"\";\n      }\n    }\n    if (!this.alwaysRememberEmail) {\n      this.rememberEmail = (await this.stateService.getRememberedEmail()) != null;\n    }\n    if (Utils.isBrowser && !Utils.isNode) {\n      this.focusInput();\n    }\n  }\n\n  async submit() {\n    await this.setupCaptcha();\n\n    if (this.email == null || this.email === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"emailRequired\")\n      );\n      return;\n    }\n    if (this.email.indexOf(\"@\") === -1) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return;\n    }\n\n    try {\n      const credentials = new PasswordLogInCredentials(\n        this.email,\n        this.masterPassword,\n        this.captchaToken,\n        null\n      );\n      this.formPromise = this.authService.logIn(credentials);\n      const response = await this.formPromise;\n      if (this.rememberEmail || this.alwaysRememberEmail) {\n        await this.stateService.setRememberedEmail(this.email);\n      } else {\n        await this.stateService.setRememberedEmail(null);\n      }\n      if (this.handleCaptchaRequired(response)) {\n        return;\n      } else if (response.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute]);\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    if (this.ngZone.isStable) {\n      document.getElementById(\"masterPassword\").focus();\n    } else {\n      this.ngZone.onStable\n        .pipe(take(1))\n        .subscribe(() => document.getElementById(\"masterPassword\").focus());\n    }\n  }\n\n  async launchSsoBrowser(clientId: string, ssoRedirectUri: string) {\n    // Generate necessary sso params\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n    const state = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const ssoCodeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const codeVerifierHash = await this.cryptoFunctionService.hash(ssoCodeVerifier, \"sha256\");\n    const codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n\n    // Save sso params\n    await this.stateService.setSsoState(state);\n    await this.stateService.setSsoCodeVerifier(ssoCodeVerifier);\n\n    // Build URI\n    const webUrl = this.environmentService.getWebVaultUrl();\n\n    // Launch browser\n    this.platformUtilsService.launchUri(\n      webUrl +\n        \"/#/sso?clientId=\" +\n        clientId +\n        \"&redirectUri=\" +\n        encodeURIComponent(ssoRedirectUri) +\n        \"&state=\" +\n        state +\n        \"&codeChallenge=\" +\n        codeChallenge\n    );\n  }\n\n  protected focusInput() {\n    document\n      .getElementById(this.email == null || this.email === \"\" ? \"email\" : \"masterPassword\")\n      .focus();\n  }\n}\n","import {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notificationResponse\";\n\nexport abstract class SyncService {\n  syncInProgress: boolean;\n\n  getLastSync: () => Promise<Date>;\n  setLastSync: (date: Date, userId?: string) => Promise<any>;\n  fullSync: (forceSync: boolean, allowThrowOnError?: boolean) => Promise<boolean>;\n  syncUpsertFolder: (notification: SyncFolderNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteFolder: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertCipher: (notification: SyncCipherNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteCipher: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertSend: (notification: SyncSendNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteSend: (notification: SyncSendNotification) => Promise<boolean>;\n}\n","import { Component, NgZone } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { LoginComponent as BaseLoginComponent } from \"@bitwarden/angular/components/login.component\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"login.component.html\",\n})\nexport class LoginComponent extends BaseLoginComponent {\n  protected alwaysRememberEmail = true;\n\n  constructor(\n    authService: AuthService,\n    router: Router,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected stateService: StateService,\n    protected environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    syncService: SyncService,\n    logService: LogService,\n    ngZone: NgZone\n  ) {\n    super(\n      authService,\n      router,\n      platformUtilsService,\n      i18nService,\n      stateService,\n      environmentService,\n      passwordGenerationService,\n      cryptoFunctionService,\n      logService,\n      ngZone\n    );\n    super.onSuccessfulLogin = async () => {\n      await syncService.fullSync(true);\n    };\n    super.successRoute = \"/tabs/vault\";\n  }\n\n  settings() {\n    this.router.navigate([\"environment\"]);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/home\">{{ \"cancel\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"appName\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"login\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n          <input\n            id=\"email\"\n            type=\"text\"\n            name=\"Email\"\n            [(ngModel)]=\"email\"\n            required\n            inputmode=\"email\"\n            appInputVerbatim=\"false\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n          <div class=\"row-main\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <input\n              id=\"masterPassword\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"MasterPassword\"\n              class=\"monospaced\"\n              [(ngModel)]=\"masterPassword\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appBlurClick\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"box-content-row\" [hidden]=\"!showCaptcha()\">\n          <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n        </div>\n      </div>\n    </div>\n    <p class=\"text-center\">\n      <a routerLink=\"/hint\">{{ \"getMasterPasswordHint\" | i18n }}</a>\n    </p>\n    <app-private-mode-warning></app-private-mode-warning>\n  </main>\n</form>\n","import { AbstractControl, FormGroup, ValidatorFn } from \"@angular/forms\";\n\nimport { FormGroupControls } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\n\nexport class InputsFieldMatch {\n  //check to ensure two fields do not have the same value\n  static validateInputsDoesntMatch(matchTo: string, errorMessage: string): ValidatorFn {\n    return (control: AbstractControl) => {\n      if (control.parent && control.parent.controls) {\n        return control?.value === (control?.parent?.controls as FormGroupControls)[matchTo].value\n          ? {\n              inputsMatchError: {\n                message: errorMessage,\n              },\n            }\n          : null;\n      }\n\n      return null;\n    };\n  }\n\n  //check to ensure two fields have the same value\n  static validateInputsMatch(matchTo: string, errorMessage: string): ValidatorFn {\n    return (control: AbstractControl) => {\n      if (control.parent && control.parent.controls) {\n        return control?.value === (control?.parent?.controls as FormGroupControls)[matchTo].value\n          ? null\n          : {\n              inputsDoesntMatchError: {\n                message: errorMessage,\n              },\n            };\n      }\n\n      return null;\n    };\n  }\n\n  //checks the formGroup if two fields have the same value and validation is controlled from either field\n  static validateFormInputsMatch(field: string, fieldMatchTo: string, errorMessage: string) {\n    return (formGroup: FormGroup) => {\n      const fieldCtrl = formGroup.controls[field];\n      const fieldMatchToCtrl = formGroup.controls[fieldMatchTo];\n\n      if (fieldCtrl.value !== fieldMatchToCtrl.value) {\n        fieldMatchToCtrl.setErrors({\n          inputsDoesntMatchError: {\n            message: errorMessage,\n          },\n        });\n      } else {\n        fieldMatchToCtrl.setErrors(null);\n      }\n    };\n  }\n}\n","export enum KdfType {\n  PBKDF2_SHA256 = 0,\n}\n\nexport const DEFAULT_KDF_TYPE = KdfType.PBKDF2_SHA256;\nexport const DEFAULT_KDF_ITERATIONS = 100000;\nexport const SEND_KDF_ITERATIONS = 100000;\n","export class KeysRequest {\n  publicKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(publicKey: string, encryptedPrivateKey: string) {\n    this.publicKey = publicKey;\n    this.encryptedPrivateKey = encryptedPrivateKey;\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { CaptchaProtectedRequest } from \"./captchaProtectedRequest\";\nimport { KeysRequest } from \"./keysRequest\";\nimport { ReferenceEventRequest } from \"./referenceEventRequest\";\n\nexport class RegisterRequest implements CaptchaProtectedRequest {\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  token: string;\n  organizationUserId: string;\n\n  constructor(\n    public email: string,\n    public name: string,\n    public masterPasswordHash: string,\n    masterPasswordHint: string,\n    public key: string,\n    public kdf: KdfType,\n    public kdfIterations: number,\n    public referenceData: ReferenceEventRequest,\n    public captchaResponse: string\n  ) {\n    this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n  }\n}\n","import { AbstractControl } from \"@angular/forms\";\nexport interface AllValidationErrors {\n  controlName: string;\n  errorName: string;\n}\n\nexport interface FormGroupControls {\n  [key: string]: AbstractControl;\n}\n\nexport abstract class FormValidationErrorsService {\n  getFormValidationErrors: (controls: FormGroupControls) => AllValidationErrors[];\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { AbstractControl, FormBuilder, ValidatorFn, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { InputsFieldMatch } from \"@bitwarden/angular/validators/inputsFieldMatch.validator\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport {\n  AllValidationErrors,\n  FormValidationErrorsService,\n} from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { DEFAULT_KDF_ITERATIONS, DEFAULT_KDF_TYPE } from \"@bitwarden/common/enums/kdfType\";\nimport { KeysRequest } from \"@bitwarden/common/models/request/keysRequest\";\nimport { ReferenceEventRequest } from \"@bitwarden/common/models/request/referenceEventRequest\";\nimport { RegisterRequest } from \"@bitwarden/common/models/request/registerRequest\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class RegisterComponent extends CaptchaProtectedComponent implements OnInit {\n  @Input() isInTrialFlow = false;\n  @Output() createdAccount = new EventEmitter<string>();\n\n  showPassword = false;\n  formPromise: Promise<any>;\n  masterPasswordScore: number;\n  referenceData: ReferenceEventRequest;\n  showTerms = true;\n  showErrorSummary = false;\n\n  formGroup = this.formBuilder.group(\n    {\n      email: [\"\", [Validators.required, Validators.email]],\n      name: [\"\"],\n      masterPassword: [\"\", [Validators.required, Validators.minLength(8)]],\n      confirmMasterPassword: [\"\", [Validators.required, Validators.minLength(8)]],\n      hint: [\n        null,\n        [\n          InputsFieldMatch.validateInputsDoesntMatch(\n            \"masterPassword\",\n            this.i18nService.t(\"hintEqualsPassword\")\n          ),\n        ],\n      ],\n      acceptPolicies: [false, [this.acceptPoliciesValidation()]],\n    },\n    {\n      validator: InputsFieldMatch.validateFormInputsMatch(\n        \"masterPassword\",\n        \"confirmMasterPassword\",\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      ),\n    }\n  );\n\n  protected successRoute = \"login\";\n  private masterPasswordStrengthTimeout: any;\n\n  constructor(\n    protected formValidationErrorService: FormValidationErrorsService,\n    protected formBuilder: FormBuilder,\n    protected authService: AuthService,\n    protected router: Router,\n    i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    protected passwordGenerationService: PasswordGenerationService,\n    environmentService: EnvironmentService,\n    protected logService: LogService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.showTerms = !platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.setupCaptcha();\n  }\n\n  get masterPasswordScoreWidth() {\n    return this.masterPasswordScore == null ? 0 : (this.masterPasswordScore + 1) * 20;\n  }\n\n  get masterPasswordScoreColor() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return \"success\";\n      case 3:\n        return \"primary\";\n      case 2:\n        return \"warning\";\n      default:\n        return \"danger\";\n    }\n  }\n\n  get masterPasswordScoreText() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return this.i18nService.t(\"strong\");\n      case 3:\n        return this.i18nService.t(\"good\");\n      case 2:\n        return this.i18nService.t(\"weak\");\n      default:\n        return this.masterPasswordScore != null ? this.i18nService.t(\"weak\") : null;\n    }\n  }\n\n  async submit(showToast = true) {\n    let email = this.formGroup.get(\"email\")?.value;\n    let name = this.formGroup.get(\"name\")?.value;\n    const masterPassword = this.formGroup.get(\"masterPassword\")?.value;\n    const hint = this.formGroup.get(\"hint\")?.value;\n\n    this.formGroup.markAllAsTouched();\n    this.showErrorSummary = true;\n\n    if (this.formGroup.get(\"acceptPolicies\").hasError(\"required\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"acceptPoliciesRequired\")\n      );\n      return;\n    }\n\n    //web\n    if (this.formGroup.invalid && !showToast) {\n      return;\n    }\n\n    //desktop, browser\n    if (this.formGroup.invalid && showToast) {\n      const errorText = this.getErrorToastMessage();\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errorText);\n      return;\n    }\n\n    const strengthResult = this.passwordGenerationService.passwordStrength(\n      masterPassword,\n      this.getPasswordStrengthUserInput()\n    );\n    if (strengthResult != null && strengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return;\n      }\n    }\n\n    name = name === \"\" ? null : name;\n    email = email.trim().toLowerCase();\n    const kdf = DEFAULT_KDF_TYPE;\n    const kdfIterations = DEFAULT_KDF_ITERATIONS;\n    const key = await this.cryptoService.makeKey(masterPassword, email, kdf, kdfIterations);\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const hashedPassword = await this.cryptoService.hashPassword(masterPassword, key);\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new RegisterRequest(\n      email,\n      name,\n      hashedPassword,\n      hint,\n      encKey[1].encryptedString,\n      kdf,\n      kdfIterations,\n      this.referenceData,\n      this.captchaToken\n    );\n    request.keys = new KeysRequest(keys[0], keys[1].encryptedString);\n    const orgInvite = await this.stateService.getOrganizationInvitation();\n    if (orgInvite != null && orgInvite.token != null && orgInvite.organizationUserId != null) {\n      request.token = orgInvite.token;\n      request.organizationUserId = orgInvite.organizationUserId;\n    }\n\n    try {\n      this.formPromise = this.apiService.postRegister(request);\n      try {\n        await this.formPromise;\n      } catch (e) {\n        if (this.handleCaptchaRequired(e)) {\n          return;\n        } else {\n          throw e;\n        }\n      }\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"newAccountCreated\"));\n      if (this.isInTrialFlow) {\n        this.createdAccount.emit(this.formGroup.get(\"email\")?.value);\n      } else {\n        this.router.navigate([this.successRoute], { queryParams: { email: email } });\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  updatePasswordStrength() {\n    const masterPassword = this.formGroup.get(\"masterPassword\")?.value;\n\n    if (this.masterPasswordStrengthTimeout != null) {\n      clearTimeout(this.masterPasswordStrengthTimeout);\n    }\n    this.masterPasswordStrengthTimeout = setTimeout(() => {\n      const strengthResult = this.passwordGenerationService.passwordStrength(\n        masterPassword,\n        this.getPasswordStrengthUserInput()\n      );\n      this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n    }, 300);\n  }\n\n  private getPasswordStrengthUserInput() {\n    let userInput: string[] = [];\n    const email = this.formGroup.get(\"email\")?.value;\n    const name = this.formGroup.get(\"name\").value;\n    const atPosition = email.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    if (name != null && name !== \"\") {\n      userInput = userInput.concat(name.trim().toLowerCase().split(\" \"));\n    }\n    return userInput;\n  }\n\n  private getErrorToastMessage() {\n    const error: AllValidationErrors = this.formValidationErrorService\n      .getFormValidationErrors(this.formGroup.controls)\n      .shift();\n\n    if (error) {\n      switch (error.errorName) {\n        case \"email\":\n          return this.i18nService.t(\"invalidEmail\");\n        case \"inputsDoesntMatchError\":\n          return this.i18nService.t(\"masterPassDoesntMatch\");\n        case \"inputsMatchError\":\n          return this.i18nService.t(\"hintEqualsPassword\");\n        default:\n          return this.i18nService.t(this.errorTag(error));\n      }\n    }\n\n    return;\n  }\n\n  private errorTag(error: AllValidationErrors): string {\n    const name = error.errorName.charAt(0).toUpperCase() + error.errorName.slice(1);\n    return `${error.controlName}${name}`;\n  }\n\n  //validation would be ignored on selfhosted\n  private acceptPoliciesValidation(): ValidatorFn {\n    return (control: AbstractControl) => {\n      const ctrlValue = control.value;\n\n      return !ctrlValue && this.showTerms ? { required: true } : null;\n    };\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" [formGroup]=\"formGroup\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/home\">{{ \"cancel\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"createAccount\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n          <input id=\"email\" type=\"email\" formControlName=\"email\" appInputVerbatim=\"false\" />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <div class=\"box-content-row-flex\">\n            <div class=\"row-main\">\n              <label for=\"masterPassword\">\n                {{ \"masterPass\" | i18n }}\n                <strong\n                  class=\"sub-label text-{{ masterPasswordScoreColor }}\"\n                  *ngIf=\"masterPasswordScoreText\"\n                >\n                  {{ masterPasswordScoreText }}\n                </strong>\n              </label>\n              <input\n                id=\"masterPassword\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                class=\"monospaced\"\n                formControlName=\"masterPassword\"\n                appInputVerbatim\n                (input)=\"updatePasswordStrength()\"\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword()\"\n                [attr.aria-pressed]=\"showPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"progress\">\n            <div\n              class=\"progress-bar bg-{{ masterPasswordScoreColor }}\"\n              role=\"progressbar\"\n              aria-valuenow=\"0\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n              [ngStyle]=\"{ width: masterPasswordScoreWidth + '%' }\"\n              attr.aria-valuenow=\"{{ masterPasswordScoreWidth }}\"\n            ></div>\n          </div>\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"masterPassDesc\" | i18n }}\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n          <div class=\"row-main\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <input\n              id=\"masterPasswordRetype\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              class=\"monospaced\"\n              formControlName=\"confirmMasterPassword\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appBlurClick\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n              ></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n          <input id=\"hint\" type=\"text\" formControlName=\"hint\" />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"masterPassHintDesc\" | i18n }}\n      </div>\n    </div>\n    <div [hidden]=\"!showCaptcha()\"><iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe></div>\n    <div class=\"box last\" *ngIf=\"showTerms\">\n      <div class=\"box-content\">\n        <div\n          class=\"box-content-row box-content-row-checkbox box-content-row-checkbox-left box-content-row-word-break\"\n          appBoxRow\n        >\n          <input type=\"checkbox\" id=\"acceptPolicies\" formControlName=\"acceptPolicies\" />\n          <label for=\"acceptPolicies\">\n            {{ \"acceptPolicies\" | i18n }}<br />\n            <a href=\"https://bitwarden.com/terms/\" target=\"_blank\" rel=\"noopener\">{{\n              \"termsOfService\" | i18n\n            }}</a\n            >,\n            <a href=\"https://bitwarden.com/privacy/\" target=\"_blank\" rel=\"noopener\">{{\n              \"privacyPolicy\" | i18n\n            }}</a>\n          </label>\n        </div>\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { RegisterComponent as BaseRegisterComponent } from \"@bitwarden/angular/components/register.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-register\",\n  templateUrl: \"register.component.html\",\n})\nexport class RegisterComponent extends BaseRegisterComponent {\n  constructor(\n    formValidationErrorService: FormValidationErrorsService,\n    formBuilder: FormBuilder,\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    environmentService: EnvironmentService,\n    logService: LogService\n  ) {\n    super(\n      formValidationErrorService,\n      formBuilder,\n      authService,\n      router,\n      i18nService,\n      cryptoService,\n      apiService,\n      stateService,\n      platformUtilsService,\n      passwordGenerationService,\n      environmentService,\n      logService\n    );\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Directive()\nexport class RemovePasswordComponent implements OnInit {\n  actionPromise: Promise<any>;\n  continuing = false;\n  leaving = false;\n\n  loading = true;\n  organization: Organization;\n  email: string;\n\n  constructor(\n    private router: Router,\n    private stateService: StateService,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  async ngOnInit() {\n    this.organization = await this.keyConnectorService.getManagingOrganization();\n    this.email = await this.stateService.getEmail();\n    await this.syncService.fullSync(false);\n    this.loading = false;\n  }\n\n  async convert() {\n    this.continuing = true;\n    this.actionPromise = this.keyConnectorService.migrateUser();\n\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedMasterPassword\")\n      );\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n    }\n  }\n\n  async leave() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"leaveOrganizationConfirmation\"),\n      this.organization.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.leaving = true;\n      this.actionPromise = this.apiService.postLeaveOrganization(this.organization.id).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"leftOrganization\"));\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e);\n    }\n  }\n}\n","<header>\n  <div class=\"left\"></div>\n  <div class=\"center\">\n    <span class=\"title\">{{ \"removeMasterPassword\" | i18n }}</span>\n  </div>\n  <div class=\"right\"></div>\n</header>\n\n<main tabindex=\"-1\">\n  <div class=\"box\">\n    <div class=\"box-content\">\n      <div class=\"box-content-row\" appBoxRow>\n        <p>{{ \"convertOrganizationEncryptionDesc\" | i18n: organization.name }}</p>\n      </div>\n      <div class=\"box-content-row\">\n        <button\n          type=\"button\"\n          class=\"btn block primary\"\n          (click)=\"convert()\"\n          [disabled]=\"actionPromise\"\n        >\n          <i\n            class=\"bwi bwi-spinner bwi-spin\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n            *ngIf=\"continuing\"\n          ></i>\n          {{ \"removeMasterPassword\" | i18n }}\n        </button>\n      </div>\n      <div class=\"box-content-row\">\n        <button\n          type=\"button\"\n          class=\"btn btn-outline-secondary block\"\n          (click)=\"leave()\"\n          [disabled]=\"actionPromise\"\n        >\n          <i\n            class=\"bwi bwi-spinner bwi-spin\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n            *ngIf=\"leaving\"\n          ></i>\n          {{ \"leaveOrganization\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</main>\n","import { Component } from \"@angular/core\";\n\nimport { RemovePasswordComponent as BaseRemovePasswordComponent } from \"@bitwarden/angular/components/remove-password.component\";\n\n@Component({\n  selector: \"app-remove-password\",\n  templateUrl: \"remove-password.component.html\",\n})\nexport class RemovePasswordComponent extends BaseRemovePasswordComponent {}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class OrganizationUserResetPasswordEnrollmentRequest extends SecretVerificationRequest {\n  resetPasswordKey: string;\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { KeysRequest } from \"./keysRequest\";\n\nexport class SetPasswordRequest {\n  masterPasswordHash: string;\n  key: string;\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    masterPasswordHash: string,\n    key: string,\n    masterPasswordHint: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.masterPasswordHash = masterPasswordHash;\n    this.key = key;\n    this.masterPasswordHint = masterPasswordHint;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","import { PolicyType } from \"../enums/policyType\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"../models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../models/domain/resetPasswordPolicyOptions\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\n\nexport abstract class PolicyService {\n  clearCache: () => void;\n  getAll: (type?: PolicyType, userId?: string) => Promise<Policy[]>;\n  getPolicyForOrganization: (policyType: PolicyType, organizationId: string) => Promise<Policy>;\n  replace: (policies: { [id: string]: PolicyData }) => Promise<any>;\n  clear: (userId?: string) => Promise<any>;\n  getMasterPasswordPoliciesForInvitedUsers: (orgId: string) => Promise<MasterPasswordPolicyOptions>;\n  getMasterPasswordPolicyOptions: (policies?: Policy[]) => Promise<MasterPasswordPolicyOptions>;\n  evaluateMasterPassword: (\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions?: MasterPasswordPolicyOptions\n  ) => boolean;\n  getResetPasswordPolicyOptions: (\n    policies: Policy[],\n    orgId: string\n  ) => [ResetPasswordPolicyOptions, boolean];\n  mapPoliciesFromToken: (policiesResponse: ListResponse<PolicyResponse>) => Policy[];\n  policyAppliesToUser: (\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) => Promise<boolean>;\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { KdfType } from \"@bitwarden/common/enums/kdfType\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\n\n@Directive()\nexport class ChangePasswordComponent implements OnInit {\n  masterPassword: string;\n  masterPasswordRetype: string;\n  formPromise: Promise<any>;\n  masterPasswordScore: number;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n\n  protected email: string;\n  protected kdf: KdfType;\n  protected kdfIterations: number;\n\n  private masterPasswordStrengthTimeout: any;\n\n  constructor(\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected messagingService: MessagingService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected policyService: PolicyService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.email = await this.stateService.getEmail();\n    this.enforcedPolicyOptions ??= await this.policyService.getMasterPasswordPolicyOptions();\n  }\n\n  async submit() {\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    const email = await this.stateService.getEmail();\n    if (this.kdf == null) {\n      this.kdf = await this.stateService.getKdfType();\n    }\n    if (this.kdfIterations == null) {\n      this.kdfIterations = await this.stateService.getKdfIterations();\n    }\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      email.trim().toLowerCase(),\n      this.kdf,\n      this.kdfIterations\n    );\n    const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n    let encKey: [SymmetricCryptoKey, EncString] = null;\n    const existingEncKey = await this.cryptoService.getEncKey();\n    if (existingEncKey == null) {\n      encKey = await this.cryptoService.makeEncKey(key);\n    } else {\n      encKey = await this.cryptoService.remakeEncKey(key);\n    }\n\n    await this.performSubmitActions(masterPasswordHash, key, encKey);\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    // Override in sub-class\n    // Can be used for additional validation and/or other processes the should occur before changing passwords\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    // Override in sub-class\n  }\n\n  async strongPassword(): Promise<boolean> {\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return false;\n    }\n    if (this.masterPassword.length < 8) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassLength\")\n      );\n      return false;\n    }\n    if (this.masterPassword !== this.masterPasswordRetype) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      );\n      return false;\n    }\n\n    const strengthResult = this.passwordGenerationService.passwordStrength(\n      this.masterPassword,\n      this.getPasswordStrengthUserInput()\n    );\n\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        strengthResult.score,\n        this.masterPassword,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return false;\n    }\n\n    if (strengthResult != null && strengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  updatePasswordStrength() {\n    if (this.masterPasswordStrengthTimeout != null) {\n      clearTimeout(this.masterPasswordStrengthTimeout);\n    }\n    this.masterPasswordStrengthTimeout = setTimeout(() => {\n      const strengthResult = this.passwordGenerationService.passwordStrength(\n        this.masterPassword,\n        this.getPasswordStrengthUserInput()\n      );\n      this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n    }, 300);\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  private getPasswordStrengthUserInput() {\n    let userInput: string[] = [];\n    const atPosition = this.email.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        this.email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    return userInput;\n  }\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { HashPurpose } from \"@bitwarden/common/enums/hashPurpose\";\nimport { DEFAULT_KDF_ITERATIONS, DEFAULT_KDF_TYPE } from \"@bitwarden/common/enums/kdfType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { KeysRequest } from \"@bitwarden/common/models/request/keysRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { SetPasswordRequest } from \"@bitwarden/common/models/request/setPasswordRequest\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class SetPasswordComponent extends BaseChangePasswordComponent {\n  syncLoading = true;\n  showPassword = false;\n  hint = \"\";\n  identifier: string = null;\n  orgId: string;\n  resetPasswordAutoEnroll = false;\n\n  onSuccessfulChangePassword: () => Promise<any>;\n  successRoute = \"vault\";\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    protected router: Router,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private route: ActivatedRoute,\n    stateService: StateService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    this.syncLoading = false;\n\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    // Automatic Enrollment Detection\n    if (this.identifier != null) {\n      try {\n        const response = await this.apiService.getOrganizationAutoEnrollStatus(this.identifier);\n        this.orgId = response.id;\n        this.resetPasswordAutoEnroll = response.resetPasswordEnabled;\n        this.enforcedPolicyOptions =\n          await this.policyService.getMasterPasswordPoliciesForInvitedUsers(this.orgId);\n      } catch {\n        this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      }\n    }\n\n    super.ngOnInit();\n  }\n\n  async setupSubmitActions() {\n    this.kdf = DEFAULT_KDF_TYPE;\n    this.kdfIterations = DEFAULT_KDF_ITERATIONS;\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new SetPasswordRequest(\n      masterPasswordHash,\n      encKey[1].encryptedString,\n      this.hint,\n      this.kdf,\n      this.kdfIterations,\n      this.identifier,\n      new KeysRequest(keys[0], keys[1].encryptedString)\n    );\n    try {\n      if (this.resetPasswordAutoEnroll) {\n        this.formPromise = this.apiService\n          .setPassword(request)\n          .then(async () => {\n            await this.onSetPasswordSuccess(key, encKey, keys);\n            return this.apiService.getOrganizationKeys(this.orgId);\n          })\n          .then(async (response) => {\n            if (response == null) {\n              throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n            }\n            const userId = await this.stateService.getUserId();\n            const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n            // RSA Encrypt user's encKey.key with organization public key\n            const userEncKey = await this.cryptoService.getEncKey();\n            const encryptedKey = await this.cryptoService.rsaEncrypt(\n              userEncKey.key,\n              publicKey.buffer\n            );\n\n            const resetRequest = new OrganizationUserResetPasswordEnrollmentRequest();\n            resetRequest.masterPasswordHash = masterPasswordHash;\n            resetRequest.resetPasswordKey = encryptedKey.encryptedString;\n\n            return this.apiService.putOrganizationUserResetPasswordEnrollment(\n              this.orgId,\n              userId,\n              resetRequest\n            );\n          });\n      } else {\n        this.formPromise = this.apiService.setPassword(request).then(async () => {\n          await this.onSetPasswordSuccess(key, encKey, keys);\n        });\n      }\n\n      await this.formPromise;\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  private async onSetPasswordSuccess(\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString],\n    keys: [string, EncString]\n  ) {\n    await this.stateService.setKdfType(this.kdf);\n    await this.stateService.setKdfIterations(this.kdfIterations);\n    await this.cryptoService.setKey(key);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n    await this.cryptoService.setEncPrivateKey(keys[1].encryptedString);\n\n    const localKeyHash = await this.cryptoService.hashPassword(\n      this.masterPassword,\n      key,\n      HashPurpose.LocalAuthorization\n    );\n    await this.cryptoService.setKeyHash(localKeyHash);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/home\">{{ \"cancel\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"setMasterPassword\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"full-loading-spinner\" *ngIf=\"syncLoading\">\n      <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" aria-hidden=\"true\"></i>\n    </div>\n    <div *ngIf=\"!syncLoading\">\n      <div class=\"box\">\n        <app-callout type=\"tip\">{{ \"ssoCompleteRegistration\" | i18n }}</app-callout>\n        <app-callout\n          type=\"warning\"\n          title=\"{{ 'resetPasswordPolicyAutoEnroll' | i18n }}\"\n          *ngIf=\"resetPasswordAutoEnroll\"\n        >\n          {{ \"resetPasswordAutoEnrollInviteWarning\" | i18n }}\n        </app-callout>\n        <app-callout\n          type=\"info\"\n          [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n          *ngIf=\"enforcedPolicyOptions\"\n        >\n        </app-callout>\n      </div>\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <div class=\"box-content-row-flex\">\n              <div class=\"row-main\">\n                <label for=\"masterPassword\"\n                  >{{ \"masterPass\" | i18n }}\n                  <strong\n                    class=\"sub-label text-{{ masterPasswordScoreColor }}\"\n                    *ngIf=\"masterPasswordScoreText\"\n                  >\n                    {{ masterPasswordScoreText }}\n                  </strong>\n                </label>\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPassword\"\n                  class=\"monospaced\"\n                  [(ngModel)]=\"masterPassword\"\n                  required\n                  (input)=\"updatePasswordStrength()\"\n                  appInputVerbatim\n                />\n              </div>\n              <div class=\"action-buttons\">\n                <button\n                  type=\"button\"\n                  class=\"row-btn\"\n                  appStopClick\n                  appBlurClick\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(false)\"\n                  [attr.aria-pressed]=\"showPassword\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n              </div>\n            </div>\n            <div class=\"progress\">\n              <div\n                class=\"progress-bar bg-{{ masterPasswordScoreColor }}\"\n                role=\"progressbar\"\n                aria-valuenow=\"0\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                [ngStyle]=\"{ width: masterPasswordScoreWidth + '%' }\"\n                attr.aria-valuenow=\"{{ masterPasswordScoreWidth }}\"\n              ></div>\n            </div>\n          </div>\n        </div>\n        <div class=\"box-footer\">\n          {{ \"masterPassDesc\" | i18n }}\n        </div>\n      </div>\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <div class=\"box-content-row-flex\">\n              <div class=\"row-main\">\n                <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n                <input\n                  id=\"masterPasswordRetype\"\n                  type=\"password\"\n                  name=\"MasterPasswordRetype\"\n                  class=\"monospaced\"\n                  [(ngModel)]=\"masterPasswordRetype\"\n                  required\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                />\n              </div>\n              <div class=\"action-buttons\">\n                <button\n                  type=\"button\"\n                  class=\"row-btn\"\n                  appStopClick\n                  appBlurClick\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(true)\"\n                  [attr.aria-pressed]=\"showPassword\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"box last\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n            <input id=\"hint\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n          </div>\n        </div>\n        <div class=\"box-footer\">\n          {{ \"masterPassHintDesc\" | i18n }}\n        </div>\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { SetPasswordComponent as BaseSetPasswordComponent } from \"@bitwarden/angular/components/set-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\n\n@Component({\n  selector: \"app-set-password\",\n  templateUrl: \"set-password.component.html\",\n})\nexport class SetPasswordComponent extends BaseSetPasswordComponent {\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    router: Router,\n    syncService: SyncService,\n    route: ActivatedRoute\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      router,\n      apiService,\n      syncService,\n      route,\n      stateService\n    );\n  }\n\n  get masterPasswordScoreWidth() {\n    return this.masterPasswordScore == null ? 0 : (this.masterPasswordScore + 1) * 20;\n  }\n\n  get masterPasswordScoreColor() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return \"success\";\n      case 3:\n        return \"primary\";\n      case 2:\n        return \"warning\";\n      default:\n        return \"danger\";\n    }\n  }\n\n  get masterPasswordScoreText() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return this.i18nService.t(\"strong\");\n      case 3:\n        return this.i18nService.t(\"good\");\n      case 2:\n        return this.i18nService.t(\"weak\");\n      default:\n        return this.masterPasswordScore != null ? this.i18nService.t(\"weak\") : null;\n    }\n  }\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { AuthResult } from \"@bitwarden/common/models/domain/authResult\";\nimport { SsoLogInCredentials } from \"@bitwarden/common/models/domain/logInCredentials\";\nimport { SsoPreValidateResponse } from \"@bitwarden/common/models/response/ssoPreValidateResponse\";\n\n@Directive()\nexport class SsoComponent {\n  identifier: string;\n  loggingIn = false;\n\n  formPromise: Promise<AuthResult>;\n  initiateSsoFormPromise: Promise<SsoPreValidateResponse>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginChangePasswordNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"lock\";\n  protected changePasswordRoute = \"set-password\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  protected clientId: string;\n  protected redirectUri: string;\n  protected state: string;\n  protected codeChallenge: string;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected route: ActivatedRoute,\n    protected stateService: StateService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.code != null && qParams.state != null) {\n        const codeVerifier = await this.stateService.getSsoCodeVerifier();\n        const state = await this.stateService.getSsoState();\n        await this.stateService.setSsoCodeVerifier(null);\n        await this.stateService.setSsoState(null);\n        if (\n          qParams.code != null &&\n          codeVerifier != null &&\n          state != null &&\n          this.checkState(state, qParams.state)\n        ) {\n          await this.logIn(\n            qParams.code,\n            codeVerifier,\n            this.getOrgIdentifierFromState(qParams.state)\n          );\n        }\n      } else if (\n        qParams.clientId != null &&\n        qParams.redirectUri != null &&\n        qParams.state != null &&\n        qParams.codeChallenge != null\n      ) {\n        this.redirectUri = qParams.redirectUri;\n        this.state = qParams.state;\n        this.codeChallenge = qParams.codeChallenge;\n        this.clientId = qParams.clientId;\n      }\n    });\n  }\n\n  async submit(returnUri?: string, includeUserIdentifier?: boolean) {\n    if (this.identifier == null || this.identifier === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"ssoValidationFailed\"),\n        this.i18nService.t(\"ssoIdentifierRequired\")\n      );\n      return;\n    }\n\n    this.initiateSsoFormPromise = this.apiService.preValidateSso(this.identifier);\n    const response = await this.initiateSsoFormPromise;\n\n    const authorizeUrl = await this.buildAuthorizeUrl(\n      returnUri,\n      includeUserIdentifier,\n      response.token\n    );\n    this.platformUtilsService.launchUri(authorizeUrl, { sameWindow: true });\n  }\n\n  protected async buildAuthorizeUrl(\n    returnUri?: string,\n    includeUserIdentifier?: boolean,\n    token?: string\n  ): Promise<string> {\n    let codeChallenge = this.codeChallenge;\n    let state = this.state;\n\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n\n    if (codeChallenge == null) {\n      const codeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n      const codeVerifierHash = await this.cryptoFunctionService.hash(codeVerifier, \"sha256\");\n      codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n      await this.stateService.setSsoCodeVerifier(codeVerifier);\n    }\n\n    if (state == null) {\n      state = await this.passwordGenerationService.generatePassword(passwordOptions);\n      if (returnUri) {\n        state += `_returnUri='${returnUri}'`;\n      }\n    }\n\n    // Add Organization Identifier to state\n    state += `_identifier=${this.identifier}`;\n\n    // Save state (regardless of new or existing)\n    await this.stateService.setSsoState(state);\n\n    let authorizeUrl =\n      this.environmentService.getIdentityUrl() +\n      \"/connect/authorize?\" +\n      \"client_id=\" +\n      this.clientId +\n      \"&redirect_uri=\" +\n      encodeURIComponent(this.redirectUri) +\n      \"&\" +\n      \"response_type=code&scope=api offline_access&\" +\n      \"state=\" +\n      state +\n      \"&code_challenge=\" +\n      codeChallenge +\n      \"&\" +\n      \"code_challenge_method=S256&response_mode=query&\" +\n      \"domain_hint=\" +\n      encodeURIComponent(this.identifier) +\n      \"&ssoToken=\" +\n      encodeURIComponent(token);\n\n    if (includeUserIdentifier) {\n      const userIdentifier = await this.apiService.getSsoUserIdentifier();\n      authorizeUrl += `&user_identifier=${encodeURIComponent(userIdentifier)}`;\n    }\n\n    return authorizeUrl;\n  }\n\n  private async logIn(code: string, codeVerifier: string, orgIdFromState: string) {\n    this.loggingIn = true;\n    try {\n      const credentials = new SsoLogInCredentials(\n        code,\n        codeVerifier,\n        this.redirectUri,\n        orgIdFromState\n      );\n      this.formPromise = this.authService.logIn(credentials);\n      const response = await this.formPromise;\n      if (response.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n              sso: \"true\",\n            },\n          });\n        }\n      } else if (response.resetMasterPassword) {\n        if (this.onSuccessfulLoginChangePasswordNavigate != null) {\n          this.onSuccessfulLoginChangePasswordNavigate();\n        } else {\n          this.router.navigate([this.changePasswordRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n            },\n          });\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n\n      // TODO: Key Connector Service should pass this error message to the logout callback instead of displaying here\n      if (e.message === \"Key Connector error\") {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"ssoKeyConnectorError\")\n        );\n      }\n    }\n    this.loggingIn = false;\n  }\n\n  private getOrgIdentifierFromState(state: string): string {\n    if (state === null || state === undefined) {\n      return null;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    return stateSplit.length > 1 ? stateSplit[1] : null;\n  }\n\n  private checkState(state: string, checkState: string): boolean {\n    if (state === null || state === undefined) {\n      return false;\n    }\n    if (checkState === null || checkState === undefined) {\n      return false;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    const checkStateSplit = checkState.split(\"_identifier=\");\n    return stateSplit[0] === checkStateSplit[0];\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { SsoComponent as BaseSsoComponent } from \"@bitwarden/angular/components/sso.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\n\n@Component({\n  selector: \"app-sso\",\n  templateUrl: \"sso.component.html\",\n})\nexport class SsoComponent extends BaseSsoComponent {\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    cryptoFunctionService: CryptoFunctionService,\n    passwordGenerationService: PasswordGenerationService,\n    syncService: SyncService,\n    environmentService: EnvironmentService,\n    logService: LogService,\n    private vaultTimeoutService: VaultTimeoutService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      route,\n      stateService,\n      platformUtilsService,\n      apiService,\n      cryptoFunctionService,\n      environmentService,\n      passwordGenerationService,\n      logService\n    );\n\n    const url = this.environmentService.getWebVaultUrl();\n\n    this.redirectUri = url + \"/sso-connector.html\";\n    this.clientId = \"browser\";\n\n    super.onSuccessfulLogin = async () => {\n      await syncService.fullSync(true);\n\n      // If the vault is unlocked then this will clear keys from memory, which we don't want to do\n      if ((await this.authService.getAuthStatus()) !== AuthenticationStatus.Unlocked) {\n        BrowserApi.reloadOpenWindows();\n      }\n\n      const thisWindow = window.open(\"\", \"_self\");\n      thisWindow.close();\n    };\n  }\n}\n","import { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\n\nexport interface TwoFactorProviderDetails {\n  type: TwoFactorProviderType;\n  name: string;\n  description: string;\n  priority: number;\n  sort: number;\n  premium: boolean;\n}\n\nexport abstract class TwoFactorService {\n  init: () => void;\n  getSupportedProviders: (win: Window) => TwoFactorProviderDetails[];\n  getDefaultProvider: (webAuthnSupported: boolean) => TwoFactorProviderType;\n  setSelectedProvider: (type: TwoFactorProviderType) => void;\n  clearSelectedProvider: () => void;\n\n  setProviders: (response: IdentityTwoFactorResponse) => void;\n  clearProviders: () => void;\n  getProviders: () => Map<TwoFactorProviderType, { [key: string]: string }>;\n}\n","import { Directive, EventEmitter, OnInit, Output } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\n\n@Directive()\nexport class TwoFactorOptionsComponent implements OnInit {\n  @Output() onProviderSelected = new EventEmitter<TwoFactorProviderType>();\n  @Output() onRecoverSelected = new EventEmitter();\n\n  providers: any[] = [];\n\n  constructor(\n    protected twoFactorService: TwoFactorService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window\n  ) {}\n\n  ngOnInit() {\n    this.providers = this.twoFactorService.getSupportedProviders(this.win);\n  }\n\n  choose(p: any) {\n    this.onProviderSelected.emit(p.type);\n  }\n\n  recover() {\n    this.platformUtilsService.launchUri(\"https://bitwarden.com/help/lost-two-step-device/\");\n    this.onRecoverSelected.emit();\n  }\n}\n","<header>\n  <div class=\"left\">\n    <a routerLink=\"/2fa\">{{ \"close\" | i18n }}</a>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"twoStepOptions\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"box\">\n    <div class=\"box-content\">\n      <button\n        type=\"button\"\n        appStopClick\n        *ngFor=\"let p of providers\"\n        class=\"box-content-row\"\n        (click)=\"choose(p)\"\n      >\n        <span class=\"text\">{{ p.name }}</span>\n        <span class=\"detail\">{{ p.description }}</span>\n      </button>\n      <button type=\"button\" appStopClick class=\"box-content-row\" (click)=\"recover()\">\n        <span class=\"text\">{{ \"recoveryCodeTitle\" | i18n }}</span>\n        <span class=\"detail\">{{ \"recoveryCodeDesc\" | i18n }}</span>\n      </button>\n    </div>\n  </div>\n</main>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { TwoFactorOptionsComponent as BaseTwoFactorOptionsComponent } from \"@bitwarden/angular/components/two-factor-options.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\n\n@Component({\n  selector: \"app-two-factor-options\",\n  templateUrl: \"two-factor-options.component.html\",\n})\nexport class TwoFactorOptionsComponent extends BaseTwoFactorOptionsComponent {\n  constructor(\n    twoFactorService: TwoFactorService,\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService\n  ) {\n    super(twoFactorService, router, i18nService, platformUtilsService, window);\n  }\n\n  choose(p: any) {\n    super.choose(p);\n    this.twoFactorService.setSelectedProvider(p.type);\n    this.router.navigate([\"2fa\"]);\n  }\n}\n","export enum TwoFactorProviderType {\n  Authenticator = 0,\n  Email = 1,\n  Duo = 2,\n  Yubikey = 3,\n  U2f = 4,\n  Remember = 5,\n  OrganizationDuo = 6,\n  WebAuthn = 7,\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\n\nexport class WebAuthnIFrame {\n  private iframe: HTMLIFrameElement = null;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    private webVaultUrl: string,\n    private webAuthnNewTab: boolean,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private successCallback: Function, // eslint-disable-line\n    private errorCallback: Function, // eslint-disable-line\n    private infoCallback: Function // eslint-disable-line\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  init(data: any): void {\n    const params = new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      btnText: encodeURIComponent(this.i18nService.t(\"webAuthnAuthenticate\")),\n      v: \"1\",\n    });\n\n    if (this.webAuthnNewTab) {\n      // Firefox fallback which opens the webauthn page in a new tab\n      params.append(\"locale\", this.i18nService.translationLocale);\n      this.platformUtilsService.launchUri(\n        `${this.webVaultUrl}/webauthn-fallback-connector.html?${params}`\n      );\n    } else {\n      this.connectorLink.href = `${this.webVaultUrl}/webauthn-connector.html?${params}`;\n      this.iframe = this.win.document.getElementById(\"webauthn_iframe\") as HTMLIFrameElement;\n      this.iframe.allow = \"publickey-credentials-get \" + new URL(this.webVaultUrl).origin;\n      this.iframe.src = this.connectorLink.href;\n\n      this.win.addEventListener(\"message\", this.parseFunction, false);\n    }\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","import { TwoFactorProviderType } from \"../../../enums/twoFactorProviderType\";\n\nexport class TokenRequestTwoFactor {\n  constructor(\n    public provider: TwoFactorProviderType = null,\n    public token: string = null,\n    public remember: boolean = false\n  ) {}\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class TwoFactorEmailRequest extends SecretVerificationRequest {\n  email: string;\n  deviceIdentifier: string;\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport {\n  TwoFactorProviderDetails,\n  TwoFactorService as TwoFactorServiceAbstraction,\n} from \"../abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\n\nexport const TwoFactorProviders: Partial<Record<TwoFactorProviderType, TwoFactorProviderDetails>> =\n  {\n    [TwoFactorProviderType.Authenticator]: {\n      type: TwoFactorProviderType.Authenticator,\n      name: null as string,\n      description: null as string,\n      priority: 1,\n      sort: 1,\n      premium: false,\n    },\n    [TwoFactorProviderType.Yubikey]: {\n      type: TwoFactorProviderType.Yubikey,\n      name: null as string,\n      description: null as string,\n      priority: 3,\n      sort: 2,\n      premium: true,\n    },\n    [TwoFactorProviderType.Duo]: {\n      type: TwoFactorProviderType.Duo,\n      name: \"Duo\",\n      description: null as string,\n      priority: 2,\n      sort: 3,\n      premium: true,\n    },\n    [TwoFactorProviderType.OrganizationDuo]: {\n      type: TwoFactorProviderType.OrganizationDuo,\n      name: \"Duo (Organization)\",\n      description: null as string,\n      priority: 10,\n      sort: 4,\n      premium: false,\n    },\n    [TwoFactorProviderType.Email]: {\n      type: TwoFactorProviderType.Email,\n      name: null as string,\n      description: null as string,\n      priority: 0,\n      sort: 6,\n      premium: false,\n    },\n    [TwoFactorProviderType.WebAuthn]: {\n      type: TwoFactorProviderType.WebAuthn,\n      name: null as string,\n      description: null as string,\n      priority: 4,\n      sort: 5,\n      premium: true,\n    },\n  };\n\nexport class TwoFactorService implements TwoFactorServiceAbstraction {\n  private twoFactorProvidersData: Map<TwoFactorProviderType, { [key: string]: string }>;\n  private selectedTwoFactorProviderType: TwoFactorProviderType = null;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  init() {\n    TwoFactorProviders[TwoFactorProviderType.Email].name = this.i18nService.t(\"emailTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Email].description = this.i18nService.t(\"emailDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].name =\n      this.i18nService.t(\"authenticatorAppTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].description =\n      this.i18nService.t(\"authenticatorAppDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Duo].description = this.i18nService.t(\"duoDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].name =\n      \"Duo (\" + this.i18nService.t(\"organization\") + \")\";\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].description =\n      this.i18nService.t(\"duoOrganizationDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].name = this.i18nService.t(\"webAuthnTitle\");\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].description =\n      this.i18nService.t(\"webAuthnDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].name = this.i18nService.t(\"yubiKeyTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].description =\n      this.i18nService.t(\"yubiKeyDesc\");\n  }\n\n  getSupportedProviders(win: Window): TwoFactorProviderDetails[] {\n    const providers: any[] = [];\n    if (this.twoFactorProvidersData == null) {\n      return providers;\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.OrganizationDuo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.OrganizationDuo]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Authenticator)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Authenticator]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Yubikey)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Yubikey]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.Duo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Duo]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.WebAuthn) &&\n      this.platformUtilsService.supportsWebAuthn(win)\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.WebAuthn]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Email)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Email]);\n    }\n\n    return providers;\n  }\n\n  getDefaultProvider(webAuthnSupported: boolean): TwoFactorProviderType {\n    if (this.twoFactorProvidersData == null) {\n      return null;\n    }\n\n    if (\n      this.selectedTwoFactorProviderType != null &&\n      this.twoFactorProvidersData.has(this.selectedTwoFactorProviderType)\n    ) {\n      return this.selectedTwoFactorProviderType;\n    }\n\n    let providerType: TwoFactorProviderType = null;\n    let providerPriority = -1;\n    this.twoFactorProvidersData.forEach((_value, type) => {\n      const provider = (TwoFactorProviders as any)[type];\n      if (provider != null && provider.priority > providerPriority) {\n        if (type === TwoFactorProviderType.WebAuthn && !webAuthnSupported) {\n          return;\n        }\n\n        providerType = type;\n        providerPriority = provider.priority;\n      }\n    });\n\n    return providerType;\n  }\n\n  setSelectedProvider(type: TwoFactorProviderType) {\n    this.selectedTwoFactorProviderType = type;\n  }\n\n  clearSelectedProvider() {\n    this.selectedTwoFactorProviderType = null;\n  }\n\n  setProviders(response: IdentityTwoFactorResponse) {\n    this.twoFactorProvidersData = response.twoFactorProviders2;\n  }\n\n  clearProviders() {\n    this.twoFactorProvidersData = null;\n  }\n\n  getProviders() {\n    return this.twoFactorProvidersData;\n  }\n}\n","export abstract class AppIdService {\n  getAppId: () => Promise<string>;\n  getAnonymousAppId: () => Promise<string>;\n}\n","import { Directive, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport * as DuoWebSDK from \"duo_web_sdk\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { WebAuthnIFrame } from \"@bitwarden/common/misc/webauthn_iframe\";\nimport { AuthResult } from \"@bitwarden/common/models/domain/authResult\";\nimport { TokenRequestTwoFactor } from \"@bitwarden/common/models/request/identityToken/tokenRequestTwoFactor\";\nimport { TwoFactorEmailRequest } from \"@bitwarden/common/models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviders } from \"@bitwarden/common/services/twoFactor.service\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class TwoFactorComponent extends CaptchaProtectedComponent implements OnInit, OnDestroy {\n  token = \"\";\n  remember = false;\n  webAuthnReady = false;\n  webAuthnNewTab = false;\n  providers = TwoFactorProviders;\n  providerType = TwoFactorProviderType;\n  selectedProviderType: TwoFactorProviderType = TwoFactorProviderType.Authenticator;\n  webAuthnSupported = false;\n  webAuthn: WebAuthnIFrame = null;\n  title = \"\";\n  twoFactorEmail: string = null;\n  formPromise: Promise<any>;\n  emailPromise: Promise<any>;\n  identifier: string = null;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n\n  get webAuthnAllow(): string {\n    return `publickey-credentials-get ${this.environmentService.getWebVaultUrl()}`;\n  }\n\n  protected loginRoute = \"login\";\n  protected successRoute = \"vault\";\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected route: ActivatedRoute,\n    protected logService: LogService,\n    protected twoFactorService: TwoFactorService,\n    protected appIdService: AppIdService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.webAuthnSupported = this.platformUtilsService.supportsWebAuthn(win);\n  }\n\n  async ngOnInit() {\n    if (!this.authing || this.twoFactorService.getProviders() == null) {\n      this.router.navigate([this.loginRoute]);\n      return;\n    }\n\n    this.route.queryParams.pipe(first()).subscribe((qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    if (this.needsLock) {\n      this.successRoute = \"lock\";\n    }\n\n    if (this.win != null && this.webAuthnSupported) {\n      const webVaultUrl = this.environmentService.getWebVaultUrl();\n      this.webAuthn = new WebAuthnIFrame(\n        this.win,\n        webVaultUrl,\n        this.webAuthnNewTab,\n        this.platformUtilsService,\n        this.i18nService,\n        (token: string) => {\n          this.token = token;\n          this.submit();\n        },\n        (error: string) => {\n          this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n        },\n        (info: string) => {\n          if (info === \"ready\") {\n            this.webAuthnReady = true;\n          }\n        }\n      );\n    }\n\n    this.selectedProviderType = this.twoFactorService.getDefaultProvider(this.webAuthnSupported);\n    await this.init();\n  }\n\n  ngOnDestroy(): void {\n    this.cleanupWebAuthn();\n    this.webAuthn = null;\n  }\n\n  async init() {\n    if (this.selectedProviderType == null) {\n      this.title = this.i18nService.t(\"loginUnavailable\");\n      return;\n    }\n\n    this.cleanupWebAuthn();\n    this.title = (TwoFactorProviders as any)[this.selectedProviderType].name;\n    const providerData = this.twoFactorService.getProviders().get(this.selectedProviderType);\n    switch (this.selectedProviderType) {\n      case TwoFactorProviderType.WebAuthn:\n        if (!this.webAuthnNewTab) {\n          setTimeout(() => {\n            this.authWebAuthn();\n          }, 500);\n        }\n        break;\n      case TwoFactorProviderType.Duo:\n      case TwoFactorProviderType.OrganizationDuo:\n        setTimeout(() => {\n          DuoWebSDK.init({\n            iframe: undefined,\n            host: providerData.Host,\n            sig_request: providerData.Signature,\n            submit_callback: async (f: HTMLFormElement) => {\n              const sig = f.querySelector('input[name=\"sig_response\"]') as HTMLInputElement;\n              if (sig != null) {\n                this.token = sig.value;\n                await this.submit();\n              }\n            },\n          });\n        }, 0);\n        break;\n      case TwoFactorProviderType.Email:\n        this.twoFactorEmail = providerData.Email;\n        if (this.twoFactorService.getProviders().size > 1) {\n          await this.sendEmail(false);\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  async submit() {\n    await this.setupCaptcha();\n\n    if (this.token == null || this.token === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"verificationCodeRequired\")\n      );\n      return;\n    }\n\n    if (this.selectedProviderType === TwoFactorProviderType.WebAuthn) {\n      if (this.webAuthn != null) {\n        this.webAuthn.stop();\n      } else {\n        return;\n      }\n    } else if (\n      this.selectedProviderType === TwoFactorProviderType.Email ||\n      this.selectedProviderType === TwoFactorProviderType.Authenticator\n    ) {\n      this.token = this.token.replace(\" \", \"\").trim();\n    }\n\n    try {\n      await this.doSubmit();\n    } catch {\n      if (this.selectedProviderType === TwoFactorProviderType.WebAuthn && this.webAuthn != null) {\n        this.webAuthn.start();\n      }\n    }\n  }\n\n  async doSubmit() {\n    this.formPromise = this.authService.logInTwoFactor(\n      new TokenRequestTwoFactor(this.selectedProviderType, this.token, this.remember),\n      this.captchaToken\n    );\n    const response: AuthResult = await this.formPromise;\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    if (this.handleCaptchaRequired(response)) {\n      return;\n    }\n    if (this.onSuccessfulLogin != null) {\n      this.onSuccessfulLogin();\n    }\n    if (response.resetMasterPassword) {\n      this.successRoute = \"set-password\";\n    }\n    if (response.forcePasswordReset) {\n      this.successRoute = \"update-temp-password\";\n    }\n    if (this.onSuccessfulLoginNavigate != null) {\n      this.onSuccessfulLoginNavigate();\n    } else {\n      this.router.navigate([this.successRoute], {\n        queryParams: {\n          identifier: this.identifier,\n        },\n      });\n    }\n  }\n\n  async sendEmail(doToast: boolean) {\n    if (this.selectedProviderType !== TwoFactorProviderType.Email) {\n      return;\n    }\n\n    if (this.emailPromise != null) {\n      return;\n    }\n\n    try {\n      const request = new TwoFactorEmailRequest();\n      request.email = this.authService.email;\n      request.masterPasswordHash = this.authService.masterPasswordHash;\n      request.deviceIdentifier = await this.appIdService.getAppId();\n      this.emailPromise = this.apiService.postTwoFactorEmail(request);\n      await this.emailPromise;\n      if (doToast) {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"verificationCodeEmailSent\", this.twoFactorEmail)\n        );\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.emailPromise = null;\n  }\n\n  authWebAuthn() {\n    const providerData = this.twoFactorService.getProviders().get(this.selectedProviderType);\n\n    if (!this.webAuthnSupported || this.webAuthn == null) {\n      return;\n    }\n\n    this.webAuthn.init(providerData);\n  }\n\n  private cleanupWebAuthn() {\n    if (this.webAuthn != null) {\n      this.webAuthn.stop();\n      this.webAuthn.cleanup();\n    }\n  }\n\n  get authing(): boolean {\n    return (\n      this.authService.authingWithPassword() ||\n      this.authService.authingWithSso() ||\n      this.authService.authingWithApiKey()\n    );\n  }\n\n  get needsLock(): boolean {\n    return this.authService.authingWithSso() || this.authService.authingWithApiKey();\n  }\n}\n","export abstract class BroadcasterService {\n  send: (message: any, id?: string) => void;\n  subscribe: (id: string, messageCallback: (message: any) => any) => void;\n  unsubscribe: (id: string) => void;\n}\n","<form id=\"two-factor-page\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/login\">{{ \"back\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ title }}</span>\n    </h1>\n    <div class=\"right\">\n      <button\n        type=\"submit\"\n        appBlurClick\n        [disabled]=\"form.loading\"\n        *ngIf=\"\n          selectedProviderType != null &&\n          selectedProviderType !== providerType.Duo &&\n          selectedProviderType !== providerType.OrganizationDuo &&\n          (selectedProviderType !== providerType.WebAuthn || form.loading)\n        \"\n      >\n        <span [hidden]=\"form.loading\">{{ \"continue\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <ng-container\n      *ngIf=\"\n        selectedProviderType === providerType.Authenticator ||\n        selectedProviderType === providerType.Email\n      \"\n    >\n      <div class=\"content text-center\">\n        <span *ngIf=\"selectedProviderType === providerType.Authenticator\">\n          {{ \"enterVerificationCodeApp\" | i18n }}\n        </span>\n        <span *ngIf=\"selectedProviderType === providerType.Email\">\n          {{ \"enterVerificationCodeEmail\" | i18n: twoFactorEmail }}\n        </span>\n      </div>\n      <div class=\"box first\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"code\">{{ \"verificationCode\" | i18n }}</label>\n            <input\n              id=\"code\"\n              type=\"text\"\n              name=\"Code\"\n              [(ngModel)]=\"token\"\n              required\n              appAutofocus\n              inputmode=\"tel\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"remember\">{{ \"rememberMe\" | i18n }}</label>\n            <input id=\"remember\" type=\"checkbox\" name=\"Remember\" [(ngModel)]=\"remember\" />\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"selectedProviderType === providerType.Yubikey\">\n      <div class=\"content text-center\">\n        <p class=\"text-center\">{{ \"insertYubiKey\" | i18n }}</p>\n        <img src=\"../images/yubikey.jpg\" class=\"img-rounded img-responsive\" alt=\"\" />\n      </div>\n      <div class=\"box first\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"code\" class=\"sr-only\">{{ \"verificationCode\" | i18n }}</label>\n            <input\n              id=\"code\"\n              type=\"password\"\n              name=\"Code\"\n              [(ngModel)]=\"token\"\n              required\n              appAutofocus\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"remember\">{{ \"rememberMe\" | i18n }}</label>\n            <input id=\"remember\" type=\"checkbox\" name=\"Remember\" [(ngModel)]=\"remember\" />\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"selectedProviderType === providerType.WebAuthn && !webAuthnNewTab\">\n      <div id=\"web-authn-frame\"><iframe id=\"webauthn_iframe\" [allow]=\"webAuthnAllow\"></iframe></div>\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"remember\">{{ \"rememberMe\" | i18n }}</label>\n            <input id=\"remember\" type=\"checkbox\" name=\"Remember\" [(ngModel)]=\"remember\" />\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"selectedProviderType === providerType.WebAuthn && webAuthnNewTab\">\n      <div class=\"content text-center\" *ngIf=\"webAuthnNewTab\">\n        <p class=\"text-center\">{{ \"webAuthnNewTab\" | i18n }}</p>\n        <button type=\"button\" class=\"btn primary block\" (click)=\"authWebAuthn()\" appStopClick>\n          {{ \"webAuthnNewTabOpen\" | i18n }}\n        </button>\n      </div>\n    </ng-container>\n    <ng-container\n      *ngIf=\"\n        selectedProviderType === providerType.Duo ||\n        selectedProviderType === providerType.OrganizationDuo\n      \"\n    >\n      <div id=\"duo-frame\"><iframe id=\"duo_iframe\"></iframe></div>\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"remember\">{{ \"rememberMe\" | i18n }}</label>\n            <input id=\"remember\" type=\"checkbox\" name=\"Remember\" [(ngModel)]=\"remember\" />\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <div class=\"box-content-row\" [hidden]=\"!showCaptcha()\">\n      <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n    </div>\n    <div class=\"content\" *ngIf=\"selectedProviderType == null\">\n      <p class=\"text-center\">{{ \"noTwoStepProviders\" | i18n }}</p>\n      <p class=\"text-center\">{{ \"noTwoStepProviders2\" | i18n }}</p>\n    </div>\n    <div class=\"content no-vpad\" *ngIf=\"selectedProviderType != null\">\n      <p class=\"text-center\">\n        <button type=\"button\" appStopClick (click)=\"anotherMethod()\">\n          {{ \"useAnotherTwoStepMethod\" | i18n }}\n        </button>\n      </p>\n      <p *ngIf=\"selectedProviderType === providerType.Email\" class=\"text-center\">\n        <button type=\"button\" appStopClick (click)=\"sendEmail(true)\" [appApiAction]=\"emailPromise\">\n          {{ \"sendVerificationCodeEmailAgain\" | i18n }}\n        </button>\n      </p>\n    </div>\n  </main>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { TwoFactorComponent as BaseTwoFactorComponent } from \"@bitwarden/angular/components/two-factor.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst BroadcasterSubscriptionId = \"TwoFactorComponent\";\n\n@Component({\n  selector: \"app-two-factor\",\n  templateUrl: \"two-factor.component.html\",\n})\nexport class TwoFactorComponent extends BaseTwoFactorComponent {\n  showNewWindowMessage = false;\n\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    apiService: ApiService,\n    platformUtilsService: PlatformUtilsService,\n    private syncService: SyncService,\n    environmentService: EnvironmentService,\n    private broadcasterService: BroadcasterService,\n    private popupUtilsService: PopupUtilsService,\n    stateService: StateService,\n    route: ActivatedRoute,\n    private messagingService: MessagingService,\n    logService: LogService,\n    twoFactorService: TwoFactorService,\n    appIdService: AppIdService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      apiService,\n      platformUtilsService,\n      window,\n      environmentService,\n      stateService,\n      route,\n      logService,\n      twoFactorService,\n      appIdService\n    );\n    super.onSuccessfulLogin = () => {\n      return syncService.fullSync(true);\n    };\n    super.successRoute = \"/tabs/vault\";\n    this.webAuthnNewTab =\n      this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari();\n  }\n\n  async ngOnInit() {\n    if (this.route.snapshot.paramMap.has(\"webAuthnResponse\")) {\n      // WebAuthn fallback response\n      this.selectedProviderType = TwoFactorProviderType.WebAuthn;\n      this.token = this.route.snapshot.paramMap.get(\"webAuthnResponse\");\n      super.onSuccessfulLogin = async () => {\n        this.syncService.fullSync(true);\n        this.messagingService.send(\"reloadPopup\");\n        window.close();\n      };\n      this.remember = this.route.snapshot.paramMap.get(\"remember\") === \"true\";\n      await this.doSubmit();\n      return;\n    }\n\n    await super.ngOnInit();\n    if (this.selectedProviderType == null) {\n      return;\n    }\n\n    // WebAuthn prompt appears inside the popup on linux, and requires a larger popup width\n    // than usual to avoid cutting off the dialog.\n    if (this.selectedProviderType === TwoFactorProviderType.WebAuthn && (await this.isLinux())) {\n      document.body.classList.add(\"linux-webauthn\");\n    }\n\n    if (\n      this.selectedProviderType === TwoFactorProviderType.Email &&\n      this.popupUtilsService.inPopup(window)\n    ) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"popup2faCloseMessage\"),\n        null,\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (confirmed) {\n        this.popupUtilsService.popOut(window);\n      }\n    }\n\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.sso === \"true\") {\n        super.onSuccessfulLogin = () => {\n          BrowserApi.reloadOpenWindows();\n          const thisWindow = window.open(\"\", \"_self\");\n          thisWindow.close();\n          return this.syncService.fullSync(true);\n        };\n      }\n    });\n  }\n\n  async ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n\n    if (this.selectedProviderType === TwoFactorProviderType.WebAuthn && (await this.isLinux())) {\n      document.body.classList.remove(\"linux-webauthn\");\n    }\n    super.ngOnDestroy();\n  }\n\n  anotherMethod() {\n    this.router.navigate([\"2fa-options\"]);\n  }\n\n  async isLinux() {\n    return (await BrowserApi.getPlatformInfo()).os === \"linux\";\n  }\n}\n","import { OrganizationUserResetPasswordRequest } from \"./organizationUserResetPasswordRequest\";\n\nexport class UpdateTempPasswordRequest extends OrganizationUserResetPasswordRequest {\n  masterPasswordHint: string;\n}\n","export class OrganizationUserResetPasswordRequest {\n  newMasterPasswordHash: string;\n  key: string;\n}\n","import { Directive } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { UpdateTempPasswordRequest } from \"@bitwarden/common/models/request/updateTempPasswordRequest\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class UpdateTempPasswordComponent extends BaseChangePasswordComponent {\n  hint: string;\n  key: string;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  showPassword = false;\n\n  onSuccessfulChangePassword: () => Promise<any>;\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    private apiService: ApiService,\n    stateService: StateService,\n    private syncService: SyncService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    super.ngOnInit();\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions();\n    this.email = await this.stateService.getEmail();\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfIterations = await this.stateService.getKdfIterations();\n    return true;\n  }\n\n  async submit() {\n    // Validation\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    try {\n      // Create new key and hash new password\n      const newKey = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.email.trim().toLowerCase(),\n        this.kdf,\n        this.kdfIterations\n      );\n      const newPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, newKey);\n\n      // Grab user's current enc key\n      const userEncKey = await this.cryptoService.getEncKey();\n\n      // Create new encKey for the User\n      const newEncKey = await this.cryptoService.remakeEncKey(newKey, userEncKey);\n\n      await this.performSubmitActions(newPasswordHash, newKey, newEncKey);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    try {\n      // Create request\n      const request = new UpdateTempPasswordRequest();\n      request.key = encKey[1].encryptedString;\n      request.newMasterPasswordHash = masterPasswordHash;\n      request.masterPasswordHint = this.hint;\n\n      // Update user's password\n      this.formPromise = this.apiService.putUpdateTempPassword(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"updatedMasterPassword\")\n      );\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.messagingService.send(\"logout\");\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <a (click)=\"logOut()\">{{ \"logOut\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"updateMasterPassword\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <app-callout type=\"warning\" title=\"{{ 'updateMasterPassword' | i18n }}\">\n      {{ \"updateMasterPasswordWarning\" | i18n }}\n    </app-callout>\n    <app-callout\n      type=\"info\"\n      [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n      *ngIf=\"enforcedPolicyOptions\"\n    >\n    </app-callout>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <div class=\"box-content-row-flex\">\n            <div class=\"row-main\">\n              <label for=\"masterPassword\">\n                {{ \"masterPass\" | i18n }}\n                <strong\n                  class=\"sub-label text-{{ masterPasswordScoreStyle.Color }}\"\n                  *ngIf=\"masterPasswordScoreStyle.Text\"\n                >\n                  {{ masterPasswordScoreStyle.Text }}\n                </strong>\n              </label>\n              <input\n                id=\"masterPassword\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPassword\"\n                class=\"monospaced\"\n                [(ngModel)]=\"masterPassword\"\n                required\n                appInputVerbatim\n                (input)=\"updatePasswordStrength()\"\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword(false)\"\n                [attr.aria-pressed]=\"showPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"progress\">\n            <div\n              class=\"progress-bar bg-{{ masterPasswordScoreStyle.Color }}\"\n              role=\"progressbar\"\n              aria-valuenow=\"0\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n              [ngStyle]=\"{ width: masterPasswordScoreStyle.Width + '%' }\"\n              attr.aria-valuenow=\"{{ masterPasswordScoreStyle.Width }}\"\n            ></div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n          <div class=\"row-main\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <input\n              id=\"masterPasswordRetype\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"MasterPasswordRetype\"\n              class=\"monospaced\"\n              [(ngModel)]=\"masterPasswordRetype\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appBlurClick\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword(true)\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n              ></i>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n          <input id=\"hint\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"masterPassHintDesc\" | i18n }}\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component } from \"@angular/core\";\n\nimport { UpdateTempPasswordComponent as BaseUpdateTempPasswordComponent } from \"@bitwarden/angular/components/update-temp-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\n\ninterface MasterPasswordScore {\n  Color: string;\n  Text: string;\n  Width: number;\n}\n\n@Component({\n  selector: \"app-update-temp-password\",\n  templateUrl: \"update-temp-password.component.html\",\n})\nexport class UpdateTempPasswordComponent extends BaseUpdateTempPasswordComponent {\n  get masterPasswordScoreStyle(): MasterPasswordScore {\n    const scoreWidth = this.masterPasswordScore == null ? 0 : (this.masterPasswordScore + 1) * 20;\n    switch (this.masterPasswordScore) {\n      case 4:\n        return {\n          Color: \"bg-success\",\n          Text: \"strong\",\n          Width: scoreWidth,\n        };\n      case 3:\n        return {\n          Color: \"bg-primary\",\n          Text: \"good\",\n          Width: scoreWidth,\n        };\n      case 2:\n        return {\n          Color: \"bg-warning\",\n          Text: \"weak\",\n          Width: scoreWidth,\n        };\n      default:\n        return {\n          Color: \"bg-danger\",\n          Text: \"weak\",\n          Width: scoreWidth,\n        };\n    }\n  }\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    messagingService: MessagingService,\n    apiService: ApiService,\n    syncService: SyncService,\n    logService: LogService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      passwordGenerationService,\n      policyService,\n      cryptoService,\n      messagingService,\n      apiService,\n      stateService,\n      syncService,\n      logService\n    );\n  }\n}\n","export abstract class UsernameGenerationService {\n  generateUsername: (options: any) => Promise<string>;\n  generateWord: (options: any) => Promise<string>;\n  generateSubaddress: (options: any) => Promise<string>;\n  generateCatchall: (options: any) => Promise<string>;\n  generateForwarded: (options: any) => Promise<string>;\n  getOptions: () => Promise<any>;\n  saveOptions: (options: any) => Promise<void>;\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\nimport { PasswordGeneratorPolicyOptions } from \"@bitwarden/common/models/domain/passwordGeneratorPolicyOptions\";\n\n@Directive()\nexport class GeneratorComponent implements OnInit {\n  @Input() comingFromAddEdit = false;\n  @Input() type: string;\n  @Output() onSelected = new EventEmitter<string>();\n\n  usernameGeneratingPromise: Promise<string>;\n  typeOptions: any[];\n  passTypeOptions: any[];\n  usernameTypeOptions: any[];\n  subaddressOptions: any[];\n  catchallOptions: any[];\n  forwardOptions: any[];\n  usernameOptions: any = {};\n  passwordOptions: any = {};\n  username = \"-\";\n  password = \"-\";\n  showOptions = false;\n  avoidAmbiguous = false;\n  enforcedPasswordPolicyOptions: PasswordGeneratorPolicyOptions;\n  usernameWebsite: string = null;\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationService,\n    protected usernameGenerationService: UsernameGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected stateService: StateService,\n    protected i18nService: I18nService,\n    protected logService: LogService,\n    protected route: ActivatedRoute,\n    private win: Window\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"username\"), value: \"username\" },\n    ];\n    this.passTypeOptions = [\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"passphrase\"), value: \"passphrase\" },\n    ];\n    this.usernameTypeOptions = [\n      {\n        name: i18nService.t(\"plusAddressedEmail\"),\n        value: \"subaddress\",\n        desc: i18nService.t(\"plusAddressedEmailDesc\"),\n      },\n      {\n        name: i18nService.t(\"catchallEmail\"),\n        value: \"catchall\",\n        desc: i18nService.t(\"catchallEmailDesc\"),\n      },\n      {\n        name: i18nService.t(\"forwardedEmail\"),\n        value: \"forwarded\",\n        desc: i18nService.t(\"forwardedEmailDesc\"),\n      },\n      { name: i18nService.t(\"randomWord\"), value: \"word\" },\n    ];\n    this.subaddressOptions = [{ name: i18nService.t(\"random\"), value: \"random\" }];\n    this.catchallOptions = [{ name: i18nService.t(\"random\"), value: \"random\" }];\n    this.forwardOptions = [\n      { name: \"SimpleLogin\", value: \"simplelogin\" },\n      { name: \"AnonAddy\", value: \"anonaddy\" },\n      { name: \"Firefox Relay\", value: \"firefoxrelay\" },\n      // { name: \"FastMail\", value: \"fastmail\" },\n    ];\n  }\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      const passwordOptionsResponse = await this.passwordGenerationService.getOptions();\n      this.passwordOptions = passwordOptionsResponse[0];\n      this.enforcedPasswordPolicyOptions = passwordOptionsResponse[1];\n      this.avoidAmbiguous = !this.passwordOptions.ambiguous;\n      this.passwordOptions.type =\n        this.passwordOptions.type === \"passphrase\" ? \"passphrase\" : \"password\";\n\n      this.usernameOptions = await this.usernameGenerationService.getOptions();\n      if (this.usernameOptions.type == null) {\n        this.usernameOptions.type = \"word\";\n      }\n      if (\n        this.usernameOptions.subaddressEmail == null ||\n        this.usernameOptions.subaddressEmail === \"\"\n      ) {\n        this.usernameOptions.subaddressEmail = await this.stateService.getEmail();\n      }\n      if (this.usernameWebsite == null) {\n        this.usernameOptions.subaddressType = this.usernameOptions.catchallType = \"random\";\n      } else {\n        this.usernameOptions.website = this.usernameWebsite;\n        const websiteOption = { name: this.i18nService.t(\"websiteName\"), value: \"website-name\" };\n        this.subaddressOptions.push(websiteOption);\n        this.catchallOptions.push(websiteOption);\n      }\n\n      if (this.type !== \"username\" && this.type !== \"password\") {\n        if (qParams.type === \"username\" || qParams.type === \"password\") {\n          this.type = qParams.type;\n        } else {\n          const generatorOptions = await this.stateService.getGeneratorOptions();\n          this.type = generatorOptions?.type ?? \"password\";\n        }\n      }\n      if (this.regenerateWithoutButtonPress()) {\n        await this.regenerate();\n      }\n    });\n  }\n\n  async typeChanged() {\n    await this.stateService.setGeneratorOptions({ type: this.type });\n    if (this.regenerateWithoutButtonPress()) {\n      await this.regenerate();\n    }\n  }\n\n  async regenerate() {\n    if (this.type === \"password\") {\n      await this.regeneratePassword();\n    } else if (this.type === \"username\") {\n      await this.regenerateUsername();\n    }\n  }\n\n  async sliderChanged() {\n    this.savePasswordOptions(false);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  async sliderInput() {\n    this.normalizePasswordOptions();\n    this.password = await this.passwordGenerationService.generatePassword(this.passwordOptions);\n  }\n\n  async savePasswordOptions(regenerate = true) {\n    this.normalizePasswordOptions();\n    await this.passwordGenerationService.saveOptions(this.passwordOptions);\n\n    if (regenerate && this.regenerateWithoutButtonPress()) {\n      await this.regeneratePassword();\n    }\n  }\n\n  async saveUsernameOptions(regenerate = true) {\n    await this.usernameGenerationService.saveOptions(this.usernameOptions);\n    if (this.usernameOptions.type === \"forwarded\") {\n      this.username = \"-\";\n    }\n    if (regenerate && this.regenerateWithoutButtonPress()) {\n      await this.regenerateUsername();\n    }\n  }\n\n  async regeneratePassword() {\n    this.password = await this.passwordGenerationService.generatePassword(this.passwordOptions);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  regenerateUsername() {\n    return this.generateUsername();\n  }\n\n  async generateUsername() {\n    try {\n      this.usernameGeneratingPromise = this.usernameGenerationService.generateUsername(\n        this.usernameOptions\n      );\n      this.username = await this.usernameGeneratingPromise;\n      if (this.username === \"\" || this.username === null) {\n        this.username = \"-\";\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  copy() {\n    const password = this.type === \"password\";\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(\n      password ? this.password : this.username,\n      copyOptions\n    );\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(password ? \"password\" : \"username\"))\n    );\n  }\n\n  select() {\n    this.onSelected.emit(this.type === \"password\" ? this.password : this.username);\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  regenerateWithoutButtonPress() {\n    return this.type !== \"username\" || this.usernameOptions.type !== \"forwarded\";\n  }\n\n  private normalizePasswordOptions() {\n    // Application level normalize options depedent on class variables\n    this.passwordOptions.ambiguous = !this.avoidAmbiguous;\n\n    if (\n      !this.passwordOptions.uppercase &&\n      !this.passwordOptions.lowercase &&\n      !this.passwordOptions.number &&\n      !this.passwordOptions.special\n    ) {\n      this.passwordOptions.lowercase = true;\n      if (this.win != null) {\n        const lowercase = this.win.document.querySelector(\"#lowercase\") as HTMLInputElement;\n        if (lowercase) {\n          lowercase.checked = true;\n        }\n      }\n    }\n\n    this.passwordGenerationService.normalizeOptions(\n      this.passwordOptions,\n      this.enforcedPasswordPolicyOptions\n    );\n  }\n}\n","<ng-container *ngIf=\"show\">\n  <button type=\"button\" (click)=\"expand()\" appA11yTitle=\"{{ 'popOutNewWindow' | i18n }}\">\n    <i class=\"bwi bwi-external-link bwi-rotate-270 bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n  </button>\n</ng-container>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\n@Component({\n  selector: \"app-pop-out\",\n  templateUrl: \"pop-out.component.html\",\n})\nexport class PopOutComponent implements OnInit {\n  @Input() show = true;\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private popupUtilsService: PopupUtilsService\n  ) {}\n\n  ngOnInit() {\n    if (this.show) {\n      if (\n        (this.popupUtilsService.inSidebar(window) && this.platformUtilsService.isFirefox()) ||\n        this.popupUtilsService.inPopout(window)\n      ) {\n        this.show = false;\n      }\n    }\n  }\n\n  expand() {\n    this.popupUtilsService.popOut(window);\n  }\n}\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Directive({\n  selector: \"[appSelectCopy]\",\n})\nexport class SelectCopyDirective {\n  constructor(private el: ElementRef, private platformUtilsService: PlatformUtilsService) {}\n\n  @HostListener(\"copy\") onCopy() {\n    if (window == null) {\n      return;\n    }\n    let copyText = \"\";\n    const selection = window.getSelection();\n    for (let i = 0; i < selection.rangeCount; i++) {\n      const range = selection.getRangeAt(i);\n      const text = range.toString();\n\n      // The selection should only contain one line of text. In some cases however, the\n      // selection contains newlines and space characters from the indentation of following\n      // sibling nodes. To avoid copying passwords containing trailing newlines and spaces\n      // that aren't part of the password, the selection has to be trimmed.\n      let stringEndPos = text.length;\n      const newLinePos = text.search(/(?:\\r\\n|\\r|\\n)/);\n      if (newLinePos > -1) {\n        const otherPart = text.substr(newLinePos).trim();\n        if (otherPart === \"\") {\n          stringEndPos = newLinePos;\n        }\n      }\n      copyText += text.substring(0, stringEndPos);\n    }\n    this.platformUtilsService.copyToClipboard(copyText, { window: window });\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n/*\n An updated pipe that sanitizes HTML, highlights numbers and special characters (in different colors each)\n and handles Unicode / Emoji characters correctly.\n*/\n@Pipe({ name: \"colorPassword\" })\nexport class ColorPasswordPipe implements PipeTransform {\n  transform(password: string) {\n    const template = (character: string, type: string) =>\n      `<span class=\"password-${type}\">${character}</span>`;\n    const colorizedPassword = this.generateTemplate(password, template);\n    return colorizedPassword;\n  }\n\n  protected generateTemplate(\n    password: string,\n    templateGenerator: (chararacter: string, type: string, index?: number) => string\n  ) {\n    // Convert to an array to handle cases that stings have special characters, ie: emoji.\n    const passwordArray = Array.from(password);\n    let colorizedPassword = \"\";\n    for (let i = 0; i < passwordArray.length; i++) {\n      let character = passwordArray[i];\n      let isSpecial = false;\n      // Sanitize HTML first.\n      switch (character) {\n        case \"&\":\n          character = \"&amp;\";\n          isSpecial = true;\n          break;\n        case \"<\":\n          character = \"&lt;\";\n          isSpecial = true;\n          break;\n        case \">\":\n          character = \"&gt;\";\n          isSpecial = true;\n          break;\n        case \" \":\n          character = \"&nbsp;\";\n          isSpecial = true;\n          break;\n        default:\n          break;\n      }\n      let type = \"letter\";\n      if (character.match(Utils.regexpEmojiPresentation)) {\n        type = \"emoji\";\n      } else if (isSpecial || character.match(/[^\\w ]/)) {\n        type = \"special\";\n      } else if (character.match(/\\d/)) {\n        type = \"number\";\n      }\n      colorizedPassword += templateGenerator(character, type, i);\n    }\n    return colorizedPassword;\n  }\n}\n","<header>\n  <div class=\"left\">\n    <app-pop-out [show]=\"!comingFromAddEdit\"></app-pop-out>\n    <button type=\"button\" appBlurClick (click)=\"close()\" *ngIf=\"comingFromAddEdit\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"generator\" | i18n }}</span>\n  </h1>\n  <div class=\"right\">\n    <button type=\"button\" appBlurClick (click)=\"select()\" *ngIf=\"comingFromAddEdit\">\n      {{ \"select\" | i18n }}\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\">\n  <app-callout type=\"info\" *ngIf=\"enforcedPasswordPolicyOptions?.inEffect() && type === 'password'\">\n    {{ \"passwordGeneratorPolicyInEffect\" | i18n }}\n  </app-callout>\n  <div class=\"generated-block\" *ngIf=\"type === 'password'\">\n    <div class=\"generated-wrapper\" [innerHTML]=\"password | colorPassword\" appSelectCopy></div>\n    <div class=\"action-buttons\">\n      <button\n        type=\"button\"\n        class=\"row-btn\"\n        appStopClick\n        appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n        (click)=\"copy()\"\n      >\n        <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        appStopClick\n        appBlurClick\n        appA11yTitle=\"{{ 'regeneratePassword' | i18n }}\"\n        (click)=\"regenerate()\"\n      >\n        <i class=\"bwi bwi-lg bwi-generate\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"generated-block\" *ngIf=\"type === 'username'\">\n    <div class=\"generated-wrapper\" [innerHTML]=\"username | colorPassword\" appSelectCopy></div>\n    <div class=\"action-buttons\" #form [appApiAction]=\"usernameGeneratingPromise\">\n      <button\n        type=\"button\"\n        class=\"row-btn\"\n        appStopClick\n        appA11yTitle=\"{{ 'copyUsername' | i18n }}\"\n        (click)=\"copy()\"\n      >\n        <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        appStopClick\n        appBlurClick\n        appA11yTitle=\"{{ 'regenerateUsername' | i18n }}\"\n        (click)=\"regenerate()\"\n        [disabled]=\"form.loading\"\n      >\n        <i\n          class=\"bwi bwi-lg bwi-generate\"\n          [ngClass]=\"form.loading ? 'bwi-spin' : ''\"\n          aria-hidden=\"true\"\n        ></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box\">\n    <div class=\"box-content\">\n      <div class=\"box-content-row\" role=\"radiogroup\" aria-labelledby=\"typeHeading\">\n        <label id=\"typeHeading\" class=\"radio-header\">{{\n          \"whatWouldYouLikeToGenerate\" | i18n\n        }}</label>\n        <div class=\"radio-group text-default\" appBoxRow *ngFor=\"let o of typeOptions\">\n          <input\n            type=\"radio\"\n            [(ngModel)]=\"type\"\n            name=\"Type\"\n            id=\"type_{{ o.value }}\"\n            [value]=\"o.value\"\n            (change)=\"typeChanged()\"\n            [checked]=\"type === o.value\"\n            [disabled]=\"comingFromAddEdit && type !== o.value\"\n          />\n          <label for=\"type_{{ o.value }}\">\n            {{ o.name }}\n          </label>\n        </div>\n      </div>\n    </div>\n  </div>\n  <ng-container *ngIf=\"type === 'password'\">\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"options\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" role=\"radiogroup\" aria-labelledby=\"passwordTypeHeading\">\n          <label id=\"passwordTypeHeading\" class=\"radio-header\">{{ \"passwordType\" | i18n }}</label>\n          <div class=\"radio-group text-default\" appBoxRow *ngFor=\"let o of passTypeOptions\">\n            <input\n              type=\"radio\"\n              [(ngModel)]=\"passwordOptions.type\"\n              name=\"PasswordType\"\n              id=\"passwordtype_{{ o.value }}\"\n              [value]=\"o.value\"\n              (change)=\"savePasswordOptions()\"\n              [checked]=\"passwordOptions.type === o.value\"\n            />\n            <label for=\"passwordtype_{{ o.value }}\">\n              {{ o.name }}\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"passwordOptions.type === 'passphrase'\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-input\" appBoxRow>\n          <label for=\"num-words\">{{ \"numWords\" | i18n }}</label>\n          <input\n            id=\"num-words\"\n            type=\"number\"\n            min=\"3\"\n            max=\"20\"\n            (change)=\"savePasswordOptions()\"\n            [(ngModel)]=\"passwordOptions.numWords\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-input\" appBoxRow>\n          <label for=\"word-separator\">{{ \"wordSeparator\" | i18n }}</label>\n          <input\n            id=\"word-separator\"\n            type=\"text\"\n            maxlength=\"1\"\n            (input)=\"savePasswordOptions()\"\n            [(ngModel)]=\"passwordOptions.wordSeparator\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"capitalize\">{{ \"capitalize\" | i18n }}</label>\n          <input\n            id=\"capitalize\"\n            type=\"checkbox\"\n            (change)=\"savePasswordOptions()\"\n            [(ngModel)]=\"passwordOptions.capitalize\"\n            [disabled]=\"enforcedPasswordPolicyOptions?.capitalize\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"include-number\">{{ \"includeNumber\" | i18n }}</label>\n          <input\n            id=\"include-number\"\n            type=\"checkbox\"\n            (change)=\"savePasswordOptions()\"\n            [(ngModel)]=\"passwordOptions.includeNumber\"\n            [disabled]=\"enforcedPasswordPolicyOptions?.includeNumber\"\n          />\n        </div>\n      </div>\n    </div>\n    <ng-container *ngIf=\"passwordOptions.type === 'password'\">\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-slider\" appBoxRow>\n            <label for=\"length\">{{ \"length\" | i18n }}</label>\n            <input\n              id=\"length\"\n              type=\"number\"\n              min=\"5\"\n              max=\"128\"\n              [(ngModel)]=\"passwordOptions.length\"\n              (change)=\"savePasswordOptions()\"\n            />\n            <input\n              id=\"lengthRange\"\n              type=\"range\"\n              min=\"5\"\n              max=\"128\"\n              step=\"1\"\n              [(ngModel)]=\"passwordOptions.length\"\n              (change)=\"sliderChanged()\"\n              (input)=\"sliderInput()\"\n              attr.aria-label=\"{{ 'length' | i18n }}\"\n              tabindex=\"-1\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"uppercase\">A-Z</label>\n            <input\n              id=\"uppercase\"\n              type=\"checkbox\"\n              (change)=\"savePasswordOptions()\"\n              attr.aria-label=\"{{ 'uppercase' | i18n }}\"\n              [disabled]=\"enforcedPasswordPolicyOptions.useUppercase\"\n              [(ngModel)]=\"passwordOptions.uppercase\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"lowercase\">a-z</label>\n            <input\n              id=\"lowercase\"\n              type=\"checkbox\"\n              (change)=\"savePasswordOptions()\"\n              attr.aria-label=\"{{ 'lowercase' | i18n }}\"\n              [disabled]=\"enforcedPasswordPolicyOptions.useLowercase\"\n              [(ngModel)]=\"passwordOptions.lowercase\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"numbers\">0-9</label>\n            <input\n              id=\"numbers\"\n              type=\"checkbox\"\n              (change)=\"savePasswordOptions()\"\n              attr.aria-label=\"{{ 'numbers' | i18n }}\"\n              [disabled]=\"enforcedPasswordPolicyOptions.useNumbers\"\n              [(ngModel)]=\"passwordOptions.number\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"special\">!@#$%^&*</label>\n            <input\n              id=\"special\"\n              type=\"checkbox\"\n              (change)=\"savePasswordOptions()\"\n              attr.aria-label=\"{{ 'specialCharacters' | i18n }}\"\n              [disabled]=\"enforcedPasswordPolicyOptions.useSpecial\"\n              [(ngModel)]=\"passwordOptions.special\"\n            />\n          </div>\n        </div>\n      </div>\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-input\" appBoxRow>\n            <label for=\"min-number\">{{ \"minNumbers\" | i18n }}</label>\n            <input\n              id=\"min-number\"\n              type=\"number\"\n              min=\"0\"\n              max=\"9\"\n              (change)=\"savePasswordOptions()\"\n              [(ngModel)]=\"passwordOptions.minNumber\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-input\" appBoxRow>\n            <label for=\"min-special\">{{ \"minSpecial\" | i18n }}</label>\n            <input\n              id=\"min-special\"\n              type=\"number\"\n              min=\"0\"\n              max=\"9\"\n              (change)=\"savePasswordOptions()\"\n              [(ngModel)]=\"passwordOptions.minSpecial\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"ambiguous\">{{ \"avoidAmbChar\" | i18n }}</label>\n            <input\n              id=\"ambiguous\"\n              type=\"checkbox\"\n              (change)=\"savePasswordOptions()\"\n              [(ngModel)]=\"avoidAmbiguous\"\n            />\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <div class=\"box list\">\n      <div class=\"box-content single-line\">\n        <a class=\"box-content-row box-content-row-flex\" routerLink=\"/generator-history\">\n          <div class=\"row-main\">{{ \"passwordHistory\" | i18n }}</div>\n          <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n        </a>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"type === 'username'\">\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"options\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" role=\"radiogroup\" aria-labelledby=\"usernameTypeHeading\">\n          <label id=\"usernameTypeHeading\" class=\"radio-header\">\n            {{ \"usernameType\" | i18n }}\n            <a\n              href=\"https://bitwarden.com/help/generator/#username-types\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </label>\n          <div\n            class=\"radio-group align-start text-default\"\n            appBoxRow\n            *ngFor=\"let o of usernameTypeOptions\"\n          >\n            <input\n              type=\"radio\"\n              [(ngModel)]=\"usernameOptions.type\"\n              name=\"UsernameType\"\n              id=\"type_{{ o.value }}\"\n              [value]=\"o.value\"\n              (change)=\"saveUsernameOptions()\"\n              [checked]=\"usernameOptions.type === o.value\"\n            />\n            <label for=\"type_{{ o.value }}\">\n              {{ o.name }}\n              <div class=\"small text-muted\" *ngIf=\"o.desc\">{{ o.desc }}</div>\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"usernameOptions.type === 'forwarded'\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" role=\"radiogroup\" aria-labelledby=\"forwardTypeHeading\">\n          <label id=\"forwardTypeHeading\" class=\"radio-header\">{{ \"service\" | i18n }}</label>\n          <div class=\"radio-group text-default\" appBoxRow *ngFor=\"let o of forwardOptions\">\n            <input\n              type=\"radio\"\n              [(ngModel)]=\"usernameOptions.forwardedService\"\n              name=\"ForwardType\"\n              id=\"forwardtype_{{ o.value }}\"\n              [value]=\"o.value\"\n              (change)=\"saveUsernameOptions()\"\n              [checked]=\"usernameOptions.forwardedService === o.value\"\n            />\n            <label for=\"forwardtype_{{ o.value }}\">\n              {{ o.name }}\n            </label>\n          </div>\n        </div>\n        <ng-container *ngIf=\"usernameOptions.forwardedService === 'simplelogin'\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"simplelogin-apikey\">{{ \"apiKey\" | i18n }}</label>\n            <input\n              id=\"simplelogin-apikey\"\n              type=\"password\"\n              name=\"SimpleLoginApiKey\"\n              [(ngModel)]=\"usernameOptions.forwardedSimpleLoginApiKey\"\n              (blur)=\"saveUsernameOptions()\"\n            />\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"usernameOptions.forwardedService === 'anonaddy'\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"anonaddy-accessToken\">{{ \"apiAccessToken\" | i18n }}</label>\n            <input\n              id=\"anonaddy-accessToken\"\n              type=\"password\"\n              name=\"AnonAddyAccessToken\"\n              [(ngModel)]=\"usernameOptions.forwardedAnonAddyApiToken\"\n              (blur)=\"saveUsernameOptions()\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"anonaddy-domain\">{{ \"domainName\" | i18n }}</label>\n            <input\n              id=\"anonaddy-domain\"\n              type=\"text\"\n              name=\"AnonAddyDomain\"\n              [(ngModel)]=\"usernameOptions.forwardedAnonAddyDomain\"\n              (blur)=\"saveUsernameOptions()\"\n            />\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"usernameOptions.forwardedService === 'firefoxrelay'\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"firefox-apikey\">{{ \"apiAccessToken\" | i18n }}</label>\n            <input\n              id=\"firefox-apikey\"\n              type=\"password\"\n              name=\"FirefoxApiKey\"\n              [(ngModel)]=\"usernameOptions.forwardedFirefoxApiToken\"\n              (blur)=\"saveUsernameOptions()\"\n            />\n          </div>\n        </ng-container>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"usernameOptions.type === 'subaddress'\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"subaddress-email\">{{ \"emailAddress\" | i18n }}</label>\n          <input\n            id=\"subaddress-email\"\n            type=\"text\"\n            name=\"SubaddressEmail\"\n            [(ngModel)]=\"usernameOptions.subaddressEmail\"\n            (blur)=\"saveUsernameOptions()\"\n          />\n        </div>\n        <div\n          class=\"box-content-row\"\n          role=\"radiogroup\"\n          aria-labelledby=\"subaddressTypeHeading\"\n          *ngIf=\"subaddressOptions.length > 1\"\n        >\n          <label id=\"subaddressTypeHeading\" class=\"radio-header\">{{ \"type\" | i18n }}</label>\n          <div class=\"radio-group text-default\" appBoxRow *ngFor=\"let o of subaddressOptions\">\n            <input\n              type=\"radio\"\n              [(ngModel)]=\"usernameOptions.subaddressType\"\n              name=\"SubaddressType\"\n              id=\"subaddresstype_{{ o.value }}\"\n              [value]=\"o.value\"\n              (change)=\"saveUsernameOptions()\"\n              [checked]=\"usernameOptions.subaddressType === o.value\"\n            />\n            <label for=\"subaddresstype_{{ o.value }}\">\n              {{ o.name }}\n            </label>\n          </div>\n        </div>\n        <div class=\"box-content-row\" appBoxRow *ngIf=\"usernameWebsite\">\n          <label for=\"subaddress-website\">{{ \"website\" | i18n }}</label>\n          <input\n            id=\"subaddress-website\"\n            type=\"text\"\n            name=\"SubaddressWebsite\"\n            [value]=\"usernameOptions.website\"\n            disabled\n            readonly\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"usernameOptions.type === 'catchall'\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"catchall-domain\">{{ \"domainName\" | i18n }}</label>\n          <input\n            id=\"catchall-domain\"\n            type=\"text\"\n            name=\"CatchallDomain\"\n            [(ngModel)]=\"usernameOptions.catchallDomain\"\n            (blur)=\"saveUsernameOptions()\"\n          />\n        </div>\n        <div\n          class=\"box-content-row\"\n          role=\"radiogroup\"\n          aria-labelledby=\"catchallTypeHeading\"\n          *ngIf=\"catchallOptions.length > 1\"\n        >\n          <label id=\"catchallTypeHeading\" class=\"radio-header\">{{ \"type\" | i18n }}</label>\n          <div class=\"radio-group text-default\" appBoxRow *ngFor=\"let o of catchallOptions\">\n            <input\n              type=\"radio\"\n              [(ngModel)]=\"usernameOptions.catchallType\"\n              name=\"CatchallType\"\n              id=\"catchalltype_{{ o.value }}\"\n              [value]=\"o.value\"\n              (change)=\"saveUsernameOptions()\"\n              [checked]=\"usernameOptions.catchallType === o.value\"\n            />\n            <label for=\"catchalltype_{{ o.value }}\">\n              {{ o.name }}\n            </label>\n          </div>\n        </div>\n        <div class=\"box-content-row\" appBoxRow *ngIf=\"usernameWebsite\">\n          <label for=\"catchall-website\">{{ \"website\" | i18n }}</label>\n          <input\n            id=\"catchall-website\"\n            type=\"text\"\n            name=\"CatchallWebsite\"\n            [value]=\"usernameOptions.website\"\n            disabled\n            readonly\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"usernameOptions.type === 'word'\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"capitalize\">{{ \"capitalize\" | i18n }}</label>\n          <input\n            id=\"capitalize\"\n            type=\"checkbox\"\n            (change)=\"saveUsernameOptions()\"\n            [(ngModel)]=\"usernameOptions.wordCapitalize\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"include-number\">{{ \"includeNumber\" | i18n }}</label>\n          <input\n            id=\"include-number\"\n            type=\"checkbox\"\n            (change)=\"saveUsernameOptions()\"\n            [(ngModel)]=\"usernameOptions.wordIncludeNumber\"\n          />\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</main>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { GeneratorComponent as BaseGeneratorComponent } from \"@bitwarden/angular/components/generator.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n@Component({\n  selector: \"app-generator\",\n  templateUrl: \"generator.component.html\",\n})\nexport class GeneratorComponent extends BaseGeneratorComponent {\n  private addEditCipherInfo: any;\n  private cipherState: CipherView;\n\n  constructor(\n    passwordGenerationService: PasswordGenerationService,\n    usernameGenerationService: UsernameGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    stateService: StateService,\n    route: ActivatedRoute,\n    logService: LogService,\n    private location: Location\n  ) {\n    super(\n      passwordGenerationService,\n      usernameGenerationService,\n      platformUtilsService,\n      stateService,\n      i18nService,\n      logService,\n      route,\n      window\n    );\n  }\n\n  async ngOnInit() {\n    this.addEditCipherInfo = await this.stateService.getAddEditCipherInfo();\n    if (this.addEditCipherInfo != null) {\n      this.cipherState = this.addEditCipherInfo.cipher;\n    }\n    this.comingFromAddEdit = this.cipherState != null;\n    if (this.cipherState?.login?.hasUris) {\n      this.usernameWebsite = this.cipherState.login.uris[0].hostname;\n    }\n    await super.ngOnInit();\n  }\n\n  select() {\n    super.select();\n    if (this.type === \"password\") {\n      this.cipherState.login.password = this.password;\n    } else if (this.type === \"username\") {\n      this.cipherState.login.username = this.username;\n    }\n    this.addEditCipherInfo.cipher = this.cipherState;\n    this.stateService.setAddEditCipherInfo(this.addEditCipherInfo);\n    this.close();\n  }\n\n  close() {\n    this.location.back();\n  }\n}\n","export enum PolicyType {\n  TwoFactorAuthentication = 0, // Requires users to have 2fa enabled\n  MasterPassword = 1, // Sets minimum requirements for master password complexity\n  PasswordGenerator = 2, // Sets minimum requirements/default type for generated passwords/passphrases\n  SingleOrg = 3, // Allows users to only be apart of one organization\n  RequireSso = 4, // Requires users to authenticate with SSO\n  PersonalOwnership = 5, // Disables personal vault ownership for adding/cloning items\n  DisableSend = 6, // Disables the ability to create and edit Bitwarden Sends\n  SendOptions = 7, // Sets restrictions or defaults for Bitwarden Sends\n  ResetPassword = 8, // Allows orgs to use reset password : also can enable auto-enrollment during invite flow\n  MaximumVaultTimeout = 9, // Sets the maximum allowed vault timeout\n  DisablePersonalVaultExport = 10, // Disable personal vault export\n}\n","export enum SendType {\n  Text = 0,\n  File = 1,\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { GeneratedPasswordHistory } from \"@bitwarden/common/models/domain/generatedPasswordHistory\";\n\n@Directive()\nexport class PasswordGeneratorHistoryComponent implements OnInit {\n  history: GeneratedPasswordHistory[] = [];\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    private win: Window\n  ) {}\n\n  async ngOnInit() {\n    this.history = await this.passwordGenerationService.getHistory();\n  }\n\n  clear() {\n    this.history = [];\n    this.passwordGenerationService.clear();\n  }\n\n  copy(password: string) {\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(password, copyOptions);\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" appBlurClick type=\"button\" (click)=\"close()\">\n      <span class=\"header-icon\" aria-hidden=\"true\"><i class=\"bwi bwi-angle-left\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"passwordHistory\" | i18n }}</span>\n  </h1>\n  <div class=\"right\">\n    <button type=\"button\" appBlurClick type=\"button\" (click)=\"clear()\">\n      {{ \"clear\" | i18n }}\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"box list full-list\" *ngIf=\"history && history.length\">\n    <div class=\"box-content\">\n      <div class=\"box-content-row box-content-row-flex\" *ngFor=\"let h of history\">\n        <div class=\"row-main\">\n          <div class=\"row-main-content\">\n            <div\n              class=\"monospaced password-wrapper\"\n              appSelectCopy\n              [innerHTML]=\"h.password | colorPassword\"\n            ></div>\n            <span class=\"detail\">{{ h.date | date: \"medium\" }}</span>\n          </div>\n        </div>\n        <div class=\"action-buttons\">\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n            (click)=\"copy(h.password)\"\n          >\n            <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"no-items\" *ngIf=\"!history || !history.length\">\n    <p>{{ \"noPasswordsInList\" | i18n }}</p>\n  </div>\n</main>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\n\nimport { PasswordGeneratorHistoryComponent as BasePasswordGeneratorHistoryComponent } from \"@bitwarden/angular/components/password-generator-history.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-password-generator-history\",\n  templateUrl: \"password-generator-history.component.html\",\n})\nexport class PasswordGeneratorHistoryComponent extends BasePasswordGeneratorHistoryComponent {\n  constructor(\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    private location: Location\n  ) {\n    super(passwordGenerationService, platformUtilsService, i18nService, window);\n  }\n\n  close() {\n    this.location.back();\n  }\n}\n","import { SendFile } from \"../domain/sendFile\";\n\nimport { View } from \"./view\";\n\nexport class SendFileView implements View {\n  id: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n\n  constructor(f?: SendFile) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.size = f.size;\n    this.sizeName = f.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n}\n","import { SendText } from \"../domain/sendText\";\n\nimport { View } from \"./view\";\n\nexport class SendTextView implements View {\n  text: string = null;\n  hidden: boolean;\n\n  constructor(t?: SendText) {\n    if (!t) {\n      return;\n    }\n\n    this.hidden = t.hidden;\n  }\n\n  get maskedText(): string {\n    return this.text != null ? \"••••••••\" : null;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { Send } from \"../domain/send\";\nimport { SymmetricCryptoKey } from \"../domain/symmetricCryptoKey\";\n\nimport { SendFileView } from \"./sendFileView\";\nimport { SendTextView } from \"./sendTextView\";\nimport { View } from \"./view\";\n\nexport class SendView implements View {\n  id: string = null;\n  accessId: string = null;\n  name: string = null;\n  notes: string = null;\n  key: ArrayBuffer;\n  cryptoKey: SymmetricCryptoKey;\n  type: SendType = null;\n  text = new SendTextView();\n  file = new SendFileView();\n  maxAccessCount?: number = null;\n  accessCount = 0;\n  revisionDate: Date = null;\n  deletionDate: Date = null;\n  expirationDate: Date = null;\n  password: string = null;\n  disabled = false;\n  hideEmail = false;\n\n  constructor(s?: Send) {\n    if (!s) {\n      return;\n    }\n\n    this.id = s.id;\n    this.accessId = s.accessId;\n    this.type = s.type;\n    this.maxAccessCount = s.maxAccessCount;\n    this.accessCount = s.accessCount;\n    this.revisionDate = s.revisionDate;\n    this.deletionDate = s.deletionDate;\n    this.expirationDate = s.expirationDate;\n    this.disabled = s.disabled;\n    this.password = s.password;\n    this.hideEmail = s.hideEmail;\n  }\n\n  get urlB64Key(): string {\n    return Utils.fromBufferToUrlB64(this.key);\n  }\n\n  get maxAccessCountReached(): boolean {\n    if (this.maxAccessCount == null) {\n      return false;\n    }\n    return this.accessCount >= this.maxAccessCount;\n  }\n\n  get expired(): boolean {\n    if (this.expirationDate == null) {\n      return false;\n    }\n    return this.expirationDate <= new Date();\n  }\n\n  get pendingDelete(): boolean {\n    return this.deletionDate <= new Date();\n  }\n}\n","import { SendData } from \"../models/data/sendData\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { Send } from \"../models/domain/send\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class SendService {\n  clearCache: () => Promise<void>;\n  encrypt: (\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ) => Promise<[Send, EncArrayBuffer]>;\n  get: (id: string) => Promise<Send>;\n  getAll: () => Promise<Send[]>;\n  getAllDecrypted: () => Promise<SendView[]>;\n  saveWithServer: (sendData: [Send, EncArrayBuffer]) => Promise<any>;\n  upsert: (send: SendData | SendData[]) => Promise<any>;\n  replace: (sends: { [id: string]: SendData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  removePasswordWithServer: (id: string) => Promise<any>;\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { FormControl, FormGroup } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n// Different BrowserPath = different controls.\nenum BrowserPath {\n  // Native datetime-locale.\n  // We are happy.\n  Default = \"default\",\n\n  // Native date and time inputs, but no datetime-locale.\n  // We use individual date and time inputs and create a datetime programatically on submit.\n  Firefox = \"firefox\",\n\n  // No native date, time, or datetime-locale inputs.\n  // We use a polyfill for dates and a dropdown for times.\n  Safari = \"safari\",\n}\n\nenum DateField {\n  DeletionDate = \"deletion\",\n  ExpriationDate = \"expiration\",\n}\n\n// Value = hours\nenum DatePreset {\n  OneHour = 1,\n  OneDay = 24,\n  TwoDays = 48,\n  ThreeDays = 72,\n  SevenDays = 168,\n  ThirtyDays = 720,\n  Custom = 0,\n  Never = null,\n}\n\n// TimeOption is used for the dropdown implementation of custom times\n// twelveHour = displayed time; twentyFourHour = time used in logic\ninterface TimeOption {\n  twelveHour: string;\n  twentyFourHour: string;\n}\n\n@Directive()\nexport class EffluxDatesComponent implements OnInit {\n  @Input() readonly initialDeletionDate: Date;\n  @Input() readonly initialExpirationDate: Date;\n  @Input() readonly editMode: boolean;\n  @Input() readonly disabled: boolean;\n\n  @Output() datesChanged = new EventEmitter<{ deletionDate: string; expirationDate: string }>();\n\n  get browserPath(): BrowserPath {\n    if (this.platformUtilsService.isFirefox()) {\n      return BrowserPath.Firefox;\n    } else if (this.platformUtilsService.isSafari()) {\n      return BrowserPath.Safari;\n    }\n    return BrowserPath.Default;\n  }\n\n  datesForm = new FormGroup({\n    selectedDeletionDatePreset: new FormControl(),\n    selectedExpirationDatePreset: new FormControl(),\n    defaultDeletionDateTime: new FormControl(),\n    defaultExpirationDateTime: new FormControl(),\n    fallbackDeletionDate: new FormControl(),\n    fallbackDeletionTime: new FormControl(),\n    fallbackExpirationDate: new FormControl(),\n    fallbackExpirationTime: new FormControl(),\n  });\n\n  deletionDatePresets: any[] = [\n    { name: this.i18nService.t(\"oneHour\"), value: DatePreset.OneHour },\n    { name: this.i18nService.t(\"oneDay\"), value: DatePreset.OneDay },\n    { name: this.i18nService.t(\"days\", \"2\"), value: DatePreset.TwoDays },\n    { name: this.i18nService.t(\"days\", \"3\"), value: DatePreset.ThreeDays },\n    { name: this.i18nService.t(\"days\", \"7\"), value: DatePreset.SevenDays },\n    { name: this.i18nService.t(\"days\", \"30\"), value: DatePreset.ThirtyDays },\n    { name: this.i18nService.t(\"custom\"), value: DatePreset.Custom },\n  ];\n\n  expirationDatePresets: any[] = [\n    { name: this.i18nService.t(\"never\"), value: DatePreset.Never },\n  ].concat([...this.deletionDatePresets]);\n\n  get selectedDeletionDatePreset(): FormControl {\n    return this.datesForm.get(\"selectedDeletionDatePreset\") as FormControl;\n  }\n\n  get selectedExpirationDatePreset(): FormControl {\n    return this.datesForm.get(\"selectedExpirationDatePreset\") as FormControl;\n  }\n\n  get defaultDeletionDateTime(): FormControl {\n    return this.datesForm.get(\"defaultDeletionDateTime\") as FormControl;\n  }\n\n  get defaultExpirationDateTime(): FormControl {\n    return this.datesForm.get(\"defaultExpirationDateTime\") as FormControl;\n  }\n\n  get fallbackDeletionDate(): FormControl {\n    return this.datesForm.get(\"fallbackDeletionDate\") as FormControl;\n  }\n\n  get fallbackDeletionTime(): FormControl {\n    return this.datesForm.get(\"fallbackDeletionTime\") as FormControl;\n  }\n\n  get fallbackExpirationDate(): FormControl {\n    return this.datesForm.get(\"fallbackExpirationDate\") as FormControl;\n  }\n\n  get fallbackExpirationTime(): FormControl {\n    return this.datesForm.get(\"fallbackExpirationTime\") as FormControl;\n  }\n\n  // Should be able to call these at any time and compute a submitable value\n  get formattedDeletionDate(): string {\n    switch (this.selectedDeletionDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n        return this.formattedDeletionDate;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            return this.fallbackDeletionDate.value + \"T\" + this.fallbackDeletionTime.value;\n          default:\n            return this.defaultDeletionDateTime.value;\n        }\n      default: {\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedDeletionDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n      }\n    }\n  }\n\n  get formattedExpirationDate(): string {\n    switch (this.selectedExpirationDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        return null;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            if (\n              (!this.fallbackExpirationDate.value || !this.fallbackExpirationTime.value) &&\n              this.editMode\n            ) {\n              return null;\n            }\n            return this.fallbackExpirationDate.value + \"T\" + this.fallbackExpirationTime.value;\n          default:\n            if (!this.defaultExpirationDateTime.value) {\n              return null;\n            }\n            return this.defaultExpirationDateTime.value;\n        }\n      default: {\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedExpirationDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n      }\n    }\n  }\n  //\n\n  get safariDeletionTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.DeletionDate);\n  }\n\n  get safariExpirationTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.ExpriationDate);\n  }\n\n  private get nextWeek(): Date {\n    const nextWeek = new Date();\n    nextWeek.setDate(nextWeek.getDate() + 7);\n    return nextWeek;\n  }\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {}\n\n  ngOnInit(): void {\n    this.setInitialFormValues();\n    this.emitDates();\n    this.datesForm.valueChanges.subscribe(() => {\n      this.emitDates();\n    });\n  }\n\n  onDeletionDatePresetSelect(value: DatePreset) {\n    this.selectedDeletionDatePreset.setValue(value);\n  }\n\n  clearExpiration() {\n    switch (this.browserPath) {\n      case BrowserPath.Safari:\n      case BrowserPath.Firefox:\n        this.fallbackExpirationDate.setValue(null);\n        this.fallbackExpirationTime.setValue(null);\n        break;\n      case BrowserPath.Default:\n        this.defaultExpirationDateTime.setValue(null);\n        break;\n    }\n  }\n\n  protected emitDates() {\n    this.datesChanged.emit({\n      deletionDate: this.formattedDeletionDate,\n      expirationDate: this.formattedExpirationDate,\n    });\n  }\n\n  protected setInitialFormValues() {\n    if (this.editMode) {\n      this.selectedDeletionDatePreset.setValue(DatePreset.Custom);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Custom);\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n        case BrowserPath.Firefox:\n          this.fallbackDeletionDate.setValue(this.initialDeletionDate.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(this.initialDeletionDate.toTimeString().slice(0, 5));\n          if (this.initialExpirationDate != null) {\n            this.fallbackExpirationDate.setValue(\n              this.initialExpirationDate.toISOString().slice(0, 10)\n            );\n            this.fallbackExpirationTime.setValue(\n              this.initialExpirationDate.toTimeString().slice(0, 5)\n            );\n          }\n          break;\n        case BrowserPath.Default:\n          if (this.initialExpirationDate) {\n            this.defaultExpirationDateTime.setValue(\n              this.datePipe.transform(new Date(this.initialExpirationDate), \"yyyy-MM-ddTHH:mm\")\n            );\n          }\n          this.defaultDeletionDateTime.setValue(\n            this.datePipe.transform(new Date(this.initialDeletionDate), \"yyyy-MM-ddTHH:mm\")\n          );\n          break;\n      }\n    } else {\n      this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Never);\n\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n          this.fallbackDeletionDate.setValue(this.nextWeek.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(\n            this.safariTimePresetOptions(DateField.DeletionDate)[1].twentyFourHour\n          );\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  protected safariTimePresetOptions(field: DateField): TimeOption[] {\n    // init individual arrays for major sort groups\n    const noon: TimeOption[] = [];\n    const midnight: TimeOption[] = [];\n    const ams: TimeOption[] = [];\n    const pms: TimeOption[] = [];\n\n    // determine minute skip (5 min, 10 min, 15 min, etc.)\n    const minuteIncrementer = 15;\n\n    // loop through each hour on a 12 hour system\n    for (let h = 1; h <= 12; h++) {\n      // loop through each minute in the hour using the skip to incriment\n      for (let m = 0; m < 60; m += minuteIncrementer) {\n        // init the final strings that will be added to the lists\n        let hour = h.toString();\n        let minutes = m.toString();\n\n        // add prepending 0s to single digit hours/minutes\n        if (h < 10) {\n          hour = \"0\" + hour;\n        }\n        if (m < 10) {\n          minutes = \"0\" + minutes;\n        }\n\n        // build time strings and push to relevant sort groups\n        if (h === 12) {\n          const midnightOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `00:${minutes}`,\n          };\n          midnight.push(midnightOption);\n\n          const noonOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          noon.push(noonOption);\n        } else {\n          const amOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          ams.push(amOption);\n\n          const pmOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${h + 12}:${minutes}`,\n          };\n          pms.push(pmOption);\n        }\n      }\n    }\n\n    // bring all the arrays together in the right order\n    const validTimes = [...midnight, ...ams, ...noon, ...pms];\n\n    // determine if an unsupported value already exists on the send & add that to the top of the option list\n    // example: if the Send was created with a different client\n    if (field === DateField.ExpriationDate && this.initialExpirationDate != null && this.editMode) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialExpirationDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialExpirationDate, \"HH:mm\"),\n      };\n      return [previousValue, { twelveHour: null, twentyFourHour: null }, ...validTimes];\n    } else if (\n      field === DateField.DeletionDate &&\n      this.initialDeletionDate != null &&\n      this.editMode\n    ) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialDeletionDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialDeletionDate, \"HH:mm\"),\n      };\n      return [previousValue, ...validTimes];\n    } else {\n      return [{ twelveHour: null, twentyFourHour: null }, ...validTimes];\n    }\n  }\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { EncArrayBuffer } from \"@bitwarden/common/models/domain/encArrayBuffer\";\nimport { Send } from \"@bitwarden/common/models/domain/send\";\nimport { SendFileView } from \"@bitwarden/common/models/view/sendFileView\";\nimport { SendTextView } from \"@bitwarden/common/models/view/sendTextView\";\nimport { SendView } from \"@bitwarden/common/models/view/sendView\";\n\n@Directive()\nexport class AddEditComponent implements OnInit {\n  @Input() sendId: string;\n  @Input() type: SendType;\n\n  @Output() onSavedSend = new EventEmitter<SendView>();\n  @Output() onDeletedSend = new EventEmitter<SendView>();\n  @Output() onCancelled = new EventEmitter<SendView>();\n\n  copyLink = false;\n  disableSend = false;\n  disableHideEmail = false;\n  send: SendView;\n  deletionDate: string;\n  expirationDate: string;\n  hasPassword: boolean;\n  password: string;\n  showPassword = false;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  sendType = SendType;\n  typeOptions: any[];\n  canAccessPremium = true;\n  emailVerified = true;\n  alertShown = false;\n  showOptions = false;\n\n  private sendLinkBaseUrl: string;\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected datePipe: DatePipe,\n    protected sendService: SendService,\n    protected messagingService: MessagingService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected stateService: StateService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"sendTypeFile\"), value: SendType.File },\n      { name: i18nService.t(\"sendTypeText\"), value: SendType.Text },\n    ];\n    this.sendLinkBaseUrl = this.environmentService.getSendUrl();\n  }\n\n  get link(): string {\n    if (this.send.id != null && this.send.accessId != null) {\n      return this.sendLinkBaseUrl + this.send.accessId + \"/\" + this.send.urlB64Key;\n    }\n    return null;\n  }\n\n  get isSafari() {\n    return this.platformUtilsService.isSafari();\n  }\n\n  get isDateTimeLocalSupported(): boolean {\n    return !(this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari());\n  }\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  get editMode(): boolean {\n    return this.sendId != null;\n  }\n\n  get title(): string {\n    return this.i18nService.t(this.editMode ? \"editSend\" : \"createSend\");\n  }\n\n  setDates(event: { deletionDate: string; expirationDate: string }) {\n    this.deletionDate = event.deletionDate;\n    this.expirationDate = event.expirationDate;\n  }\n\n  async load() {\n    this.disableSend = await this.policyService.policyAppliesToUser(PolicyType.DisableSend);\n    this.disableHideEmail = await this.policyService.policyAppliesToUser(\n      PolicyType.SendOptions,\n      (p) => p.data.disableHideEmail\n    );\n\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.emailVerified = await this.stateService.getEmailVerified();\n    if (!this.canAccessPremium || !this.emailVerified) {\n      this.type = SendType.Text;\n    }\n\n    if (this.send == null) {\n      if (this.editMode) {\n        const send = await this.loadSend();\n        this.send = await send.decrypt();\n      } else {\n        this.send = new SendView();\n        this.send.type = this.type == null ? SendType.File : this.type;\n        this.send.file = new SendFileView();\n        this.send.text = new SendTextView();\n        this.send.deletionDate = new Date();\n        this.send.deletionDate.setDate(this.send.deletionDate.getDate() + 7);\n      }\n    }\n\n    this.hasPassword = this.send.password != null && this.send.password.trim() !== \"\";\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.disableSend) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"sendDisabledWarning\")\n      );\n      return false;\n    }\n\n    if (this.send.name == null || this.send.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    let file: File = null;\n    if (this.send.type === SendType.File && !this.editMode) {\n      const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n      const files = fileEl.files;\n      if (files == null || files.length === 0) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"selectFile\")\n        );\n        return;\n      }\n\n      file = files[0];\n      if (files[0].size > 524288000) {\n        // 500 MB\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"maxFileSize\")\n        );\n        return;\n      }\n    }\n\n    if (this.password != null && this.password.trim() === \"\") {\n      this.password = null;\n    }\n\n    this.formPromise = this.encryptSend(file).then(async (encSend) => {\n      const uploadPromise = this.sendService.saveWithServer(encSend);\n      await uploadPromise;\n      if (this.send.id == null) {\n        this.send.id = encSend[0].id;\n      }\n      if (this.send.accessId == null) {\n        this.send.accessId = encSend[0].accessId;\n      }\n      this.onSavedSend.emit(this.send);\n      if (this.copyLink && this.link != null) {\n        const copySuccess = await this.copyLinkToClipboard(this.link);\n        if (copySuccess ?? true) {\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\")\n          );\n        } else {\n          await this.platformUtilsService.showDialog(\n            this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\"),\n            null,\n            this.i18nService.t(\"ok\"),\n            null,\n            \"success\",\n            null\n          );\n          await this.copyLinkToClipboard(this.link);\n        }\n      }\n    });\n    try {\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  async copyLinkToClipboard(link: string): Promise<void | boolean> {\n    return Promise.resolve(this.platformUtilsService.copyToClipboard(link));\n  }\n\n  async delete(): Promise<boolean> {\n    if (this.deletePromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.sendService.deleteWithServer(this.send.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n      await this.load();\n      this.onDeletedSend.emit(this.send);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  typeChanged() {\n    if (this.send.type === SendType.File && !this.alertShown) {\n      if (!this.canAccessPremium) {\n        this.alertShown = true;\n        this.messagingService.send(\"premiumRequired\");\n      } else if (!this.emailVerified) {\n        this.alertShown = true;\n        this.messagingService.send(\"emailVerificationRequired\");\n      }\n    }\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  protected async loadSend(): Promise<Send> {\n    return this.sendService.get(this.sendId);\n  }\n\n  protected async encryptSend(file: File): Promise<[Send, EncArrayBuffer]> {\n    const sendData = await this.sendService.encrypt(this.send, file, this.password, null);\n\n    // Parse dates\n    try {\n      sendData[0].deletionDate = this.deletionDate == null ? null : new Date(this.deletionDate);\n    } catch {\n      sendData[0].deletionDate = null;\n    }\n    try {\n      sendData[0].expirationDate =\n        this.expirationDate == null ? null : new Date(this.expirationDate);\n    } catch {\n      sendData[0].expirationDate = null;\n    }\n\n    return sendData;\n  }\n\n  protected togglePasswordVisible() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"password\").focus();\n  }\n}\n","import { StateService as BaseStateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { StorageOptions } from \"@bitwarden/common/models/domain/storageOptions\";\n\nimport { Account } from \"src/models/account\";\nimport { BrowserComponentState } from \"src/models/browserComponentState\";\nimport { BrowserGroupingsComponentState } from \"src/models/browserGroupingsComponentState\";\nimport { BrowserSendComponentState } from \"src/models/browserSendComponentState\";\n\nexport abstract class StateService extends BaseStateServiceAbstraction<Account> {\n  getBrowserGroupingComponentState: (\n    options?: StorageOptions\n  ) => Promise<BrowserGroupingsComponentState>;\n  setBrowserGroupingComponentState: (\n    value: BrowserGroupingsComponentState,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getBrowserCipherComponentState: (options?: StorageOptions) => Promise<BrowserComponentState>;\n  setBrowserCipherComponentState: (\n    value: BrowserComponentState,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getBrowserSendComponentState: (options?: StorageOptions) => Promise<BrowserSendComponentState>;\n  setBrowserSendComponentState: (\n    value: BrowserSendComponentState,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getBrowserSendTypeComponentState: (options?: StorageOptions) => Promise<BrowserComponentState>;\n  setBrowserSendTypeComponentState: (\n    value: BrowserComponentState,\n    options?: StorageOptions\n  ) => Promise<void>;\n}\n","<ng-container [formGroup]=\"datesForm\">\n  <div class=\"box\">\n    <div class=\"box-content\">\n      <ng-container *ngIf=\"!editMode\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"deletionDate\">{{ \"deletionDate\" | i18n }}</label>\n          <select\n            id=\"deletionDate\"\n            name=\"DeletionDateSelect\"\n            formControlName=\"selectedDeletionDatePreset\"\n            required\n          >\n            <option *ngFor=\"let o of deletionDatePresets\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n        <div class=\"box-content-row\" appBoxRow *ngIf=\"selectedDeletionDatePreset.value === 0\">\n          <ng-container *ngTemplateOutlet=\"deletionDateCustom\"></ng-container>\n        </div>\n      </ng-container>\n      <div class=\"box-content-row\" appBoxRow *ngIf=\"editMode\">\n        <label for=\"deletionDate\">{{ \"deletionDate\" | i18n }}</label>\n        <ng-container *ngTemplateOutlet=\"deletionDateCustom\"></ng-container>\n      </div>\n    </div>\n    <div class=\"box-footer\">\n      {{ \"deletionDateDesc\" | i18n }}\n      <ng-container\n        *ngIf=\"\n          !inPopout &&\n          browserPath == 'firefox' &&\n          (editMode || (selectedDeletionDatePreset.value === 0 && !editMode))\n        \"\n      >\n        <br />{{ \"sendFirefoxCustomDatePopoutMessage1\" | i18n }}\n        <a (click)=\"popOutWindow.emit()\">{{ \"sendFirefoxCustomDatePopoutMessage2\" | i18n }}</a>\n        {{ \"sendFirefoxCustomDatePopoutMessage3\" | i18n }}\n      </ng-container>\n    </div>\n  </div>\n  <div class=\"box\">\n    <div class=\"box-content\">\n      <ng-container *ngIf=\"!editMode\">\n        <div class=\"box-content-row\" *ngIf=\"!editMode\" appBoxRow>\n          <label for=\"editExpirationDate\">{{ \"expirationDate\" | i18n }}</label>\n          <select\n            id=\"expirationDate\"\n            name=\"ExpirationDateSelect\"\n            formControlName=\"selectedExpirationDatePreset\"\n            required\n          >\n            <option *ngFor=\"let o of expirationDatePresets\" [ngValue]=\"o.value\">\n              {{ o.name }}\n            </option>\n          </select>\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"selectedExpirationDatePreset.value === 0\" appBoxRow>\n          <ng-container *ngTemplateOutlet=\"expirationDateCustom\"></ng-container>\n        </div>\n      </ng-container>\n      <div class=\"box-content-row\" *ngIf=\"editMode\" appBoxRow>\n        <div class=\"flex-label\">\n          <label>{{ \"expirationDate\" | i18n }}</label>\n          <button type=\"button\" *ngIf=\"!disabled\" appStopClick (click)=\"clearExpiration()\">\n            {{ \"clear\" | i18n }}\n          </button>\n        </div>\n        <ng-container *ngTemplateOutlet=\"expirationDateCustom\"></ng-container>\n      </div>\n    </div>\n    <div class=\"box-footer\">\n      {{ \"expirationDateDesc\" | i18n }}\n      <ng-container\n        *ngIf=\"\n          !inPopout &&\n          browserPath == 'firefox' &&\n          (editMode || (selectedExpirationDatePreset.value === 0 && !editMode))\n        \"\n      >\n        <br />{{ \"sendFirefoxCustomDatePopoutMessage1\" | i18n }}\n        <a (click)=\"popOutWindow.emit()\">{{ \"sendFirefoxCustomDatePopoutMessage2\" | i18n }}</a>\n        {{ \"sendFirefoxCustomDatePopoutMessage3\" | i18n }}\n      </ng-container>\n    </div>\n  </div>\n  <ng-template #deletionDateCustom>\n    <ng-container [ngSwitch]=\"browserPath\">\n      <ng-container *ngSwitchCase=\"'firefox'\">\n        <div class=\"flex flex-grow\">\n          <input\n            id=\"deletionDateCustomFallback\"\n            type=\"date\"\n            name=\"DeletionDateFallback\"\n            formControlName=\"fallbackDeletionDate\"\n            required\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <input\n            id=\"deletionTimeCustomFallback\"\n            type=\"time\"\n            name=\"DeletionTimeDate\"\n            formControlName=\"fallbackDeletionTime\"\n            required\n            placeholder=\"HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </div>\n      </ng-container>\n      <ng-container *ngSwitchCase=\"'safari'\">\n        <div class=\"flex flex-grow\">\n          <input\n            id=\"deletionDateCustomFallback\"\n            type=\"date\"\n            name=\"DeletionDateFallback\"\n            formControlName=\"fallbackDeletionDate\"\n            required\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <select\n            id=\"deletionTimeCustomFallback\"\n            formControlName=\"fallbackDeletionTime\"\n            name=\"SafariDeletionTime\"\n          >\n            <option *ngFor=\"let o of safariDeletionTimePresetOptions\" [ngValue]=\"o.twentyFourHour\">\n              {{ o.twelveHour }}\n            </option>\n          </select>\n        </div>\n      </ng-container>\n      <ng-container *ngSwitchDefault>\n        <input\n          id=\"deletionDateCustom\"\n          type=\"datetime-local\"\n          name=\"DeletionDate\"\n          formControlName=\"defaultDeletionDateTime\"\n          required\n          placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n        />\n      </ng-container>\n    </ng-container>\n  </ng-template>\n  <ng-template #expirationDateCustom>\n    <ng-container [ngSwitch]=\"browserPath\">\n      <ng-container *ngSwitchCase=\"'firefox'\">\n        <div class=\"flex flex-grow\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <input\n            id=\"expirationTimeCustomFallback\"\n            type=\"time\"\n            name=\"ExpirationTimeFallback\"\n            formControlName=\"fallbackExpirationTime\"\n            [required]=\"!editMode\"\n            placeholder=\"HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </div>\n      </ng-container>\n      <ng-container *ngSwitchCase=\"'safari'\">\n        <div class=\"flex flex-grow\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <select\n            id=\"expirationTimeCustomFallback\"\n            formControlName=\"fallbackExpirationTime\"\n            name=\"SafariExpirationTime\"\n          >\n            <option\n              *ngFor=\"let o of safariExpirationTimePresetOptions\"\n              [ngValue]=\"o.twentyFourHour\"\n            >\n              {{ o.twelveHour }}\n            </option>\n          </select>\n        </div>\n      </ng-container>\n      <ng-container *ngSwitchDefault>\n        <input\n          id=\"expirationDateCustom\"\n          type=\"datetime-local\"\n          name=\"ExpirationDate\"\n          formControlName=\"defaultExpirationDateTime\"\n          required\n          placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n          [readOnly]=\"disabled\"\n        />\n      </ng-container>\n    </ng-container>\n  </ng-template>\n</ng-container>\n","import { DatePipe } from \"@angular/common\";\nimport { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { ControlContainer, NgForm } from \"@angular/forms\";\n\nimport { EffluxDatesComponent as BaseEffluxDatesComponent } from \"@bitwarden/angular/components/send/efflux-dates.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-send-efflux-dates\",\n  templateUrl: \"efflux-dates.component.html\",\n  viewProviders: [{ provide: ControlContainer, useExisting: NgForm }],\n})\nexport class EffluxDatesComponent extends BaseEffluxDatesComponent {\n  @Input() readonly inPopout: boolean;\n  @Output() popOutWindow = new EventEmitter();\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {\n    super(i18nService, platformUtilsService, datePipe);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" appBlurClick (click)=\"cancel()\">{{ \"cancel\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ title }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading || disableSend\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\" *ngIf=\"send\">\n    <!-- Policy Banner -->\n    <app-callout type=\"warning\" title=\"{{ 'sendDisabled' | i18n }}\" *ngIf=\"disableSend\">\n      {{ \"sendDisabledWarning\" | i18n }}\n    </app-callout>\n    <app-callout type=\"info\" *ngIf=\"disableHideEmail && !disableSend\">\n      {{ \"sendOptionsPolicyInEffect\" | i18n }}\n    </app-callout>\n    <!-- File Warning -->\n    <app-callout\n      type=\"warning\"\n      icon=\"bwi-external-link bwi-rotate-270 bwi-fw\"\n      [clickable]=\"true\"\n      title=\"{{ 'sendFileCalloutHeader' | i18n }}\"\n      *ngIf=\"showFilePopoutMessage && send.type === sendType.File && !disableSend\"\n      (click)=\"popOutWindow()\"\n    >\n      <div *ngIf=\"showChromiumFileWarning\">{{ \"sendLinuxChromiumFileWarning\" | i18n }}</div>\n      <div *ngIf=\"showFirefoxFileWarning\">{{ \"sendFirefoxFileWarning\" | i18n }}</div>\n      <div *ngIf=\"showSafariFileWarning\">{{ \"sendSafariFileWarning\" | i18n }}</div>\n    </app-callout>\n    <!-- Name -->\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input\n            id=\"name\"\n            type=\"text\"\n            name=\"Name\"\n            [(ngModel)]=\"send.name\"\n            [readonly]=\"disableSend\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"sendNameDesc\" | i18n }}\n      </div>\n    </div>\n    <!-- Type Options -->\n    <div class=\"box\" *ngIf=\"!editMode\">\n      <div class=\"box-content no-hover\">\n        <div class=\"box-content-row\">\n          <label for=\"sendTypeOptions\">{{ \"sendTypeHeader\" | i18n }}</label>\n          <div\n            class=\"radio-group text-default\"\n            appBoxRow\n            name=\"SendTypeOptions\"\n            *ngFor=\"let o of typeOptions\"\n          >\n            <input\n              type=\"radio\"\n              [(ngModel)]=\"send.type\"\n              name=\"Type_{{ o.value }}\"\n              id=\"type_{{ o.value }}\"\n              [value]=\"o.value\"\n              (change)=\"typeChanged()\"\n              [checked]=\"send.type === o.value\"\n              [readonly]=\"disableSend\"\n            />\n            <label for=\"type_{{ o.value }}\">\n              {{ o.name }}\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- File -->\n    <div class=\"box\" *ngIf=\"send.type === sendType.File && (editMode || showFileSelector)\">\n      <div class=\"box-content no-hover\">\n        <div class=\"box-content-row\" *ngIf=\"editMode\">\n          <label for=\"file\">{{ \"file\" | i18n }}</label>\n          <div class=\"row-main\">{{ send.file.fileName }} ({{ send.file.sizeName }})</div>\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"showFileSelector\">\n          <label for=\"file\">{{ \"file\" | i18n }}</label>\n          <input type=\"file\" id=\"file\" name=\"file\" required [readonly]=\"disableSend\" />\n        </div>\n      </div>\n      <div class=\"box-footer\" *ngIf=\"showFileSelector\">\n        {{ \"sendFileDesc\" | i18n }} {{ \"maxFileSize\" | i18n }}\n      </div>\n    </div>\n    <!-- Text -->\n    <div class=\"box\" *ngIf=\"send.type === sendType.Text\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"text\">{{ \"sendTypeText\" | i18n }}</label>\n          <textarea\n            id=\"text\"\n            name=\"Text\"\n            rows=\"6\"\n            [(ngModel)]=\"send.text.text\"\n            [readonly]=\"disableSend\"\n          ></textarea>\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"sendTextDesc\" | i18n }}\n      </div>\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"hideText\">{{ \"sendHideText\" | i18n }}</label>\n          <input\n            id=\"hideText\"\n            type=\"checkbox\"\n            name=\"HideText\"\n            [(ngModel)]=\"send.text.hidden\"\n            [disabled]=\"disableSend\"\n          />\n        </div>\n      </div>\n    </div>\n    <!-- Share -->\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"share\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <!-- Copy Link on Save -->\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"copyOnSave\">{{ \"sendShareDesc\" | i18n }}</label>\n          <input\n            id=\"copyOnSave\"\n            type=\"checkbox\"\n            name=\"CopyOnSave\"\n            [(ngModel)]=\"copyLink\"\n            [disabled]=\"disableSend\"\n          />\n        </div>\n      </div>\n    </div>\n    <!-- Options -->\n    <div class=\"box\">\n      <h2>\n        <button\n          type=\"button\"\n          class=\"box-header-expandable\"\n          (click)=\"showOptions = !showOptions\"\n          [attr.aria-expanded]=\"showOptions\"\n        >\n          {{ \"options\" | i18n }}\n          <i *ngIf=\"!showOptions\" class=\"bwi bwi-angle-down bwi-sm icon\" aria-hidden=\"true\"></i>\n          <i *ngIf=\"showOptions\" class=\"bwi bwi-chevron-up bwi-sm icon\" aria-hidden=\"true\"></i>\n        </button>\n      </h2>\n    </div>\n    <div [hidden]=\"!showOptions\">\n      <app-send-efflux-dates\n        [initialDeletionDate]=\"send.deletionDate\"\n        [initialExpirationDate]=\"send.expirationDate\"\n        [editMode]=\"editMode\"\n        [disabled]=\"disableSend\"\n        (datesChanged)=\"setDates($event)\"\n        (popOutWindow)=\"popOutWindow()\"\n      >\n      </app-send-efflux-dates>\n      <!-- Maximum Access Count -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"maximumAccessCount\">{{ \"maximumAccessCount\" | i18n }}</label>\n            <input\n              id=\"maximumAccessCount\"\n              min=\"1\"\n              type=\"number\"\n              name=\"MaximumAccessCount\"\n              [(ngModel)]=\"send.maxAccessCount\"\n              [readonly]=\"disableSend\"\n            />\n          </div>\n        </div>\n        <div class=\"box-footer\">\n          {{ \"maximumAccessCountDesc\" | i18n }}\n        </div>\n      </div>\n      <!-- Current Access Count -->\n      <div class=\"box\" *ngIf=\"editMode\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"currentAccessCount\">{{ \"currentAccessCount\" | i18n }}</label>\n            <input\n              id=\"currentAccessCount\"\n              readonly\n              type=\"text\"\n              name=\"CurrentAccessCount\"\n              [(ngModel)]=\"send.accessCount\"\n            />\n          </div>\n        </div>\n      </div>\n      <!-- Password -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n            <div class=\"row-main\">\n              <label for=\"password\" *ngIf=\"hasPassword\">{{ \"newPassword\" | i18n }}</label>\n              <label for=\"password\" *ngIf=\"!hasPassword\">{{ \"password\" | i18n }}</label>\n              <input\n                id=\"password\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"Password\"\n                class=\"monospaced\"\n                [(ngModel)]=\"password\"\n                appInputVerbatim\n                [readonly]=\"disableSend\"\n              />\n            </div>\n            <div class=\"action-buttons\" *ngIf=\"!disableSend\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePasswordVisible()\"\n                [attr.aria-pressed]=\"showPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  aria-hidden=\"true\"\n                ></i>\n              </button>\n            </div>\n          </div>\n        </div>\n        <div class=\"box-footer\">\n          {{ \"sendPasswordDesc\" | i18n }}\n        </div>\n      </div>\n      <!-- Notes -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n            <textarea\n              id=\"notes\"\n              name=\"Notes\"\n              rows=\"6\"\n              [(ngModel)]=\"send.notes\"\n              [readonly]=\"disableSend\"\n            ></textarea>\n          </div>\n        </div>\n        <div class=\"box-footer\">\n          {{ \"sendNotesDesc\" | i18n }}\n        </div>\n      </div>\n      <!-- Hide Email -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"hideEmail\">{{ \"hideEmail\" | i18n }}</label>\n            <input\n              id=\"hideEmail\"\n              type=\"checkbox\"\n              name=\"HideEmail\"\n              [(ngModel)]=\"send.hideEmail\"\n              [disabled]=\"(disableHideEmail && !send.hideEmail) || disableSend\"\n            />\n          </div>\n        </div>\n      </div>\n      <!-- Disable Send -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"disableSend\">{{ \"sendDisableDesc\" | i18n }}</label>\n            <input\n              id=\"disableSend\"\n              type=\"checkbox\"\n              name=\"DisableSend\"\n              [(ngModel)]=\"send.disabled\"\n              [disabled]=\"disableSend\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- Delete -->\n    <div class=\"box list\" *ngIf=\"editMode\">\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"delete()\"\n          [appApiAction]=\"deletePromise\"\n          #deleteBtn\n        >\n          <div class=\"row-main text-danger\">\n            <div class=\"icon text-danger\" aria-hidden=\"true\">\n              <i class=\"bwi bwi-trash bwi-lg bwi-fw\" [hidden]=\"deleteBtn.loading\"></i>\n              <i class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\" [hidden]=\"!deleteBtn.loading\"></i>\n            </div>\n            <span>{{ \"deleteSend\" | i18n }}</span>\n          </div>\n        </button>\n      </div>\n    </div>\n  </main>\n</form>\n","import { DatePipe, Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"@bitwarden/angular/components/send/add-edit.component\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\n\nimport { StateService } from \"../../services/abstractions/state.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\n@Component({\n  selector: \"app-send-add-edit\",\n  templateUrl: \"send-add-edit.component.html\",\n})\nexport class SendAddEditComponent extends BaseAddEditComponent {\n  // Options header\n  showOptions = false;\n  // File visibility\n  isFirefox = false;\n  inPopout = false;\n  inSidebar = false;\n  isLinux = false;\n  isUnsupportedMac = false;\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    stateService: StateService,\n    messagingService: MessagingService,\n    policyService: PolicyService,\n    environmentService: EnvironmentService,\n    datePipe: DatePipe,\n    sendService: SendService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private popupUtilsService: PopupUtilsService,\n    logService: LogService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      datePipe,\n      sendService,\n      messagingService,\n      policyService,\n      logService,\n      stateService\n    );\n  }\n\n  get showFileSelector(): boolean {\n    return !(this.editMode || this.showFilePopoutMessage);\n  }\n\n  get showFilePopoutMessage(): boolean {\n    return (\n      !this.editMode &&\n      (this.showFirefoxFileWarning || this.showSafariFileWarning || this.showChromiumFileWarning)\n    );\n  }\n\n  get showFirefoxFileWarning(): boolean {\n    return this.isFirefox && !(this.inSidebar || this.inPopout);\n  }\n\n  get showSafariFileWarning(): boolean {\n    return this.isSafari && !this.inPopout;\n  }\n\n  // Only show this for Chromium based browsers in Linux and Mac > Big Sur\n  get showChromiumFileWarning(): boolean {\n    return (\n      (this.isLinux || this.isUnsupportedMac) &&\n      !this.isFirefox &&\n      !(this.inSidebar || this.inPopout)\n    );\n  }\n\n  popOutWindow() {\n    this.popupUtilsService.popOut(window);\n  }\n\n  async ngOnInit() {\n    // File visilibity\n    this.isFirefox = this.platformUtilsService.isFirefox();\n    this.inPopout = this.popupUtilsService.inPopout(window);\n    this.inSidebar = this.popupUtilsService.inSidebar(window);\n    this.isLinux = window?.navigator?.userAgent.indexOf(\"Linux\") !== -1;\n    this.isUnsupportedMac =\n      this.platformUtilsService.isChrome() && window?.navigator?.appVersion.includes(\"Mac OS X 11\");\n\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.sendId) {\n        this.sendId = params.sendId;\n      }\n      if (params.type) {\n        const type = parseInt(params.type, null);\n        this.type = type;\n      }\n      await this.load();\n    });\n\n    window.setTimeout(() => {\n      if (!this.editMode) {\n        document.getElementById(\"name\").focus();\n      }\n    }, 200);\n  }\n\n  async submit(): Promise<boolean> {\n    if (await super.submit()) {\n      this.cancel();\n      return true;\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    if (await super.delete()) {\n      this.cancel();\n      return true;\n    }\n\n    return false;\n  }\n\n  cancel() {\n    // If true, the window was pop'd out on the add-send page. location.back will not work\n    if ((window as any).previousPopupUrl.startsWith(\"/add-send\")) {\n      this.router.navigate([\"tabs/send\"]);\n    } else {\n      this.location.back();\n    }\n  }\n}\n","import { CipherView } from \"../models/view/cipherView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class SearchService {\n  indexedEntityId?: string = null;\n  clearIndex: () => void;\n  isSearchable: (query: string) => boolean;\n  indexCiphers: (indexedEntityGuid?: string, ciphersToIndex?: CipherView[]) => Promise<void>;\n  searchCiphers: (\n    query: string,\n    filter?: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[],\n    ciphers?: CipherView[]\n  ) => Promise<CipherView[]>;\n  searchCiphersBasic: (ciphers: CipherView[], query: string, deleted?: boolean) => CipherView[];\n  searchSends: (sends: SendView[], query: string) => SendView[];\n}\n","import { Directive, NgZone, OnInit } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { SendView } from \"@bitwarden/common/models/view/sendView\";\n\n@Directive()\nexport class SendComponent implements OnInit {\n  disableSend = false;\n  sendType = SendType;\n  loaded = false;\n  loading = true;\n  refreshing = false;\n  expired = false;\n  type: SendType = null;\n  sends: SendView[] = [];\n  filteredSends: SendView[] = [];\n  searchText: string;\n  selectedType: SendType;\n  selectedAll: boolean;\n  searchPlaceholder: string;\n  filter: (cipher: SendView) => boolean;\n  searchPending = false;\n  hasSearched = false; // search() function called - returns true if text qualifies for search\n\n  actionPromise: any;\n  onSuccessfulRemovePassword: () => Promise<any>;\n  onSuccessfulDelete: () => Promise<any>;\n  onSuccessfulLoad: () => Promise<any>;\n\n  private searchTimeout: any;\n\n  constructor(\n    protected sendService: SendService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected ngZone: NgZone,\n    protected searchService: SearchService,\n    protected policyService: PolicyService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.disableSend = await this.policyService.policyAppliesToUser(PolicyType.DisableSend);\n  }\n\n  async load(filter: (send: SendView) => boolean = null) {\n    this.loading = true;\n    const sends = await this.sendService.getAllDecrypted();\n    this.sends = sends;\n    if (this.onSuccessfulLoad != null) {\n      await this.onSuccessfulLoad();\n    } else {\n      // Default action\n      this.selectAll();\n    }\n    this.loading = false;\n    this.loaded = true;\n  }\n\n  async reload(filter: (send: SendView) => boolean = null) {\n    this.loaded = false;\n    this.sends = [];\n    await this.load(filter);\n  }\n\n  async refresh() {\n    try {\n      this.refreshing = true;\n      await this.reload(this.filter);\n    } finally {\n      this.refreshing = false;\n    }\n  }\n\n  async applyFilter(filter: (send: SendView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  async removePassword(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null || s.password == null) {\n      return;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removePasswordConfirmation\"),\n      this.i18nService.t(\"removePassword\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.removePasswordWithServer(s.id);\n      await this.actionPromise;\n      if (this.onSuccessfulRemovePassword != null) {\n        this.onSuccessfulRemovePassword();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"removedPassword\"));\n        await this.load();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async delete(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.deleteWithServer(s.id);\n      await this.actionPromise;\n\n      if (this.onSuccessfulDelete != null) {\n        this.onSuccessfulDelete();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n        await this.refresh();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n    return true;\n  }\n\n  copy(s: SendView) {\n    const sendLinkBaseUrl = this.environmentService.getSendUrl();\n    const link = sendLinkBaseUrl + s.accessId + \"/\" + s.urlB64Key;\n    this.platformUtilsService.copyToClipboard(link);\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"sendLink\"))\n    );\n  }\n\n  searchTextChanged() {\n    this.search(200);\n  }\n\n  selectAll() {\n    this.clearSelections();\n    this.selectedAll = true;\n    this.applyFilter(null);\n  }\n\n  selectType(type: SendType) {\n    this.clearSelections();\n    this.selectedType = type;\n    this.applyFilter((s) => s.type === type);\n  }\n\n  clearSelections() {\n    this.selectedAll = false;\n    this.selectedType = null;\n  }\n\n  private applyTextSearch() {\n    if (this.searchText != null) {\n      this.filteredSends = this.searchService.searchSends(this.filteredSends, this.searchText);\n    }\n  }\n}\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopProp]\",\n})\nexport class StopPropDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.stopPropagation();\n  }\n}\n","<div\n  role=\"group\"\n  *ngFor=\"let s of sends\"\n  appA11yTitle=\"{{ s.name }}\"\n  class=\"box-content-row box-content-row-flex\"\n>\n  <button\n    type=\"button\"\n    class=\"row-main\"\n    (click)=\"selectSend(s)\"\n    appStopClick\n    title=\"{{ title }} - {{ s.name }}\"\n  >\n    <div class=\"app-vault-icon\">\n      <div class=\"icon\" aria-hidden=\"true\">\n        <i class=\"bwi bwi-fw bwi-lg bwi-file-text\" *ngIf=\"s.type === sendType.Text\"></i>\n        <i class=\"bwi bwi-fw bwi-lg bwi-file\" *ngIf=\"s.type === sendType.File\"></i>\n      </div>\n    </div>\n    <div class=\"row-main-content\">\n      <span class=\"text\">\n        {{ s.name }}\n        <ng-container *ngIf=\"s.disabled\">\n          <i\n            class=\"bwi bwi-exclamation-triangle text-muted\"\n            title=\"{{ 'disabled' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"disabled\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"s.password\">\n          <i\n            class=\"bwi bwi-key text-muted\"\n            title=\"{{ 'passwordProtected' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"passwordProtected\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"s.maxAccessCountReached\">\n          <i\n            class=\"bwi bwi-ban text-muted\"\n            title=\"{{ 'maxAccessCountReached' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"maxAccessCountReached\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"s.expired\">\n          <i class=\"bwi bwi-clock text-muted\" title=\"{{ 'expired' | i18n }}\" aria-hidden=\"true\"></i>\n          <span class=\"sr-only\">{{ \"expired\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"s.pendingDelete\">\n          <i\n            class=\"bwi bwi-trash text-muted\"\n            title=\"{{ 'pendingDeletion' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"pendingDeletion\" | i18n }}</span>\n        </ng-container>\n      </span>\n      <span class=\"detail\">{{ s.deletionDate | date: \"medium\" }}</span>\n    </div>\n  </button>\n  <div class=\"action-buttons\">\n    <button\n      type=\"button\"\n      class=\"row-btn\"\n      appStopClick\n      appStopProp\n      appA11yTitle=\"{{ 'copySendLink' | i18n }}\"\n      (click)=\"copySendLink(s)\"\n    >\n      <i class=\"bwi bwi-lg bwi-files\" aria-hidden=\"true\"></i>\n    </button>\n    <button\n      type=\"button\"\n      class=\"row-btn\"\n      [ngClass]=\"{ disabled: disabledByPolicy }\"\n      [attr.disabled]=\"disabledByPolicy ? '' : null\"\n      appStopClick\n      appStopProp\n      appA11yTitle=\"{{ 'removePassword' | i18n }}\"\n      (click)=\"removePassword(s)\"\n      *ngIf=\"s.password\"\n    >\n      <i class=\"bwi bwi-lg bwi-undo\" aria-hidden=\"true\"></i>\n    </button>\n    <button\n      type=\"button\"\n      class=\"row-btn\"\n      appStopClick\n      appStopProp\n      appA11yTitle=\"{{ 'delete' | i18n }}\"\n      (click)=\"delete(s)\"\n    >\n      <i class=\"bwi bwi-lg bwi-trash\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { SendView } from \"@bitwarden/common/models/view/sendView\";\n\n@Component({\n  selector: \"app-send-list\",\n  templateUrl: \"send-list.component.html\",\n})\nexport class SendListComponent {\n  @Input() sends: SendView[];\n  @Input() title: string;\n  @Input() disabledByPolicy = false;\n  @Output() onSelected = new EventEmitter<SendView>();\n  @Output() onCopySendLink = new EventEmitter<SendView>();\n  @Output() onRemovePassword = new EventEmitter<SendView>();\n  @Output() onDeleteSend = new EventEmitter<SendView>();\n\n  sendType = SendType;\n\n  selectSend(s: SendView) {\n    this.onSelected.emit(s);\n  }\n\n  copySendLink(s: SendView) {\n    this.onCopySendLink.emit(s);\n  }\n\n  removePassword(s: SendView) {\n    this.onRemovePassword.emit(s);\n  }\n\n  delete(s: SendView) {\n    this.onDeleteSend.emit(s);\n  }\n}\n","<header>\n  <div class=\"left\" *ngIf=\"showLeftHeader\">\n    <app-pop-out></app-pop-out>\n  </div>\n  <h1 class=\"sr-only\">{{ \"send\" | i18n }}</h1>\n  <div class=\"search\">\n    <input\n      type=\"search\"\n      placeholder=\"{{ 'searchSends' | i18n }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"search(200)\"\n      autocomplete=\"off\"\n      appAutofocus\n    />\n    <i class=\"bwi bwi-search\"></i>\n  </div>\n  <div class=\"right\">\n    <button\n      type=\"button\"\n      appBlurClick\n      (click)=\"addSend()\"\n      appA11yTitle=\"{{ 'addSend' | i18n }}\"\n      [disabled]=\"disableSend\"\n    >\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\" [ngClass]=\"{ flex: disableSend, 'tab-page': disableSend }\">\n  <app-callout type=\"warning\" title=\"{{ 'sendDisabled' | i18n }}\" *ngIf=\"disableSend\">\n    {{ \"sendDisabledWarning\" | i18n }}\n  </app-callout>\n  <div class=\"no-items\" *ngIf=\"(!sends || !sends.length) && !showSearching()\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" *ngIf=\"!loaded\"></i>\n    <ng-container *ngIf=\"loaded\">\n      <img class=\"no-items-image\" aria-hidden=\"true\" />\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n      <button\n        type=\"button\"\n        (click)=\"addSend()\"\n        class=\"btn block primary link\"\n        [disabled]=\"disableSend\"\n      >\n        {{ \"addSend\" | i18n }}\n      </button>\n    </ng-container>\n  </div>\n  <ng-container *ngIf=\"sends && sends.length && !showSearching()\">\n    <div class=\"box list\">\n      <h2 class=\"box-header\">\n        {{ \"types\" | i18n }}\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectType(sendType.Text)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-file-text\"></i></div>\n            <span class=\"text\">{{ \"sendTypeText\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(sendType.Text) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectType(sendType.File)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-file\"></i></div>\n            <span class=\"text\">{{ \"sendTypeFile\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(sendType.File) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\">\n      <h2 class=\"box-header\">\n        {{ \"allSends\" | i18n }}\n        <div class=\"flex-right\">{{ sends.length }}</div>\n      </h2>\n      <div class=\"box-content\">\n        <app-send-list\n          [sends]=\"sends\"\n          title=\"{{ 'editItem' | i18n }}\"\n          [disabledByPolicy]=\"disableSend\"\n          (onSelected)=\"selectSend($event)\"\n          (onCopySendLink)=\"copy($event)\"\n          (onRemovePassword)=\"removePassword($event)\"\n          (onDeleteSend)=\"delete($event)\"\n        ></app-send-list>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"showSearching()\">\n    <div class=\"no-items\" *ngIf=\"!filteredSends || !filteredSends.length\">\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n    </div>\n    <div class=\"box list full-list\" *ngIf=\"filteredSends && filteredSends.length > 0\">\n      <div class=\"box-content\">\n        <app-send-list\n          [sends]=\"filteredSends\"\n          title=\"{{ 'editItem' | i18n }}\"\n          [disabledByPolicy]=\"disableSend\"\n          (onSelected)=\"selectSend($event)\"\n          (onCopySendLink)=\"copy($event)\"\n          (onRemovePassword)=\"removePassword($event)\"\n          (onDeleteSend)=\"delete($event)\"\n        >\n        </app-send-list>\n      </div>\n    </div>\n  </ng-container>\n</main>\n","import { ChangeDetectorRef, Component, NgZone } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { SendComponent as BaseSendComponent } from \"@bitwarden/angular/components/send/send.component\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { SendView } from \"@bitwarden/common/models/view/sendView\";\n\nimport { BrowserSendComponentState } from \"../../models/browserSendComponentState\";\nimport { StateService } from \"../../services/abstractions/state.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst ComponentId = \"SendComponent\";\n\n@Component({\n  selector: \"app-send-groupings\",\n  templateUrl: \"send-groupings.component.html\",\n})\nexport class SendGroupingsComponent extends BaseSendComponent {\n  // Header\n  showLeftHeader = true;\n  // Send Type Calculations\n  typeCounts = new Map<SendType, number>();\n  // State Handling\n  state: BrowserSendComponentState;\n  private loadedTimeout: number;\n\n  constructor(\n    sendService: SendService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    ngZone: NgZone,\n    policyService: PolicyService,\n    searchService: SearchService,\n    private popupUtils: PopupUtilsService,\n    private stateService: StateService,\n    private router: Router,\n    private syncService: SyncService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private broadcasterService: BroadcasterService,\n    logService: LogService\n  ) {\n    super(\n      sendService,\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      ngZone,\n      searchService,\n      policyService,\n      logService\n    );\n    super.onSuccessfulLoad = async () => {\n      this.calculateTypeCounts();\n      this.selectAll();\n    };\n  }\n\n  async ngOnInit() {\n    // Determine Header details\n    this.showLeftHeader = !(\n      this.popupUtils.inSidebar(window) && this.platformUtilsService.isFirefox()\n    );\n    // Clear state of Send Type Component\n    await this.stateService.setBrowserSendTypeComponentState(null);\n    // Let super class finish\n    await super.ngOnInit();\n    // Handle State Restore if necessary\n    const restoredScopeState = await this.restoreState();\n    if (this.state?.searchText != null) {\n      this.searchText = this.state.searchText;\n    }\n\n    if (!this.syncService.syncInProgress) {\n      this.load();\n    } else {\n      this.loadedTimeout = window.setTimeout(() => {\n        if (!this.loaded) {\n          this.load();\n        }\n      }, 5000);\n    }\n\n    if (!this.syncService.syncInProgress || restoredScopeState) {\n      window.setTimeout(() => this.popupUtils.setContentScrollY(window, this.state?.scrollY), 0);\n    }\n\n    // Load all sends if sync completed in background\n    this.broadcasterService.subscribe(ComponentId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            window.setTimeout(() => {\n              this.load();\n            }, 500);\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    // Remove timeout\n    if (this.loadedTimeout != null) {\n      window.clearTimeout(this.loadedTimeout);\n    }\n    // Save state\n    this.saveState();\n    // Unsubscribe\n    this.broadcasterService.unsubscribe(ComponentId);\n  }\n\n  async selectType(type: SendType) {\n    this.router.navigate([\"/send-type\"], { queryParams: { type: type } });\n  }\n\n  async selectSend(s: SendView) {\n    this.router.navigate([\"/edit-send\"], { queryParams: { sendId: s.id } });\n  }\n\n  async addSend() {\n    if (this.disableSend) {\n      return;\n    }\n    this.router.navigate([\"/add-send\"]);\n  }\n\n  async removePassword(s: SendView): Promise<boolean> {\n    if (this.disableSend) {\n      return;\n    }\n    super.removePassword(s);\n  }\n\n  showSearching() {\n    return (\n      this.hasSearched || (!this.searchPending && this.searchService.isSearchable(this.searchText))\n    );\n  }\n\n  private calculateTypeCounts() {\n    // Create type counts\n    const typeCounts = new Map<SendType, number>();\n    this.sends.forEach((s) => {\n      if (typeCounts.has(s.type)) {\n        typeCounts.set(s.type, typeCounts.get(s.type) + 1);\n      } else {\n        typeCounts.set(s.type, 1);\n      }\n    });\n    this.typeCounts = typeCounts;\n  }\n\n  private async saveState() {\n    this.state = {\n      scrollY: this.popupUtils.getContentScrollY(window),\n      searchText: this.searchText,\n      sends: this.sends,\n      typeCounts: this.typeCounts,\n    };\n    await this.stateService.setBrowserSendComponentState(this.state);\n  }\n\n  private async restoreState(): Promise<boolean> {\n    this.state = await this.stateService.getBrowserSendComponentState();\n    if (this.state == null) {\n      return false;\n    }\n\n    if (this.state.sends != null) {\n      this.sends = this.state.sends;\n    }\n    if (this.state.typeCounts != null) {\n      this.typeCounts = this.state.typeCounts;\n    }\n\n    return true;\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" appBlurClick (click)=\"back()\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </button>\n  </div>\n  <h1 class=\"sr-only\">{{ \"send\" | i18n }}</h1>\n  <div class=\"search\">\n    <input\n      type=\"search\"\n      placeholder=\"{{ 'searchType' | i18n }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"search(200)\"\n      autocomplete=\"off\"\n      appAutofocus\n    />\n    <i class=\"bwi bwi-search\"></i>\n  </div>\n  <div class=\"right\">\n    <button\n      type=\"button\"\n      appBlurClick\n      (click)=\"addSend()\"\n      appA11yTitle=\"{{ 'addSend' | i18n }}\"\n      [disabled]=\"disableSend\"\n    >\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\" [ngClass]=\"{ flex: disableSend }\">\n  <app-callout type=\"warning\" title=\"{{ 'sendDisabled' | i18n }}\" *ngIf=\"disableSend\">\n    {{ \"sendDisabledWarning\" | i18n }}\n  </app-callout>\n  <div class=\"no-items\" *ngIf=\"!filteredSends.length\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" *ngIf=\"!loaded\" aria-hidden=\"true\"></i>\n    <ng-container *ngIf=\"loaded\">\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n      <button\n        type=\"button\"\n        (click)=\"addSend()\"\n        class=\"btn block primary link\"\n        [disabled]=\"disableSend\"\n      >\n        {{ \"addSend\" | i18n }}\n      </button>\n    </ng-container>\n  </div>\n  <div class=\"box list only-list\" *ngIf=\"filteredSends.length\">\n    <h2 class=\"box-header\">\n      {{ groupingTitle }}\n      <span class=\"flex-right\">{{ filteredSends.length }}</span>\n    </h2>\n    <div class=\"box-content\">\n      <app-send-list\n        [sends]=\"filteredSends\"\n        title=\"{{ 'editItem' | i18n }}\"\n        [disabledByPolicy]=\"disableSend\"\n        (onSelected)=\"selectSend($event)\"\n        (onCopySendLink)=\"copy($event)\"\n        (onRemovePassword)=\"removePassword($event)\"\n        (onDeleteSend)=\"delete($event)\"\n      >\n      </app-send-list>\n    </div>\n  </div>\n</main>\n","import { Location } from \"@angular/common\";\nimport { ChangeDetectorRef, Component, NgZone } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SendComponent as BaseSendComponent } from \"@bitwarden/angular/components/send/send.component\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { SendView } from \"@bitwarden/common/models/view/sendView\";\n\nimport { BrowserComponentState } from \"../../models/browserComponentState\";\nimport { StateService } from \"../../services/abstractions/state.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst ComponentId = \"SendTypeComponent\";\n\n@Component({\n  selector: \"app-send-type\",\n  templateUrl: \"send-type.component.html\",\n})\nexport class SendTypeComponent extends BaseSendComponent {\n  groupingTitle: string;\n  // State Handling\n  state: BrowserComponentState;\n  private refreshTimeout: number;\n  private applySavedState = true;\n\n  constructor(\n    sendService: SendService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    ngZone: NgZone,\n    policyService: PolicyService,\n    searchService: SearchService,\n    private popupUtils: PopupUtilsService,\n    private stateService: StateService,\n    private route: ActivatedRoute,\n    private location: Location,\n    private changeDetectorRef: ChangeDetectorRef,\n    private broadcasterService: BroadcasterService,\n    private router: Router,\n    logService: LogService\n  ) {\n    super(\n      sendService,\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      ngZone,\n      searchService,\n      policyService,\n      logService\n    );\n    super.onSuccessfulLoad = async () => {\n      this.selectType(this.type);\n    };\n    this.applySavedState =\n      (window as any).previousPopupUrl != null &&\n      !(window as any).previousPopupUrl.startsWith(\"/send-type\");\n  }\n\n  async ngOnInit() {\n    // Let super class finish\n    await super.ngOnInit();\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (this.applySavedState) {\n        this.state = await this.stateService.getBrowserSendTypeComponentState();\n        if (this.state?.searchText != null) {\n          this.searchText = this.state.searchText;\n        }\n      }\n\n      if (params.type != null) {\n        this.type = parseInt(params.type, null);\n        switch (this.type) {\n          case SendType.Text:\n            this.groupingTitle = this.i18nService.t(\"sendTypeText\");\n            break;\n          case SendType.File:\n            this.groupingTitle = this.i18nService.t(\"sendTypeFile\");\n            break;\n          default:\n            break;\n        }\n        await this.load((s) => s.type === this.type);\n      }\n\n      // Restore state and remove reference\n      if (this.applySavedState && this.state != null) {\n        window.setTimeout(() => this.popupUtils.setContentScrollY(window, this.state?.scrollY), 0);\n      }\n      this.stateService.setBrowserSendTypeComponentState(null);\n    });\n\n    // Refresh Send list if sync completed in background\n    this.broadcasterService.subscribe(ComponentId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (message.successfully) {\n              this.refreshTimeout = window.setTimeout(() => {\n                this.refresh();\n              }, 500);\n            }\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    // Remove timeout\n    if (this.refreshTimeout != null) {\n      window.clearTimeout(this.refreshTimeout);\n    }\n    // Save state\n    this.saveState();\n    // Unsubscribe\n    this.broadcasterService.unsubscribe(ComponentId);\n  }\n\n  async selectSend(s: SendView) {\n    this.router.navigate([\"/edit-send\"], { queryParams: { sendId: s.id } });\n  }\n\n  async addSend() {\n    if (this.disableSend) {\n      return;\n    }\n    this.router.navigate([\"/add-send\"], { queryParams: { type: this.type } });\n  }\n\n  async removePassword(s: SendView): Promise<boolean> {\n    if (this.disableSend) {\n      return;\n    }\n    super.removePassword(s);\n  }\n\n  back() {\n    (window as any).routeDirection = \"b\";\n    this.location.back();\n  }\n\n  private async saveState() {\n    this.state = {\n      scrollY: this.popupUtils.getContentScrollY(window),\n      searchText: this.searchText,\n    };\n    await this.stateService.setBrowserSendTypeComponentState(this.state);\n  }\n}\n","import { Injectable, OnDestroy } from \"@angular/core\";\nimport { CanActivate, NavigationEnd, NavigationStart, Router } from \"@angular/router\";\nimport { Subscription } from \"rxjs\";\nimport { filter, pairwise } from \"rxjs/operators\";\n\n@Injectable()\nexport class DebounceNavigationService implements CanActivate, OnDestroy {\n  navigationStartSub: Subscription;\n  navigationSuccessSub: Subscription;\n\n  private lastNavigation: NavigationStart;\n  private thisNavigation: NavigationStart;\n  private lastNavigationSuccessId: number;\n\n  constructor(private router: Router) {\n    this.navigationStartSub = this.router.events\n      .pipe(\n        filter((event) => event instanceof NavigationStart),\n        pairwise()\n      )\n      .subscribe(\n        (events: [NavigationStart, NavigationStart]) =>\n          ([this.lastNavigation, this.thisNavigation] = events)\n      );\n\n    this.navigationSuccessSub = this.router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe((event: NavigationEnd) => (this.lastNavigationSuccessId = event.id));\n  }\n\n  async canActivate() {\n    return !(\n      this.thisNavigation?.navigationTrigger === \"hashchange\" &&\n      this.lastNavigation.navigationTrigger === \"popstate\" &&\n      this.lastNavigationSuccessId === this.lastNavigation.id &&\n      this.lastNavigation.url === this.thisNavigation?.url\n    );\n  }\n\n  ngOnDestroy() {\n    if (this.navigationStartSub != null) {\n      this.navigationStartSub.unsubscribe();\n    }\n\n    if (this.navigationSuccessSub != null) {\n      this.navigationSuccessSub.unsubscribe();\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/tabs/settings\">\n        <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n        <span>{{ \"back\" | i18n }}</span>\n      </a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"excludedDomains\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick>{{ \"save\" | i18n }}</button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <ng-container *ngIf=\"excludedDomains\">\n          <div\n            class=\"box-content-row box-content-row-multi\"\n            appBoxRow\n            *ngFor=\"let domain of excludedDomains; let i = index; trackBy: trackByFunction\"\n          >\n            <button\n              type=\"button\"\n              appStopClick\n              (click)=\"removeUri(i)\"\n              appA11yTitle=\"{{ 'remove' | i18n }}\"\n            >\n              <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"row-main\">\n              <label for=\"excludedDomain{{ i }}\">{{ \"uriPosition\" | i18n: i + 1 }}</label>\n              <input\n                id=\"excludedDomain{{ i }}\"\n                name=\"excludedDomain{{ i }}\"\n                type=\"text\"\n                [(ngModel)]=\"domain.uri\"\n                placeholder=\"{{ 'ex' | i18n }} https://google.com\"\n                inputmode=\"url\"\n                appInputVerbatim\n              />\n              <label for=\"currentUris{{ i }}\" class=\"sr-only\">\n                {{ \"currentUri\" | i18n }} {{ i + 1 }}\n              </label>\n              <select\n                *ngIf=\"currentUris && currentUris.length\"\n                id=\"currentUris{{ i }}\"\n                name=\"currentUris{{ i }}\"\n                [(ngModel)]=\"domain.uri\"\n                [hidden]=\"!domain.showCurrentUris\"\n              >\n                <option [ngValue]=\"null\">-- {{ \"select\" | i18n }} --</option>\n                <option *ngFor=\"let u of currentUris\" [ngValue]=\"u\">{{ u }}</option>\n              </select>\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                *ngIf=\"currentUris && currentUris.length\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'toggleCurrentUris' | i18n }}\"\n                (click)=\"toggleUriInput(domain)\"\n                [attr.aria-pressed]=\"domain.showCurrentUris === true\"\n              >\n                <i aria-hidden=\"true\" class=\"bwi bwi-lg bwi-list\"></i>\n              </button>\n            </div>\n          </div>\n        </ng-container>\n        <button\n          type=\"button\"\n          appStopClick\n          appBlurClick\n          (click)=\"addUri()\"\n          class=\"box-content-row box-content-row-newmulti\"\n        >\n          <i class=\"bwi bwi-plus-circle bwi-fw bwi-lg\" aria-hidden=\"true\"></i> {{ \"newUri\" | i18n }}\n        </button>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"excludedDomainsDesc\" | i18n }}\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\n\ninterface ExcludedDomain {\n  uri: string;\n  showCurrentUris: boolean;\n}\n\nconst BroadcasterSubscriptionId = \"excludedDomains\";\n\n@Component({\n  selector: \"app-excluded-domains\",\n  templateUrl: \"excluded-domains.component.html\",\n})\nexport class ExcludedDomainsComponent implements OnInit, OnDestroy {\n  excludedDomains: ExcludedDomain[] = [];\n  currentUris: string[];\n  loadCurrentUrisTimeout: number;\n\n  constructor(\n    private stateService: StateService,\n    private i18nService: I18nService,\n    private router: Router,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async ngOnInit() {\n    const savedDomains = await this.stateService.getNeverDomains();\n    if (savedDomains) {\n      for (const uri of Object.keys(savedDomains)) {\n        this.excludedDomains.push({ uri: uri, showCurrentUris: false });\n      }\n    }\n\n    await this.loadCurrentUris();\n\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"tabChanged\":\n          case \"windowChanged\":\n            if (this.loadCurrentUrisTimeout != null) {\n              window.clearTimeout(this.loadCurrentUrisTimeout);\n            }\n            this.loadCurrentUrisTimeout = window.setTimeout(\n              async () => await this.loadCurrentUris(),\n              500\n            );\n            break;\n          default:\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async addUri() {\n    this.excludedDomains.push({ uri: \"\", showCurrentUris: false });\n  }\n\n  async removeUri(i: number) {\n    this.excludedDomains.splice(i, 1);\n  }\n\n  async submit() {\n    const savedDomains: { [name: string]: null } = {};\n    for (const domain of this.excludedDomains) {\n      if (domain.uri && domain.uri !== \"\") {\n        const validDomain = Utils.getHostname(domain.uri);\n        if (!validDomain) {\n          this.platformUtilsService.showToast(\n            \"error\",\n            null,\n            this.i18nService.t(\"excludedDomainsInvalidDomain\", domain.uri)\n          );\n          return;\n        }\n        savedDomains[validDomain] = null;\n      }\n    }\n    await this.stateService.setNeverDomains(savedDomains);\n    this.router.navigate([\"/tabs/settings\"]);\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  toggleUriInput(domain: ExcludedDomain) {\n    domain.showCurrentUris = !domain.showCurrentUris;\n  }\n\n  async loadCurrentUris() {\n    const tabs = await BrowserApi.tabsQuery({ windowType: \"normal\" });\n    if (tabs) {\n      const uriSet = new Set(tabs.map((tab) => Utils.getHostname(tab.url)));\n      uriSet.delete(null);\n      this.currentUris = Array.from(uriSet);\n    }\n  }\n}\n","export enum EventType {\n  User_LoggedIn = 1000,\n  User_ChangedPassword = 1001,\n  User_Updated2fa = 1002,\n  User_Disabled2fa = 1003,\n  User_Recovered2fa = 1004,\n  User_FailedLogIn = 1005,\n  User_FailedLogIn2fa = 1006,\n  User_ClientExportedVault = 1007,\n  User_UpdatedTempPassword = 1008,\n  User_MigratedKeyToKeyConnector = 1009,\n\n  Cipher_Created = 1100,\n  Cipher_Updated = 1101,\n  Cipher_Deleted = 1102,\n  Cipher_AttachmentCreated = 1103,\n  Cipher_AttachmentDeleted = 1104,\n  Cipher_Shared = 1105,\n  Cipher_UpdatedCollections = 1106,\n  Cipher_ClientViewed = 1107,\n  Cipher_ClientToggledPasswordVisible = 1108,\n  Cipher_ClientToggledHiddenFieldVisible = 1109,\n  Cipher_ClientToggledCardCodeVisible = 1110,\n  Cipher_ClientCopiedPassword = 1111,\n  Cipher_ClientCopiedHiddenField = 1112,\n  Cipher_ClientCopiedCardCode = 1113,\n  Cipher_ClientAutofilled = 1114,\n  Cipher_SoftDeleted = 1115,\n  Cipher_Restored = 1116,\n  Cipher_ClientToggledCardNumberVisible = 1117,\n\n  Collection_Created = 1300,\n  Collection_Updated = 1301,\n  Collection_Deleted = 1302,\n\n  Group_Created = 1400,\n  Group_Updated = 1401,\n  Group_Deleted = 1402,\n\n  OrganizationUser_Invited = 1500,\n  OrganizationUser_Confirmed = 1501,\n  OrganizationUser_Updated = 1502,\n  OrganizationUser_Removed = 1503,\n  OrganizationUser_UpdatedGroups = 1504,\n  OrganizationUser_UnlinkedSso = 1505,\n  OrganizationUser_ResetPassword_Enroll = 1506,\n  OrganizationUser_ResetPassword_Withdraw = 1507,\n  OrganizationUser_AdminResetPassword = 1508,\n  OrganizationUser_ResetSsoLink = 1509,\n  OrganizationUser_FirstSsoLogin = 1510,\n  OrganizationUser_Deactivated = 1511,\n  OrganizationUser_Activated = 1512,\n\n  Organization_Updated = 1600,\n  Organization_PurgedVault = 1601,\n  // Organization_ClientExportedVault = 1602,\n  Organization_VaultAccessed = 1603,\n  Organization_EnabledSso = 1604,\n  Organization_DisabledSso = 1605,\n  Organization_EnabledKeyConnector = 1606,\n  Organization_DisabledKeyConnector = 1607,\n  Organization_SponsorshipsSynced = 1608,\n\n  Policy_Updated = 1700,\n\n  ProviderUser_Invited = 1800,\n  ProviderUser_Confirmed = 1801,\n  ProviderUser_Updated = 1802,\n  ProviderUser_Removed = 1803,\n\n  ProviderOrganization_Created = 1900,\n  ProviderOrganization_Added = 1901,\n  ProviderOrganization_Removed = 1902,\n  ProviderOrganization_VaultAccessed = 1903,\n}\n","import { EventView } from \"../models/view/eventView\";\n\nexport type ExportFormat = \"csv\" | \"json\" | \"encrypted_json\";\n\nexport abstract class ExportService {\n  getExport: (format?: ExportFormat, organizationId?: string) => Promise<string>;\n  getPasswordProtectedExport: (password: string, organizationId?: string) => Promise<string>;\n  getOrganizationExport: (organizationId: string, format?: ExportFormat) => Promise<string>;\n  getEventExport: (events: EventView[]) => Promise<string>;\n  getFileName: (prefix?: string, extension?: string) => string;\n}\n","import { EventType } from \"../enums/eventType\";\n\nexport abstract class EventService {\n  collect: (eventType: EventType, cipherId?: string, uploadImmediately?: boolean) => Promise<any>;\n  uploadEvents: (userId?: string) => Promise<any>;\n  clearEvents: (userId?: string) => Promise<any>;\n}\n","import { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { Verification } from \"../types/verification\";\n\nexport abstract class UserVerificationService {\n  buildRequest: <T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) => Promise<T>;\n  verifyUser: (verification: Verification) => Promise<boolean>;\n  requestOTP: () => Promise<void>;\n}\n","import { FileDownloadRequest } from \"./fileDownloadRequest\";\n\nexport abstract class FileDownloadService {\n  download: (request: FileDownloadRequest) => void;\n}\n","export enum VerificationType {\n  MasterPassword = 0,\n  OTP = 1,\n}\n","import { Directive, EventEmitter, OnInit, Output } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { ExportService } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification.service\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\n@Directive()\nexport class ExportComponent implements OnInit {\n  @Output() onSaved = new EventEmitter();\n\n  formPromise: Promise<string>;\n  disabledByPolicy = false;\n\n  exportForm = this.formBuilder.group({\n    format: [\"json\"],\n    secret: [\"\"],\n  });\n\n  formatOptions = [\n    { name: \".json\", value: \"json\" },\n    { name: \".csv\", value: \"csv\" },\n    { name: \".json (Encrypted)\", value: \"encrypted_json\" },\n  ];\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected exportService: ExportService,\n    protected eventService: EventService,\n    private policyService: PolicyService,\n    protected win: Window,\n    private logService: LogService,\n    private userVerificationService: UserVerificationService,\n    private formBuilder: FormBuilder,\n    protected fileDownloadService: FileDownloadService\n  ) {}\n\n  async ngOnInit() {\n    await this.checkExportDisabled();\n  }\n\n  async checkExportDisabled() {\n    this.disabledByPolicy = await this.policyService.policyAppliesToUser(\n      PolicyType.DisablePersonalVaultExport\n    );\n    if (this.disabledByPolicy) {\n      this.exportForm.disable();\n    }\n  }\n\n  get encryptedFormat() {\n    return this.format === \"encrypted_json\";\n  }\n\n  async submit() {\n    if (this.disabledByPolicy) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"personalVaultExportPolicyInEffect\")\n      );\n      return;\n    }\n\n    const acceptedWarning = await this.warningDialog();\n    if (!acceptedWarning) {\n      return;\n    }\n\n    const secret = this.exportForm.get(\"secret\").value;\n    try {\n      await this.userVerificationService.verifyUser(secret);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n      return;\n    }\n\n    try {\n      this.formPromise = this.getExportData();\n      const data = await this.formPromise;\n      this.downloadFile(data);\n      this.saved();\n      await this.collectEvent();\n      this.exportForm.get(\"secret\").setValue(\"\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async warningDialog() {\n    if (this.encryptedFormat) {\n      return await this.platformUtilsService.showDialog(\n        \"<p>\" +\n          this.i18nService.t(\"encExportKeyWarningDesc\") +\n          \"<p>\" +\n          this.i18nService.t(\"encExportAccountWarningDesc\"),\n        this.i18nService.t(\"confirmVaultExport\"),\n        this.i18nService.t(\"exportVault\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\",\n        true\n      );\n    } else {\n      return await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"exportWarningDesc\"),\n        this.i18nService.t(\"confirmVaultExport\"),\n        this.i18nService.t(\"exportVault\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n    }\n  }\n\n  protected saved() {\n    this.onSaved.emit();\n  }\n\n  protected getExportData() {\n    return this.exportService.getExport(this.format);\n  }\n\n  protected getFileName(prefix?: string) {\n    let extension = this.format;\n    if (this.format === \"encrypted_json\") {\n      if (prefix == null) {\n        prefix = \"encrypted\";\n      } else {\n        prefix = \"encrypted_\" + prefix;\n      }\n      extension = \"json\";\n    }\n    return this.exportService.getFileName(prefix, extension);\n  }\n\n  protected async collectEvent(): Promise<any> {\n    await this.eventService.collect(EventType.User_ClientExportedVault);\n  }\n\n  get format() {\n    return this.exportForm.get(\"format\").value;\n  }\n\n  private downloadFile(csv: string): void {\n    const fileName = this.getFileName();\n    this.fileDownloadService.download({\n      fileName: fileName,\n      blobData: csv,\n      blobOptions: { type: \"text/plain\" },\n    });\n  }\n}\n","<ng-container *ngIf=\"!usesKeyConnector\">\n  <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n  <input\n    id=\"masterPassword\"\n    type=\"password\"\n    name=\"MasterPasswordHash\"\n    class=\"form-control\"\n    [formControl]=\"secret\"\n    required\n    appAutofocus\n    appInputVerbatim\n  />\n  <small class=\"form-text text-muted\">{{ \"confirmIdentity\" | i18n }}</small>\n</ng-container>\n<ng-container *ngIf=\"usesKeyConnector\">\n  <div class=\"form-group\">\n    <label class=\"d-block\">{{ \"sendVerificationCode\" | i18n }}</label>\n    <button\n      type=\"button\"\n      class=\"btn btn-outline-secondary\"\n      (click)=\"requestOTP()\"\n      [disabled]=\"disableRequestOTP\"\n    >\n      {{ \"sendCode\" | i18n }}\n    </button>\n    <span class=\"ml-2 text-success\" role=\"alert\" @sent *ngIf=\"sentCode\">\n      <i class=\"bwi bwi-check-circle\" aria-hidden=\"true\"></i>\n      {{ \"codeSent\" | i18n }}\n    </span>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"verificationCode\">{{ \"verificationCode\" | i18n }}</label>\n    <input\n      id=\"verificationCode\"\n      type=\"input\"\n      name=\"verificationCode\"\n      class=\"form-control\"\n      [formControl]=\"secret\"\n      required\n      appAutofocus\n      appInputVerbatim\n    />\n    <small class=\"form-text text-muted\">{{ \"confirmIdentity\" | i18n }}</small>\n  </div>\n</ng-container>\n","import { animate, style, transition, trigger } from \"@angular/animations\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification.service\";\nimport { VerificationType } from \"@bitwarden/common/enums/verificationType\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n/**\n * Used for general-purpose user verification throughout the app.\n * Collects the user's master password, or if they are using Key Connector, prompts for an OTP via email.\n * This is exposed to the parent component via the ControlValueAccessor interface (e.g. bind it to a FormControl).\n * Use UserVerificationService to verify the user's input.\n */\n@Component({\n  selector: \"app-user-verification\",\n  templateUrl: \"user-verification.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: UserVerificationComponent,\n    },\n  ],\n  animations: [\n    trigger(\"sent\", [\n      transition(\":enter\", [style({ opacity: 0 }), animate(\"100ms\", style({ opacity: 1 }))]),\n    ]),\n  ],\n})\nexport class UserVerificationComponent implements ControlValueAccessor, OnInit {\n  usesKeyConnector = false;\n  disableRequestOTP = false;\n  sentCode = false;\n\n  secret = new FormControl(\"\");\n\n  private onChange: (value: Verification) => void;\n\n  constructor(\n    private keyConnectorService: KeyConnectorService,\n    private userVerificationService: UserVerificationService\n  ) {}\n\n  async ngOnInit() {\n    this.usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.processChanges(this.secret.value);\n\n    this.secret.valueChanges.subscribe((secret: string) => this.processChanges(secret));\n  }\n\n  async requestOTP() {\n    if (this.usesKeyConnector) {\n      this.disableRequestOTP = true;\n      try {\n        await this.userVerificationService.requestOTP();\n        this.sentCode = true;\n      } finally {\n        this.disableRequestOTP = false;\n      }\n    }\n  }\n\n  writeValue(obj: any): void {\n    this.secret.setValue(obj);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    // Not implemented\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disableRequestOTP = isDisabled;\n    if (isDisabled) {\n      this.secret.disable();\n    } else {\n      this.secret.enable();\n    }\n  }\n\n  private processChanges(secret: string) {\n    if (this.onChange == null) {\n      return;\n    }\n\n    this.onChange({\n      type: this.usesKeyConnector ? VerificationType.OTP : VerificationType.MasterPassword,\n      secret: secret,\n    });\n  }\n}\n","<ng-container *ngIf=\"!usesKeyConnector\">\n  <div class=\"box-content-row\" appBoxRow>\n    <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n    <input\n      id=\"masterPassword\"\n      type=\"password\"\n      name=\"MasterPasswordHash\"\n      class=\"form-control\"\n      [formControl]=\"secret\"\n      required\n      appAutofocus\n      appInputVerbatim\n    />\n  </div>\n</ng-container>\n<ng-container *ngIf=\"usesKeyConnector\">\n  <div class=\"box-content-row\" appBoxRow>\n    <label class=\"d-block\">{{ \"sendVerificationCode\" | i18n }}</label>\n    <button\n      type=\"button\"\n      class=\"btn btn-outline-secondary\"\n      (click)=\"requestOTP()\"\n      [disabled]=\"disableRequestOTP\"\n    >\n      {{ \"sendCode\" | i18n }}\n    </button>\n    <span class=\"ml-2 text-success\" role=\"alert\" @sent *ngIf=\"sentCode\">\n      <i class=\"bwi bwi-check-circle\" aria-hidden=\"true\"></i>\n      {{ \"codeSent\" | i18n }}\n    </span>\n  </div>\n\n  <div class=\"box-content-row\" appBoxRow>\n    <label for=\"verificationCode\">{{ \"verificationCode\" | i18n }}</label>\n    <input\n      id=\"verificationCode\"\n      type=\"input\"\n      name=\"verificationCode\"\n      class=\"form-control\"\n      [formControl]=\"secret\"\n      required\n      appAutofocus\n      appInputVerbatim\n    />\n  </div>\n</ng-container>\n","import { animate, style, transition, trigger } from \"@angular/animations\";\nimport { Component } from \"@angular/core\";\nimport { NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { UserVerificationComponent as BaseComponent } from \"@bitwarden/angular/components/user-verification.component\";\n\n@Component({\n  selector: \"app-user-verification\",\n  templateUrl: \"user-verification.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: UserVerificationComponent,\n    },\n  ],\n  animations: [\n    trigger(\"sent\", [\n      transition(\":enter\", [style({ opacity: 0 }), animate(\"100ms\", style({ opacity: 1 }))]),\n    ]),\n  ],\n})\nexport class UserVerificationComponent extends BaseComponent {}\n","import { OrganizationData } from \"../models/data/organizationData\";\nimport { Organization } from \"../models/domain/organization\";\n\nexport abstract class OrganizationService {\n  get: (id: string) => Promise<Organization>;\n  getByIdentifier: (identifier: string) => Promise<Organization>;\n  getAll: (userId?: string) => Promise<Organization[]>;\n  save: (orgs: { [id: string]: OrganizationData }) => Promise<any>;\n  canManageSponsorships: () => Promise<boolean>;\n  hasOrganizations: (userId?: string) => Promise<boolean>;\n}\n","<ng-container *ngIf=\"show\">\n  <app-callout type=\"info\" title=\"{{ scopeConfig.title | i18n }}\">\n    {{ scopeConfig.description | i18n: scopeConfig.scopeIdentifier }}\n  </app-callout>\n</ng-container>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-export-scope-callout\",\n  templateUrl: \"export-scope-callout.component.html\",\n})\nexport class ExportScopeCalloutComponent implements OnInit {\n  @Input() organizationId: string = null;\n\n  show = false;\n  scopeConfig: {\n    title: string;\n    description: string;\n    scopeIdentifier: string;\n  };\n\n  constructor(\n    protected organizationService: OrganizationService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    if (!(await this.organizationService.hasOrganizations())) {\n      return;\n    }\n    this.scopeConfig =\n      this.organizationId != null\n        ? {\n            title: \"exportingOrganizationVaultTitle\",\n            description: \"exportingOrganizationVaultDescription\",\n            scopeIdentifier: (await this.organizationService.get(this.organizationId)).name,\n          }\n        : {\n            title: \"exportingPersonalVaultTitle\",\n            description: \"exportingPersonalVaultDescription\",\n            scopeIdentifier: await this.stateService.getEmail(),\n          };\n    this.show = true;\n  }\n}\n","<form (ngSubmit)=\"submit()\" [formGroup]=\"exportForm\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/tabs/settings\">\n        <span class=\"header-icon\" aria-hidden=\"true\"><i class=\"bwi bwi-angle-left\"></i></span>\n        <span>{{ \"back\" | i18n }}</span>\n      </a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"exportVault\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button appBlurClick type=\"submit\" [disabled]=\"!exportForm.enabled\">\n        {{ \"submit\" | i18n }}\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <app-callout type=\"warning\" title=\"{{ 'vaultExportDisabled' | i18n }}\" *ngIf=\"disabledByPolicy\">\n      {{ \"personalVaultExportPolicyInEffect\" | i18n }}\n    </app-callout>\n    <app-export-scope-callout *ngIf=\"!disabledByPolicy\"></app-export-scope-callout>\n\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"format\">{{ \"fileFormat\" | i18n }}</label>\n          <select id=\"format\" name=\"Format\" formControlName=\"format\">\n            <option *ngFor=\"let f of formatOptions\" [value]=\"f.value\">{{ f.name }}</option>\n          </select>\n        </div>\n        <app-user-verification ngDefaultControl formControlName=\"secret\" name=\"Secret\">\n        </app-user-verification>\n      </div>\n      <div class=\"box-footer\">\n        <p>{{ \"confirmIdentity\" | i18n }}</p>\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { ExportComponent as BaseExportComponent } from \"@bitwarden/angular/components/export.component\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { ExportService } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification.service\";\n\n@Component({\n  selector: \"app-export\",\n  templateUrl: \"export.component.html\",\n})\nexport class ExportComponent extends BaseExportComponent {\n  constructor(\n    cryptoService: CryptoService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    exportService: ExportService,\n    eventService: EventService,\n    policyService: PolicyService,\n    private router: Router,\n    logService: LogService,\n    userVerificationService: UserVerificationService,\n    formBuilder: FormBuilder,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cryptoService,\n      i18nService,\n      platformUtilsService,\n      exportService,\n      eventService,\n      policyService,\n      window,\n      logService,\n      userVerificationService,\n      formBuilder,\n      fileDownloadService\n    );\n  }\n\n  protected saved() {\n    super.saved();\n    this.router.navigate([\"/tabs/settings\"]);\n  }\n}\n","import { Folder } from \"../domain/folder\";\nimport { ITreeNodeObject } from \"../domain/treeNode\";\n\nimport { View } from \"./view\";\n\nexport class FolderView implements View, ITreeNodeObject {\n  id: string = null;\n  name: string = null;\n  revisionDate: Date = null;\n\n  constructor(f?: Folder) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.revisionDate = f.revisionDate;\n  }\n}\n","import { Observable } from \"rxjs\";\n\nimport { FolderData } from \"../../models/data/folderData\";\nimport { Folder } from \"../../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetricCryptoKey\";\nimport { FolderView } from \"../../models/view/folderView\";\n\nexport abstract class FolderService {\n  folders$: Observable<Folder[]>;\n  folderViews$: Observable<FolderView[]>;\n\n  clearCache: () => Promise<void>;\n  encrypt: (model: FolderView, key?: SymmetricCryptoKey) => Promise<Folder>;\n  get: (id: string) => Promise<Folder>;\n  /**\n   * @deprecated Only use in CLI!\n   */\n  getAllDecryptedFromState: () => Promise<FolderView[]>;\n}\n\nexport abstract class InternalFolderService extends FolderService {\n  upsert: (folder: FolderData | FolderData[]) => Promise<void>;\n  replace: (folders: { [id: string]: FolderData }) => Promise<void>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n}\n","import { Folder } from \"@bitwarden/common/models/domain/folder\";\nimport { FolderResponse } from \"@bitwarden/common/models/response/folderResponse\";\n\nexport class FolderApiServiceAbstraction {\n  save: (folder: Folder) => Promise<any>;\n  delete: (id: string) => Promise<any>;\n  get: (id: string) => Promise<FolderResponse>;\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\n@Directive()\nexport class FolderAddEditComponent implements OnInit {\n  @Input() folderId: string;\n  @Output() onSavedFolder = new EventEmitter<FolderView>();\n  @Output() onDeletedFolder = new EventEmitter<FolderView>();\n\n  editMode = false;\n  folder: FolderView = new FolderView();\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n\n  constructor(\n    protected folderService: FolderService,\n    protected folderApiService: FolderApiServiceAbstraction,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.folder.name == null || this.folder.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    try {\n      const folder = await this.folderService.encrypt(this.folder);\n      this.formPromise = this.folderApiService.save(folder);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedFolder\" : \"addedFolder\")\n      );\n      this.onSavedFolder.emit(this.folder);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteFolderConfirmation\"),\n      this.i18nService.t(\"deleteFolder\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.folderApiService.delete(this.folder.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedFolder\"));\n      this.onDeletedFolder.emit(this.folder);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  protected async init() {\n    this.editMode = this.folderId != null;\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editFolder\");\n      const folder = await this.folderService.get(this.folderId);\n      this.folder = await folder.decrypt();\n    } else {\n      this.title = this.i18nService.t(\"addFolder\");\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/folders\">{{ \"cancel\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ title }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\" *ngIf=\"folder\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input\n            id=\"name\"\n            type=\"text\"\n            name=\"Name\"\n            [(ngModel)]=\"folder.name\"\n            [appAutofocus]=\"!editMode\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"editMode\">\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"delete()\"\n          [appApiAction]=\"deletePromise\"\n          #deleteBtn\n        >\n          <div class=\"row-main text-danger\">\n            <div class=\"icon text-danger\" aria-hidden=\"true\">\n              <i class=\"bwi bwi-trash bwi-lg bwi-fw\" [hidden]=\"deleteBtn.loading\"></i>\n              <i class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\" [hidden]=\"!deleteBtn.loading\"></i>\n            </div>\n            <span>{{ \"deleteFolder\" | i18n }}</span>\n          </div>\n        </button>\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { FolderAddEditComponent as BaseFolderAddEditComponent } from \"@bitwarden/angular/components/folder-add-edit.component\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-folder-add-edit\",\n  templateUrl: \"folder-add-edit.component.html\",\n})\nexport class FolderAddEditComponent extends BaseFolderAddEditComponent {\n  constructor(\n    folderService: FolderService,\n    folderApiService: FolderApiServiceAbstraction,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    private route: ActivatedRoute,\n    logService: LogService\n  ) {\n    super(folderService, folderApiService, i18nService, platformUtilsService, logService);\n  }\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.folderId) {\n        this.folderId = params.folderId;\n      }\n      await this.init();\n    });\n  }\n\n  async submit(): Promise<boolean> {\n    if (await super.submit()) {\n      this.router.navigate([\"/folders\"]);\n      return true;\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await super.delete();\n    if (confirmed) {\n      this.router.navigate([\"/folders\"]);\n    }\n    return confirmed;\n  }\n}\n","export enum ThemeType {\n  System = \"system\",\n  Light = \"light\",\n  Dark = \"dark\",\n  Nord = \"nord\",\n  SolarizedDark = \"solarizedDark\",\n}\n","export enum UriMatchType {\n  Domain = 0,\n  Host = 1,\n  StartsWith = 2,\n  Exact = 3,\n  RegularExpression = 4,\n  Never = 5,\n}\n","<header>\n  <div class=\"left\">\n    <a routerLink=\"/tabs/settings\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </a>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"folders\" | i18n }}</span>\n  </h1>\n  <div class=\"right\">\n    <button\n      type=\"button\"\n      appBlurClick\n      (click)=\"addFolder()\"\n      appA11yTitle=\"{{ 'addFolder' | i18n }}\"\n    >\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"box list full-list\" *ngIf=\"(folders$ | async)?.length\">\n    <div class=\"box-content\">\n      <button\n        type=\"button\"\n        appStopClick\n        (click)=\"folderSelected(f)\"\n        class=\"box-content-row padded\"\n        *ngFor=\"let f of folders$ | async\"\n      >\n        {{ f.name }}\n      </button>\n    </div>\n  </div>\n  <div class=\"no-items\" *ngIf=\"!(folders$ | async)?.length\">\n    <p>{{ \"noFolders\" | i18n }}</p>\n  </div>\n</main>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { map, Observable } from \"rxjs\";\n\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\n@Component({\n  selector: \"app-folders\",\n  templateUrl: \"folders.component.html\",\n})\nexport class FoldersComponent {\n  folders$: Observable<FolderView[]>;\n\n  constructor(private folderService: FolderService, private router: Router) {\n    this.folders$ = this.folderService.folderViews$.pipe(\n      map((folders) => {\n        if (folders.length > 0) {\n          folders = folders.slice(0, folders.length - 1);\n        }\n\n        return folders;\n      })\n    );\n  }\n\n  folderSelected(folder: FolderView) {\n    this.router.navigate([\"/edit-folder\"], { queryParams: { folderId: folder.id } });\n  }\n\n  addFolder() {\n    this.router.navigate([\"/add-folder\"]);\n  }\n}\n","export abstract class TotpService {\n  getCode: (key: string) => Promise<string>;\n  getTimeInterval: (key: string) => number;\n}\n","import { Observable } from \"rxjs\";\n\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { Theme } from \"./theme\";\n\nexport abstract class AbstractThemingService {\n  theme$: Observable<Theme>;\n  monitorThemeChanges: () => Promise<void>;\n  updateSystemTheme: (systemTheme: ThemeType) => void;\n  updateConfiguredTheme: (theme: ThemeType) => Promise<void>;\n}\n","<header>\n  <div class=\"left\">\n    <a routerLink=\"/tabs/settings\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </a>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"options\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"box\">\n    <h2>\n      <button\n        type=\"button\"\n        class=\"box-header-expandable\"\n        (click)=\"showGeneral = !showGeneral\"\n        [attr.aria-expanded]=\"showGeneral\"\n      >\n        General\n        <i *ngIf=\"!showGeneral\" class=\"bwi bwi-angle-down bwi-sm icon\" aria-hidden=\"true\"></i>\n        <i *ngIf=\"showGeneral\" class=\"bwi bwi-chevron-up bwi-sm icon\" aria-hidden=\"true\"></i>\n      </button>\n    </h2>\n  </div>\n  <ng-container *ngIf=\"showGeneral\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"defaultUriMatch\">{{ \"defaultUriMatchDetection\" | i18n }}</label>\n          <select\n            id=\"defaultUriMatch\"\n            name=\"DefaultUriMatch\"\n            [(ngModel)]=\"defaultUriMatch\"\n            (change)=\"saveDefaultUriMatch()\"\n          >\n            <option *ngFor=\"let o of uriMatchOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"defaultUriMatchDetectionDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\" *ngIf=\"showClearClipboard\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"clearClipboard\">{{ \"clearClipboard\" | i18n }}</label>\n          <select\n            id=\"clearClipboard\"\n            name=\"ClearClipboard\"\n            [(ngModel)]=\"clearClipboard\"\n            (change)=\"saveClearClipboard()\"\n          >\n            <option *ngFor=\"let o of clearClipboardOptions\" [ngValue]=\"o.value\">\n              {{ o.name }}\n            </option>\n          </select>\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"clearClipboardDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"totp\">{{ \"enableAutoTotpCopy\" | i18n }}</label>\n          <input\n            id=\"totp\"\n            type=\"checkbox\"\n            (change)=\"updateAutoTotpCopy()\"\n            [(ngModel)]=\"enableAutoTotpCopy\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"disableAutoTotpCopyDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"addlogin-notification-bar\">{{ \"enableAddLoginNotification\" | i18n }}</label>\n          <input\n            id=\"addlogin-notification-bar\"\n            type=\"checkbox\"\n            (change)=\"updateAddLoginNotification()\"\n            [(ngModel)]=\"enableAddLoginNotification\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"addLoginNotificationDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"changedpass-notification-bar\">{{\n            \"enableChangedPasswordNotification\" | i18n\n          }}</label>\n          <input\n            id=\"changedpass-notification-bar\"\n            type=\"checkbox\"\n            (change)=\"updateChangedPasswordNotification()\"\n            [(ngModel)]=\"enableChangedPasswordNotification\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"changedPasswordNotificationDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"context-menu\">{{ \"enableContextMenuItem\" | i18n }}</label>\n          <input\n            id=\"context-menu\"\n            type=\"checkbox\"\n            (change)=\"updateContextMenuItem()\"\n            [(ngModel)]=\"enableContextMenuItem\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"contextMenuItemDesc\" | i18n }}</div>\n    </div>\n  </ng-container>\n  <div class=\"box box-section-divider\">\n    <h2>\n      <button\n        type=\"button\"\n        class=\"box-header-expandable\"\n        (click)=\"showDisplay = !showDisplay\"\n        [attr.aria-expanded]=\"showDisplay\"\n      >\n        Display\n        <i *ngIf=\"!showDisplay\" class=\"bwi bwi-angle-down bwi-sm icon\" aria-hidden=\"true\"></i>\n        <i *ngIf=\"showDisplay\" class=\"bwi bwi-chevron-up bwi-sm icon\" aria-hidden=\"true\"></i>\n      </button>\n    </h2>\n  </div>\n  <ng-container *ngIf=\"showDisplay\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"showCardsCurrentTab\">{{ \"showCardsCurrentTab\" | i18n }}</label>\n          <input\n            id=\"showCardsCurrentTab\"\n            type=\"checkbox\"\n            (change)=\"updateShowCardsCurrentTab()\"\n            [(ngModel)]=\"showCardsCurrentTab\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"showCardsCurrentTabDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"showIdentitiesCurrentTab\">{{ \"showIdentitiesCurrentTab\" | i18n }}</label>\n          <input\n            id=\"showIdentitiesCurrentTab\"\n            type=\"checkbox\"\n            (change)=\"updateShowIdentitiesCurrentTab()\"\n            [(ngModel)]=\"showIdentitiesCurrentTab\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"showIdentitiesCurrentTabDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"favicon\">{{ \"enableFavicon\" | i18n }}</label>\n          <input\n            id=\"favicon\"\n            type=\"checkbox\"\n            (change)=\"updateFavicon()\"\n            [(ngModel)]=\"enableFavicon\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"faviconDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"badge\">{{ \"enableBadgeCounter\" | i18n }}</label>\n          <input\n            id=\"badge\"\n            type=\"checkbox\"\n            (change)=\"updateBadgeCounter()\"\n            [(ngModel)]=\"enableBadgeCounter\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"badgeCounterDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"theme\">{{ \"theme\" | i18n }}</label>\n          <select id=\"theme\" name=\"Theme\" [(ngModel)]=\"theme\" (change)=\"saveTheme()\">\n            <option *ngFor=\"let o of themeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"themeDesc\" | i18n }}</div>\n    </div>\n  </ng-container>\n  <div class=\"box box-section-divider\">\n    <h2>\n      <button\n        type=\"button\"\n        class=\"box-header-expandable\"\n        (click)=\"showAutofill = !showAutofill\"\n        [attr.aria-expanded]=\"showAutofill\"\n      >\n        Autofill\n        <i *ngIf=\"!showAutofill\" class=\"bwi bwi-angle-down bwi-sm icon\" aria-hidden=\"true\"></i>\n        <i *ngIf=\"showAutofill\" class=\"bwi bwi-chevron-up bwi-sm icon\" aria-hidden=\"true\"></i>\n      </button>\n    </h2>\n  </div>\n  <ng-container *ngIf=\"showAutofill\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"autofill\">{{ \"enableAutoFillOnPageLoad\" | i18n }}</label>\n          <input\n            id=\"autofill\"\n            type=\"checkbox\"\n            (change)=\"updateAutoFillOnPageLoad()\"\n            [(ngModel)]=\"enableAutoFillOnPageLoad\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"enableAutoFillOnPageLoadDesc\" | i18n }}\n        <b>{{ \"warning\" | i18n }}</b\n        >: {{ \"experimentalFeature\" | i18n }}\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"defaultAutofill\">{{ \"defaultAutoFillOnPageLoad\" | i18n }}</label>\n          <select\n            id=\"defaultAutofill\"\n            name=\"DefaultAutofill\"\n            [(ngModel)]=\"autoFillOnPageLoadDefault\"\n            (change)=\"updateAutoFillOnPageLoadDefault()\"\n            [disabled]=\"!enableAutoFillOnPageLoad\"\n          >\n            <option *ngFor=\"let o of autoFillOnPageLoadOptions\" [ngValue]=\"o.value\">\n              {{ o.name }}\n            </option>\n          </select>\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"defaultAutoFillOnPageLoadDesc\" | i18n }}</div>\n    </div>\n  </ng-container>\n</main>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\nimport { UriMatchType } from \"@bitwarden/common/enums/uriMatchType\";\n\n@Component({\n  selector: \"app-options\",\n  templateUrl: \"options.component.html\",\n})\nexport class OptionsComponent implements OnInit {\n  enableFavicon = false;\n  enableBadgeCounter = false;\n  enableAutoFillOnPageLoad = false;\n  autoFillOnPageLoadDefault = false;\n  autoFillOnPageLoadOptions: any[];\n  enableAutoTotpCopy = false; // TODO: Does it matter if this is set to false or true?\n  enableContextMenuItem = false;\n  enableAddLoginNotification = false;\n  enableChangedPasswordNotification = false;\n  showCardsCurrentTab = false;\n  showIdentitiesCurrentTab = false;\n  showClearClipboard = true;\n  theme: ThemeType;\n  themeOptions: any[];\n  defaultUriMatch = UriMatchType.Domain;\n  uriMatchOptions: any[];\n  clearClipboard: number;\n  clearClipboardOptions: any[];\n  showGeneral = true;\n  showAutofill = true;\n  showDisplay = true;\n\n  constructor(\n    private messagingService: MessagingService,\n    private stateService: StateService,\n    private totpService: TotpService,\n    i18nService: I18nService,\n    private themingService: AbstractThemingService\n  ) {\n    this.themeOptions = [\n      { name: i18nService.t(\"default\"), value: ThemeType.System },\n      { name: i18nService.t(\"light\"), value: ThemeType.Light },\n      { name: i18nService.t(\"dark\"), value: ThemeType.Dark },\n      { name: \"Nord\", value: ThemeType.Nord },\n      { name: i18nService.t(\"solarizedDark\"), value: ThemeType.SolarizedDark },\n    ];\n    this.uriMatchOptions = [\n      { name: i18nService.t(\"baseDomain\"), value: UriMatchType.Domain },\n      { name: i18nService.t(\"host\"), value: UriMatchType.Host },\n      { name: i18nService.t(\"startsWith\"), value: UriMatchType.StartsWith },\n      { name: i18nService.t(\"regEx\"), value: UriMatchType.RegularExpression },\n      { name: i18nService.t(\"exact\"), value: UriMatchType.Exact },\n      { name: i18nService.t(\"never\"), value: UriMatchType.Never },\n    ];\n    this.clearClipboardOptions = [\n      { name: i18nService.t(\"never\"), value: null },\n      { name: i18nService.t(\"tenSeconds\"), value: 10 },\n      { name: i18nService.t(\"twentySeconds\"), value: 20 },\n      { name: i18nService.t(\"thirtySeconds\"), value: 30 },\n      { name: i18nService.t(\"oneMinute\"), value: 60 },\n      { name: i18nService.t(\"twoMinutes\"), value: 120 },\n      { name: i18nService.t(\"fiveMinutes\"), value: 300 },\n    ];\n    this.autoFillOnPageLoadOptions = [\n      { name: i18nService.t(\"autoFillOnPageLoadYes\"), value: true },\n      { name: i18nService.t(\"autoFillOnPageLoadNo\"), value: false },\n    ];\n  }\n\n  async ngOnInit() {\n    this.enableAutoFillOnPageLoad = await this.stateService.getEnableAutoFillOnPageLoad();\n\n    this.autoFillOnPageLoadDefault =\n      (await this.stateService.getAutoFillOnPageLoadDefault()) ?? true;\n\n    this.enableAddLoginNotification = !(await this.stateService.getDisableAddLoginNotification());\n\n    this.enableChangedPasswordNotification =\n      !(await this.stateService.getDisableChangedPasswordNotification());\n\n    this.enableContextMenuItem = !(await this.stateService.getDisableContextMenuItem());\n\n    this.showCardsCurrentTab = !(await this.stateService.getDontShowCardsCurrentTab());\n    this.showIdentitiesCurrentTab = !(await this.stateService.getDontShowIdentitiesCurrentTab());\n\n    this.enableAutoTotpCopy = !(await this.stateService.getDisableAutoTotpCopy());\n\n    this.enableFavicon = !(await this.stateService.getDisableFavicon());\n\n    this.enableBadgeCounter = !(await this.stateService.getDisableBadgeCounter());\n\n    this.theme = await this.stateService.getTheme();\n\n    const defaultUriMatch = await this.stateService.getDefaultUriMatch();\n    this.defaultUriMatch = defaultUriMatch == null ? UriMatchType.Domain : defaultUriMatch;\n\n    this.clearClipboard = await this.stateService.getClearClipboard();\n  }\n\n  async updateAddLoginNotification() {\n    await this.stateService.setDisableAddLoginNotification(!this.enableAddLoginNotification);\n  }\n\n  async updateChangedPasswordNotification() {\n    await this.stateService.setDisableChangedPasswordNotification(\n      !this.enableChangedPasswordNotification\n    );\n  }\n\n  async updateContextMenuItem() {\n    await this.stateService.setDisableContextMenuItem(!this.enableContextMenuItem);\n    this.messagingService.send(\"bgUpdateContextMenu\");\n  }\n\n  async updateAutoTotpCopy() {\n    await this.stateService.setDisableAutoTotpCopy(!this.enableAutoTotpCopy);\n  }\n\n  async updateAutoFillOnPageLoad() {\n    await this.stateService.setEnableAutoFillOnPageLoad(this.enableAutoFillOnPageLoad);\n  }\n\n  async updateAutoFillOnPageLoadDefault() {\n    await this.stateService.setAutoFillOnPageLoadDefault(this.autoFillOnPageLoadDefault);\n  }\n\n  async updateFavicon() {\n    await this.stateService.setDisableFavicon(!this.enableFavicon);\n  }\n\n  async updateBadgeCounter() {\n    await this.stateService.setDisableBadgeCounter(!this.enableBadgeCounter);\n    this.messagingService.send(\"bgUpdateContextMenu\");\n  }\n\n  async updateShowCardsCurrentTab() {\n    await this.stateService.setDontShowCardsCurrentTab(!this.showCardsCurrentTab);\n  }\n\n  async updateShowIdentitiesCurrentTab() {\n    await this.stateService.setDontShowIdentitiesCurrentTab(!this.showIdentitiesCurrentTab);\n  }\n\n  async saveTheme() {\n    await this.themingService.updateConfiguredTheme(this.theme);\n  }\n\n  async saveDefaultUriMatch() {\n    await this.stateService.setDefaultUriMatch(this.defaultUriMatch);\n  }\n\n  async saveClearClipboard() {\n    await this.stateService.setClearClipboard(this.clearClipboard);\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Directive()\nexport class PremiumComponent implements OnInit {\n  isPremium = false;\n  price = 10;\n  refreshPromise: Promise<any>;\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    private logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.isPremium = await this.stateService.getCanAccessPremium();\n  }\n\n  async refresh() {\n    try {\n      this.refreshPromise = this.apiService.refreshIdentityToken();\n      await this.refreshPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"refreshComplete\"));\n      this.isPremium = await this.stateService.getCanAccessPremium();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async purchase() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"premiumPurchaseAlert\"),\n      this.i18nService.t(\"premiumPurchase\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.platformUtilsService.launchUri(\"https://vault.bitwarden.com/#/?premium=purchase\");\n    }\n  }\n\n  async manage() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"premiumManageAlert\"),\n      this.i18nService.t(\"premiumManage\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.platformUtilsService.launchUri(\"https://vault.bitwarden.com/#/?premium=manage\");\n    }\n  }\n}\n","<header>\n  <div class=\"left\">\n    <a routerLink=\"/tabs/settings\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </a>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"premiumMembership\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"content\">\n    <ng-container *ngIf=\"!isPremium\">\n      <p class=\"text-center lead\">{{ \"premiumNotCurrentMember\" | i18n }}</p>\n      <p>{{ \"premiumSignUpAndGet\" | i18n }}</p>\n      <ul class=\"bwi-ul\">\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpStorage\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpTwoStep\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpReports\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpTotp\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpSupport\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpFuture\" | i18n }}\n        </li>\n      </ul>\n      <p class=\"text-center lead\">{{ priceString }}</p>\n      <button type=\"button\" class=\"btn primary block\" appBlurClick (click)=\"purchase()\">\n        <b>{{ \"premiumPurchase\" | i18n }}</b>\n      </button>\n      <button\n        #refreshBtn\n        type=\"button\"\n        appBlurClick\n        (click)=\"refresh()\"\n        [disabled]=\"refreshBtn.loading\"\n        [appApiAction]=\"refreshPromise\"\n        class=\"btn link block\"\n      >\n        <span [hidden]=\"refreshBtn.loading\">{{ \"premiumRefresh\" | i18n }}</span>\n        <i\n          class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n          [hidden]=\"!refreshBtn.loading\"\n          aria-hidden=\"true\"\n        ></i>\n      </button>\n    </ng-container>\n    <ng-container *ngIf=\"isPremium\">\n      <p class=\"text-center lead\">{{ \"premiumCurrentMember\" | i18n }}</p>\n      <p class=\"text-center\">{{ \"premiumCurrentMemberThanks\" | i18n }}</p>\n      <button type=\"button\" class=\"btn block primary\" appBlurClick (click)=\"manage()\">\n        <b>{{ \"premiumManage\" | i18n }}</b>\n      </button>\n    </ng-container>\n  </div>\n</main>\n","import { CurrencyPipe } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\n\nimport { PremiumComponent as BasePremiumComponent } from \"@bitwarden/angular/components/premium.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-premium\",\n  templateUrl: \"premium.component.html\",\n})\nexport class PremiumComponent extends BasePremiumComponent {\n  priceString: string;\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    stateService: StateService,\n    logService: LogService,\n    private currencyPipe: CurrencyPipe\n  ) {\n    super(i18nService, platformUtilsService, apiService, logService, stateService);\n\n    // Support old price string. Can be removed in future once all translations are properly updated.\n    const thePrice = this.currencyPipe.transform(this.price, \"$\");\n    this.priceString = i18nService.t(\"premiumPrice\", thePrice);\n    if (this.priceString.indexOf(\"%price%\") > -1) {\n      this.priceString = this.priceString.replace(\"%price%\", thePrice);\n    }\n  }\n}\n","import { Observable, Subject } from \"rxjs\";\nimport { first } from \"rxjs/operators\";\n\nexport class ModalRef {\n  onCreated: Observable<HTMLElement>; // Modal added to the DOM.\n  onClose: Observable<any>; // Initiated close.\n  onClosed: Observable<any>; // Modal was closed (Remove element from DOM)\n  onShow: Observable<void>; // Start showing modal\n  onShown: Observable<void>; // Modal is fully visible\n\n  private readonly _onCreated = new Subject<HTMLElement>();\n  private readonly _onClose = new Subject<any>();\n  private readonly _onClosed = new Subject<any>();\n  private readonly _onShow = new Subject<void>();\n  private readonly _onShown = new Subject<void>();\n  private lastResult: any;\n\n  constructor() {\n    this.onCreated = this._onCreated.asObservable();\n    this.onClose = this._onClose.asObservable();\n    this.onClosed = this._onClosed.asObservable();\n    this.onShow = this._onShow.asObservable();\n    this.onShown = this._onShow.asObservable();\n  }\n\n  show() {\n    this._onShow.next();\n  }\n\n  shown() {\n    this._onShown.next();\n  }\n\n  close(result?: any) {\n    this.lastResult = result;\n    this._onClose.next(result);\n  }\n\n  closed() {\n    this._onClosed.next(this.lastResult);\n  }\n\n  created(el: HTMLElement) {\n    this._onCreated.next(el);\n  }\n\n  onClosedPromise(): Promise<any> {\n    return this.onClosed.pipe(first()).toPromise();\n  }\n}\n","import { ConfigurableFocusTrap, ConfigurableFocusTrapFactory } from \"@angular/cdk/a11y\";\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  ElementRef,\n  OnDestroy,\n  Type,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\n\nimport { ModalService } from \"../../services/modal.service\";\n\nimport { ModalRef } from \"./modal.ref\";\n\n@Component({\n  selector: \"app-modal\",\n  template: \"<ng-template #modalContent></ng-template>\",\n})\nexport class DynamicModalComponent implements AfterViewInit, OnDestroy {\n  componentRef: ComponentRef<any>;\n\n  @ViewChild(\"modalContent\", { read: ViewContainerRef, static: true })\n  modalContentRef: ViewContainerRef;\n\n  childComponentType: Type<any>;\n  setComponentParameters: (component: any) => void;\n\n  private focusTrap: ConfigurableFocusTrap;\n\n  constructor(\n    private modalService: ModalService,\n    private cd: ChangeDetectorRef,\n    private el: ElementRef<HTMLElement>,\n    private focusTrapFactory: ConfigurableFocusTrapFactory,\n    public modalRef: ModalRef\n  ) {}\n\n  ngAfterViewInit() {\n    this.loadChildComponent(this.childComponentType);\n    if (this.setComponentParameters != null) {\n      this.setComponentParameters(this.componentRef.instance);\n    }\n    this.cd.detectChanges();\n\n    this.modalRef.created(this.el.nativeElement);\n    this.focusTrap = this.focusTrapFactory.create(\n      this.el.nativeElement.querySelector(\".modal-dialog\")\n    );\n    if (this.el.nativeElement.querySelector(\"[appAutoFocus]\") == null) {\n      this.focusTrap.focusFirstTabbableElementWhenReady();\n    }\n  }\n\n  loadChildComponent(componentType: Type<any>) {\n    const componentFactory = this.modalService.resolveComponentFactory(componentType);\n\n    this.modalContentRef.clear();\n    this.componentRef = this.modalContentRef.createComponent(componentFactory);\n  }\n\n  ngOnDestroy() {\n    if (this.componentRef) {\n      this.componentRef.destroy();\n    }\n    this.focusTrap.destroy();\n  }\n\n  close() {\n    this.modalRef.close();\n  }\n\n  getFocus() {\n    const autoFocusEl = this.el.nativeElement.querySelector(\"[appAutoFocus]\") as HTMLElement;\n    autoFocusEl?.focus();\n  }\n}\n","import { InjectFlags, InjectionToken, Injector, Type } from \"@angular/core\";\n\nexport class ModalInjector implements Injector {\n  constructor(private _parentInjector: Injector, private _additionalTokens: WeakMap<any, any>) {}\n\n  get<T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags): T;\n  get(token: any, notFoundValue?: any, flags?: any) {\n    return this._additionalTokens.get(token) ?? this._parentInjector.get<any>(token, notFoundValue);\n  }\n}\n","export enum DeviceType {\n  Android = 0,\n  iOS = 1,\n  ChromeExtension = 2,\n  FirefoxExtension = 3,\n  OperaExtension = 4,\n  EdgeExtension = 5,\n  WindowsDesktop = 6,\n  MacOsDesktop = 7,\n  LinuxDesktop = 8,\n  ChromeBrowser = 9,\n  FirefoxBrowser = 10,\n  OperaBrowser = 11,\n  EdgeBrowser = 12,\n  IEBrowser = 13,\n  UnknownBrowser = 14,\n  AndroidAmazon = 15,\n  UWP = 16,\n  SafariBrowser = 17,\n  VivaldiBrowser = 18,\n  VivaldiExtension = 19,\n  SafariExtension = 20,\n}\n","import {\n  ApplicationRef,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n  Injectable,\n  Injector,\n  Type,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { first } from \"rxjs/operators\";\n\nimport { DynamicModalComponent } from \"../components/modal/dynamic-modal.component\";\nimport { ModalInjector } from \"../components/modal/modal-injector\";\nimport { ModalRef } from \"../components/modal/modal.ref\";\n\nexport class ModalConfig<D = any> {\n  data?: D;\n  allowMultipleModals = false;\n}\n\n@Injectable()\nexport class ModalService {\n  protected modalList: ComponentRef<DynamicModalComponent>[] = [];\n\n  // Lazy loaded modules are not available in componentFactoryResolver,\n  // therefore modules needs to manually initialize their resolvers.\n  private factoryResolvers: Map<Type<any>, ComponentFactoryResolver> = new Map();\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private applicationRef: ApplicationRef,\n    private injector: Injector\n  ) {\n    document.addEventListener(\"keyup\", (event) => {\n      if (event.key === \"Escape\" && this.modalCount > 0) {\n        this.topModal.instance.close();\n      }\n    });\n  }\n\n  get modalCount() {\n    return this.modalList.length;\n  }\n\n  private get topModal() {\n    return this.modalList[this.modalCount - 1];\n  }\n\n  async openViewRef<T>(\n    componentType: Type<T>,\n    viewContainerRef: ViewContainerRef,\n    setComponentParameters: (component: T) => void = null\n  ): Promise<[ModalRef, T]> {\n    const [modalRef, modalComponentRef] = this.openInternal(componentType, null, false);\n    modalComponentRef.instance.setComponentParameters = setComponentParameters;\n\n    viewContainerRef.insert(modalComponentRef.hostView);\n\n    await modalRef.onCreated.pipe(first()).toPromise();\n\n    return [modalRef, modalComponentRef.instance.componentRef.instance];\n  }\n\n  open(componentType: Type<any>, config?: ModalConfig) {\n    if (!(config?.allowMultipleModals ?? false) && this.modalCount > 0) {\n      return;\n    }\n\n    // eslint-disable-next-line\n    const [modalRef, _] = this.openInternal(componentType, config, true);\n\n    return modalRef;\n  }\n\n  registerComponentFactoryResolver<T>(\n    componentType: Type<T>,\n    componentFactoryResolver: ComponentFactoryResolver\n  ): void {\n    this.factoryResolvers.set(componentType, componentFactoryResolver);\n  }\n\n  resolveComponentFactory<T>(componentType: Type<T>): ComponentFactory<T> {\n    if (this.factoryResolvers.has(componentType)) {\n      return this.factoryResolvers.get(componentType).resolveComponentFactory(componentType);\n    }\n\n    return this.componentFactoryResolver.resolveComponentFactory(componentType);\n  }\n\n  protected openInternal(\n    componentType: Type<any>,\n    config?: ModalConfig,\n    attachToDom?: boolean\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const [modalRef, componentRef] = this.createModalComponent(config);\n    componentRef.instance.childComponentType = componentType;\n\n    if (attachToDom) {\n      this.applicationRef.attachView(componentRef.hostView);\n      const domElem = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n      document.body.appendChild(domElem);\n    }\n\n    modalRef.onClosed.pipe(first()).subscribe(() => {\n      if (attachToDom) {\n        this.applicationRef.detachView(componentRef.hostView);\n      }\n      componentRef.destroy();\n\n      this.modalList.pop();\n      if (this.modalCount > 0) {\n        this.topModal.instance.getFocus();\n      }\n    });\n\n    this.setupHandlers(modalRef);\n\n    this.modalList.push(componentRef);\n\n    return [modalRef, componentRef];\n  }\n\n  protected setupHandlers(modalRef: ModalRef) {\n    let backdrop: HTMLElement = null;\n\n    // Add backdrop, setup [data-dismiss] handler.\n    modalRef.onCreated.pipe(first()).subscribe((el) => {\n      document.body.classList.add(\"modal-open\");\n\n      const modalEl: HTMLElement = el.querySelector(\".modal\");\n      const dialogEl = modalEl.querySelector(\".modal-dialog\") as HTMLElement;\n\n      backdrop = document.createElement(\"div\");\n      backdrop.className = \"modal-backdrop fade\";\n      backdrop.style.zIndex = `${this.modalCount}040`;\n      modalEl.prepend(backdrop);\n\n      dialogEl.addEventListener(\"click\", (e: Event) => {\n        e.stopPropagation();\n      });\n      dialogEl.style.zIndex = `${this.modalCount}050`;\n\n      const modals = Array.from(\n        el.querySelectorAll('.modal-backdrop, .modal *[data-dismiss=\"modal\"]')\n      );\n      for (const closeElement of modals) {\n        closeElement.addEventListener(\"click\", () => {\n          modalRef.close();\n        });\n      }\n    });\n\n    // onClose is used in Web to hook into bootstrap. On other projects we pipe it directly to closed.\n    modalRef.onClose.pipe(first()).subscribe(() => {\n      modalRef.closed();\n\n      if (this.modalCount === 0) {\n        document.body.classList.remove(\"modal-open\");\n      }\n    });\n  }\n\n  protected createModalComponent(\n    config: ModalConfig\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const modalRef = new ModalRef();\n\n    const map = new WeakMap();\n    map.set(ModalConfig, config);\n    map.set(ModalRef, modalRef);\n\n    const componentFactory =\n      this.componentFactoryResolver.resolveComponentFactory(DynamicModalComponent);\n    const componentRef = componentFactory.create(new ModalInjector(this.injector, map));\n\n    return [modalRef, componentRef];\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nimport { ModalRef } from \"./modal/modal.ref\";\n\n@Directive()\nexport class SetPinComponent implements OnInit {\n  pin = \"\";\n  showPin = false;\n  masterPassOnRestart = true;\n  showMasterPassOnRestart = true;\n\n  constructor(\n    private modalRef: ModalRef,\n    private cryptoService: CryptoService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.showMasterPassOnRestart = this.masterPassOnRestart =\n      !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n\n  toggleVisibility() {\n    this.showPin = !this.showPin;\n  }\n\n  async submit() {\n    if (Utils.isNullOrWhitespace(this.pin)) {\n      this.modalRef.close(false);\n    }\n\n    const kdf = await this.stateService.getKdfType();\n    const kdfIterations = await this.stateService.getKdfIterations();\n    const email = await this.stateService.getEmail();\n    const pinKey = await this.cryptoService.makePinKey(this.pin, email, kdf, kdfIterations);\n    const key = await this.cryptoService.getKey();\n    const pinProtectedKey = await this.cryptoService.encrypt(key.key, pinKey);\n    if (this.masterPassOnRestart) {\n      const encPin = await this.cryptoService.encrypt(this.pin);\n      await this.stateService.setProtectedPin(encPin.encryptedString);\n      await this.stateService.setDecryptedPinProtected(pinProtectedKey);\n    } else {\n      await this.stateService.setEncryptedPinProtected(pinProtectedKey.encryptedString);\n    }\n\n    this.modalRef.close(true);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\">\n      <div class=\"modal-body\">\n        <div>\n          {{ \"setYourPinCode\" | i18n }}\n        </div>\n        <div class=\"box\">\n          <div class=\"box-content\">\n            <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n              <div class=\"row-main\">\n                <label for=\"pin\">{{ \"pin\" | i18n }}</label>\n                <input\n                  id=\"pin\"\n                  type=\"{{ showPin ? 'text' : 'password' }}\"\n                  name=\"Pin\"\n                  class=\"monospaced\"\n                  [(ngModel)]=\"pin\"\n                  required\n                  appInputVerbatim\n                />\n              </div>\n              <div class=\"action-buttons\">\n                <button\n                  type=\"button\"\n                  class=\"row-btn\"\n                  appStopClick\n                  appBlurClick\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"toggleVisibility()\"\n                  [attr.aria-pressed]=\"showPin\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPin, 'bwi-eye-slash': showPin }\"\n                  ></i>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"checkbox\" *ngIf=\"showMasterPassOnRestart\">\n          <label for=\"masterPasswordOnRestart\">\n            <input\n              type=\"checkbox\"\n              id=\"masterPasswordOnRestart\"\n              name=\"MasterPasswordOnRestart\"\n              [(ngModel)]=\"masterPassOnRestart\"\n            />\n            <span>{{ \"lockWithMasterPassOnRestart\" | i18n }}</span>\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" appBlurClick>\n          <span>{{ \"ok\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { SetPinComponent as BaseSetPinComponent } from \"@bitwarden/angular/components/set-pin.component\";\n\n@Component({\n  templateUrl: \"set-pin.component.html\",\n})\nexport class SetPinComponent extends BaseSetPinComponent {}\n","import { Directive, Input, OnInit } from \"@angular/core\";\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormBuilder,\n  ValidationErrors,\n  Validator,\n} from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\n\n@Directive()\nexport class VaultTimeoutInputComponent implements ControlValueAccessor, Validator, OnInit {\n  get showCustom() {\n    return this.form.get(\"vaultTimeout\").value === VaultTimeoutInputComponent.CUSTOM_VALUE;\n  }\n\n  get exceedsMinimumTimout(): boolean {\n    return (\n      !this.showCustom || this.customTimeInMinutes() > VaultTimeoutInputComponent.MIN_CUSTOM_MINUTES\n    );\n  }\n\n  static CUSTOM_VALUE = -100;\n  static MIN_CUSTOM_MINUTES = 0;\n\n  form = this.formBuilder.group({\n    vaultTimeout: [null],\n    custom: this.formBuilder.group({\n      hours: [null],\n      minutes: [null],\n    }),\n  });\n\n  @Input() vaultTimeouts: { name: string; value: number }[];\n  vaultTimeoutPolicy: Policy;\n  vaultTimeoutPolicyHours: number;\n  vaultTimeoutPolicyMinutes: number;\n\n  private onChange: (vaultTimeout: number) => void;\n  private validatorChange: () => void;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private policyService: PolicyService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit() {\n    if (await this.policyService.policyAppliesToUser(PolicyType.MaximumVaultTimeout)) {\n      const vaultTimeoutPolicy = await this.policyService.getAll(PolicyType.MaximumVaultTimeout);\n\n      this.vaultTimeoutPolicy = vaultTimeoutPolicy[0];\n      this.vaultTimeoutPolicyHours = Math.floor(this.vaultTimeoutPolicy.data.minutes / 60);\n      this.vaultTimeoutPolicyMinutes = this.vaultTimeoutPolicy.data.minutes % 60;\n\n      this.vaultTimeouts = this.vaultTimeouts.filter(\n        (t) =>\n          t.value <= this.vaultTimeoutPolicy.data.minutes &&\n          (t.value > 0 || t.value === VaultTimeoutInputComponent.CUSTOM_VALUE) &&\n          t.value != null\n      );\n      this.validatorChange();\n    }\n\n    this.form.valueChanges.subscribe(async (value) => {\n      this.onChange(this.getVaultTimeout(value));\n    });\n\n    // Assign the previous value to the custom fields\n    this.form.get(\"vaultTimeout\").valueChanges.subscribe((value) => {\n      if (value !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n        return;\n      }\n\n      const current = Math.max(this.form.value.vaultTimeout, 0);\n      this.form.patchValue({\n        custom: {\n          hours: Math.floor(current / 60),\n          minutes: current % 60,\n        },\n      });\n    });\n  }\n\n  ngOnChanges() {\n    this.vaultTimeouts.push({\n      name: this.i18nService.t(\"custom\"),\n      value: VaultTimeoutInputComponent.CUSTOM_VALUE,\n    });\n  }\n\n  getVaultTimeout(value: any) {\n    if (value.vaultTimeout !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n      return value.vaultTimeout;\n    }\n\n    return value.custom.hours * 60 + value.custom.minutes;\n  }\n\n  writeValue(value: number): void {\n    if (value == null) {\n      return;\n    }\n\n    if (this.vaultTimeouts.every((p) => p.value !== value)) {\n      this.form.setValue({\n        vaultTimeout: VaultTimeoutInputComponent.CUSTOM_VALUE,\n        custom: {\n          hours: Math.floor(value / 60),\n          minutes: value % 60,\n        },\n      });\n      return;\n    }\n\n    this.form.patchValue({\n      vaultTimeout: value,\n    });\n  }\n\n  registerOnChange(onChange: any): void {\n    this.onChange = onChange;\n  }\n\n  registerOnTouched(onTouched: any): void {\n    // Empty\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    // Empty\n  }\n\n  validate(control: AbstractControl): ValidationErrors {\n    if (this.vaultTimeoutPolicy && this.vaultTimeoutPolicy?.data?.minutes < control.value) {\n      return { policyError: true };\n    }\n\n    if (!this.exceedsMinimumTimout) {\n      return { minTimeoutError: true };\n    }\n\n    return null;\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.validatorChange = fn;\n  }\n\n  private customTimeInMinutes() {\n    return this.form.get(\"custom.hours\")?.value * 60 + this.form.get(\"custom.minutes\")?.value;\n  }\n}\n","<app-callout type=\"info\" *ngIf=\"vaultTimeoutPolicy\">\n  {{ \"vaultTimeoutPolicyInEffect\" | i18n: vaultTimeoutPolicyHours:vaultTimeoutPolicyMinutes }}\n</app-callout>\n\n<div [formGroup]=\"form\">\n  <div class=\"box-content-row last display-block\" appBoxRow>\n    <label for=\"vaultTimeout\">{{ \"vaultTimeout\" | i18n }}</label>\n    <select\n      id=\"vaultTimeout\"\n      name=\"VaultTimeout\"\n      formControlName=\"vaultTimeout\"\n      class=\"form-control\"\n    >\n      <option *ngFor=\"let o of vaultTimeouts\" [ngValue]=\"o.value\">{{ o.name }}</option>\n    </select>\n  </div>\n  <div class=\"box-content-row last\" *ngIf=\"showCustom\">\n    <div formGroupName=\"custom\" class=\"row\">\n      <div class=\"col\">\n        <div class=\"display-block\" appBoxRow>\n          <label for=\"customVaultTimeout\">{{ \"hours\" | i18n }}</label>\n          <input\n            id=\"hours\"\n            class=\"form-control\"\n            type=\"number\"\n            min=\"0\"\n            name=\"hours\"\n            formControlName=\"hours\"\n          />\n        </div>\n      </div>\n      <div class=\"col\">\n        <div class=\"display-block\" appBoxRow>\n          <label for=\"customVaultTimeout\">{{ \"minutes\" | i18n }}</label>\n          <input\n            id=\"minutes\"\n            class=\"form-control\"\n            type=\"number\"\n            min=\"0\"\n            max=\"59\"\n            name=\"minutes\"\n            formControlName=\"minutes\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { VaultTimeoutInputComponent as VaultTimeoutInputComponentBase } from \"@bitwarden/angular/components/settings/vault-timeout-input.component\";\n\n@Component({\n  selector: \"app-vault-timeout-input\",\n  templateUrl: \"vault-timeout-input.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n    {\n      provide: NG_VALIDATORS,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n  ],\n})\nexport class VaultTimeoutInputComponent extends VaultTimeoutInputComponentBase {}\n","<header>\n  <div class=\"left\">\n    <app-pop-out></app-pop-out>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"settings\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"manage\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <a class=\"box-content-row box-content-row-flex text-default\" routerLink=\"/folders\">\n        <div class=\"row-main\">{{ \"folders\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </a>\n      <a class=\"box-content-row box-content-row-flex text-default\" routerLink=\"/sync\">\n        <div class=\"row-main\">{{ \"sync\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </a>\n      <a class=\"box-content-row box-content-row-flex text-default\" routerLink=\"/excluded-domains\">\n        <div class=\"row-main\">{{ \"excludedDomains\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"security\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <app-vault-timeout-input\n        [vaultTimeouts]=\"vaultTimeouts\"\n        [formControl]=\"vaultTimeout\"\n        ngDefaultControl\n      >\n      </app-vault-timeout-input>\n      <div class=\"box-content-row display-block\" appBoxRow>\n        <label for=\"vaultTimeoutAction\">{{ \"vaultTimeoutAction\" | i18n }}</label>\n        <select\n          #vaultTimeoutActionSelect\n          id=\"vaultTimeoutAction\"\n          name=\"VaultTimeoutActions\"\n          [ngModel]=\"vaultTimeoutAction\"\n          (ngModelChange)=\"saveVaultTimeoutAction($event)\"\n        >\n          <option *ngFor=\"let o of vaultTimeoutActions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n      </div>\n      <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n        <label for=\"pin\">{{ \"unlockWithPin\" | i18n }}</label>\n        <input id=\"pin\" type=\"checkbox\" (change)=\"updatePin()\" [(ngModel)]=\"pin\" />\n      </div>\n      <div class=\"box-content-row box-content-row-checkbox\" appBoxRow *ngIf=\"supportsBiometric\">\n        <label for=\"biometric\">{{ \"unlockWithBiometrics\" | i18n }}</label>\n        <input\n          id=\"biometric\"\n          type=\"checkbox\"\n          (change)=\"updateBiometric()\"\n          [(ngModel)]=\"biometric\"\n        />\n      </div>\n      <div\n        class=\"box-content-row box-content-row-checkbox\"\n        appBoxRow\n        *ngIf=\"supportsBiometric && biometric\"\n      >\n        <label for=\"autoBiometricsPrompt\">{{ \"enableAutoBiometricsPrompt\" | i18n }}</label>\n        <input\n          id=\"autoBiometricsPrompt\"\n          type=\"checkbox\"\n          (change)=\"updateAutoBiometricsPrompt()\"\n          [disabled]=\"!biometric\"\n          [(ngModel)]=\"enableAutoBiometricsPrompt\"\n        />\n      </div>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"lock()\"\n      >\n        <div class=\"row-main\">{{ \"lockNow\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"twoStep()\"\n      >\n        <div class=\"row-main\">{{ \"twoStepLogin\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"account\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <a class=\"box-content-row\" routerLink=\"/premium\">\n        <div class=\"row-main\">\n          <div class=\"icon text-primary\">\n            <i class=\"bwi bwi-fw bwi-lg bwi-star-f\" aria-hidden=\"true\"></i>\n          </div>\n          <span class=\"text text-primary\"\n            ><b>{{ \"premiumMembership\" | i18n }}</b></span\n          >\n        </div>\n        <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i></span>\n      </a>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"changePassword()\"\n        *ngIf=\"showChangeMasterPass\"\n      >\n        <div class=\"row-main\">{{ \"changeMasterPassword\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"fingerprint()\"\n      >\n        <div class=\"row-main\">{{ \"fingerprintPhrase\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"logOut()\"\n      >\n        <div class=\"row-main\">{{ \"logOut\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"tools\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"import()\"\n      >\n        <div class=\"row-main\">{{ \"importItems\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"export()\"\n      >\n        <div class=\"row-main\">{{ \"exportVault\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"webVault()\"\n      >\n        <div class=\"row-main\">{{ \"bitWebVault\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"other\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <a class=\"box-content-row box-content-row-flex text-default\" routerLink=\"/options\">\n        <div class=\"row-main\">{{ \"options\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </a>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"about()\"\n      >\n        <div class=\"row-main\">{{ \"about\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"share()\"\n      >\n        <div class=\"row-main\">{{ \"learnOrg\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"help()\"\n      >\n        <div class=\"row-main\">{{ \"helpFeedback\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"rate()\"\n      >\n        <div class=\"row-main\">{{ \"rateExtension\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n    <div class=\"box-footer\">{{ \"rateExtensionDesc\" | i18n }}</div>\n  </div>\n</main>\n","import { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\nimport { FormControl } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport Swal from \"sweetalert2\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout.service\";\nimport { DeviceType } from \"@bitwarden/common/enums/deviceType\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { BiometricErrors, BiometricErrorTypes } from \"../../models/biometricErrors\";\nimport { SetPinComponent } from \"../components/set-pin.component\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst RateUrls = {\n  [DeviceType.ChromeExtension]:\n    \"https://chrome.google.com/webstore/detail/bitwarden-free-password-m/nngceckbapebfimnlniiiahkandclblb/reviews\",\n  [DeviceType.FirefoxExtension]:\n    \"https://addons.mozilla.org/en-US/firefox/addon/bitwarden-password-manager/#reviews\",\n  [DeviceType.OperaExtension]:\n    \"https://addons.opera.com/en/extensions/details/bitwarden-free-password-manager/#feedback-container\",\n  [DeviceType.EdgeExtension]:\n    \"https://microsoftedge.microsoft.com/addons/detail/jbkfoedolllekgbhcbcoahefnbanhhlh\",\n  [DeviceType.VivaldiExtension]:\n    \"https://chrome.google.com/webstore/detail/bitwarden-free-password-m/nngceckbapebfimnlniiiahkandclblb/reviews\",\n  [DeviceType.SafariExtension]: \"https://apps.apple.com/app/bitwarden/id1352778147\",\n};\n\n@Component({\n  selector: \"app-settings\",\n  templateUrl: \"settings.component.html\",\n})\nexport class SettingsComponent implements OnInit {\n  @ViewChild(\"vaultTimeoutActionSelect\", { read: ElementRef, static: true })\n  vaultTimeoutActionSelectRef: ElementRef;\n  vaultTimeouts: any[];\n  vaultTimeoutActions: any[];\n  vaultTimeoutAction: string;\n  pin: boolean = null;\n  supportsBiometric: boolean;\n  biometric = false;\n  enableAutoBiometricsPrompt = true;\n  previousVaultTimeout: number = null;\n  showChangeMasterPass = true;\n\n  vaultTimeout: FormControl = new FormControl(null);\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private vaultTimeoutService: VaultTimeoutService,\n    public messagingService: MessagingService,\n    private router: Router,\n    private environmentService: EnvironmentService,\n    private cryptoService: CryptoService,\n    private stateService: StateService,\n    private popupUtilsService: PopupUtilsService,\n    private modalService: ModalService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  async ngOnInit() {\n    const showOnLocked =\n      !this.platformUtilsService.isFirefox() && !this.platformUtilsService.isSafari();\n\n    this.vaultTimeouts = [\n      { name: this.i18nService.t(\"immediately\"), value: 0 },\n      { name: this.i18nService.t(\"oneMinute\"), value: 1 },\n      { name: this.i18nService.t(\"fiveMinutes\"), value: 5 },\n      { name: this.i18nService.t(\"fifteenMinutes\"), value: 15 },\n      { name: this.i18nService.t(\"thirtyMinutes\"), value: 30 },\n      { name: this.i18nService.t(\"oneHour\"), value: 60 },\n      { name: this.i18nService.t(\"fourHours\"), value: 240 },\n      // { name: i18nService.t('onIdle'), value: -4 },\n      // { name: i18nService.t('onSleep'), value: -3 },\n    ];\n\n    if (showOnLocked) {\n      this.vaultTimeouts.push({ name: this.i18nService.t(\"onLocked\"), value: -2 });\n    }\n\n    this.vaultTimeouts.push({ name: this.i18nService.t(\"onRestart\"), value: -1 });\n    this.vaultTimeouts.push({ name: this.i18nService.t(\"never\"), value: null });\n\n    this.vaultTimeoutActions = [\n      { name: this.i18nService.t(\"lock\"), value: \"lock\" },\n      { name: this.i18nService.t(\"logOut\"), value: \"logOut\" },\n    ];\n\n    let timeout = await this.vaultTimeoutService.getVaultTimeout();\n    if (timeout != null) {\n      if (timeout === -2 && !showOnLocked) {\n        timeout = -1;\n      }\n      this.vaultTimeout.setValue(timeout);\n    }\n    this.previousVaultTimeout = this.vaultTimeout.value;\n    this.vaultTimeout.valueChanges.subscribe(async (value) => {\n      await this.saveVaultTimeout(value);\n    });\n\n    const action = await this.stateService.getVaultTimeoutAction();\n    this.vaultTimeoutAction = action == null ? \"lock\" : action;\n\n    const pinSet = await this.vaultTimeoutService.isPinLockSet();\n    this.pin = pinSet[0] || pinSet[1];\n\n    this.supportsBiometric = await this.platformUtilsService.supportsBiometric();\n    this.biometric = await this.vaultTimeoutService.isBiometricLockSet();\n    this.enableAutoBiometricsPrompt = !(await this.stateService.getDisableAutoBiometricsPrompt());\n    this.showChangeMasterPass = !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n\n  async saveVaultTimeout(newValue: number) {\n    if (newValue == null) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"neverLockWarning\"),\n        null,\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (!confirmed) {\n        this.vaultTimeout.setValue(this.previousVaultTimeout);\n        return;\n      }\n    }\n\n    // The minTimeoutError does not apply to browser because it supports Immediately\n    // So only check for the policyError\n    if (this.vaultTimeout.hasError(\"policyError\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"vaultTimeoutTooLarge\")\n      );\n      return;\n    }\n\n    this.previousVaultTimeout = this.vaultTimeout.value;\n\n    await this.vaultTimeoutService.setVaultTimeoutOptions(\n      this.vaultTimeout.value,\n      this.vaultTimeoutAction\n    );\n    if (this.previousVaultTimeout == null) {\n      this.messagingService.send(\"bgReseedStorage\");\n    }\n  }\n\n  async saveVaultTimeoutAction(newValue: string) {\n    if (newValue === \"logOut\") {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmation\"),\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmationTitle\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (!confirmed) {\n        this.vaultTimeoutActions.forEach((option: any, i) => {\n          if (option.value === this.vaultTimeoutAction) {\n            this.vaultTimeoutActionSelectRef.nativeElement.value =\n              i + \": \" + this.vaultTimeoutAction;\n          }\n        });\n        return;\n      }\n    }\n\n    if (this.vaultTimeout.hasError(\"policyError\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"vaultTimeoutTooLarge\")\n      );\n      return;\n    }\n\n    this.vaultTimeoutAction = newValue;\n    await this.vaultTimeoutService.setVaultTimeoutOptions(\n      this.vaultTimeout.value,\n      this.vaultTimeoutAction\n    );\n  }\n\n  async updatePin() {\n    if (this.pin) {\n      const ref = this.modalService.open(SetPinComponent, { allowMultipleModals: true });\n\n      if (ref == null) {\n        this.pin = false;\n        return;\n      }\n\n      this.pin = await ref.onClosedPromise();\n    } else {\n      await this.cryptoService.clearPinProtectedKey();\n      await this.vaultTimeoutService.clear();\n    }\n  }\n\n  async updateBiometric() {\n    if (this.biometric && this.supportsBiometric) {\n      let granted;\n      try {\n        granted = await BrowserApi.requestPermission({ permissions: [\"nativeMessaging\"] });\n      } catch (e) {\n        // eslint-disable-next-line\n        console.error(e);\n\n        if (this.platformUtilsService.isFirefox() && this.popupUtilsService.inSidebar(window)) {\n          await this.platformUtilsService.showDialog(\n            this.i18nService.t(\"nativeMessaginPermissionSidebarDesc\"),\n            this.i18nService.t(\"nativeMessaginPermissionSidebarTitle\"),\n            this.i18nService.t(\"ok\"),\n            null\n          );\n          this.biometric = false;\n          return;\n        }\n      }\n\n      if (!granted) {\n        await this.platformUtilsService.showDialog(\n          this.i18nService.t(\"nativeMessaginPermissionErrorDesc\"),\n          this.i18nService.t(\"nativeMessaginPermissionErrorTitle\"),\n          this.i18nService.t(\"ok\"),\n          null\n        );\n        this.biometric = false;\n        return;\n      }\n\n      const submitted = Swal.fire({\n        heightAuto: false,\n        buttonsStyling: false,\n        titleText: this.i18nService.t(\"awaitDesktop\"),\n        text: this.i18nService.t(\"awaitDesktopDesc\"),\n        icon: \"info\",\n        iconHtml: '<i class=\"swal-custom-icon bwi bwi-info-circle text-info\"></i>',\n        showCancelButton: true,\n        cancelButtonText: this.i18nService.t(\"cancel\"),\n        showConfirmButton: false,\n        allowOutsideClick: false,\n      });\n\n      await this.stateService.setBiometricAwaitingAcceptance(true);\n      await this.cryptoService.toggleKey();\n\n      await Promise.race([\n        submitted.then(async (result) => {\n          if (result.dismiss === Swal.DismissReason.cancel) {\n            this.biometric = false;\n            await this.stateService.setBiometricAwaitingAcceptance(null);\n          }\n        }),\n        this.platformUtilsService\n          .authenticateBiometric()\n          .then((result) => {\n            this.biometric = result;\n\n            Swal.close();\n            if (this.biometric === false) {\n              this.platformUtilsService.showToast(\n                \"error\",\n                this.i18nService.t(\"errorEnableBiometricTitle\"),\n                this.i18nService.t(\"errorEnableBiometricDesc\")\n              );\n            }\n          })\n          .catch((e) => {\n            // Handle connection errors\n            this.biometric = false;\n\n            const error = BiometricErrors[e as BiometricErrorTypes];\n\n            this.platformUtilsService.showDialog(\n              this.i18nService.t(error.description),\n              this.i18nService.t(error.title),\n              this.i18nService.t(\"ok\"),\n              null,\n              \"error\"\n            );\n          }),\n      ]);\n    } else {\n      await this.stateService.setBiometricUnlock(null);\n      await this.stateService.setBiometricLocked(false);\n    }\n  }\n\n  async updateAutoBiometricsPrompt() {\n    await this.stateService.setDisableAutoBiometricsPrompt(!this.enableAutoBiometricsPrompt);\n  }\n\n  async lock() {\n    await this.vaultTimeoutService.lock(true);\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  async changePassword() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"changeMasterPasswordConfirmation\"),\n      this.i18nService.t(\"changeMasterPassword\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      BrowserApi.createNewTab(\n        \"https://bitwarden.com/help/master-password/#change-your-master-password\"\n      );\n    }\n  }\n\n  async twoStep() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"twoStepLoginConfirmation\"),\n      this.i18nService.t(\"twoStepLogin\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      BrowserApi.createNewTab(\"https://bitwarden.com/help/setup-two-step-login/\");\n    }\n  }\n\n  async share() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"learnOrgConfirmation\"),\n      this.i18nService.t(\"learnOrg\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      BrowserApi.createNewTab(\"https://bitwarden.com/help/about-organizations/\");\n    }\n  }\n\n  async webVault() {\n    const url = this.environmentService.getWebVaultUrl();\n    BrowserApi.createNewTab(url);\n  }\n\n  import() {\n    BrowserApi.createNewTab(\"https://bitwarden.com/help/import-data/\");\n  }\n\n  export() {\n    this.router.navigate([\"/export\"]);\n  }\n\n  help() {\n    BrowserApi.createNewTab(\"https://bitwarden.com/help/\");\n  }\n\n  about() {\n    const year = new Date().getFullYear();\n    const versionText = document.createTextNode(\n      this.i18nService.t(\"version\") + \": \" + BrowserApi.getApplicationVersion()\n    );\n    const div = document.createElement(\"div\");\n    div.innerHTML =\n      `<p class=\"text-center\"><i class=\"bwi bwi-shield bwi-3x\" aria-hidden=\"true\"></i></p>\n            <p class=\"text-center\"><b>Bitwarden</b><br>&copy; Bitwarden Inc. 2015-` +\n      year +\n      `</p>`;\n    div.appendChild(versionText);\n\n    Swal.fire({\n      heightAuto: false,\n      buttonsStyling: false,\n      html: div,\n      showConfirmButton: false,\n      showCancelButton: true,\n      cancelButtonText: this.i18nService.t(\"close\"),\n    });\n  }\n\n  async fingerprint() {\n    const fingerprint = await this.cryptoService.getFingerprint(\n      await this.stateService.getUserId()\n    );\n    const p = document.createElement(\"p\");\n    p.innerText = this.i18nService.t(\"yourAccountsFingerprint\") + \":\";\n    const p2 = document.createElement(\"p\");\n    p2.innerText = fingerprint.join(\"-\");\n    const div = document.createElement(\"div\");\n    div.appendChild(p);\n    div.appendChild(p2);\n\n    const result = await Swal.fire({\n      heightAuto: false,\n      buttonsStyling: false,\n      html: div,\n      showCancelButton: true,\n      cancelButtonText: this.i18nService.t(\"close\"),\n      showConfirmButton: true,\n      confirmButtonText: this.i18nService.t(\"learnMore\"),\n    });\n\n    if (result.value) {\n      this.platformUtilsService.launchUri(\"https://bitwarden.com/help/fingerprint-phrase/\");\n    }\n  }\n\n  rate() {\n    const deviceType = this.platformUtilsService.getDevice();\n    BrowserApi.createNewTab((RateUrls as any)[deviceType]);\n  }\n}\n","export enum CipherRepromptType {\n  None = 0,\n  Password = 1,\n}\n","export enum CipherType {\n  Login = 1,\n  SecureNote = 2,\n  Card = 3,\n  Identity = 4,\n}\n","export enum OrganizationUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n  Deactivated = -1,\n}\n","export enum SecureNoteType {\n  Generic = 0,\n}\n","export type LinkedIdType = LoginLinkedId | CardLinkedId | IdentityLinkedId;\n\n// LoginView\nexport enum LoginLinkedId {\n  Username = 100,\n  Password = 101,\n}\n\n// CardView\nexport enum CardLinkedId {\n  CardholderName = 300,\n  ExpMonth = 301,\n  ExpYear = 302,\n  Code = 303,\n  Brand = 304,\n  Number = 305,\n}\n\n// IdentityView\nexport enum IdentityLinkedId {\n  Title = 400,\n  MiddleName = 401,\n  Address1 = 402,\n  Address2 = 403,\n  Address3 = 404,\n  City = 405,\n  State = 406,\n  PostalCode = 407,\n  Country = 408,\n  Company = 409,\n  Email = 410,\n  Phone = 411,\n  Ssn = 412,\n  Username = 413,\n  PassportNumber = 414,\n  LicenseNumber = 415,\n  FirstName = 416,\n  LastName = 417,\n  FullName = 418,\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\n\n@Component({\n  selector: \"app-sync\",\n  templateUrl: \"sync.component.html\",\n})\nexport class SyncComponent implements OnInit {\n  lastSync = \"--\";\n  syncPromise: Promise<any>;\n\n  constructor(\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit() {\n    await this.setLastSync();\n  }\n\n  async sync() {\n    this.syncPromise = this.syncService.fullSync(true);\n    const success = await this.syncPromise;\n    if (success) {\n      await this.setLastSync();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"syncingComplete\"));\n    } else {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"syncingFailed\"));\n    }\n  }\n\n  async setLastSync() {\n    const last = await this.syncService.getLastSync();\n    if (last != null) {\n      this.lastSync = last.toLocaleDateString() + \" \" + last.toLocaleTimeString();\n    } else {\n      this.lastSync = this.i18nService.t(\"never\");\n    }\n  }\n}\n","<div class=\"tab-page\">\n  <router-outlet></router-outlet>\n  <nav class=\"tabs\">\n    <ul>\n      <li routerLinkActive=\"active\" #rlaCurrentTab=\"routerLinkActive\" *ngIf=\"showCurrentTab\">\n        <button\n          routerLink=\"current\"\n          appA11yTitle=\"{{ 'currentTab' | i18n }}\"\n          [attr.aria-pressed]=\"rlaCurrentTab.isActive\"\n        >\n          <i class=\"bwi bwi-folder-closed-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"tab\" | i18n }}\n        </button>\n      </li>\n      <li routerLinkActive=\"active\" #rlaMyVault=\"routerLinkActive\">\n        <button\n          routerLink=\"vault\"\n          appA11yTitle=\"{{ 'myVault' | i18n }}\"\n          [attr.aria-pressed]=\"rlaMyVault.isActive\"\n        >\n          <i class=\"bwi bwi-lock-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"vault\" | i18n }}\n        </button>\n      </li>\n      <li routerLinkActive=\"active\" #rlaSend=\"routerLinkActive\">\n        <button\n          routerLink=\"send\"\n          appA11yTitle=\"{{ 'send' | i18n }}\"\n          [attr.aria-pressed]=\"rlaSend.isActive\"\n        >\n          <i class=\"bwi bwi-send-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"send\" | i18n }}\n        </button>\n      </li>\n      <li routerLinkActive=\"active\" #rlaGenerator=\"routerLinkActive\">\n        <button\n          routerLink=\"generator\"\n          appA11yTitle=\"{{ 'passGen' | i18n }}\"\n          [attr.aria-pressed]=\"rlaGenerator.isActive\"\n        >\n          <i class=\"bwi bwi-generate-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"generator\" | i18n }}\n        </button>\n      </li>\n      <li routerLinkActive=\"active\" #rlaSettings=\"routerLinkActive\">\n        <button\n          routerLink=\"settings\"\n          appA11yTitle=\"{{ 'settings' | i18n }}\"\n          [attr.aria-pressed]=\"rlaSettings.isActive\"\n        >\n          <i class=\"bwi bwi-cog-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"settings\" | i18n }}\n        </button>\n      </li>\n    </ul>\n  </nav>\n</div>\n","<header>\n  <div class=\"left\">\n    <a routerLink=\"/tabs/settings\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </a>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"sync\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"content center-content\">\n    <button\n      type=\"button\"\n      class=\"btn block primary\"\n      (click)=\"sync()\"\n      #syncBtn\n      [disabled]=\"syncBtn.loading\"\n      [appApiAction]=\"syncPromise\"\n    >\n      <span [hidden]=\"syncBtn.loading\">{{ \"syncVaultNow\" | i18n }}</span>\n      <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!syncBtn.loading\" aria-hidden=\"true\"></i>\n    </button>\n    <p class=\"text-center text-muted small\">{{ \"lastSync\" | i18n }} {{ lastSync }}</p>\n  </div>\n</main>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { PopupUtilsService } from \"./services/popup-utils.service\";\n\n@Component({\n  selector: \"app-tabs\",\n  templateUrl: \"tabs.component.html\",\n})\nexport class TabsComponent implements OnInit {\n  showCurrentTab = true;\n\n  constructor(private popupUtilsService: PopupUtilsService) {}\n\n  ngOnInit() {\n    this.showCurrentTab = !this.popupUtilsService.inPopout(window);\n  }\n}\n","import { LinkedIdType } from \"../enums/linkedIdType\";\nimport { ItemView } from \"../models/view/itemView\";\n\nexport class LinkedMetadata {\n  constructor(readonly propertyKey: string, private readonly _i18nKey?: string) {}\n\n  get i18nKey() {\n    return this._i18nKey ?? this.propertyKey;\n  }\n}\n\n/**\n * A decorator used to set metadata used by Linked custom fields. Apply it to a class property or getter to make it\n *    available as a Linked custom field option.\n * @param id - A unique value that is saved in the Field model. It is used to look up the decorated class property.\n * @param i18nKey - The i18n key used to describe the decorated class property in the UI. If it is null, then the name\n *    of the class property will be used as the i18n key.\n */\nexport function linkedFieldOption(id: LinkedIdType, i18nKey?: string) {\n  return (prototype: ItemView, propertyKey: string) => {\n    if (prototype.linkedFieldOptions == null) {\n      prototype.linkedFieldOptions = new Map<LinkedIdType, LinkedMetadata>();\n    }\n\n    prototype.linkedFieldOptions.set(id, new LinkedMetadata(propertyKey, i18nKey));\n  };\n}\n","import { LinkedMetadata } from \"../../misc/linkedFieldOption.decorator\";\n\nimport { View } from \"./view\";\n\nexport abstract class ItemView implements View {\n  linkedFieldOptions: Map<number, LinkedMetadata>;\n  abstract get subTitle(): string;\n}\n","import { CardLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class CardView extends ItemView {\n  @linkedFieldOption(LinkedId.CardholderName)\n  cardholderName: string = null;\n  @linkedFieldOption(LinkedId.ExpMonth, \"expirationMonth\")\n  expMonth: string = null;\n  @linkedFieldOption(LinkedId.ExpYear, \"expirationYear\")\n  expYear: string = null;\n  @linkedFieldOption(LinkedId.Code, \"securityCode\")\n  code: string = null;\n\n  private _brand: string = null;\n  private _number: string = null;\n  private _subTitle: string = null;\n\n  constructor() {\n    super();\n  }\n\n  get maskedCode(): string {\n    return this.code != null ? \"•\".repeat(this.code.length) : null;\n  }\n\n  get maskedNumber(): string {\n    return this.number != null ? \"•\".repeat(this.number.length) : null;\n  }\n\n  @linkedFieldOption(LinkedId.Brand)\n  get brand(): string {\n    return this._brand;\n  }\n  set brand(value: string) {\n    this._brand = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.Number)\n  get number(): string {\n    return this._number;\n  }\n  set number(value: string) {\n    this._number = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null) {\n      this._subTitle = this.brand;\n      if (this.number != null && this.number.length >= 4) {\n        if (this._subTitle != null && this._subTitle !== \"\") {\n          this._subTitle += \", \";\n        } else {\n          this._subTitle = \"\";\n        }\n\n        // Show last 5 on amex, last 4 for all others\n        const count =\n          this.number.length >= 5 && this.number.match(new RegExp(\"^3[47]\")) != null ? 5 : 4;\n        this._subTitle += \"*\" + this.number.substr(this.number.length - count);\n      }\n    }\n    return this._subTitle;\n  }\n\n  get expiration(): string {\n    if (!this.expMonth && !this.expYear) {\n      return null;\n    }\n\n    let exp = this.expMonth != null ? (\"0\" + this.expMonth).slice(-2) : \"__\";\n    exp += \" / \" + (this.expYear != null ? this.formatYear(this.expYear) : \"____\");\n    return exp;\n  }\n\n  private formatYear(year: string): string {\n    return year.length === 2 ? \"20\" + year : year;\n  }\n}\n","import { IdentityLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class IdentityView extends ItemView {\n  @linkedFieldOption(LinkedId.Title)\n  title: string = null;\n  @linkedFieldOption(LinkedId.MiddleName)\n  middleName: string = null;\n  @linkedFieldOption(LinkedId.Address1)\n  address1: string = null;\n  @linkedFieldOption(LinkedId.Address2)\n  address2: string = null;\n  @linkedFieldOption(LinkedId.Address3)\n  address3: string = null;\n  @linkedFieldOption(LinkedId.City, \"cityTown\")\n  city: string = null;\n  @linkedFieldOption(LinkedId.State, \"stateProvince\")\n  state: string = null;\n  @linkedFieldOption(LinkedId.PostalCode, \"zipPostalCode\")\n  postalCode: string = null;\n  @linkedFieldOption(LinkedId.Country)\n  country: string = null;\n  @linkedFieldOption(LinkedId.Company)\n  company: string = null;\n  @linkedFieldOption(LinkedId.Email)\n  email: string = null;\n  @linkedFieldOption(LinkedId.Phone)\n  phone: string = null;\n  @linkedFieldOption(LinkedId.Ssn)\n  ssn: string = null;\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.PassportNumber)\n  passportNumber: string = null;\n  @linkedFieldOption(LinkedId.LicenseNumber)\n  licenseNumber: string = null;\n\n  private _firstName: string = null;\n  private _lastName: string = null;\n  private _subTitle: string = null;\n\n  constructor() {\n    super();\n  }\n\n  @linkedFieldOption(LinkedId.FirstName)\n  get firstName(): string {\n    return this._firstName;\n  }\n  set firstName(value: string) {\n    this._firstName = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.LastName)\n  get lastName(): string {\n    return this._lastName;\n  }\n  set lastName(value: string) {\n    this._lastName = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null && (this.firstName != null || this.lastName != null)) {\n      this._subTitle = \"\";\n      if (this.firstName != null) {\n        this._subTitle = this.firstName;\n      }\n      if (this.lastName != null) {\n        if (this._subTitle !== \"\") {\n          this._subTitle += \" \";\n        }\n        this._subTitle += this.lastName;\n      }\n    }\n\n    return this._subTitle;\n  }\n\n  @linkedFieldOption(LinkedId.FullName)\n  get fullName(): string {\n    if (\n      this.title != null ||\n      this.firstName != null ||\n      this.middleName != null ||\n      this.lastName != null\n    ) {\n      let name = \"\";\n      if (this.title != null) {\n        name += this.title + \" \";\n      }\n      if (this.firstName != null) {\n        name += this.firstName + \" \";\n      }\n      if (this.middleName != null) {\n        name += this.middleName + \" \";\n      }\n      if (this.lastName != null) {\n        name += this.lastName;\n      }\n      return name.trim();\n    }\n\n    return null;\n  }\n\n  get fullAddress(): string {\n    let address = this.address1;\n    if (!Utils.isNullOrWhitespace(this.address2)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address2;\n    }\n    if (!Utils.isNullOrWhitespace(this.address3)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address3;\n    }\n    return address;\n  }\n\n  get fullAddressPart2(): string {\n    if (this.city == null && this.state == null && this.postalCode == null) {\n      return null;\n    }\n    const city = this.city || \"-\";\n    const state = this.state;\n    const postalCode = this.postalCode || \"-\";\n    let addressPart2 = city;\n    if (!Utils.isNullOrWhitespace(state)) {\n      addressPart2 += \", \" + state;\n    }\n    addressPart2 += \", \" + postalCode;\n    return addressPart2;\n  }\n}\n","import { LoginLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../misc/utils\";\nimport { Login } from \"../domain/login\";\n\nimport { ItemView } from \"./itemView\";\nimport { LoginUriView } from \"./loginUriView\";\n\nexport class LoginView extends ItemView {\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.Password)\n  password: string = null;\n\n  passwordRevisionDate?: Date = null;\n  totp: string = null;\n  uris: LoginUriView[] = null;\n  autofillOnPageLoad: boolean = null;\n\n  constructor(l?: Login) {\n    super();\n    if (!l) {\n      return;\n    }\n\n    this.passwordRevisionDate = l.passwordRevisionDate;\n    this.autofillOnPageLoad = l.autofillOnPageLoad;\n  }\n\n  get uri(): string {\n    return this.hasUris ? this.uris[0].uri : null;\n  }\n\n  get maskedPassword(): string {\n    return this.password != null ? \"••••••••\" : null;\n  }\n\n  get subTitle(): string {\n    return this.username;\n  }\n\n  get canLaunch(): boolean {\n    return this.hasUris && this.uris.some((u) => u.canLaunch);\n  }\n\n  get hasTotp(): boolean {\n    return !Utils.isNullOrWhitespace(this.totp);\n  }\n\n  get launchUri(): string {\n    if (this.hasUris) {\n      const uri = this.uris.find((u) => u.canLaunch);\n      if (uri != null) {\n        return uri.launchUri;\n      }\n    }\n    return null;\n  }\n\n  get hasUris(): boolean {\n    return this.uris != null && this.uris.length > 0;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNote } from \"../domain/secureNote\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class SecureNoteView extends ItemView {\n  type: SecureNoteType = null;\n\n  constructor(n?: SecureNote) {\n    super();\n    if (!n) {\n      return;\n    }\n\n    this.type = n.type;\n  }\n\n  get subTitle(): string {\n    return null;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentView } from \"./attachmentView\";\nimport { CardView } from \"./cardView\";\nimport { FieldView } from \"./fieldView\";\nimport { IdentityView } from \"./identityView\";\nimport { LoginView } from \"./loginView\";\nimport { PasswordHistoryView } from \"./passwordHistoryView\";\nimport { SecureNoteView } from \"./secureNoteView\";\nimport { View } from \"./view\";\n\nexport class CipherView implements View {\n  id: string = null;\n  organizationId: string = null;\n  folderId: string = null;\n  name: string = null;\n  notes: string = null;\n  type: CipherType = null;\n  favorite = false;\n  organizationUseTotp = false;\n  edit = false;\n  viewPassword = true;\n  localData: any;\n  login = new LoginView();\n  identity = new IdentityView();\n  card = new CardView();\n  secureNote = new SecureNoteView();\n  attachments: AttachmentView[] = null;\n  fields: FieldView[] = null;\n  passwordHistory: PasswordHistoryView[] = null;\n  collectionIds: string[] = null;\n  revisionDate: Date = null;\n  deletedDate: Date = null;\n  reprompt: CipherRepromptType = CipherRepromptType.None;\n\n  constructor(c?: Cipher) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.folderId = c.folderId;\n    this.favorite = c.favorite;\n    this.organizationUseTotp = c.organizationUseTotp;\n    this.edit = c.edit;\n    this.viewPassword = c.viewPassword;\n    this.type = c.type;\n    this.localData = c.localData;\n    this.collectionIds = c.collectionIds;\n    this.revisionDate = c.revisionDate;\n    this.deletedDate = c.deletedDate;\n    // Old locally stored ciphers might have reprompt == null. If so set it to None.\n    this.reprompt = c.reprompt ?? CipherRepromptType.None;\n  }\n\n  private get item() {\n    switch (this.type) {\n      case CipherType.Login:\n        return this.login;\n      case CipherType.SecureNote:\n        return this.secureNote;\n      case CipherType.Card:\n        return this.card;\n      case CipherType.Identity:\n        return this.identity;\n      default:\n        break;\n    }\n\n    return null;\n  }\n\n  get subTitle(): string {\n    return this.item.subTitle;\n  }\n\n  get hasPasswordHistory(): boolean {\n    return this.passwordHistory && this.passwordHistory.length > 0;\n  }\n\n  get hasAttachments(): boolean {\n    return this.attachments && this.attachments.length > 0;\n  }\n\n  get hasOldAttachments(): boolean {\n    if (this.hasAttachments) {\n      for (let i = 0; i < this.attachments.length; i++) {\n        if (this.attachments[i].key == null) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  get hasFields(): boolean {\n    return this.fields && this.fields.length > 0;\n  }\n\n  get passwordRevisionDisplayDate(): Date {\n    if (this.type !== CipherType.Login || this.login == null) {\n      return null;\n    } else if (this.login.password == null || this.login.password === \"\") {\n      return null;\n    }\n    return this.login.passwordRevisionDate;\n  }\n\n  get isDeleted(): boolean {\n    return this.deletedDate != null;\n  }\n\n  get linkedFieldOptions() {\n    return this.item.linkedFieldOptions;\n  }\n\n  linkedFieldValue(id: LinkedIdType) {\n    const linkedFieldOption = this.linkedFieldOptions?.get(id);\n    if (linkedFieldOption == null) {\n      return null;\n    }\n\n    const item = this.item;\n    return this.item[linkedFieldOption.propertyKey as keyof typeof item];\n  }\n\n  linkedFieldI18nKey(id: LinkedIdType): string {\n    return this.linkedFieldOptions.get(id)?.i18nKey;\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { Utils } from \"../../misc/utils\";\nimport { LoginUri } from \"../domain/loginUri\";\n\nimport { View } from \"./view\";\n\nconst CanLaunchWhitelist = [\n  \"https://\",\n  \"http://\",\n  \"ssh://\",\n  \"ftp://\",\n  \"sftp://\",\n  \"irc://\",\n  \"vnc://\",\n  // https://docs.microsoft.com/en-us/windows-server/remote/remote-desktop-services/clients/remote-desktop-uri\n  \"rdp://\", // Legacy RDP URI scheme\n  \"ms-rd:\", // Preferred RDP URI scheme\n  \"chrome://\",\n  \"iosapp://\",\n  \"androidapp://\",\n];\n\nexport class LoginUriView implements View {\n  match: UriMatchType = null;\n\n  private _uri: string = null;\n  private _domain: string = null;\n  private _hostname: string = null;\n  private _host: string = null;\n  private _canLaunch: boolean = null;\n\n  constructor(u?: LoginUri) {\n    if (!u) {\n      return;\n    }\n\n    this.match = u.match;\n  }\n\n  get uri(): string {\n    return this._uri;\n  }\n  set uri(value: string) {\n    this._uri = value;\n    this._domain = null;\n    this._canLaunch = null;\n  }\n\n  get domain(): string {\n    if (this._domain == null && this.uri != null) {\n      this._domain = Utils.getDomain(this.uri);\n      if (this._domain === \"\") {\n        this._domain = null;\n      }\n    }\n\n    return this._domain;\n  }\n\n  get hostname(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._hostname == null && this.uri != null) {\n      this._hostname = Utils.getHostname(this.uri);\n      if (this._hostname === \"\") {\n        this._hostname = null;\n      }\n    }\n\n    return this._hostname;\n  }\n\n  get host(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._host == null && this.uri != null) {\n      this._host = Utils.getHost(this.uri);\n      if (this._host === \"\") {\n        this._host = null;\n      }\n    }\n\n    return this._host;\n  }\n\n  get hostnameOrUri(): string {\n    return this.hostname != null ? this.hostname : this.uri;\n  }\n\n  get hostOrUri(): string {\n    return this.host != null ? this.host : this.uri;\n  }\n\n  get isWebsite(): boolean {\n    return (\n      this.uri != null &&\n      (this.uri.indexOf(\"http://\") === 0 ||\n        this.uri.indexOf(\"https://\") === 0 ||\n        (this.uri.indexOf(\"://\") < 0 && Utils.tldEndingRegex.test(this.uri)))\n    );\n  }\n\n  get canLaunch(): boolean {\n    if (this._canLaunch != null) {\n      return this._canLaunch;\n    }\n    if (this.uri != null && this.match !== UriMatchType.RegularExpression) {\n      const uri = this.launchUri;\n      for (let i = 0; i < CanLaunchWhitelist.length; i++) {\n        if (uri.indexOf(CanLaunchWhitelist[i]) === 0) {\n          this._canLaunch = true;\n          return this._canLaunch;\n        }\n      }\n    }\n    this._canLaunch = false;\n    return this._canLaunch;\n  }\n\n  get launchUri(): string {\n    return this.uri.indexOf(\"://\") < 0 && Utils.tldEndingRegex.test(this.uri)\n      ? \"http://\" + this.uri\n      : this.uri;\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Field } from \"../models/domain/field\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { FieldView } from \"../models/view/fieldView\";\n\nexport abstract class CipherService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher?: Cipher\n  ) => Promise<Cipher>;\n  encryptFields: (fieldsModel: FieldView[], key: SymmetricCryptoKey) => Promise<Field[]>;\n  encryptField: (fieldModel: FieldView, key: SymmetricCryptoKey) => Promise<Field>;\n  get: (id: string) => Promise<Cipher>;\n  getAll: () => Promise<Cipher[]>;\n  getAllDecrypted: () => Promise<CipherView[]>;\n  getAllDecryptedForGrouping: (groupingId: string, folder?: boolean) => Promise<CipherView[]>;\n  getAllDecryptedForUrl: (\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch?: UriMatchType\n  ) => Promise<CipherView[]>;\n  getAllFromApiForOrganization: (organizationId: string) => Promise<CipherView[]>;\n  getLastUsedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getLastLaunchedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getNextCipherForUrl: (url: string) => Promise<CipherView>;\n  updateLastUsedIndexForUrl: (url: string) => void;\n  updateLastUsedDate: (id: string) => Promise<void>;\n  updateLastLaunchedDate: (id: string) => Promise<void>;\n  saveNeverDomain: (domain: string) => Promise<void>;\n  saveWithServer: (cipher: Cipher) => Promise<any>;\n  shareWithServer: (\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  shareManyWithServer: (\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  saveAttachmentWithServer: (\n    cipher: Cipher,\n    unencryptedFile: any,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveAttachmentRawWithServer: (\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveCollectionsWithServer: (cipher: Cipher) => Promise<any>;\n  upsert: (cipher: CipherData | CipherData[]) => Promise<any>;\n  replace: (ciphers: { [id: string]: CipherData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  moveManyWithServer: (ids: string[], folderId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  deleteManyWithServer: (ids: string[]) => Promise<any>;\n  deleteAttachment: (id: string, attachmentId: string) => Promise<void>;\n  deleteAttachmentWithServer: (id: string, attachmentId: string) => Promise<void>;\n  sortCiphersByLastUsed: (a: any, b: any) => number;\n  sortCiphersByLastUsedThenName: (a: any, b: any) => number;\n  getLocaleSortingFunction: () => (a: CipherView, b: CipherView) => number;\n  softDelete: (id: string | string[]) => Promise<any>;\n  softDeleteWithServer: (id: string) => Promise<any>;\n  softDeleteManyWithServer: (ids: string[]) => Promise<any>;\n  restore: (\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) => Promise<any>;\n  restoreWithServer: (id: string) => Promise<any>;\n  restoreManyWithServer: (ids: string[]) => Promise<any>;\n}\n","import { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\n\nexport abstract class AuditService {\n  passwordLeaked: (password: string) => Promise<number>;\n  breachedAccounts: (username: string) => Promise<BreachAccountResponse[]>;\n}\n","import { CollectionData } from \"../models/data/collectionData\";\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/treeNode\";\nimport { CollectionView } from \"../models/view/collectionView\";\n\nexport abstract class CollectionService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (model: CollectionView) => Promise<Collection>;\n  decryptMany: (collections: Collection[]) => Promise<CollectionView[]>;\n  get: (id: string) => Promise<Collection>;\n  getAll: () => Promise<Collection[]>;\n  getAllDecrypted: () => Promise<CollectionView[]>;\n  getAllNested: (collections?: CollectionView[]) => Promise<TreeNode<CollectionView>[]>;\n  getNested: (id: string) => Promise<TreeNode<CollectionView>>;\n  upsert: (collection: CollectionData | CollectionData[]) => Promise<any>;\n  replace: (collections: { [id: string]: CollectionData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n}\n","export abstract class PasswordRepromptService {\n  protectedFields: () => string[];\n  showPasswordPrompt: () => Promise<boolean>;\n  enabled: () => Promise<boolean>;\n}\n","export enum FieldType {\n  Text = 0,\n  Hidden = 1,\n  Boolean = 2,\n  Linked = 3,\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\n\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SecureNoteType } from \"@bitwarden/common/enums/secureNoteType\";\nimport { UriMatchType } from \"@bitwarden/common/enums/uriMatchType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CardView } from \"@bitwarden/common/models/view/cardView\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\nimport { IdentityView } from \"@bitwarden/common/models/view/identityView\";\nimport { LoginUriView } from \"@bitwarden/common/models/view/loginUriView\";\nimport { LoginView } from \"@bitwarden/common/models/view/loginView\";\nimport { SecureNoteView } from \"@bitwarden/common/models/view/secureNoteView\";\n\n@Directive()\nexport class AddEditComponent implements OnInit {\n  @Input() cloneMode = false;\n  @Input() folderId: string = null;\n  @Input() cipherId: string;\n  @Input() type: CipherType;\n  @Input() collectionIds: string[];\n  @Input() organizationId: string = null;\n  @Output() onSavedCipher = new EventEmitter<CipherView>();\n  @Output() onDeletedCipher = new EventEmitter<CipherView>();\n  @Output() onRestoredCipher = new EventEmitter<CipherView>();\n  @Output() onCancelled = new EventEmitter<CipherView>();\n  @Output() onEditAttachments = new EventEmitter<CipherView>();\n  @Output() onShareCipher = new EventEmitter<CipherView>();\n  @Output() onEditCollections = new EventEmitter<CipherView>();\n  @Output() onGeneratePassword = new EventEmitter();\n  @Output() onGenerateUsername = new EventEmitter();\n\n  editMode = false;\n  cipher: CipherView;\n  folders$: Observable<FolderView[]>;\n  collections: CollectionView[] = [];\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  restorePromise: Promise<any>;\n  checkPasswordPromise: Promise<number>;\n  showPassword = false;\n  showCardNumber = false;\n  showCardCode = false;\n  cipherType = CipherType;\n  typeOptions: any[];\n  cardBrandOptions: any[];\n  cardExpMonthOptions: any[];\n  identityTitleOptions: any[];\n  uriMatchOptions: any[];\n  ownershipOptions: any[] = [];\n  autofillOnPageLoadOptions: any[];\n  currentDate = new Date();\n  allowPersonal = true;\n  reprompt = false;\n  canUseReprompt = true;\n\n  protected writeableCollections: CollectionView[];\n  private previousCipherId: string;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected folderService: FolderService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected auditService: AuditService,\n    protected stateService: StateService,\n    protected collectionService: CollectionService,\n    protected messagingService: MessagingService,\n    protected eventService: EventService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected passwordRepromptService: PasswordRepromptService,\n    private organizationService: OrganizationService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"typeLogin\"), value: CipherType.Login },\n      { name: i18nService.t(\"typeCard\"), value: CipherType.Card },\n      { name: i18nService.t(\"typeIdentity\"), value: CipherType.Identity },\n      { name: i18nService.t(\"typeSecureNote\"), value: CipherType.SecureNote },\n    ];\n    this.cardBrandOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"Visa\", value: \"Visa\" },\n      { name: \"Mastercard\", value: \"Mastercard\" },\n      { name: \"American Express\", value: \"Amex\" },\n      { name: \"Discover\", value: \"Discover\" },\n      { name: \"Diners Club\", value: \"Diners Club\" },\n      { name: \"JCB\", value: \"JCB\" },\n      { name: \"Maestro\", value: \"Maestro\" },\n      { name: \"UnionPay\", value: \"UnionPay\" },\n      { name: \"RuPay\", value: \"RuPay\" },\n      { name: i18nService.t(\"other\"), value: \"Other\" },\n    ];\n    this.cardExpMonthOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"01 - \" + i18nService.t(\"january\"), value: \"1\" },\n      { name: \"02 - \" + i18nService.t(\"february\"), value: \"2\" },\n      { name: \"03 - \" + i18nService.t(\"march\"), value: \"3\" },\n      { name: \"04 - \" + i18nService.t(\"april\"), value: \"4\" },\n      { name: \"05 - \" + i18nService.t(\"may\"), value: \"5\" },\n      { name: \"06 - \" + i18nService.t(\"june\"), value: \"6\" },\n      { name: \"07 - \" + i18nService.t(\"july\"), value: \"7\" },\n      { name: \"08 - \" + i18nService.t(\"august\"), value: \"8\" },\n      { name: \"09 - \" + i18nService.t(\"september\"), value: \"9\" },\n      { name: \"10 - \" + i18nService.t(\"october\"), value: \"10\" },\n      { name: \"11 - \" + i18nService.t(\"november\"), value: \"11\" },\n      { name: \"12 - \" + i18nService.t(\"december\"), value: \"12\" },\n    ];\n    this.identityTitleOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: i18nService.t(\"mr\"), value: i18nService.t(\"mr\") },\n      { name: i18nService.t(\"mrs\"), value: i18nService.t(\"mrs\") },\n      { name: i18nService.t(\"ms\"), value: i18nService.t(\"ms\") },\n      { name: i18nService.t(\"dr\"), value: i18nService.t(\"dr\") },\n    ];\n    this.uriMatchOptions = [\n      { name: i18nService.t(\"defaultMatchDetection\"), value: null },\n      { name: i18nService.t(\"baseDomain\"), value: UriMatchType.Domain },\n      { name: i18nService.t(\"host\"), value: UriMatchType.Host },\n      { name: i18nService.t(\"startsWith\"), value: UriMatchType.StartsWith },\n      { name: i18nService.t(\"regEx\"), value: UriMatchType.RegularExpression },\n      { name: i18nService.t(\"exact\"), value: UriMatchType.Exact },\n      { name: i18nService.t(\"never\"), value: UriMatchType.Never },\n    ];\n    this.autofillOnPageLoadOptions = [\n      { name: i18nService.t(\"autoFillOnPageLoadUseDefault\"), value: null },\n      { name: i18nService.t(\"autoFillOnPageLoadYes\"), value: true },\n      { name: i18nService.t(\"autoFillOnPageLoadNo\"), value: false },\n    ];\n  }\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async init() {\n    if (this.ownershipOptions.length) {\n      this.ownershipOptions = [];\n    }\n    if (await this.policyService.policyAppliesToUser(PolicyType.PersonalOwnership)) {\n      this.allowPersonal = false;\n    } else {\n      const myEmail = await this.stateService.getEmail();\n      this.ownershipOptions.push({ name: myEmail, value: null });\n    }\n\n    const orgs = await this.organizationService.getAll();\n    orgs.sort(Utils.getSortFunction(this.i18nService, \"name\")).forEach((o) => {\n      if (o.enabled && o.status === OrganizationUserStatusType.Confirmed) {\n        this.ownershipOptions.push({ name: o.name, value: o.id });\n      }\n    });\n    if (!this.allowPersonal) {\n      this.organizationId = this.ownershipOptions[0].value;\n    }\n\n    this.writeableCollections = await this.loadCollections();\n\n    this.canUseReprompt = await this.passwordRepromptService.enabled();\n  }\n\n  async load() {\n    this.editMode = this.cipherId != null;\n    if (this.editMode) {\n      this.editMode = true;\n      if (this.cloneMode) {\n        this.cloneMode = true;\n        this.title = this.i18nService.t(\"addItem\");\n      } else {\n        this.title = this.i18nService.t(\"editItem\");\n      }\n    } else {\n      this.title = this.i18nService.t(\"addItem\");\n    }\n\n    const addEditCipherInfo: any = await this.stateService.getAddEditCipherInfo();\n    if (addEditCipherInfo != null) {\n      this.cipher = addEditCipherInfo.cipher;\n      this.collectionIds = addEditCipherInfo.collectionIds;\n    }\n    await this.stateService.setAddEditCipherInfo(null);\n\n    if (this.cipher == null) {\n      if (this.editMode) {\n        const cipher = await this.loadCipher();\n        this.cipher = await cipher.decrypt();\n\n        // Adjust Cipher Name if Cloning\n        if (this.cloneMode) {\n          this.cipher.name += \" - \" + this.i18nService.t(\"clone\");\n          // If not allowing personal ownership, update cipher's org Id to prompt downstream changes\n          if (this.cipher.organizationId == null && !this.allowPersonal) {\n            this.cipher.organizationId = this.organizationId;\n          }\n        }\n      } else {\n        this.cipher = new CipherView();\n        this.cipher.organizationId = this.organizationId == null ? null : this.organizationId;\n        this.cipher.folderId = this.folderId;\n        this.cipher.type = this.type == null ? CipherType.Login : this.type;\n        this.cipher.login = new LoginView();\n        this.cipher.login.uris = [new LoginUriView()];\n        this.cipher.card = new CardView();\n        this.cipher.identity = new IdentityView();\n        this.cipher.secureNote = new SecureNoteView();\n        this.cipher.secureNote.type = SecureNoteType.Generic;\n        this.cipher.reprompt = CipherRepromptType.None;\n      }\n    }\n\n    if (this.cipher != null && (!this.editMode || addEditCipherInfo != null || this.cloneMode)) {\n      await this.organizationChanged();\n      if (\n        this.collectionIds != null &&\n        this.collectionIds.length > 0 &&\n        this.collections.length > 0\n      ) {\n        this.collections.forEach((c) => {\n          if (this.collectionIds.indexOf(c.id) > -1) {\n            (c as any).checked = true;\n          }\n        });\n      }\n    }\n\n    this.folders$ = this.folderService.folderViews$;\n\n    if (this.editMode && this.previousCipherId !== this.cipherId) {\n      this.eventService.collect(EventType.Cipher_ClientViewed, this.cipherId);\n    }\n    this.previousCipherId = this.cipherId;\n    this.reprompt = this.cipher.reprompt !== CipherRepromptType.None;\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.cipher.isDeleted) {\n      return this.restore();\n    }\n\n    if (this.cipher.name == null || this.cipher.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      !this.allowPersonal &&\n      this.cipher.organizationId == null\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"personalOwnershipSubmitError\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.uris != null &&\n      this.cipher.login.uris.length === 1 &&\n      (this.cipher.login.uris[0].uri == null || this.cipher.login.uris[0].uri === \"\")\n    ) {\n      this.cipher.login.uris = null;\n    }\n\n    // Allows saving of selected collections during \"Add\" and \"Clone\" flows\n    if ((!this.editMode || this.cloneMode) && this.cipher.organizationId != null) {\n      this.cipher.collectionIds =\n        this.collections == null\n          ? []\n          : this.collections.filter((c) => (c as any).checked).map((c) => c.id);\n    }\n\n    // Clear current Cipher Id to trigger \"Add\" cipher flow\n    if (this.cloneMode) {\n      this.cipher.id = null;\n    }\n\n    const cipher = await this.encryptCipher();\n    try {\n      this.formPromise = this.saveCipher(cipher);\n      await this.formPromise;\n      this.cipher.id = cipher.id;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode && !this.cloneMode ? \"editedItem\" : \"addedItem\")\n      );\n      this.onSavedCipher.emit(this.cipher);\n      this.messagingService.send(this.editMode && !this.cloneMode ? \"editedCipher\" : \"addedCipher\");\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  addUri() {\n    if (this.cipher.type !== CipherType.Login) {\n      return;\n    }\n\n    if (this.cipher.login.uris == null) {\n      this.cipher.login.uris = [];\n    }\n\n    this.cipher.login.uris.push(new LoginUriView());\n  }\n\n  removeUri(uri: LoginUriView) {\n    if (this.cipher.type !== CipherType.Login || this.cipher.login.uris == null) {\n      return;\n    }\n\n    const i = this.cipher.login.uris.indexOf(uri);\n    if (i > -1) {\n      this.cipher.login.uris.splice(i, 1);\n    }\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  cancel() {\n    this.onCancelled.emit(this.cipher);\n  }\n\n  attachments() {\n    this.onEditAttachments.emit(this.cipher);\n  }\n\n  share() {\n    this.onShareCipher.emit(this.cipher);\n  }\n\n  editCollections() {\n    this.onEditCollections.emit(this.cipher);\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        this.cipher.isDeleted ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(\"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.deleteCipher();\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.cipher.isDeleted ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.onDeletedCipher.emit(this.cipher);\n      this.messagingService.send(\n        this.cipher.isDeleted ? \"permanentlyDeletedCipher\" : \"deletedCipher\"\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async restore(): Promise<boolean> {\n    if (!this.cipher.isDeleted) {\n      return false;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.restorePromise = this.restoreCipher();\n      await this.restorePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.onRestoredCipher.emit(this.cipher);\n      this.messagingService.send(\"restoredCipher\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async generateUsername(): Promise<boolean> {\n    if (this.cipher.login?.username?.length) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"overwriteUsernameConfirmation\"),\n        this.i18nService.t(\"overwriteUsername\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (!confirmed) {\n        return false;\n      }\n    }\n\n    this.onGenerateUsername.emit();\n    return true;\n  }\n\n  async generatePassword(): Promise<boolean> {\n    if (this.cipher.login?.password?.length) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"overwritePasswordConfirmation\"),\n        this.i18nService.t(\"overwritePassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (!confirmed) {\n        return false;\n      }\n    }\n\n    this.onGeneratePassword.emit();\n    return true;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"loginPassword\").focus();\n    if (this.editMode && this.showPassword) {\n      this.eventService.collect(EventType.Cipher_ClientToggledPasswordVisible, this.cipherId);\n    }\n  }\n\n  async toggleCardNumber() {\n    this.showCardNumber = !this.showCardNumber;\n    if (this.showCardNumber) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardNumberVisible, this.cipherId);\n    }\n  }\n\n  toggleCardCode() {\n    this.showCardCode = !this.showCardCode;\n    document.getElementById(\"cardCode\").focus();\n    if (this.editMode && this.showCardCode) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardCodeVisible, this.cipherId);\n    }\n  }\n\n  toggleUriOptions(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null && uri.match != null ? false : !u.showOptions;\n  }\n\n  loginUriMatchChanged(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null ? true : u.showOptions;\n  }\n\n  async organizationChanged() {\n    if (this.writeableCollections != null) {\n      this.writeableCollections.forEach((c) => ((c as any).checked = false));\n    }\n    if (this.cipher.organizationId != null) {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.cipher.organizationId\n      );\n      const org = await this.organizationService.get(this.cipher.organizationId);\n      if (org != null) {\n        this.cipher.organizationUseTotp = org.useTotp;\n      }\n    } else {\n      this.collections = [];\n    }\n  }\n\n  async checkPassword() {\n    if (this.checkPasswordPromise != null) {\n      return;\n    }\n\n    if (\n      this.cipher.login == null ||\n      this.cipher.login.password == null ||\n      this.cipher.login.password === \"\"\n    ) {\n      return;\n    }\n\n    this.checkPasswordPromise = this.auditService.passwordLeaked(this.cipher.login.password);\n    const matches = await this.checkPasswordPromise;\n    this.checkPasswordPromise = null;\n\n    if (matches > 0) {\n      this.platformUtilsService.showToast(\n        \"warning\",\n        null,\n        this.i18nService.t(\"passwordExposed\", matches.toString())\n      );\n    } else {\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"passwordSafe\"));\n    }\n  }\n\n  repromptChanged() {\n    this.reprompt = !this.reprompt;\n    if (this.reprompt) {\n      this.cipher.reprompt = CipherRepromptType.Password;\n    } else {\n      this.cipher.reprompt = CipherRepromptType.None;\n    }\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter((c) => !c.readOnly);\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected encryptCipher() {\n    return this.cipherService.encrypt(this.cipher);\n  }\n\n  protected saveCipher(cipher: Cipher) {\n    return this.cipherService.saveWithServer(cipher);\n  }\n\n  protected deleteCipher() {\n    return this.cipher.isDeleted\n      ? this.cipherService.deleteWithServer(this.cipher.id)\n      : this.cipherService.softDeleteWithServer(this.cipher.id);\n  }\n\n  protected restoreCipher() {\n    return this.cipherService.restoreWithServer(this.cipher.id);\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { Field } from \"../domain/field\";\n\nimport { View } from \"./view\";\n\nexport class FieldView implements View {\n  name: string = null;\n  value: string = null;\n  type: FieldType = null;\n  newField = false; // Marks if the field is new and hasn't been saved\n  showValue = false;\n  showCount = false;\n  linkedId: LinkedIdType = null;\n\n  constructor(f?: Field) {\n    if (!f) {\n      return;\n    }\n\n    this.type = f.type;\n    this.linkedId = f.linkedId;\n  }\n\n  get maskedValue(): string {\n    return this.value != null ? \"••••••••\" : null;\n  }\n}\n","import { CdkDragDrop, moveItemInArray } from \"@angular/cdk/drag-drop\";\nimport { Directive, Input, OnChanges, SimpleChanges } from \"@angular/core\";\n\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { FieldType } from \"@bitwarden/common/enums/fieldType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { FieldView } from \"@bitwarden/common/models/view/fieldView\";\n\n@Directive()\nexport class AddEditCustomFieldsComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  @Input() thisCipherType: CipherType;\n  @Input() editMode: boolean;\n\n  addFieldType: FieldType = FieldType.Text;\n  addFieldTypeOptions: any[];\n  addFieldLinkedTypeOption: any;\n  linkedFieldOptions: any[] = [];\n\n  cipherType = CipherType;\n  fieldType = FieldType;\n  eventType = EventType;\n\n  constructor(private i18nService: I18nService, private eventService: EventService) {\n    this.addFieldTypeOptions = [\n      { name: i18nService.t(\"cfTypeText\"), value: FieldType.Text },\n      { name: i18nService.t(\"cfTypeHidden\"), value: FieldType.Hidden },\n      { name: i18nService.t(\"cfTypeBoolean\"), value: FieldType.Boolean },\n    ];\n    this.addFieldLinkedTypeOption = {\n      name: this.i18nService.t(\"cfTypeLinked\"),\n      value: FieldType.Linked,\n    };\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.thisCipherType != null) {\n      this.setLinkedFieldOptions();\n\n      if (!changes.thisCipherType.firstChange) {\n        this.resetCipherLinkedFields();\n      }\n    }\n  }\n\n  addField() {\n    if (this.cipher.fields == null) {\n      this.cipher.fields = [];\n    }\n\n    const f = new FieldView();\n    f.type = this.addFieldType;\n    f.newField = true;\n\n    if (f.type === FieldType.Linked) {\n      f.linkedId = this.linkedFieldOptions[0].value;\n    }\n\n    this.cipher.fields.push(f);\n  }\n\n  removeField(field: FieldView) {\n    const i = this.cipher.fields.indexOf(field);\n    if (i > -1) {\n      this.cipher.fields.splice(i, 1);\n    }\n  }\n\n  toggleFieldValue(field: FieldView) {\n    const f = field as any;\n    f.showValue = !f.showValue;\n    if (this.editMode && f.showValue) {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipher.id);\n    }\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.cipher.fields, event.previousIndex, event.currentIndex);\n  }\n\n  private setLinkedFieldOptions() {\n    if (this.cipher.linkedFieldOptions == null) {\n      return;\n    }\n\n    const options: any = [];\n    this.cipher.linkedFieldOptions.forEach((linkedFieldOption, id) =>\n      options.push({ name: this.i18nService.t(linkedFieldOption.i18nKey), value: id })\n    );\n    this.linkedFieldOptions = options.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  private resetCipherLinkedFields() {\n    if (this.cipher.fields == null || this.cipher.fields.length === 0) {\n      return;\n    }\n\n    // Delete any Linked custom fields if the item type does not support them\n    if (this.cipher.linkedFieldOptions == null) {\n      this.cipher.fields = this.cipher.fields.filter((f) => f.type !== FieldType.Linked);\n      return;\n    }\n\n    this.cipher.fields\n      .filter((f) => f.type === FieldType.Linked)\n      .forEach((f) => (f.linkedId = this.linkedFieldOptions[0].value));\n  }\n}\n","import { Directive, ElementRef, forwardRef, HostListener, Input, Renderer2 } from \"@angular/core\";\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\n// ref: https://juristr.com/blog/2018/02/ng-true-value-directive/\n@Directive({\n  selector: \"input[type=checkbox][appTrueFalseValue]\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TrueFalseValueDirective),\n      multi: true,\n    },\n  ],\n})\nexport class TrueFalseValueDirective implements ControlValueAccessor {\n  @Input() trueValue = true;\n  @Input() falseValue = false;\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {}\n\n  @HostListener(\"change\", [\"$event\"])\n  onHostChange(ev: any) {\n    this.propagateChange(ev.target.checked ? this.trueValue : this.falseValue);\n  }\n\n  writeValue(obj: any): void {\n    if (obj === this.trueValue) {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", true);\n    } else {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", false);\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    /* nothing */\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    /* nothing */\n  }\n\n  private propagateChange = (_: any) => {\n    /* nothing */\n  };\n}\n","<div class=\"box\">\n  <h2 class=\"box-header\">\n    {{ \"customFields\" | i18n }}\n  </h2>\n  <div class=\"box-content\">\n    <!-- Current custom fields -->\n    <div cdkDropList (cdkDropListDropped)=\"drop($event)\" *ngIf=\"cipher.hasFields\">\n      <div\n        class=\"box-content-row box-content-row-multi box-draggable-row\"\n        appBoxRow\n        cdkDrag\n        *ngFor=\"let f of cipher.fields; let i = index; trackBy: trackByFunction\"\n        [ngClass]=\"{ 'box-content-row-checkbox': f.type === fieldType.Boolean }\"\n      >\n        <button\n          type=\"button\"\n          appStopClick\n          (click)=\"removeField(f)\"\n          appA11yTitle=\"{{ 'remove' | i18n }}\"\n        >\n          <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n        </button>\n        <label for=\"fieldName{{ i }}\" class=\"sr-only\">{{ \"name\" | i18n }}</label>\n        <label for=\"fieldValue{{ i }}\" class=\"sr-only\">{{ \"value\" | i18n }}</label>\n        <div class=\"row-main\">\n          <input\n            id=\"fieldName{{ i }}\"\n            type=\"text\"\n            name=\"Field.Name{{ i }}\"\n            [(ngModel)]=\"f.name\"\n            class=\"row-label\"\n            placeholder=\"{{ 'name' | i18n }}\"\n            appInputVerbatim\n          />\n          <!-- Text -->\n          <input\n            id=\"fieldValue{{ i }}\"\n            type=\"text\"\n            name=\"Field.Value{{ i }}\"\n            [(ngModel)]=\"f.value\"\n            *ngIf=\"f.type === fieldType.Text\"\n            placeholder=\"{{ 'value' | i18n }}\"\n            appInputVerbatim\n          />\n          <!-- Hidden -->\n          <input\n            id=\"fieldValue{{ i }}\"\n            type=\"{{ f.showValue ? 'text' : 'password' }}\"\n            name=\"Field.Value{{ i }}\"\n            [(ngModel)]=\"f.value\"\n            class=\"monospaced\"\n            appInputVerbatim\n            *ngIf=\"f.type === fieldType.Hidden\"\n            placeholder=\"{{ 'value' | i18n }}\"\n            [disabled]=\"!cipher.viewPassword && !f.newField\"\n          />\n          <!-- Linked -->\n          <select\n            id=\"fieldValue{{ i }}\"\n            name=\"Field.Value{{ i }}\"\n            [(ngModel)]=\"f.linkedId\"\n            *ngIf=\"f.type === fieldType.Linked && cipher.linkedFieldOptions != null\"\n          >\n            <option *ngFor=\"let o of linkedFieldOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n        <!-- Boolean -->\n        <input\n          id=\"fieldValue{{ i }}\"\n          name=\"Field.Value{{ i }}\"\n          type=\"checkbox\"\n          [(ngModel)]=\"f.value\"\n          *ngIf=\"f.type === fieldType.Boolean\"\n          appTrueFalseValue\n          trueValue=\"true\"\n          falseValue=\"false\"\n        />\n        <div\n          class=\"action-buttons\"\n          *ngIf=\"f.type === fieldType.Hidden && (cipher.viewPassword || f.newField)\"\n        >\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            appBlurClick\n            appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n            (click)=\"toggleFieldValue(f)\"\n            [attr.aria-pressed]=\"f.showValue\"\n          >\n            <i\n              class=\"bwi bwi-lg\"\n              aria-hidden=\"true\"\n              [ngClass]=\"{ 'bwi-eye': !f.showValue, 'bwi-eye-slash': f.showValue }\"\n            ></i>\n          </button>\n        </div>\n        <div class=\"drag-handle\" appA11yTitle=\"{{ 'dragToSort' | i18n }}\" cdkDragHandle>\n          <i class=\"bwi bwi-hamburger\" aria-hidden=\"true\"></i>\n        </div>\n      </div>\n    </div>\n    <!-- Add new custom field -->\n    <div class=\"box-content-row box-content-row-newmulti\" appBoxRow>\n      <button type=\"button\" appStopClick (click)=\"addField()\">\n        <i class=\"bwi bwi-plus-circle bwi-fw bwi-lg\" aria-hidden=\"true\"></i>\n        {{ \"newCustomField\" | i18n }}\n      </button>\n      <label for=\"addFieldType\" class=\"sr-only\">{{ \"type\" | i18n }}</label>\n      <select id=\"addFieldType\" name=\"AddFieldType\" [(ngModel)]=\"addFieldType\" class=\"field-type\">\n        <option *ngFor=\"let o of addFieldTypeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        <option\n          *ngIf=\"cipher.linkedFieldOptions != null\"\n          [ngValue]=\"addFieldLinkedTypeOption.value\"\n        >\n          {{ addFieldLinkedTypeOption.name }}\n        </option>\n      </select>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { AddEditCustomFieldsComponent as BaseAddEditCustomFieldsComponent } from \"@bitwarden/angular/components/add-edit-custom-fields.component\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n@Component({\n  selector: \"app-vault-add-edit-custom-fields\",\n  templateUrl: \"add-edit-custom-fields.component.html\",\n})\nexport class AddEditCustomFieldsComponent extends BaseAddEditCustomFieldsComponent {\n  constructor(i18nService: I18nService, eventService: EventService) {\n    super(i18nService, eventService);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" appBlurClick (click)=\"cancel()\">{{ \"cancel\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ title }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\" *ngIf=\"cipher\">\n    <app-callout type=\"info\" *ngIf=\"allowOwnershipOptions() && !allowPersonal\">\n      {{ \"personalOwnershipPolicyInEffect\" | i18n }}\n    </app-callout>\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"itemInformation\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" *ngIf=\"!editMode\" appBoxRow>\n          <label for=\"type\">{{ \"type\" | i18n }}</label>\n          <select id=\"type\" name=\"Type\" [(ngModel)]=\"cipher.type\">\n            <option *ngFor=\"let o of typeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input id=\"name\" type=\"text\" name=\"Name\" [(ngModel)]=\"cipher.name\" />\n        </div>\n        <!-- Login -->\n        <div *ngIf=\"cipher.type === cipherType.Login\">\n          <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n            <div class=\"row-main\">\n              <label for=\"loginUsername\">{{ \"username\" | i18n }}</label>\n              <input\n                id=\"loginUsername\"\n                type=\"text\"\n                name=\"Login.Username\"\n                [(ngModel)]=\"cipher.login.username\"\n                inputmode=\"email\"\n                appInputVerbatim\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'generateUsername' | i18n }}\"\n                (click)=\"generateUsername()\"\n              >\n                <i class=\"bwi bwi-lg bwi-generate\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n            <div class=\"row-main\">\n              <label for=\"loginPassword\">{{ \"password\" | i18n }}</label>\n              <input\n                id=\"loginPassword\"\n                class=\"monospaced\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"Login.Password\"\n                [(ngModel)]=\"cipher.login.password\"\n                appInputVerbatim\n                [disabled]=\"!cipher.viewPassword\"\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                #checkPasswordBtn\n                class=\"row-btn btn\"\n                appBlurClick\n                appA11yTitle=\"{{ 'checkPassword' | i18n }}\"\n                (click)=\"checkPassword()\"\n                [appApiAction]=\"checkPasswordPromise\"\n                [disabled]=\"checkPasswordBtn.loading\"\n                *ngIf=\"cipher.viewPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg bwi-check-circle\"\n                  [hidden]=\"checkPasswordBtn.loading\"\n                  aria-hidden=\"true\"\n                ></i>\n                <i\n                  class=\"bwi bwi-lg bwi-spinner bwi-spin\"\n                  [hidden]=\"!checkPasswordBtn.loading\"\n                  aria-hidden=\"true\"\n                ></i>\n              </button>\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword()\"\n                *ngIf=\"cipher.viewPassword\"\n                [attr.aria-pressed]=\"showPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'generatePassword' | i18n }}\"\n                (click)=\"generatePassword()\"\n                *ngIf=\"cipher.viewPassword\"\n              >\n                <i class=\"bwi bwi-lg bwi-generate\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"loginTotp\">{{ \"authenticatorKeyTotp\" | i18n }}</label>\n            <input\n              id=\"loginTotp\"\n              type=\"{{ cipher.viewPassword ? 'text' : 'password' }}\"\n              name=\"Login.Totp\"\n              class=\"monospaced\"\n              [(ngModel)]=\"cipher.login.totp\"\n              appInputVerbatim\n              [disabled]=\"!cipher.viewPassword\"\n            />\n          </div>\n        </div>\n        <!-- Card -->\n        <div *ngIf=\"cipher.type === cipherType.Card\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"cardCardholderName\">{{ \"cardholderName\" | i18n }}</label>\n            <input\n              id=\"cardCardholderName\"\n              type=\"text\"\n              name=\"Card.CardCardholderName\"\n              [(ngModel)]=\"cipher.card.cardholderName\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n            <div class=\"row-main\">\n              <label for=\"cardNumber\">{{ \"number\" | i18n }}</label>\n              <input\n                id=\"cardNumber\"\n                class=\"monospaced\"\n                type=\"{{ showCardNumber ? 'text' : 'password' }}\"\n                name=\"Card.Number\"\n                [(ngModel)]=\"cipher.card.number\"\n                appInputVerbatim\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"toggleCardNumber()\"\n                [attr.aria-pressed]=\"showCardNumber\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showCardNumber, 'bwi-eye-slash': showCardNumber }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"cardBrand\">{{ \"brand\" | i18n }}</label>\n            <select id=\"cardBrand\" name=\"Card.Brand\" [(ngModel)]=\"cipher.card.brand\">\n              <option *ngFor=\"let o of cardBrandOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n            </select>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"cardExpMonth\">{{ \"expirationMonth\" | i18n }}</label>\n            <select id=\"cardExpMonth\" name=\"Card.ExpMonth\" [(ngModel)]=\"cipher.card.expMonth\">\n              <option *ngFor=\"let o of cardExpMonthOptions\" [ngValue]=\"o.value\">\n                {{ o.name }}\n              </option>\n            </select>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"cardExpYear\">{{ \"expirationYear\" | i18n }}</label>\n            <input\n              id=\"cardExpYear\"\n              type=\"text\"\n              name=\"Card.ExpYear\"\n              [(ngModel)]=\"cipher.card.expYear\"\n              placeholder=\"{{ 'ex' | i18n }} {{ currentDate | date: 'yyyy' }}\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n            <div class=\"row-main\">\n              <label for=\"cardCode\">{{ \"securityCode\" | i18n }}</label>\n              <input\n                id=\"cardCode\"\n                class=\"monospaced\"\n                type=\"{{ showCardCode ? 'text' : 'password' }}\"\n                name=\"Card.Code\"\n                [(ngModel)]=\"cipher.card.code\"\n                appInputVerbatim\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"toggleCardCode()\"\n                [attr.aria-pressed]=\"showCardCode\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showCardCode, 'bwi-eye-slash': showCardCode }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n        </div>\n        <!-- Identity -->\n        <div *ngIf=\"cipher.type === cipherType.Identity\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idTitle\">{{ \"title\" | i18n }}</label>\n            <select id=\"idTitle\" name=\"Identity.Title\" [(ngModel)]=\"cipher.identity.title\">\n              <option *ngFor=\"let o of identityTitleOptions\" [ngValue]=\"o.value\">\n                {{ o.name }}\n              </option>\n            </select>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idFirstName\">{{ \"firstName\" | i18n }}</label>\n            <input\n              id=\"idFirstName\"\n              type=\"text\"\n              name=\"Identity.FirstName\"\n              [(ngModel)]=\"cipher.identity.firstName\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idMiddleName\">{{ \"middleName\" | i18n }}</label>\n            <input\n              id=\"idMiddleName\"\n              type=\"text\"\n              name=\"Identity.MiddleName\"\n              [(ngModel)]=\"cipher.identity.middleName\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idLastName\">{{ \"lastName\" | i18n }}</label>\n            <input\n              id=\"idLastName\"\n              type=\"text\"\n              name=\"Identity.LastName\"\n              [(ngModel)]=\"cipher.identity.lastName\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idUsername\">{{ \"username\" | i18n }}</label>\n            <input\n              id=\"idUsername\"\n              type=\"text\"\n              name=\"Identity.Username\"\n              [(ngModel)]=\"cipher.identity.username\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idCompany\">{{ \"company\" | i18n }}</label>\n            <input\n              id=\"idCompany\"\n              type=\"text\"\n              name=\"Identity.Company\"\n              [(ngModel)]=\"cipher.identity.company\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idSsn\">{{ \"ssn\" | i18n }}</label>\n            <input\n              id=\"idSsn\"\n              type=\"text\"\n              name=\"Identity.SSN\"\n              [(ngModel)]=\"cipher.identity.ssn\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idPassportNumber\">{{ \"passportNumber\" | i18n }}</label>\n            <input\n              id=\"idPassportNumber\"\n              type=\"text\"\n              name=\"Identity.PassportNumber\"\n              [(ngModel)]=\"cipher.identity.passportNumber\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idLicenseNumber\">{{ \"licenseNumber\" | i18n }}</label>\n            <input\n              id=\"idLicenseNumber\"\n              type=\"text\"\n              name=\"Identity.LicenseNumber\"\n              [(ngModel)]=\"cipher.identity.licenseNumber\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idEmail\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"idEmail\"\n              type=\"text\"\n              name=\"Identity.Email\"\n              [(ngModel)]=\"cipher.identity.email\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idPhone\">{{ \"phone\" | i18n }}</label>\n            <input\n              id=\"idPhone\"\n              type=\"text\"\n              name=\"Identity.Phone\"\n              [(ngModel)]=\"cipher.identity.phone\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idAddress1\">{{ \"address1\" | i18n }}</label>\n            <input\n              id=\"idAddress1\"\n              type=\"text\"\n              name=\"Identity.Address1\"\n              [(ngModel)]=\"cipher.identity.address1\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idAddress2\">{{ \"address2\" | i18n }}</label>\n            <input\n              id=\"idAddress2\"\n              type=\"text\"\n              name=\"Identity.Address2\"\n              [(ngModel)]=\"cipher.identity.address2\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idAddress3\">{{ \"address3\" | i18n }}</label>\n            <input\n              id=\"idAddress3\"\n              type=\"text\"\n              name=\"Identity.Address3\"\n              [(ngModel)]=\"cipher.identity.address3\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idCity\">{{ \"cityTown\" | i18n }}</label>\n            <input\n              id=\"idCity\"\n              type=\"text\"\n              name=\"Identity.City\"\n              [(ngModel)]=\"cipher.identity.city\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idState\">{{ \"stateProvince\" | i18n }}</label>\n            <input\n              id=\"idState\"\n              type=\"text\"\n              name=\"Identity.State\"\n              [(ngModel)]=\"cipher.identity.state\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idPostalCode\">{{ \"zipPostalCode\" | i18n }}</label>\n            <input\n              id=\"idPostalCode\"\n              type=\"text\"\n              name=\"Identity.PostalCode\"\n              [(ngModel)]=\"cipher.identity.postalCode\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idCountry\">{{ \"country\" | i18n }}</label>\n            <input\n              id=\"idCountry\"\n              type=\"text\"\n              name=\"Identity.Country\"\n              [(ngModel)]=\"cipher.identity.country\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"cipher.type === cipherType.Login\">\n      <div class=\"box-content\">\n        <ng-container *ngIf=\"cipher.login.hasUris\">\n          <div\n            class=\"box-content-row box-content-row-multi\"\n            appBoxRow\n            *ngFor=\"let u of cipher.login.uris; let i = index; trackBy: trackByFunction\"\n          >\n            <button\n              type=\"button\"\n              appStopClick\n              (click)=\"removeUri(u)\"\n              appA11yTitle=\"{{ 'remove' | i18n }}\"\n            >\n              <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"row-main\">\n              <label for=\"loginUri{{ i }}\">{{ \"uriPosition\" | i18n: i + 1 }}</label>\n              <input\n                id=\"loginUri{{ i }}\"\n                type=\"text\"\n                name=\"Login.Uris[{{ i }}].Uri\"\n                [(ngModel)]=\"u.uri\"\n                [hidden]=\"u.showUriOptionsInput === true\"\n                placeholder=\"{{ 'ex' | i18n }} https://google.com\"\n                inputmode=\"url\"\n                appInputVerbatim\n              />\n              <label for=\"loginUriMatch{{ i }}\" class=\"sr-only\">\n                {{ \"currentUri\" | i18n }} {{ i + 1 }}\n              </label>\n              <select\n                *ngIf=\"currentUris && currentUris.length\"\n                id=\"currentUris{{ i }}\"\n                name=\"Login.Uris[{{ i }}].CurrentUris\"\n                [(ngModel)]=\"u.uri\"\n                [hidden]=\"!u.showCurrentUris\"\n              >\n                <option [ngValue]=\"null\">-- {{ \"select\" | i18n }} --</option>\n                <option *ngFor=\"let u of currentUris\" [ngValue]=\"u\">{{ u }}</option>\n              </select>\n              <label for=\"loginUriMatch{{ i }}\" class=\"sr-only\">\n                {{ \"matchDetection\" | i18n }} {{ i + 1 }}\n              </label>\n              <select\n                id=\"loginUriMatch{{ i }}\"\n                name=\"Login.Uris[{{ i }}].Match\"\n                [(ngModel)]=\"u.match\"\n                [hidden]=\"u.showOptions === false || (u.showOptions == null && u.match == null)\"\n                (change)=\"loginUriMatchChanged(u)\"\n              >\n                <option *ngFor=\"let o of uriMatchOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n              </select>\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                *ngIf=\"currentUris && currentUris.length\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'toggleCurrentUris' | i18n }}\"\n                (click)=\"toggleUriInput(u)\"\n                [attr.aria-pressed]=\"u.showCurrentUris === true\"\n              >\n                <i aria-hidden=\"true\" class=\"bwi bwi-lg bwi-list\"></i>\n              </button>\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'toggleOptions' | i18n }}\"\n                (click)=\"toggleUriOptions(u)\"\n                [attr.aria-pressed]=\"u.showOptions === true\"\n              >\n                <i class=\"bwi bwi-lg bwi-cog\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n        </ng-container>\n        <button\n          type=\"button\"\n          appStopClick\n          appBlurClick\n          (click)=\"addUri()\"\n          class=\"box-content-row box-content-row-newmulti\"\n        >\n          <i class=\"bwi bwi-plus-circle bwi-fw bwi-lg\" aria-hidden=\"true\"></i> {{ \"newUri\" | i18n }}\n        </button>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"showAutoFillOnPageLoadOptions\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"autofillOnPageLoad\">{{ \"itemAutoFillOnPageLoad\" | i18n }} </label>\n          <select\n            id=\"autofillOnPageLoad\"\n            name=\"AutofillOnPageLoad\"\n            [(ngModel)]=\"cipher.login.autofillOnPageLoad\"\n          >\n            <option *ngFor=\"let o of autofillOnPageLoadOptions\" [ngValue]=\"o.value\">\n              {{ o.name }}\n            </option>\n          </select>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"folder\">{{ \"folder\" | i18n }}</label>\n          <select id=\"folder\" name=\"FolderId\" [(ngModel)]=\"cipher.folderId\">\n            <option *ngFor=\"let f of folders$ | async\" [ngValue]=\"f.id\">{{ f.name }}</option>\n          </select>\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"favorite\">{{ \"favorite\" | i18n }}</label>\n          <input id=\"favorite\" type=\"checkbox\" name=\"Favorite\" [(ngModel)]=\"cipher.favorite\" />\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow *ngIf=\"canUseReprompt\">\n          <label for=\"passwordPrompt\">\n            {{ \"passwordPrompt\" | i18n }}\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n              href=\"https://bitwarden.com/help/managing-items/#protect-individual-items\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </label>\n          <input\n            id=\"passwordPrompt\"\n            type=\"checkbox\"\n            name=\"PasswordPrompt\"\n            [ngModel]=\"reprompt\"\n            (change)=\"repromptChanged()\"\n          />\n        </div>\n        <button\n          type=\"button\"\n          class=\"box-content-row box-content-row-flex text-default\"\n          appStopClick\n          appBlurClick\n          (click)=\"attachments()\"\n          *ngIf=\"editMode && showAttachments && !cloneMode\"\n        >\n          <div class=\"row-main\">{{ \"attachments\" | i18n }}</div>\n          <i\n            class=\"bwi bwi-external-link bwi-lg bwi-fw\"\n            aria-hidden=\"true\"\n            *ngIf=\"openAttachmentsInPopup\"\n          ></i>\n          <i\n            class=\"bwi bwi-angle-right row-sub-icon\"\n            aria-hidden=\"true\"\n            *ngIf=\"!openAttachmentsInPopup\"\n          ></i>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row box-content-row-flex text-default\"\n          appStopClick\n          appBlurClick\n          (click)=\"editCollections()\"\n          *ngIf=\"editMode && cipher.organizationId && !cloneMode\"\n        >\n          <div class=\"row-main\">{{ \"collections\" | i18n }}</div>\n          <i class=\"bwi bwi-angle-right row-sub-icon\" aria-hidden=\"true\"></i>\n        </button>\n      </div>\n    </div>\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <textarea id=\"notes\" name=\"Notes\" rows=\"6\" [(ngModel)]=\"cipher.notes\"></textarea>\n        </div>\n      </div>\n    </div>\n    <app-vault-add-edit-custom-fields\n      [cipher]=\"cipher\"\n      [thisCipherType]=\"cipher.type\"\n      [editMode]=\"editMode\"\n    >\n    </app-vault-add-edit-custom-fields>\n    <div class=\"box\" *ngIf=\"allowOwnershipOptions()\">\n      <h2 class=\"box-header\">\n        {{ \"ownership\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"organizationId\">{{ \"whoOwnsThisItem\" | i18n }}</label>\n          <select\n            id=\"organizationId\"\n            class=\"form-control\"\n            name=\"OrganizationId\"\n            [(ngModel)]=\"cipher.organizationId\"\n            (change)=\"organizationChanged()\"\n          >\n            <option *ngFor=\"let o of ownershipOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"(!editMode || cloneMode) && cipher.organizationId\">\n      <h2 class=\"box-header\">\n        {{ \"collections\" | i18n }}\n      </h2>\n      <div class=\"box-content\" *ngIf=\"!collections || !collections.length\">\n        <div class=\"box-content-row padded no-hover\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n      </div>\n      <div class=\"box-content\" *ngIf=\"collections && collections.length\">\n        <div\n          class=\"box-content-row box-content-row-checkbox\"\n          *ngFor=\"let c of collections; let i = index\"\n          appBoxRow\n        >\n          <label for=\"collection_{{ i }}\">{{ c.name }}</label>\n          <input\n            id=\"collection_{{ i }}\"\n            type=\"checkbox\"\n            [(ngModel)]=\"c.checked\"\n            name=\"Collection[{{ i }}].Checked\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"editMode && !cloneMode\">\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"delete()\"\n          [appApiAction]=\"deletePromise\"\n          #deleteBtn\n        >\n          <div class=\"row-main text-danger\">\n            <div class=\"icon text-danger\" aria-hidden=\"true\">\n              <i class=\"bwi bwi-trash bwi-lg bwi-fw\" [hidden]=\"deleteBtn.loading\"></i>\n              <i class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\" [hidden]=\"!deleteBtn.loading\"></i>\n            </div>\n            <span>{{ \"deleteItem\" | i18n }}</span>\n          </div>\n        </button>\n      </div>\n    </div>\n  </main>\n</form>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"@bitwarden/angular/components/add-edit.component\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { LoginUriView } from \"@bitwarden/common/models/view/loginUriView\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\n@Component({\n  selector: \"app-vault-add-edit\",\n  templateUrl: \"add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n  currentUris: string[];\n  showAttachments = true;\n  openAttachmentsInPopup: boolean;\n  showAutoFillOnPageLoadOptions: boolean;\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    messagingService: MessagingService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    eventService: EventService,\n    policyService: PolicyService,\n    private popupUtilsService: PopupUtilsService,\n    organizationService: OrganizationService,\n    passwordRepromptService: PasswordRepromptService,\n    logService: LogService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      messagingService,\n      eventService,\n      policyService,\n      logService,\n      passwordRepromptService,\n      organizationService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.cipherId) {\n        this.cipherId = params.cipherId;\n      }\n      if (params.folderId) {\n        this.folderId = params.folderId;\n      }\n      if (params.collectionId) {\n        const collection = this.writeableCollections.find((c) => c.id === params.collectionId);\n        if (collection != null) {\n          this.collectionIds = [collection.id];\n          this.organizationId = collection.organizationId;\n        }\n      }\n      if (params.type) {\n        const type = parseInt(params.type, null);\n        this.type = type;\n      }\n      this.editMode = !params.cipherId;\n\n      if (params.cloneMode != null) {\n        this.cloneMode = params.cloneMode === \"true\";\n      }\n      if (params.selectedVault) {\n        this.organizationId = params.selectedVault;\n      }\n      await this.load();\n\n      if (!this.editMode || this.cloneMode) {\n        if (\n          !this.popupUtilsService.inPopout(window) &&\n          params.name &&\n          (this.cipher.name == null || this.cipher.name === \"\")\n        ) {\n          this.cipher.name = params.name;\n        }\n        if (\n          !this.popupUtilsService.inPopout(window) &&\n          params.uri &&\n          (this.cipher.login.uris[0].uri == null || this.cipher.login.uris[0].uri === \"\")\n        ) {\n          this.cipher.login.uris[0].uri = params.uri;\n        }\n      }\n\n      this.openAttachmentsInPopup = this.popupUtilsService.inPopup(window);\n    });\n\n    if (!this.editMode) {\n      const tabs = await BrowserApi.tabsQuery({ windowType: \"normal\" });\n      this.currentUris =\n        tabs == null\n          ? null\n          : tabs.filter((tab) => tab.url != null && tab.url !== \"\").map((tab) => tab.url);\n    }\n\n    window.setTimeout(() => {\n      if (!this.editMode) {\n        if (this.cipher.name != null && this.cipher.name !== \"\") {\n          document.getElementById(\"loginUsername\").focus();\n        } else {\n          document.getElementById(\"name\").focus();\n        }\n      }\n    }, 200);\n  }\n\n  async load() {\n    await super.load();\n    this.showAutoFillOnPageLoadOptions =\n      this.cipher.type === CipherType.Login &&\n      (await this.stateService.getEnableAutoFillOnPageLoad());\n  }\n\n  async submit(): Promise<boolean> {\n    if (await super.submit()) {\n      if (this.cloneMode) {\n        this.router.navigate([\"/tabs/vault\"]);\n      } else {\n        this.location.back();\n      }\n      return true;\n    }\n\n    return false;\n  }\n\n  attachments() {\n    super.attachments();\n\n    if (this.openAttachmentsInPopup) {\n      const destinationUrl = this.router\n        .createUrlTree([\"/attachments\"], { queryParams: { cipherId: this.cipher.id } })\n        .toString();\n      const currentBaseUrl = window.location.href.replace(this.router.url, \"\");\n      this.popupUtilsService.popOut(window, currentBaseUrl + destinationUrl);\n    } else {\n      this.router.navigate([\"/attachments\"], { queryParams: { cipherId: this.cipher.id } });\n    }\n  }\n\n  editCollections() {\n    super.editCollections();\n    if (this.cipher.organizationId != null) {\n      this.router.navigate([\"/collections\"], { queryParams: { cipherId: this.cipher.id } });\n    }\n  }\n\n  cancel() {\n    super.cancel();\n    this.location.back();\n  }\n\n  async generateUsername(): Promise<boolean> {\n    const confirmed = await super.generateUsername();\n    if (confirmed) {\n      await this.saveCipherState();\n      this.router.navigate([\"generator\"], { queryParams: { type: \"username\" } });\n    }\n    return confirmed;\n  }\n\n  async generatePassword(): Promise<boolean> {\n    const confirmed = await super.generatePassword();\n    if (confirmed) {\n      await this.saveCipherState();\n      this.router.navigate([\"generator\"], { queryParams: { type: \"password\" } });\n    }\n    return confirmed;\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await super.delete();\n    if (confirmed) {\n      this.router.navigate([\"/tabs/vault\"]);\n    }\n    return confirmed;\n  }\n\n  toggleUriInput(uri: LoginUriView) {\n    const u = uri as any;\n    u.showCurrentUris = !u.showCurrentUris;\n  }\n\n  allowOwnershipOptions(): boolean {\n    return (\n      (!this.editMode || this.cloneMode) &&\n      this.ownershipOptions &&\n      (this.ownershipOptions.length > 1 || !this.allowPersonal)\n    );\n  }\n\n  private saveCipherState() {\n    return this.stateService.setAddEditCipherInfo({\n      cipher: this.cipher,\n      collectionIds:\n        this.collections == null\n          ? []\n          : this.collections.filter((c) => (c as any).checked).map((c) => c.id),\n    });\n  }\n}\n","export abstract class BaseResponse {\n  private response: any;\n\n  constructor(response: any) {\n    this.response = response;\n  }\n\n  protected getResponseProperty(\n    propertyName: string,\n    response: any = null,\n    exactName = false\n  ): any {\n    if (propertyName == null || propertyName === \"\") {\n      throw new Error(\"propertyName must not be null/empty.\");\n    }\n    if (response == null && this.response != null) {\n      response = this.response;\n    }\n    if (response == null) {\n      return null;\n    }\n    if (!exactName && response[propertyName] === undefined) {\n      let otherCasePropertyName: string = null;\n      if (propertyName.charAt(0) === propertyName.charAt(0).toUpperCase()) {\n        otherCasePropertyName = propertyName.charAt(0).toLowerCase();\n      } else {\n        otherCasePropertyName = propertyName.charAt(0).toUpperCase();\n      }\n      if (propertyName.length > 1) {\n        otherCasePropertyName += propertyName.slice(1);\n      }\n\n      propertyName = otherCasePropertyName;\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toLowerCase();\n      }\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toUpperCase();\n      }\n    }\n    return response[propertyName];\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ErrorResponse extends BaseResponse {\n  message: string;\n  validationErrors: { [key: string]: string[] };\n  statusCode: number;\n  captchaRequired: boolean;\n  captchaSiteKey: string;\n\n  constructor(response: any, status: number, identityResponse?: boolean) {\n    super(response);\n    let errorModel = null;\n    if (response != null) {\n      const responseErrorModel = this.getResponseProperty(\"ErrorModel\");\n      if (responseErrorModel && identityResponse) {\n        errorModel = responseErrorModel;\n      } else {\n        errorModel = response;\n      }\n    }\n\n    if (errorModel) {\n      this.message = this.getResponseProperty(\"Message\", errorModel);\n      this.validationErrors = this.getResponseProperty(\"ValidationErrors\", errorModel);\n      this.captchaSiteKey = this.validationErrors?.HCaptcha_SiteKey?.[0];\n      this.captchaRequired = !Utils.isNullOrWhitespace(this.captchaSiteKey);\n    } else {\n      if (status === 429) {\n        this.message = \"Rate limit exceeded. Try again later.\";\n      }\n    }\n    this.statusCode = status;\n  }\n\n  getSingleMessage(): string {\n    if (this.validationErrors == null) {\n      return this.message;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      if (this.validationErrors[key].length) {\n        return this.validationErrors[key][0];\n      }\n    }\n    return this.message;\n  }\n\n  getAllMessages(): string[] {\n    const messages: string[] = [];\n    if (this.validationErrors == null) {\n      return messages;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      this.validationErrors[key].forEach((item: string) => {\n        let prefix = \"\";\n        if (key.indexOf(\"[\") > -1 && key.indexOf(\"]\") > -1) {\n          const lastSep = key.lastIndexOf(\".\");\n          prefix = key.substr(0, lastSep > -1 ? lastSep : key.length) + \": \";\n        }\n        messages.push(prefix + item);\n      });\n    }\n    return messages;\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/errorResponse\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachmentView\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n@Directive()\nexport class AttachmentsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Output() onUploadedAttachment = new EventEmitter();\n  @Output() onDeletedAttachment = new EventEmitter();\n  @Output() onReuploadedAttachment = new EventEmitter();\n\n  cipher: CipherView;\n  cipherDomain: Cipher;\n  hasUpdatedKey: boolean;\n  canAccessAttachments: boolean;\n  formPromise: Promise<any>;\n  deletePromises: { [id: string]: Promise<any> } = {};\n  reuploadPromises: { [id: string]: Promise<any> } = {};\n  emergencyAccessId?: string = null;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected win: Window,\n    protected logService: LogService,\n    protected stateService: StateService,\n    protected fileDownloadService: FileDownloadService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit() {\n    if (!this.hasUpdatedKey) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"updateKey\")\n      );\n      return;\n    }\n\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFile\")\n      );\n      return;\n    }\n\n    if (files[0].size > 524288000) {\n      // 500 MB\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"maxFileSize\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.saveCipherAttachment(files[0]);\n      this.cipherDomain = await this.formPromise;\n      this.cipher = await this.cipherDomain.decrypt();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"attachmentSaved\"));\n      this.onUploadedAttachment.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    // reset file input\n    // ref: https://stackoverflow.com/a/20552042\n    fileEl.type = \"\";\n    fileEl.type = \"file\";\n    fileEl.value = \"\";\n  }\n\n  async delete(attachment: AttachmentView) {\n    if (this.deletePromises[attachment.id] != null) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteAttachmentConfirmation\"),\n      this.i18nService.t(\"deleteAttachment\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n      await this.deletePromises[attachment.id];\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedAttachment\"));\n      const i = this.cipher.attachments.indexOf(attachment);\n      if (i > -1) {\n        this.cipher.attachments.splice(i, 1);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.deletePromises[attachment.id] = null;\n    this.onDeletedAttachment.emit();\n  }\n\n  async download(attachment: AttachmentView) {\n    const a = attachment as any;\n    if (a.downloading) {\n      return;\n    }\n\n    if (!this.canAccessAttachments) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"premiumRequiredDesc\")\n      );\n      return;\n    }\n\n    let url: string;\n    try {\n      const attachmentDownloadResponse = await this.apiService.getAttachmentData(\n        this.cipher.id,\n        attachment.id,\n        this.emergencyAccessId\n      );\n      url = attachmentDownloadResponse.url;\n    } catch (e) {\n      if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n        url = attachment.url;\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    a.downloading = true;\n    const response = await fetch(new Request(url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      a.downloading = false;\n      return;\n    }\n\n    try {\n      const buf = await response.arrayBuffer();\n      const key =\n        attachment.key != null\n          ? attachment.key\n          : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n      const decBuf = await this.cryptoService.decryptFromBytes(buf, key);\n      this.fileDownloadService.download({\n        fileName: attachment.fileName,\n        blobData: decBuf,\n      });\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    a.downloading = false;\n  }\n\n  protected async init() {\n    this.cipherDomain = await this.loadCipher();\n    this.cipher = await this.cipherDomain.decrypt();\n\n    this.hasUpdatedKey = await this.cryptoService.hasEncKey();\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.canAccessAttachments = canAccessPremium || this.cipher.organizationId != null;\n\n    if (!this.canAccessAttachments) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"premiumRequiredDesc\"),\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\")\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\"https://vault.bitwarden.com/#/?premium=purchase\");\n      }\n    } else if (!this.hasUpdatedKey) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"updateKey\"),\n        this.i18nService.t(\"featureUnavailable\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\n          \"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n        );\n      }\n    }\n  }\n\n  protected async reuploadCipherAttachment(attachment: AttachmentView, admin: boolean) {\n    const a = attachment as any;\n    if (attachment.key != null || a.downloading || this.reuploadPromises[attachment.id] != null) {\n      return;\n    }\n\n    try {\n      this.reuploadPromises[attachment.id] = Promise.resolve().then(async () => {\n        // 1. Download\n        a.downloading = true;\n        const response = await fetch(new Request(attachment.url, { cache: \"no-store\" }));\n        if (response.status !== 200) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n          a.downloading = false;\n          return;\n        }\n\n        try {\n          // 2. Resave\n          const buf = await response.arrayBuffer();\n          const key =\n            attachment.key != null\n              ? attachment.key\n              : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n          const decBuf = await this.cryptoService.decryptFromBytes(buf, key);\n          this.cipherDomain = await this.cipherService.saveAttachmentRawWithServer(\n            this.cipherDomain,\n            attachment.fileName,\n            decBuf,\n            admin\n          );\n          this.cipher = await this.cipherDomain.decrypt();\n\n          // 3. Delete old\n          this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n          await this.deletePromises[attachment.id];\n          const foundAttachment = this.cipher.attachments.filter((a2) => a2.id === attachment.id);\n          if (foundAttachment.length > 0) {\n            const i = this.cipher.attachments.indexOf(foundAttachment[0]);\n            if (i > -1) {\n              this.cipher.attachments.splice(i, 1);\n            }\n          }\n\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"attachmentSaved\")\n          );\n          this.onReuploadedAttachment.emit();\n        } catch (e) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n        }\n\n        a.downloading = false;\n      });\n      await this.reuploadPromises[attachment.id];\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected saveCipherAttachment(file: File) {\n    return this.cipherService.saveAttachmentWithServer(this.cipherDomain, file);\n  }\n\n  protected deleteCipherAttachment(attachmentId: string) {\n    return this.cipherService.deleteAttachmentWithServer(this.cipher.id, attachmentId);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" appBlurClick (click)=\"close()\" *ngIf=\"openedAttachmentsInPopup\">\n        {{ \"close\" | i18n }}\n      </button>\n      <button type=\"button\" appBlurClick (click)=\"back()\" *ngIf=\"!openedAttachmentsInPopup\">\n        <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n        <span>{{ \"back\" | i18n }}</span>\n      </button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"attachments\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\" *ngIf=\"cipher && cipher.hasAttachments\">\n      <div class=\"box-content no-hover\">\n        <div class=\"box-content-row box-content-row-flex\" *ngFor=\"let a of cipher.attachments\">\n          <div class=\"row-main\">\n            {{ a.fileName }}\n          </div>\n          <small class=\"row-sub-label\">{{ a.sizeName }}</small>\n          <div class=\"action-buttons no-pad\">\n            <button\n              type=\"button\"\n              class=\"row-btn btn\"\n              type=\"button\"\n              appStopClick\n              appBlurClick\n              appA11yTitle=\"{{ 'deleteAttachment' | i18n }}\"\n              (click)=\"delete(a)\"\n              #deleteBtn\n              [appApiAction]=\"deletePromises[a.id]\"\n              [disabled]=\"deleteBtn.loading\"\n            >\n              <i\n                class=\"bwi bwi-trash bwi-lg bwi-fw\"\n                [hidden]=\"deleteBtn.loading\"\n                aria-hidden=\"true\"\n              ></i>\n              <i\n                class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n                [hidden]=\"!deleteBtn.loading\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"newAttachment\" | i18n }}\n      </h2>\n      <div class=\"box-content no-hover\">\n        <div class=\"box-content-row\">\n          <label for=\"file\">{{ \"file\" | i18n }}</label>\n          <input type=\"file\" id=\"file\" name=\"file\" required />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"maxFileSize\" | i18n }}\n      </div>\n    </div>\n  </main>\n</form>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"@bitwarden/angular/components/attachments.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-vault-attachments\",\n  templateUrl: \"attachments.component.html\",\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n  openedAttachmentsInPopup: boolean;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    private location: Location,\n    private route: ActivatedRoute,\n    stateService: StateService,\n    logService: LogService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      apiService,\n      window,\n      logService,\n      stateService,\n      fileDownloadService\n    );\n  }\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      this.cipherId = params.cipherId;\n      await this.init();\n    });\n\n    this.openedAttachmentsInPopup = history.length === 1;\n  }\n\n  back() {\n    this.location.back();\n  }\n\n  close() {\n    window.close();\n  }\n}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n@Directive()\nexport class CiphersComponent {\n  @Input() activeCipherId: string = null;\n  @Output() onCipherClicked = new EventEmitter<CipherView>();\n  @Output() onCipherRightClicked = new EventEmitter<CipherView>();\n  @Output() onAddCipher = new EventEmitter();\n  @Output() onAddCipherOptions = new EventEmitter();\n\n  loaded = false;\n  ciphers: CipherView[] = [];\n  searchText: string;\n  searchPlaceholder: string = null;\n  filter: (cipher: CipherView) => boolean = null;\n  deleted = false;\n\n  protected searchPending = false;\n\n  private searchTimeout: any = null;\n\n  constructor(protected searchService: SearchService) {}\n\n  async load(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.deleted = deleted || false;\n    await this.applyFilter(filter);\n    this.loaded = true;\n  }\n\n  async reload(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.loaded = false;\n    await this.load(filter, deleted);\n  }\n\n  async refresh() {\n    await this.reload(this.filter, this.deleted);\n  }\n\n  async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null, indexedCiphers?: CipherView[]) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      await this.doSearch(indexedCiphers);\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      await this.doSearch(indexedCiphers);\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  selectCipher(cipher: CipherView) {\n    this.onCipherClicked.emit(cipher);\n  }\n\n  rightClickCipher(cipher: CipherView) {\n    this.onCipherRightClicked.emit(cipher);\n  }\n\n  addCipher() {\n    this.onAddCipher.emit();\n  }\n\n  addCipherOptions() {\n    this.onAddCipherOptions.emit();\n  }\n\n  isSearching() {\n    return !this.searchPending && this.searchService.isSearchable(this.searchText);\n  }\n\n  protected deletedFilter: (cipher: CipherView) => boolean = (c) => c.isDeleted === this.deleted;\n\n  protected async doSearch(indexedCiphers?: CipherView[]) {\n    this.ciphers = await this.searchService.searchCiphers(\n      this.searchText,\n      [this.filter, this.deletedFilter],\n      indexedCiphers\n    );\n  }\n}\n","import { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { CipherStatus } from \"./cipher-status.model\";\n\nexport type VaultFilterFunction = (cipher: CipherView) => boolean;\n\nexport class VaultFilter {\n  cipherType?: CipherType;\n  selectedCollection = false; // This is needed because of how the \"Unassigned\" collection works. It has a null id.\n  selectedCollectionId?: string;\n  status?: CipherStatus;\n  selectedFolder = false; // This is needed because of how the \"No Folder\" folder works. It has a null id.\n  selectedFolderId?: string;\n  selectedOrganizationId?: string;\n  myVaultOnly = false;\n  refreshCollectionsAndFolders = false;\n\n  constructor(init?: Partial<VaultFilter>) {\n    Object.assign(this, init);\n  }\n\n  resetFilter() {\n    this.cipherType = null;\n    this.status = null;\n    this.selectedCollection = false;\n    this.selectedCollectionId = null;\n    this.selectedFolder = false;\n    this.selectedFolderId = null;\n  }\n\n  resetOrganization() {\n    this.myVaultOnly = false;\n    this.selectedOrganizationId = null;\n    this.resetFilter();\n  }\n\n  buildFilter(): VaultFilterFunction {\n    return (cipher) => {\n      let cipherPassesFilter = true;\n      if (this.status === \"favorites\" && cipherPassesFilter) {\n        cipherPassesFilter = cipher.favorite;\n      }\n      if (this.status === \"trash\" && cipherPassesFilter) {\n        cipherPassesFilter = cipher.isDeleted;\n      }\n      if (this.cipherType != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.type === this.cipherType;\n      }\n      if (this.selectedFolder && this.selectedFolderId == null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.folderId == null;\n      }\n      if (this.selectedFolder && this.selectedFolderId != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.folderId === this.selectedFolderId;\n      }\n      if (this.selectedCollection && this.selectedCollectionId == null && cipherPassesFilter) {\n        cipherPassesFilter =\n          cipher.organizationId != null &&\n          (cipher.collectionIds == null || cipher.collectionIds.length === 0);\n      }\n      if (this.selectedCollection && this.selectedCollectionId != null && cipherPassesFilter) {\n        cipherPassesFilter =\n          cipher.collectionIds != null && cipher.collectionIds.includes(this.selectedCollectionId);\n      }\n      if (this.selectedOrganizationId != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.organizationId === this.selectedOrganizationId;\n      }\n      if (this.myVaultOnly && cipherPassesFilter) {\n        cipherPassesFilter = cipher.organizationId === null;\n      }\n      return cipherPassesFilter;\n    };\n  }\n}\n","export class TreeNode<T extends ITreeNodeObject> {\n  parent: T;\n  node: T;\n  children: TreeNode<T>[] = [];\n\n  constructor(node: T, name: string, parent: T) {\n    this.parent = parent;\n    this.node = node;\n    this.node.name = name;\n  }\n}\n\nexport interface ITreeNodeObject {\n  id: string;\n  name: string;\n}\n","import { ITreeNodeObject, TreeNode } from \"../models/domain/treeNode\";\n\nexport class ServiceUtils {\n  static nestedTraverse(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    partIndex: number,\n    parts: string[],\n    obj: ITreeNodeObject,\n    parent: ITreeNodeObject,\n    delimiter: string\n  ) {\n    if (parts.length <= partIndex) {\n      return;\n    }\n\n    const end = partIndex === parts.length - 1;\n    const partName = parts[partIndex];\n\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.name !== parts[partIndex]) {\n        continue;\n      }\n      if (end && nodeTree[i].node.id !== obj.id) {\n        // Another node with the same name.\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      ServiceUtils.nestedTraverse(\n        nodeTree[i].children,\n        partIndex + 1,\n        parts,\n        obj,\n        nodeTree[i].node,\n        delimiter\n      );\n      return;\n    }\n\n    if (nodeTree.filter((n) => n.node.name === partName).length === 0) {\n      if (end) {\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      const newPartName = parts[partIndex] + delimiter + parts[partIndex + 1];\n      ServiceUtils.nestedTraverse(\n        nodeTree,\n        0,\n        [newPartName, ...parts.slice(partIndex + 2)],\n        obj,\n        parent,\n        delimiter\n      );\n    }\n  }\n\n  static getTreeNodeObject(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    id: string\n  ): TreeNode<ITreeNodeObject> {\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.id === id) {\n        return nodeTree[i];\n      } else if (nodeTree[i].children != null) {\n        const node = ServiceUtils.getTreeNodeObject(nodeTree[i].children, id);\n        if (node !== null) {\n          return node;\n        }\n      }\n    }\n    return null;\n  }\n}\n","import { TreeNode } from \"@bitwarden/common/models/domain/treeNode\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\nexport class DynamicTreeNode<T extends CollectionView | FolderView> {\n  fullList: T[];\n  nestedList: TreeNode<T>[];\n\n  hasId(id: string): boolean {\n    return this.fullList != null && this.fullList.filter((i: T) => i.id === id).length > 0;\n  }\n\n  constructor(init?: Partial<DynamicTreeNode<T>>) {\n    Object.assign(this, init);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { firstValueFrom, from, mergeMap, Observable } from \"rxjs\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { ServiceUtils } from \"@bitwarden/common/misc/serviceUtils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/treeNode\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\nimport { DynamicTreeNode } from \"./models/dynamic-tree-node.model\";\n\nconst NestingDelimiter = \"/\";\n\n@Injectable()\nexport class VaultFilterService {\n  constructor(\n    protected stateService: StateService,\n    protected organizationService: OrganizationService,\n    protected folderService: FolderService,\n    protected cipherService: CipherService,\n    protected collectionService: CollectionService,\n    protected policyService: PolicyService\n  ) {}\n\n  async storeCollapsedFilterNodes(collapsedFilterNodes: Set<string>): Promise<void> {\n    await this.stateService.setCollapsedGroupings(Array.from(collapsedFilterNodes));\n  }\n\n  async buildCollapsedFilterNodes(): Promise<Set<string>> {\n    return new Set(await this.stateService.getCollapsedGroupings());\n  }\n\n  async buildOrganizations(): Promise<Organization[]> {\n    return await this.organizationService.getAll();\n  }\n\n  buildNestedFolders(organizationId?: string): Observable<DynamicTreeNode<FolderView>> {\n    const transformation = async (storedFolders: FolderView[]) => {\n      let folders: FolderView[];\n      if (organizationId != null) {\n        const ciphers = await this.cipherService.getAllDecrypted();\n        const orgCiphers = ciphers.filter((c) => c.organizationId == organizationId);\n        folders = storedFolders.filter(\n          (f) =>\n            orgCiphers.filter((oc) => oc.folderId == f.id).length > 0 ||\n            ciphers.filter((c) => c.folderId == f.id).length < 1\n        );\n      } else {\n        folders = storedFolders;\n      }\n      const nestedFolders = await this.getAllFoldersNested(folders);\n      return new DynamicTreeNode<FolderView>({\n        fullList: folders,\n        nestedList: nestedFolders,\n      });\n    };\n\n    return this.folderService.folderViews$.pipe(\n      mergeMap((folders) => from(transformation(folders)))\n    );\n  }\n\n  async buildCollections(organizationId?: string): Promise<DynamicTreeNode<CollectionView>> {\n    const storedCollections = await this.collectionService.getAllDecrypted();\n    let collections: CollectionView[];\n    if (organizationId != null) {\n      collections = storedCollections.filter((c) => c.organizationId === organizationId);\n    } else {\n      collections = storedCollections;\n    }\n    const nestedCollections = await this.collectionService.getAllNested(collections);\n    return new DynamicTreeNode<CollectionView>({\n      fullList: collections,\n      nestedList: nestedCollections,\n    });\n  }\n\n  async checkForSingleOrganizationPolicy(): Promise<boolean> {\n    return await this.policyService.policyAppliesToUser(PolicyType.SingleOrg);\n  }\n\n  async checkForPersonalOwnershipPolicy(): Promise<boolean> {\n    return await this.policyService.policyAppliesToUser(PolicyType.PersonalOwnership);\n  }\n\n  protected async getAllFoldersNested(folders: FolderView[]): Promise<TreeNode<FolderView>[]> {\n    const nodes: TreeNode<FolderView>[] = [];\n    folders.forEach((f) => {\n      const folderCopy = new FolderView();\n      folderCopy.id = f.id;\n      folderCopy.revisionDate = f.revisionDate;\n      const parts = f.name != null ? f.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, folderCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getFolderNested(id: string): Promise<TreeNode<FolderView>> {\n    const folders = await this.getAllFoldersNested(\n      await firstValueFrom(this.folderService.folderViews$)\n    );\n    return ServiceUtils.getTreeNodeObject(folders, id) as TreeNode<FolderView>;\n  }\n}\n","import { VaultFilter } from \"@bitwarden/angular/modules/vault-filter/models/vault-filter.model\";\nimport { VaultFilterService as BaseVaultFilterService } from \"@bitwarden/angular/modules/vault-filter/vault-filter.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nexport class VaultFilterService extends BaseVaultFilterService {\n  vaultFilter: VaultFilter = new VaultFilter();\n\n  allVaults = \"allVaults\";\n  myVault = \"myVault\";\n\n  constructor(\n    stateService: StateService,\n    organizationService: OrganizationService,\n    folderService: FolderService,\n    cipherService: CipherService,\n    collectionService: CollectionService,\n    policyService: PolicyService\n  ) {\n    super(\n      stateService,\n      organizationService,\n      folderService,\n      cipherService,\n      collectionService,\n      policyService\n    );\n    this.vaultFilter.myVaultOnly = false;\n    this.vaultFilter.selectedOrganizationId = null;\n  }\n\n  getVaultFilter() {\n    return this.vaultFilter;\n  }\n\n  setVaultFilter(filter: string) {\n    if (filter === this.allVaults) {\n      this.vaultFilter.myVaultOnly = false;\n      this.vaultFilter.selectedOrganizationId = null;\n    } else if (filter === this.myVault) {\n      this.vaultFilter.myVaultOnly = true;\n      this.vaultFilter.selectedOrganizationId = null;\n    } else {\n      this.vaultFilter.myVaultOnly = false;\n      this.vaultFilter.selectedOrganizationId = filter;\n    }\n  }\n\n  clear() {\n    this.setVaultFilter(this.allVaults);\n  }\n\n  filterCipherForSelectedVault(cipher: CipherView) {\n    if (!this.vaultFilter.selectedOrganizationId && !this.vaultFilter.myVaultOnly) {\n      return false;\n    }\n    if (this.vaultFilter.selectedOrganizationId) {\n      if (cipher.organizationId === this.vaultFilter.selectedOrganizationId) {\n        return false;\n      }\n    } else if (this.vaultFilter.myVaultOnly) {\n      if (!cipher.organizationId) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"ellipsis\",\n})\nexport class EllipsisPipe implements PipeTransform {\n  transform(value: string, limit = 25, completeWords = false, ellipsis = \"...\") {\n    if (value.length <= limit) {\n      return value;\n    }\n    limit -= ellipsis.length;\n    if (completeWords && value.length > limit && value.indexOf(\" \") > 0) {\n      limit = value.substring(0, limit).lastIndexOf(\" \");\n    }\n    return value.substring(0, limit) + ellipsis;\n  }\n}\n","<div class=\"content org-filter-content\" *ngIf=\"loaded && show\">\n  <button\n    #toggleVaults\n    class=\"org-filter\"\n    (click)=\"openOverlay()\"\n    aria-haspopup=\"menu\"\n    aria-controls=\"cdk-overlay-container\"\n    [attr.aria-expanded]=\"isOpen\"\n    [attr.aria-label]=\"vaultFilterDisplay\"\n  >\n    {{ vaultFilterDisplay | ellipsis: 45 }}&nbsp;\n    <i\n      class=\"bwi bwi-sm\"\n      aria-hidden=\"true\"\n      [ngClass]=\"{ 'bwi-angle-down': !isOpen, 'bwi-chevron-up': isOpen }\"\n    ></i>\n  </button>\n  <ng-template class=\"vault-select-container\" #vaultSelectorTemplate>\n    <div\n      class=\"vault-select\"\n      [@transformPanel]=\"'open'\"\n      cdkTrapFocus\n      cdkTrapFocusAutoCapture\n      role=\"dialog\"\n      aria-modal=\"true\"\n    >\n      <button\n        appStopClick\n        appBlurClick\n        (click)=\"selectAllVaults()\"\n        [ngClass]=\"{ active: !myVaultOnly && !selectOrganizationId }\"\n      >\n        <i class=\"bwi bwi-fw bwi-filter\" aria-hidden=\"true\"></i>\n        &nbsp;{{ \"allVaults\" | i18n }}\n      </button>\n      <button\n        *ngIf=\"!enforcePersonalOwnwership\"\n        appStopClick\n        appBlurClick\n        (click)=\"selectMyVault()\"\n      >\n        <i class=\"bwi bwi-fw bwi-user\" aria-hidden=\"true\"></i>\n        &nbsp;{{ \"myVault\" | i18n }}\n      </button>\n      <button\n        *ngFor=\"let organization of organizations\"\n        appStopClick\n        appBlurClick\n        (click)=\"selectOrganization(organization)\"\n      >\n        <i\n          *ngIf=\"organization.planProductType !== 1\"\n          class=\"bwi bwi-fw bwi-business\"\n          aria-hidden=\"true\"\n        ></i>\n        <i\n          *ngIf=\"organization.planProductType === 1\"\n          class=\"bwi bwi-fw bwi-family\"\n          aria-hidden=\"true\"\n        ></i>\n        <span>&nbsp;{{ organization.name | ellipsis: (organization.enabled ? 21 : 18):true }}</span>\n        <i\n          *ngIf=\"!organization.enabled\"\n          class=\"bwi bwi-fw bwi-exclamation-triangle text-danger\"\n          aria-label=\"{{ 'organizationIsDisabled' | i18n }}\"\n          appA11yTitle=\"{{ 'organizationIsDisabled' | i18n }}\"\n        ></i>\n      </button>\n    </div>\n  </ng-template>\n</div>\n","import { animate, state, style, transition, trigger } from \"@angular/animations\";\nimport { ConnectedPosition, Overlay, OverlayRef } from \"@angular/cdk/overlay\";\nimport { TemplatePortal } from \"@angular/cdk/portal\";\nimport {\n  Component,\n  ElementRef,\n  EventEmitter,\n  NgZone,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { merge } from \"rxjs\";\n\nimport { VaultFilter } from \"@bitwarden/angular/modules/vault-filter/models/vault-filter.model\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { VaultFilterService } from \"../../services/vaultFilter.service\";\n\n@Component({\n  selector: \"app-vault-select\",\n  templateUrl: \"vault-select.component.html\",\n  animations: [\n    trigger(\"transformPanel\", [\n      state(\n        \"void\",\n        style({\n          opacity: 0,\n        })\n      ),\n      transition(\n        \"void => open\",\n        animate(\n          \"100ms linear\",\n          style({\n            opacity: 1,\n          })\n        )\n      ),\n      transition(\"* => void\", animate(\"100ms linear\", style({ opacity: 0 }))),\n    ]),\n  ],\n})\nexport class VaultSelectComponent implements OnInit {\n  @Output() onVaultSelectionChanged = new EventEmitter();\n\n  @ViewChild(\"toggleVaults\", { read: ElementRef })\n  buttonRef: ElementRef<HTMLButtonElement>;\n  @ViewChild(\"vaultSelectorTemplate\", { read: TemplateRef }) templateRef: TemplateRef<HTMLElement>;\n\n  isOpen = false;\n  loaded = false;\n  organizations: Organization[];\n  vaultFilter: VaultFilter = new VaultFilter();\n  vaultFilterDisplay = \"\";\n  enforcePersonalOwnwership = false;\n  overlayPostition: ConnectedPosition[] = [\n    {\n      originX: \"start\",\n      originY: \"bottom\",\n      overlayX: \"start\",\n      overlayY: \"top\",\n    },\n  ];\n\n  private overlayRef: OverlayRef;\n\n  get show() {\n    return (\n      (this.organizations.length > 0 && !this.enforcePersonalOwnwership) ||\n      (this.organizations.length > 1 && this.enforcePersonalOwnwership)\n    );\n  }\n\n  constructor(\n    private vaultFilterService: VaultFilterService,\n    private i18nService: I18nService,\n    private ngZone: NgZone,\n    private broadcasterService: BroadcasterService,\n    private overlay: Overlay,\n    private viewContainerRef: ViewContainerRef,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n    this.broadcasterService.subscribe(this.constructor.name, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            await this.load();\n            break;\n          default:\n            break;\n        }\n      });\n    });\n  }\n\n  async load() {\n    this.vaultFilter = this.vaultFilterService.getVaultFilter();\n    this.organizations = (await this.vaultFilterService.buildOrganizations()).sort((a, b) =>\n      a.name.localeCompare(b.name)\n    );\n    this.enforcePersonalOwnwership =\n      await this.vaultFilterService.checkForPersonalOwnershipPolicy();\n\n    if (this.show) {\n      if (this.enforcePersonalOwnwership && !this.vaultFilter.myVaultOnly) {\n        this.vaultFilterService.setVaultFilter(this.organizations[0].id);\n        this.vaultFilter.selectedOrganizationId = this.organizations[0].id;\n        this.vaultFilterDisplay = this.organizations.find(\n          (o) => o.id === this.vaultFilter.selectedOrganizationId\n        ).name;\n      } else if (this.vaultFilter.myVaultOnly) {\n        this.vaultFilterDisplay = this.i18nService.t(this.vaultFilterService.myVault);\n      } else if (this.vaultFilter.selectedOrganizationId != null) {\n        this.vaultFilterDisplay = this.organizations.find(\n          (o) => o.id === this.vaultFilter.selectedOrganizationId\n        ).name;\n      } else {\n        this.vaultFilterDisplay = this.i18nService.t(this.vaultFilterService.allVaults);\n      }\n    }\n    this.loaded = true;\n  }\n\n  openOverlay() {\n    const viewPortHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    const positionStrategyBuilder = this.overlay.position();\n\n    const positionStrategy = positionStrategyBuilder\n      .flexibleConnectedTo(this.buttonRef.nativeElement)\n      .withFlexibleDimensions(true)\n      .withPush(true)\n      .withViewportMargin(10)\n      .withGrowAfterOpen(true)\n      .withPositions(this.overlayPostition);\n\n    this.overlayRef = this.overlay.create({\n      hasBackdrop: true,\n      positionStrategy,\n      maxHeight: viewPortHeight - 160,\n      backdropClass: \"cdk-overlay-transparent-backdrop\",\n      scrollStrategy: this.overlay.scrollStrategies.close(),\n    });\n\n    const templatePortal = new TemplatePortal(this.templateRef, this.viewContainerRef);\n    this.overlayRef.attach(templatePortal);\n    this.isOpen = true;\n\n    // Handle closing\n    merge(\n      this.overlayRef.outsidePointerEvents(),\n      this.overlayRef.backdropClick(),\n      this.overlayRef.detachments()\n    ).subscribe(() => {\n      this.close();\n    });\n  }\n\n  close() {\n    if (this.overlayRef) {\n      this.overlayRef.dispose();\n      this.overlayRef = undefined;\n    }\n    this.isOpen = false;\n  }\n\n  selectOrganization(organization: Organization) {\n    if (!organization.enabled) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"disabledOrganizationFilterError\")\n      );\n    } else {\n      this.vaultFilterDisplay = organization.name;\n      this.vaultFilterService.setVaultFilter(organization.id);\n      this.onVaultSelectionChanged.emit();\n      this.close();\n    }\n  }\n  selectAllVaults() {\n    this.vaultFilterDisplay = this.i18nService.t(this.vaultFilterService.allVaults);\n    this.vaultFilterService.setVaultFilter(this.vaultFilterService.allVaults);\n    this.onVaultSelectionChanged.emit();\n    this.close();\n  }\n  selectMyVault() {\n    this.vaultFilterDisplay = this.i18nService.t(this.vaultFilterService.myVault);\n    this.vaultFilterService.setVaultFilter(this.vaultFilterService.myVault);\n    this.onVaultSelectionChanged.emit();\n    this.close();\n  }\n}\n","import { Directive, ElementRef, HostListener, Input } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appFallbackSrc]\",\n})\nexport class FallbackSrcDirective {\n  @Input(\"appFallbackSrc\") appFallbackSrc: string;\n\n  constructor(private el: ElementRef) {}\n\n  @HostListener(\"error\") onError() {\n    this.el.nativeElement.src = this.appFallbackSrc;\n  }\n}\n","<div class=\"icon\" aria-hidden=\"true\">\n  <img\n    [src]=\"image\"\n    appFallbackSrc=\"{{ fallbackImage }}\"\n    *ngIf=\"imageEnabled && image\"\n    alt=\"\"\n    decoding=\"async\"\n    loading=\"lazy\"\n  />\n  <i class=\"bwi bwi-fw bwi-lg {{ icon }}\" *ngIf=\"!imageEnabled || !image\"></i>\n</div>\n","import { Component, Input, OnChanges } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n/**\n * Provides a mapping from supported card brands to\n * the filenames of icon that should be present in images/cards folder of clients.\n */\nconst cardIcons: Record<string, string> = {\n  Visa: \"card-visa\",\n  Mastercard: \"card-mastercard\",\n  Amex: \"card-amex\",\n  Discover: \"card-discover\",\n  \"Diners Club\": \"card-diners-club\",\n  JCB: \"card-jcb\",\n  Maestro: \"card-maestro\",\n  UnionPay: \"card-union-pay\",\n  RuPay: \"card-ru-pay\",\n};\n\n@Component({\n  selector: \"app-vault-icon\",\n  templateUrl: \"icon.component.html\",\n})\nexport class IconComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  icon: string;\n  image: string;\n  fallbackImage: string;\n  imageEnabled: boolean;\n\n  private iconsUrl: string;\n\n  constructor(environmentService: EnvironmentService, private stateService: StateService) {\n    this.iconsUrl = environmentService.getIconsUrl();\n  }\n\n  async ngOnChanges() {\n    // Components may be re-used when using cdk-virtual-scroll. Which puts the component in a weird state,\n    // to avoid this we reset all state variables.\n    this.image = null;\n    this.fallbackImage = null;\n    this.imageEnabled = !(await this.stateService.getDisableFavicon());\n    this.load();\n  }\n\n  protected load() {\n    switch (this.cipher.type) {\n      case CipherType.Login:\n        this.icon = \"bwi-globe\";\n        this.setLoginIcon();\n        break;\n      case CipherType.SecureNote:\n        this.icon = \"bwi-sticky-note\";\n        break;\n      case CipherType.Card:\n        this.icon = \"bwi-credit-card\";\n        this.setCardIcon();\n        break;\n      case CipherType.Identity:\n        this.icon = \"bwi-id-card\";\n        break;\n      default:\n        break;\n    }\n  }\n\n  private setLoginIcon() {\n    if (this.cipher.login.uri) {\n      let hostnameUri = this.cipher.login.uri;\n      let isWebsite = false;\n\n      if (hostnameUri.indexOf(\"androidapp://\") === 0) {\n        this.icon = \"bwi-android\";\n        this.image = null;\n      } else if (hostnameUri.indexOf(\"iosapp://\") === 0) {\n        this.icon = \"bwi-apple\";\n        this.image = null;\n      } else if (\n        this.imageEnabled &&\n        hostnameUri.indexOf(\"://\") === -1 &&\n        hostnameUri.indexOf(\".\") > -1\n      ) {\n        hostnameUri = \"http://\" + hostnameUri;\n        isWebsite = true;\n      } else if (this.imageEnabled) {\n        isWebsite = hostnameUri.indexOf(\"http\") === 0 && hostnameUri.indexOf(\".\") > -1;\n      }\n\n      if (this.imageEnabled && isWebsite) {\n        try {\n          this.image = this.iconsUrl + \"/\" + Utils.getHostname(hostnameUri) + \"/icon.png\";\n          this.fallbackImage = \"images/bwi-globe.png\";\n        } catch (e) {\n          // Ignore error since the fallback icon will be shown if image is null.\n        }\n      }\n    } else {\n      this.image = null;\n    }\n  }\n\n  private setCardIcon() {\n    const brand = this.cipher.card.brand;\n    if (this.imageEnabled && brand in cardIcons) {\n      this.icon = \"credit-card-icon \" + cardIcons[brand];\n    }\n  }\n}\n","<button\n  type=\"button\"\n  class=\"row-btn\"\n  (click)=\"view()\"\n  appStopClick\n  appStopProp\n  appA11yTitle=\"{{ 'view' | i18n }}\"\n  *ngIf=\"showView\"\n>\n  <i class=\"bwi bwi-lg bwi-list-alt\" aria-hidden=\"true\"></i>\n</button>\n<ng-container *ngIf=\"cipher.type === cipherType.Login\">\n  <button\n    type=\"button\"\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'launch' | i18n }}\"\n    (click)=\"launchCipher()\"\n    *ngIf=\"!showView\"\n    [ngClass]=\"{ disabled: !cipher.login.canLaunch }\"\n    [attr.disabled]=\"!cipher.login.canLaunch ? '' : null\"\n  >\n    <i class=\"bwi bwi-lg bwi-share-square\" aria-hidden=\"true\"></i>\n  </button>\n  <button\n    type=\"button\"\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyUsername' | i18n }}\"\n    (click)=\"copy(cipher, cipher.login.username, 'username', 'Username')\"\n    [ngClass]=\"{ disabled: !cipher.login.username }\"\n    [attr.disabled]=\"!cipher.login.username ? '' : null\"\n  >\n    <i class=\"bwi bwi-lg bwi-user\" aria-hidden=\"true\"></i>\n  </button>\n  <button\n    type=\"button\"\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n    (click)=\"copy(cipher, cipher.login.password, 'password', 'Password')\"\n    [ngClass]=\"{ disabled: !cipher.login.password || !cipher.viewPassword }\"\n    [attr.disabled]=\"!cipher.login.password ? '' : null\"\n  >\n    <i class=\"bwi bwi-lg bwi-key\" aria-hidden=\"true\"></i>\n  </button>\n  <button\n    type=\"button\"\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyVerificationCode' | i18n }}\"\n    (click)=\"copy(cipher, cipher.login.totp, 'verificationCodeTotp', 'TOTP')\"\n    [ngClass]=\"{ disabled: !displayTotpCopyButton(cipher) }\"\n    [attr.disabled]=\"!displayTotpCopyButton(cipher) ? '' : null\"\n  >\n    <i class=\"bwi bwi-lg bwi-clock\" aria-hidden=\"true\"></i>\n  </button>\n</ng-container>\n<ng-container *ngIf=\"cipher.type === cipherType.Card\">\n  <button\n    type=\"button\"\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyNumber' | i18n }}\"\n    (click)=\"copy(cipher, cipher.card.number, 'number', 'Card Number')\"\n    [ngClass]=\"{ disabled: !cipher.card.number }\"\n    [attr.disabled]=\"!cipher.card.number ? '' : null\"\n  >\n    <i class=\"bwi bwi-lg bwi-hashtag\" aria-hidden=\"true\"></i>\n  </button>\n  <button\n    type=\"button\"\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copySecurityCode' | i18n }}\"\n    (click)=\"copy(cipher, cipher.card.code, 'securityCode', 'Security Code')\"\n    [ngClass]=\"{ disabled: !cipher.card.code }\"\n    [attr.disabled]=\"!cipher.card.code ? '' : null\"\n  >\n    <i class=\"bwi bwi-lg bwi-key\" aria-hidden=\"true\"></i>\n  </button>\n</ng-container>\n<ng-container *ngIf=\"cipher.type === cipherType.SecureNote\">\n  <button\n    type=\"button\"\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyNote' | i18n }}\"\n    (click)=\"copy(cipher, cipher.notes, 'note', 'Note')\"\n    [ngClass]=\"{ disabled: !cipher.notes }\"\n    [attr.disabled]=\"!cipher.notes ? '' : null\"\n  >\n    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n  </button>\n</ng-container>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n@Component({\n  selector: \"app-action-buttons\",\n  templateUrl: \"action-buttons.component.html\",\n})\nexport class ActionButtonsComponent {\n  @Output() onView = new EventEmitter<CipherView>();\n  @Output() launchEvent = new EventEmitter<CipherView>();\n  @Input() cipher: CipherView;\n  @Input() showView = false;\n\n  cipherType = CipherType;\n  userHasPremiumAccess = false;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private eventService: EventService,\n    private totpService: TotpService,\n    private stateService: StateService,\n    private passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  async ngOnInit() {\n    this.userHasPremiumAccess = await this.stateService.getCanAccessPremium();\n  }\n\n  launchCipher() {\n    this.launchEvent.emit(this.cipher);\n  }\n\n  async copy(cipher: CipherView, value: string, typeI18nKey: string, aType: string) {\n    if (\n      this.cipher.reprompt !== CipherRepromptType.None &&\n      this.passwordRepromptService.protectedFields().includes(aType) &&\n      !(await this.passwordRepromptService.showPasswordPrompt())\n    ) {\n      return;\n    }\n\n    if (value == null || (aType === \"TOTP\" && !this.displayTotpCopyButton(cipher))) {\n      return;\n    } else if (aType === \"TOTP\") {\n      value = await this.totpService.getCode(value);\n    }\n\n    if (!cipher.viewPassword) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (typeI18nKey === \"password\" || typeI18nKey === \"verificationCodeTotp\") {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, cipher.id);\n    } else if (typeI18nKey === \"securityCode\") {\n      this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, cipher.id);\n    }\n  }\n\n  displayTotpCopyButton(cipher: CipherView) {\n    return (\n      (cipher?.login?.hasTotp ?? false) && (cipher.organizationUseTotp || this.userHasPremiumAccess)\n    );\n  }\n\n  view() {\n    this.onView.emit(this.cipher);\n  }\n}\n","<div\n  role=\"group\"\n  appA11yTitle=\"{{ cipher.name }}\"\n  class=\"box-content-row box-content-row-flex virtual-scroll-item\"\n  [ngClass]=\"{ 'override-last': !last }\"\n>\n  <button\n    type=\"button\"\n    (click)=\"selectCipher(cipher)\"\n    (dblclick)=\"launchCipher(cipher)\"\n    appStopClick\n    title=\"{{ title }} - {{ cipher.name }}\"\n    class=\"row-main\"\n  >\n    <app-vault-icon [cipher]=\"cipher\"></app-vault-icon>\n    <div class=\"row-main-content\">\n      <span class=\"text\">\n        {{ cipher.name }}\n        <ng-container *ngIf=\"cipher.organizationId\">\n          <i\n            class=\"bwi bwi-collection text-muted\"\n            title=\"{{ 'shared' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"cipher.hasAttachments\">\n          <i\n            class=\"bwi bwi-paperclip text-muted\"\n            title=\"{{ 'attachments' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n        </ng-container>\n      </span>\n      <span class=\"detail\">{{ cipher.subTitle }}</span>\n    </div>\n  </button>\n  <app-action-buttons\n    [cipher]=\"cipher\"\n    [showView]=\"showView\"\n    (onView)=\"viewCipher(cipher)\"\n    (launchEvent)=\"launchCipher(cipher)\"\n    class=\"action-buttons\"\n  >\n  </app-action-buttons>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n@Component({\n  selector: \"app-cipher-row\",\n  templateUrl: \"cipher-row.component.html\",\n})\nexport class CipherRowComponent {\n  @Output() onSelected = new EventEmitter<CipherView>();\n  @Output() launchEvent = new EventEmitter<CipherView>();\n  @Output() onView = new EventEmitter<CipherView>();\n  @Input() cipher: CipherView;\n  @Input() last: boolean;\n  @Input() showView = false;\n  @Input() title: string;\n\n  selectCipher(c: CipherView) {\n    this.onSelected.emit(c);\n  }\n\n  launchCipher(c: CipherView) {\n    this.launchEvent.emit(c);\n  }\n\n  viewCipher(c: CipherView) {\n    this.onView.emit(c);\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" appBlurClick (click)=\"back()\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </button>\n  </div>\n  <h1 class=\"sr-only\">{{ \"myVault\" | i18n }}</h1>\n  <div class=\"search\">\n    <input\n      type=\"{{ searchTypeSearch ? 'search' : 'text' }}\"\n      placeholder=\"{{ searchPlaceholder || ('searchVault' | i18n) }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"search(200)\"\n      autocomplete=\"off\"\n      appAutofocus\n    />\n    <i class=\"bwi bwi-search\" aria-hidden=\"true\"></i>\n  </div>\n  <div class=\"right\">\n    <button type=\"button\" appBlurClick (click)=\"addCipher()\" appA11yTitle=\"{{ 'addItem' | i18n }}\">\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\" [ngClass]=\"{ 'stacked-boxes': showGroupings() }\">\n  <ng-container *ngIf=\"showGroupings()\">\n    <app-vault-select\n      *ngIf=\"showVaultFilter\"\n      (onVaultSelectionChanged)=\"changeVaultSelection()\"\n    ></app-vault-select>\n    <div class=\"box list\" *ngIf=\"nestedFolders && nestedFolders.length\">\n      <h2 class=\"box-header\">\n        {{ \"folders\" | i18n }}\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          *ngFor=\"let f of nestedFolders\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectFolder(f.node)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\">\n              <i class=\"bwi bwi-fw bwi-lg bwi-folder\" aria-hidden=\"true\"></i>\n            </div>\n            <span class=\"text\">{{ f.node.name }}</span>\n          </div>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"nestedCollections && nestedCollections.length\">\n      <h2 class=\"box-header\">\n        {{ \"collections\" | i18n }}\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          *ngFor=\"let c of nestedCollections\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectCollection(c.node)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\">\n              <i class=\"bwi bwi-fw bwi-lg bwi-collection\" aria-hidden=\"true\"></i>\n            </div>\n            <span class=\"text\">{{ c.node.name }}</span>\n          </div>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i></span>\n        </button>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"ciphers\">\n    <div *ngIf=\"!ciphers.length\">\n      <app-vault-select\n        *ngIf=\"showVaultFilter && !showGroupings()\"\n        (onVaultSelectionChanged)=\"changeVaultSelection()\"\n      ></app-vault-select>\n      <div class=\"no-items\">\n        <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" *ngIf=\"!loaded\" aria-hidden=\"true\"></i>\n        <ng-container *ngIf=\"loaded\">\n          <p>{{ \"noItemsInList\" | i18n }}</p>\n          <button type=\"button\" (click)=\"addCipher()\" class=\"btn block primary link\">\n            {{ \"addItem\" | i18n }}\n          </button>\n        </ng-container>\n      </div>\n    </div>\n    <cdk-virtual-scroll-viewport\n      itemSize=\"46\"\n      minBufferPx=\"400\"\n      maxBufferPx=\"600\"\n      *ngIf=\"ciphers.length\"\n      #virtualScrollViewport\n      ><app-vault-select\n        *ngIf=\"showVaultFilter && !showGroupings()\"\n        (onVaultSelectionChanged)=\"changeVaultSelection()\"\n      ></app-vault-select>\n      <div class=\"box list only-list\">\n        <h2 class=\"box-header\">\n          {{ groupingTitle }}\n          <span class=\"flex-right\">{{ isSearching() ? ciphers.length : ciphers.length }}</span>\n        </h2>\n        <div class=\"box-content\">\n          <app-cipher-row\n            *cdkVirtualFor=\"let c of ciphers; let last = last\"\n            [cipher]=\"c\"\n            [last]=\"last\"\n            title=\"{{ 'viewItem' | i18n }}\"\n            (onSelected)=\"selectCipher($event)\"\n            (launchEvent)=\"launchCipher($event)\"\n          ></app-cipher-row>\n        </div>\n      </div>\n    </cdk-virtual-scroll-viewport>\n  </ng-container>\n</main>\n","import { Location } from \"@angular/common\";\nimport { ChangeDetectorRef, Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { CiphersComponent as BaseCiphersComponent } from \"@bitwarden/angular/components/ciphers.component\";\nimport { VaultFilter } from \"@bitwarden/angular/modules/vault-filter/models/vault-filter.model\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/treeNode\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\nimport { BrowserComponentState } from \"src/models/browserComponentState\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { StateService } from \"../../services/abstractions/state.service\";\nimport { VaultFilterService } from \"../../services/vaultFilter.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst ComponentId = \"CiphersComponent\";\n\n@Component({\n  selector: \"app-vault-ciphers\",\n  templateUrl: \"ciphers.component.html\",\n})\nexport class CiphersComponent extends BaseCiphersComponent implements OnInit, OnDestroy {\n  groupingTitle: string;\n  state: BrowserComponentState;\n  folderId: string = null;\n  collectionId: string = null;\n  type: CipherType = null;\n  nestedFolders: TreeNode<FolderView>[];\n  nestedCollections: TreeNode<CollectionView>[];\n  searchTypeSearch = false;\n  showOrganizations = false;\n  vaultFilter: VaultFilter;\n  deleted = true;\n  noneFolder = false;\n  showVaultFilter = false;\n\n  private selectedTimeout: number;\n  private preventSelected = false;\n  private applySavedState = true;\n  private scrollingContainer = \"cdk-virtual-scroll-viewport\";\n\n  constructor(\n    searchService: SearchService,\n    private organizationService: OrganizationService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private ngZone: NgZone,\n    private broadcasterService: BroadcasterService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private stateService: StateService,\n    private popupUtils: PopupUtilsService,\n    private i18nService: I18nService,\n    private folderService: FolderService,\n    private collectionService: CollectionService,\n    private platformUtilsService: PlatformUtilsService,\n    private cipherService: CipherService,\n    private vaultFilterService: VaultFilterService\n  ) {\n    super(searchService);\n    this.applySavedState =\n      (window as any).previousPopupUrl != null &&\n      !(window as any).previousPopupUrl.startsWith(\"/ciphers\");\n  }\n\n  async ngOnInit() {\n    this.searchTypeSearch = !this.platformUtilsService.isSafari();\n    this.showOrganizations = await this.organizationService.hasOrganizations();\n    this.vaultFilter = this.vaultFilterService.getVaultFilter();\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (this.applySavedState) {\n        this.state = await this.stateService.getBrowserCipherComponentState();\n        if (this.state?.searchText) {\n          this.searchText = this.state.searchText;\n        }\n      }\n\n      if (params.deleted) {\n        this.showVaultFilter = true;\n        this.groupingTitle = this.i18nService.t(\"trash\");\n        this.searchPlaceholder = this.i18nService.t(\"searchTrash\");\n        await this.load(this.buildFilter(), true);\n      } else if (params.type) {\n        this.showVaultFilter = true;\n        this.searchPlaceholder = this.i18nService.t(\"searchType\");\n        this.type = parseInt(params.type, null);\n        switch (this.type) {\n          case CipherType.Login:\n            this.groupingTitle = this.i18nService.t(\"logins\");\n            break;\n          case CipherType.Card:\n            this.groupingTitle = this.i18nService.t(\"cards\");\n            break;\n          case CipherType.Identity:\n            this.groupingTitle = this.i18nService.t(\"identities\");\n            break;\n          case CipherType.SecureNote:\n            this.groupingTitle = this.i18nService.t(\"secureNotes\");\n            break;\n          default:\n            break;\n        }\n        await this.load(this.buildFilter());\n      } else if (params.folderId) {\n        this.showVaultFilter = true;\n        this.folderId = params.folderId === \"none\" ? null : params.folderId;\n        this.searchPlaceholder = this.i18nService.t(\"searchFolder\");\n        if (this.folderId != null) {\n          this.showOrganizations = false;\n          const folderNode = await this.vaultFilterService.getFolderNested(this.folderId);\n          if (folderNode != null && folderNode.node != null) {\n            this.groupingTitle = folderNode.node.name;\n            this.nestedFolders =\n              folderNode.children != null && folderNode.children.length > 0\n                ? folderNode.children\n                : null;\n          }\n        } else {\n          this.noneFolder = true;\n          this.groupingTitle = this.i18nService.t(\"noneFolder\");\n        }\n        await this.load(this.buildFilter());\n      } else if (params.collectionId) {\n        this.showVaultFilter = false;\n        this.collectionId = params.collectionId;\n        this.searchPlaceholder = this.i18nService.t(\"searchCollection\");\n        const collectionNode = await this.collectionService.getNested(this.collectionId);\n        if (collectionNode != null && collectionNode.node != null) {\n          this.groupingTitle = collectionNode.node.name;\n          this.nestedCollections =\n            collectionNode.children != null && collectionNode.children.length > 0\n              ? collectionNode.children\n              : null;\n        }\n        await this.load(\n          (c) => c.collectionIds != null && c.collectionIds.indexOf(this.collectionId) > -1\n        );\n      } else {\n        this.showVaultFilter = true;\n        this.groupingTitle = this.i18nService.t(\"allItems\");\n        await this.load(this.buildFilter());\n      }\n\n      if (this.applySavedState && this.state != null) {\n        window.setTimeout(\n          () =>\n            this.popupUtils.setContentScrollY(window, this.state.scrollY, this.scrollingContainer),\n          0\n        );\n      }\n      await this.stateService.setBrowserCipherComponentState(null);\n    });\n\n    this.broadcasterService.subscribe(ComponentId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (message.successfully) {\n              window.setTimeout(() => {\n                this.refresh();\n              }, 500);\n            }\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.saveState();\n    this.broadcasterService.unsubscribe(ComponentId);\n  }\n\n  selectCipher(cipher: CipherView) {\n    this.selectedTimeout = window.setTimeout(() => {\n      if (!this.preventSelected) {\n        super.selectCipher(cipher);\n        this.router.navigate([\"/view-cipher\"], { queryParams: { cipherId: cipher.id } });\n      }\n      this.preventSelected = false;\n    }, 200);\n  }\n\n  selectFolder(folder: FolderView) {\n    if (folder.id != null) {\n      this.router.navigate([\"/ciphers\"], { queryParams: { folderId: folder.id } });\n    }\n  }\n\n  selectCollection(collection: CollectionView) {\n    this.router.navigate([\"/ciphers\"], { queryParams: { collectionId: collection.id } });\n  }\n\n  async launchCipher(cipher: CipherView) {\n    if (cipher.type !== CipherType.Login || !cipher.login.canLaunch) {\n      return;\n    }\n\n    if (this.selectedTimeout != null) {\n      window.clearTimeout(this.selectedTimeout);\n    }\n    this.preventSelected = true;\n    await this.cipherService.updateLastLaunchedDate(cipher.id);\n    BrowserApi.createNewTab(cipher.login.launchUri);\n    if (this.popupUtils.inPopup(window)) {\n      BrowserApi.closePopup(window);\n    }\n  }\n\n  addCipher() {\n    if (this.deleted) {\n      return false;\n    }\n    super.addCipher();\n    this.router.navigate([\"/add-cipher\"], {\n      queryParams: {\n        folderId: this.folderId,\n        type: this.type,\n        collectionId: this.collectionId,\n        selectedVault: this.vaultFilter.selectedOrganizationId,\n      },\n    });\n  }\n\n  back() {\n    (window as any).routeDirection = \"b\";\n    this.location.back();\n  }\n\n  showGroupings() {\n    return (\n      !this.isSearching() &&\n      ((this.nestedFolders && this.nestedFolders.length) ||\n        (this.nestedCollections && this.nestedCollections.length))\n    );\n  }\n\n  async changeVaultSelection() {\n    this.vaultFilter = this.vaultFilterService.getVaultFilter();\n    await this.load(this.buildFilter(), this.deleted);\n  }\n\n  private buildFilter(): (cipher: CipherView) => boolean {\n    return (cipher) => {\n      let cipherPassesFilter = true;\n      if (this.deleted && cipherPassesFilter) {\n        cipherPassesFilter = cipher.isDeleted;\n      }\n      if (this.type != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.type === this.type;\n      }\n      if (this.folderId != null && this.folderId != \"none\" && cipherPassesFilter) {\n        cipherPassesFilter = cipher.folderId === this.folderId;\n      }\n      if (this.noneFolder) {\n        cipherPassesFilter = cipher.folderId == null;\n      }\n      if (this.collectionId != null && cipherPassesFilter) {\n        cipherPassesFilter =\n          cipher.collectionIds != null && cipher.collectionIds.indexOf(this.collectionId) > -1;\n      }\n      if (this.vaultFilter.selectedOrganizationId != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.organizationId === this.vaultFilter.selectedOrganizationId;\n      }\n      if (this.vaultFilter.myVaultOnly && cipherPassesFilter) {\n        cipherPassesFilter = cipher.organizationId === null;\n      }\n      return cipherPassesFilter;\n    };\n  }\n\n  private async saveState() {\n    this.state = {\n      scrollY: this.popupUtils.getContentScrollY(window, this.scrollingContainer),\n      searchText: this.searchText,\n    };\n    await this.stateService.setBrowserCipherComponentState(this.state);\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Directive()\nexport class CollectionsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Input() allowSelectNone = false;\n  @Output() onSavedCollections = new EventEmitter();\n\n  formPromise: Promise<any>;\n  cipher: CipherView;\n  collectionIds: string[];\n  collections: CollectionView[] = [];\n\n  protected cipherDomain: Cipher;\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    this.cipherDomain = await this.loadCipher();\n    this.collectionIds = this.loadCipherCollections();\n    this.cipher = await this.cipherDomain.decrypt();\n    this.collections = await this.loadCollections();\n\n    this.collections.forEach((c) => ((c as any).checked = false));\n    if (this.collectionIds != null) {\n      this.collections.forEach((c) => {\n        (c as any).checked = this.collectionIds != null && this.collectionIds.indexOf(c.id) > -1;\n      });\n    }\n  }\n\n  async submit() {\n    const selectedCollectionIds = this.collections\n      .filter((c) => !!(c as any).checked)\n      .map((c) => c.id);\n    if (!this.allowSelectNone && selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n    this.cipherDomain.collectionIds = selectedCollectionIds;\n    try {\n      this.formPromise = this.saveCollections();\n      await this.formPromise;\n      this.onSavedCollections.emit();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"editedItem\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected loadCipherCollections() {\n    return this.cipherDomain.collectionIds;\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter(\n      (c) => !c.readOnly && c.organizationId === this.cipher.organizationId\n    );\n  }\n\n  protected saveCollections() {\n    return this.cipherService.saveCollectionsWithServer(this.cipherDomain);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" appBlurClick (click)=\"back()\">\n        <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n        <span>{{ \"back\" | i18n }}</span>\n      </button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"collections\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <div class=\"box-content\" *ngIf=\"!collections || !collections.length\">\n        <div class=\"box-content-row padded no-hover\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n      </div>\n      <div class=\"box-content\" *ngIf=\"collections && collections.length\">\n        <div\n          class=\"box-content-row box-content-row-checkbox\"\n          *ngFor=\"let c of collections; let i = index\"\n          appBoxRow\n        >\n          <label for=\"collection_{{ i }}\">{{ c.name }}</label>\n          <input\n            id=\"collection_{{ i }}\"\n            type=\"checkbox\"\n            [(ngModel)]=\"c.checked\"\n            name=\"Collection[{{ i }}].Checked\"\n          />\n        </div>\n      </div>\n    </div>\n  </main>\n</form>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { CollectionsComponent as BaseCollectionsComponent } from \"@bitwarden/angular/components/collections.component\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-vault-collections\",\n  templateUrl: \"collections.component.html\",\n})\nexport class CollectionsComponent extends BaseCollectionsComponent {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    private route: ActivatedRoute,\n    private location: Location,\n    logService: LogService\n  ) {\n    super(collectionService, platformUtilsService, i18nService, cipherService, logService);\n  }\n\n  async ngOnInit() {\n    this.onSavedCollections.subscribe(() => {\n      this.back();\n    });\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      this.cipherId = params.cipherId;\n      await this.load();\n    });\n  }\n\n  back() {\n    this.location.back();\n  }\n}\n","import AutofillPageDetails from \"../../models/autofillPageDetails\";\n\nexport abstract class AutofillService {\n  getFormsWithPasswordFields: (pageDetails: AutofillPageDetails) => any[];\n  doAutoFill: (options: any) => Promise<string>;\n  doAutoFillActiveTab: (pageDetails: any, fromCommand: boolean) => Promise<string>;\n}\n","<header>\n  <h1 class=\"sr-only\">{{ \"currentTab\" | i18n }}</h1>\n  <div class=\"left\">\n    <app-pop-out *ngIf=\"!inSidebar\"></app-pop-out>\n    <button\n      type=\"button\"\n      appBlurClick\n      (click)=\"refresh()\"\n      appA11yTitle=\"{{ 'refresh' | i18n }}\"\n      *ngIf=\"inSidebar\"\n    >\n      <i class=\"bwi bwi-refresh-tab bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n  <div class=\"search\">\n    <input\n      type=\"{{ searchTypeSearch ? 'search' : 'text' }}\"\n      placeholder=\"{{ 'searchVault' | i18n }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"searchVault()\"\n      autocomplete=\"off\"\n      (keydown)=\"closeOnEsc($event)\"\n    />\n    <i class=\"bwi bwi-search\" aria-hidden=\"true\"></i>\n  </div>\n  <div class=\"right\">\n    <button type=\"button\" appBlurClick (click)=\"addCipher()\" appA11yTitle=\"{{ 'addItem' | i18n }}\">\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"no-items\" *ngIf=\"!loaded\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" aria-hidden=\"true\"></i>\n  </div>\n  <ng-container *ngIf=\"loaded\">\n    <app-vault-select (onVaultSelectionChanged)=\"load()\"></app-vault-select>\n    <div class=\"box list\" *ngIf=\"loginCiphers\">\n      <h2 class=\"box-header\">\n        {{ \"typeLogins\" | i18n }}\n        <span class=\"flex-right\">{{ loginCiphers.length }}</span>\n      </h2>\n      <div class=\"box-content\">\n        <app-cipher-row\n          *ngFor=\"let loginCipher of loginCiphers\"\n          [cipher]=\"loginCipher\"\n          title=\"{{ 'autoFill' | i18n }}\"\n          [showView]=\"true\"\n          (onSelected)=\"fillCipher($event)\"\n          (onView)=\"viewCipher($event)\"\n        >\n        </app-cipher-row>\n        <div class=\"box-content-row padded no-hover\" *ngIf=\"!loginCiphers.length\">\n          <p class=\"text-center\">{{ \"autoFillInfo\" | i18n }}</p>\n          <button type=\"button\" class=\"btn primary link block\" (click)=\"addCipher()\">\n            {{ \"addLogin\" | i18n }}\n          </button>\n        </div>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"cardCiphers && cardCiphers.length\">\n      <h2 class=\"box-header\">\n        {{ \"cards\" | i18n }}\n        <span class=\"flex-right\">{{ cardCiphers.length }}</span>\n      </h2>\n      <div class=\"box-content\">\n        <app-cipher-row\n          *ngFor=\"let cardCipher of cardCiphers\"\n          [cipher]=\"cardCipher\"\n          title=\"{{ 'autoFill' | i18n }}\"\n          [showView]=\"true\"\n          (onSelected)=\"fillCipher($event)\"\n          (onView)=\"viewCipher($event)\"\n        ></app-cipher-row>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"identityCiphers && identityCiphers.length\">\n      <h2 class=\"box-header\">\n        {{ \"identities\" | i18n }}\n        <span class=\"flex-right\">{{ identityCiphers.length }}</span>\n      </h2>\n      <div class=\"box-content\">\n        <app-cipher-row\n          *ngFor=\"let identityCipher of identityCiphers\"\n          [cipher]=\"identityCipher\"\n          title=\"{{ 'autoFill' | i18n }}\"\n          [showView]=\"true\"\n          (onSelected)=\"fillCipher($event)\"\n          (onView)=\"viewCipher($event)\"\n        ></app-cipher-row>\n      </div>\n    </div>\n  </ng-container>\n</main>\n","import { ChangeDetectorRef, Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { AutofillService } from \"../../services/abstractions/autofill.service\";\nimport { VaultFilterService } from \"../../services/vaultFilter.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst BroadcasterSubscriptionId = \"CurrentTabComponent\";\n\n@Component({\n  selector: \"app-current-tab\",\n  templateUrl: \"current-tab.component.html\",\n})\nexport class CurrentTabComponent implements OnInit, OnDestroy {\n  pageDetails: any[] = [];\n  cardCiphers: CipherView[];\n  identityCiphers: CipherView[];\n  loginCiphers: CipherView[];\n  url: string;\n  hostname: string;\n  searchText: string;\n  inSidebar = false;\n  searchTypeSearch = false;\n  loaded = false;\n  showOrganizations = false;\n\n  private totpCode: string;\n  private totpTimeout: number;\n  private loadedTimeout: number;\n  private searchTimeout: number;\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private cipherService: CipherService,\n    private popupUtilsService: PopupUtilsService,\n    private autofillService: AutofillService,\n    private i18nService: I18nService,\n    private router: Router,\n    private ngZone: NgZone,\n    private broadcasterService: BroadcasterService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private syncService: SyncService,\n    private searchService: SearchService,\n    private stateService: StateService,\n    private passwordRepromptService: PasswordRepromptService,\n    private organizationService: OrganizationService,\n    private vaultFilterService: VaultFilterService\n  ) {}\n\n  async ngOnInit() {\n    this.searchTypeSearch = !this.platformUtilsService.isSafari();\n    this.inSidebar = this.popupUtilsService.inSidebar(window);\n\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (this.loaded) {\n              window.setTimeout(() => {\n                this.load();\n              }, 500);\n            }\n            break;\n          case \"collectPageDetailsResponse\":\n            if (message.sender === BroadcasterSubscriptionId) {\n              this.pageDetails.push({\n                frameId: message.webExtSender.frameId,\n                tab: message.tab,\n                details: message.details,\n              });\n            }\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n\n    if (!this.syncService.syncInProgress) {\n      await this.load();\n    } else {\n      this.loadedTimeout = window.setTimeout(async () => {\n        if (!this.loaded) {\n          await this.load();\n        }\n      }, 5000);\n    }\n\n    window.setTimeout(() => {\n      document.getElementById(\"search\").focus();\n    }, 100);\n  }\n\n  ngOnDestroy() {\n    window.clearTimeout(this.loadedTimeout);\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async refresh() {\n    await this.load();\n  }\n\n  addCipher() {\n    this.router.navigate([\"/add-cipher\"], {\n      queryParams: {\n        name: this.hostname,\n        uri: this.url,\n        selectedVault: this.vaultFilterService.getVaultFilter().selectedOrganizationId,\n      },\n    });\n  }\n\n  viewCipher(cipher: CipherView) {\n    this.router.navigate([\"/view-cipher\"], { queryParams: { cipherId: cipher.id } });\n  }\n\n  async fillCipher(cipher: CipherView) {\n    if (\n      cipher.reprompt !== CipherRepromptType.None &&\n      !(await this.passwordRepromptService.showPasswordPrompt())\n    ) {\n      return;\n    }\n\n    this.totpCode = null;\n    if (this.totpTimeout != null) {\n      window.clearTimeout(this.totpTimeout);\n    }\n\n    if (this.pageDetails == null || this.pageDetails.length === 0) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"autofillError\"));\n      return;\n    }\n\n    try {\n      this.totpCode = await this.autofillService.doAutoFill({\n        cipher: cipher,\n        pageDetails: this.pageDetails,\n        doc: window.document,\n        fillNewPassword: true,\n      });\n      if (this.totpCode != null) {\n        this.platformUtilsService.copyToClipboard(this.totpCode, { window: window });\n      }\n      if (this.popupUtilsService.inPopup(window)) {\n        if (this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari()) {\n          BrowserApi.closePopup(window);\n        } else {\n          // Slight delay to fix bug in Chromium browsers where popup closes without copying totp to clipboard\n          setTimeout(() => BrowserApi.closePopup(window), 50);\n        }\n      }\n    } catch {\n      this.ngZone.run(() => {\n        this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"autofillError\"));\n        this.changeDetectorRef.detectChanges();\n      });\n    }\n  }\n\n  searchVault() {\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (!this.searchService.isSearchable(this.searchText)) {\n      return;\n    }\n    this.searchTimeout = window.setTimeout(async () => {\n      this.router.navigate([\"/tabs/vault\"], { queryParams: { searchText: this.searchText } });\n    }, 200);\n  }\n\n  closeOnEsc(e: KeyboardEvent) {\n    // If input not empty, use browser default behavior of clearing input instead\n    if (e.key === \"Escape\" && (this.searchText == null || this.searchText === \"\")) {\n      BrowserApi.closePopup(window);\n    }\n  }\n\n  private async load() {\n    this.loaded = false;\n    const tab = await BrowserApi.getTabFromCurrentWindow();\n    if (tab != null) {\n      this.url = tab.url;\n    } else {\n      this.loginCiphers = [];\n      this.loaded = true;\n      return;\n    }\n\n    this.hostname = Utils.getHostname(this.url);\n    this.pageDetails = [];\n    BrowserApi.tabSendMessage(tab, {\n      command: \"collectPageDetails\",\n      tab: tab,\n      sender: BroadcasterSubscriptionId,\n    });\n\n    const otherTypes: CipherType[] = [];\n    const dontShowCards = await this.stateService.getDontShowCardsCurrentTab();\n    const dontShowIdentities = await this.stateService.getDontShowIdentitiesCurrentTab();\n    this.showOrganizations = await this.organizationService.hasOrganizations();\n    if (!dontShowCards) {\n      otherTypes.push(CipherType.Card);\n    }\n    if (!dontShowIdentities) {\n      otherTypes.push(CipherType.Identity);\n    }\n\n    const ciphers = await this.cipherService.getAllDecryptedForUrl(\n      this.url,\n      otherTypes.length > 0 ? otherTypes : null\n    );\n\n    this.loginCiphers = [];\n    this.cardCiphers = [];\n    this.identityCiphers = [];\n\n    ciphers.forEach((c) => {\n      if (!this.vaultFilterService.filterCipherForSelectedVault(c)) {\n        switch (c.type) {\n          case CipherType.Login:\n            this.loginCiphers.push(c);\n            break;\n          case CipherType.Card:\n            this.cardCiphers.push(c);\n            break;\n          case CipherType.Identity:\n            this.identityCiphers.push(c);\n            break;\n          default:\n            break;\n        }\n      }\n    });\n\n    this.loginCiphers = this.loginCiphers.sort((a, b) =>\n      this.cipherService.sortCiphersByLastUsedThenName(a, b)\n    );\n    this.loaded = true;\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PasswordHistoryView } from \"@bitwarden/common/models/view/passwordHistoryView\";\n\n@Directive()\nexport class PasswordHistoryComponent implements OnInit {\n  cipherId: string;\n  history: PasswordHistoryView[] = [];\n\n  constructor(\n    protected cipherService: CipherService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    private win: Window\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  copy(password: string) {\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(password, copyOptions);\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n\n  protected async init() {\n    const cipher = await this.cipherService.get(this.cipherId);\n    const decCipher = await cipher.decrypt();\n    this.history = decCipher.passwordHistory == null ? [] : decCipher.passwordHistory;\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" appBlurClick (click)=\"close()\">{{ \"close\" | i18n }}</button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"passwordHistory\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"box list full-list\" *ngIf=\"history && history.length\">\n    <div class=\"box-content\">\n      <div class=\"box-content-row box-content-row-flex\" *ngFor=\"let h of history\">\n        <div class=\"row-main\">\n          <div class=\"row-main-content\">\n            <span class=\"text monospaced no-ellipsis\">\n              {{ h.password }}\n            </span>\n            <span class=\"detail\">{{ h.lastUsedDate | date: \"medium\" }}</span>\n          </div>\n        </div>\n        <div class=\"action-buttons\">\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n            (click)=\"copy(h.password)\"\n          >\n            <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"no-items\" *ngIf=\"!history || !history.length\">\n    <p>{{ \"noPasswordsInList\" | i18n }}</p>\n  </div>\n</main>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { PasswordHistoryComponent as BasePasswordHistoryComponent } from \"@bitwarden/angular/components/password-history.component\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-password-history\",\n  templateUrl: \"password-history.component.html\",\n})\nexport class PasswordHistoryComponent extends BasePasswordHistoryComponent {\n  constructor(\n    cipherService: CipherService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    private location: Location,\n    private route: ActivatedRoute\n  ) {\n    super(cipherService, platformUtilsService, i18nService, window);\n  }\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.cipherId) {\n        this.cipherId = params.cipherId;\n      } else {\n        this.close();\n      }\n      await this.init();\n    });\n  }\n\n  close() {\n    this.location.back();\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Directive()\nexport class ShareComponent implements OnInit {\n  @Input() cipherId: string;\n  @Input() organizationId: string;\n  @Output() onSharedCipher = new EventEmitter();\n\n  formPromise: Promise<any>;\n  cipher: CipherView;\n  collections: CollectionView[] = [];\n  organizations: Organization[] = [];\n\n  protected writeableCollections: CollectionView[] = [];\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService,\n    protected organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    this.writeableCollections = allCollections.map((c) => c).filter((c) => !c.readOnly);\n    const orgs = await this.organizationService.getAll();\n    this.organizations = orgs\n      .sort(Utils.getSortFunction(this.i18nService, \"name\"))\n      .filter((o) => o.enabled && o.status === OrganizationUserStatusType.Confirmed);\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    this.cipher = await cipherDomain.decrypt();\n    if (this.organizationId == null && this.organizations.length > 0) {\n      this.organizationId = this.organizations[0].id;\n    }\n    this.filterCollections();\n  }\n\n  filterCollections() {\n    this.writeableCollections.forEach((c) => ((c as any).checked = false));\n    if (this.organizationId == null || this.writeableCollections.length === 0) {\n      this.collections = [];\n    } else {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.organizationId\n      );\n    }\n  }\n\n  async submit(): Promise<boolean> {\n    const selectedCollectionIds = this.collections\n      .filter((c) => !!(c as any).checked)\n      .map((c) => c.id);\n    if (selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    const cipherView = await cipherDomain.decrypt();\n    const orgName =\n      this.organizations.find((o) => o.id === this.organizationId)?.name ??\n      this.i18nService.t(\"organization\");\n\n    try {\n      this.formPromise = this.cipherService\n        .shareWithServer(cipherView, this.organizationId, selectedCollectionIds)\n        .then(async () => {\n          this.onSharedCipher.emit();\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"movedItemToOrg\", cipherView.name, orgName)\n          );\n        });\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  get canSave() {\n    if (this.collections != null) {\n      for (let i = 0; i < this.collections.length; i++) {\n        if ((this.collections[i] as any).checked) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" appBlurClick (click)=\"cancel()\">{{ \"cancel\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"moveToOrganization\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button\n        type=\"submit\"\n        appBlurClick\n        [disabled]=\"form.loading || !canSave\"\n        *ngIf=\"organizations && organizations.length\"\n      >\n        <span [hidden]=\"form.loading\">{{ \"move\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <div class=\"box-content\" *ngIf=\"!organizations || !organizations.length\">\n        <div class=\"box-content-row padded no-hover\">\n          {{ \"noOrganizationsList\" | i18n }}\n        </div>\n      </div>\n      <div class=\"box-content\" *ngIf=\"organizations && organizations.length\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"organization\">{{ \"organization\" | i18n }}</label>\n          <select\n            id=\"organization\"\n            name=\"OrganizationId\"\n            [(ngModel)]=\"organizationId\"\n            (change)=\"filterCollections()\"\n          >\n            <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{ o.name }}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"moveToOrgDesc\" | i18n }}\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"organizations && organizations.length\">\n      <h2 class=\"box-header\">\n        {{ \"collections\" | i18n }}\n      </h2>\n      <div class=\"box-content\" *ngIf=\"!collections || !collections.length\">\n        <div class=\"box-content-row padded no-hover\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n      </div>\n      <div class=\"box-content\" *ngIf=\"collections && collections.length\">\n        <div\n          class=\"box-content-row box-content-row-checkbox\"\n          *ngFor=\"let c of collections; let i = index\"\n          appBoxRow\n        >\n          <label for=\"collection_{{ i }}\">{{ c.name }}</label>\n          <input\n            id=\"collection_{{ i }}\"\n            type=\"checkbox\"\n            [(ngModel)]=\"c.checked\"\n            name=\"Collection[{{ i }}].Checked\"\n          />\n        </div>\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ShareComponent as BaseShareComponent } from \"@bitwarden/angular/components/share.component\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-vault-share\",\n  templateUrl: \"share.component.html\",\n})\nexport class ShareComponent extends BaseShareComponent {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    logService: LogService,\n    cipherService: CipherService,\n    private route: ActivatedRoute,\n    private router: Router,\n    organizationService: OrganizationService\n  ) {\n    super(\n      collectionService,\n      platformUtilsService,\n      i18nService,\n      cipherService,\n      logService,\n      organizationService\n    );\n  }\n\n  async ngOnInit() {\n    this.onSharedCipher.subscribe(() => {\n      this.router.navigate([\"view-cipher\", { cipherId: this.cipherId }]);\n    });\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      this.cipherId = params.cipherId;\n      await this.load();\n    });\n  }\n\n  async submit(): Promise<boolean> {\n    const success = await super.submit();\n    if (success) {\n      this.cancel();\n    }\n    return success;\n  }\n\n  cancel() {\n    this.router.navigate([\"/view-cipher\"], {\n      replaceUrl: true,\n      queryParams: { cipherId: this.cipher.id },\n    });\n  }\n}\n","<header>\n  <div class=\"left\">\n    <app-pop-out></app-pop-out>\n  </div>\n  <h1 class=\"sr-only\">{{ \"myVault\" | i18n }}</h1>\n  <div class=\"search\">\n    <input\n      type=\"{{ searchTypeSearch ? 'search' : 'text' }}\"\n      placeholder=\"{{ 'searchVault' | i18n }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"search(200)\"\n      autocomplete=\"off\"\n      appAutofocus\n      (keydown)=\"closeOnEsc($event)\"\n    />\n    <i class=\"bwi bwi-search\"></i>\n  </div>\n  <div class=\"right\">\n    <button type=\"button\" appBlurClick (click)=\"addCipher()\" appA11yTitle=\"{{ 'addItem' | i18n }}\">\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\" cdk-scrollable>\n  <app-vault-select (onVaultSelectionChanged)=\"vaultFilterChanged()\"></app-vault-select>\n  <div class=\"no-items\" *ngIf=\"(!ciphers || !ciphers.length) && !showSearching()\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" *ngIf=\"!loaded\"></i>\n    <ng-container *ngIf=\"loaded\">\n      <img class=\"no-items-image\" aria-hidden=\"true\" />\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n      <button type=\"button\" (click)=\"addCipher()\" class=\"btn block primary link\">\n        {{ \"addItem\" | i18n }}\n      </button>\n    </ng-container>\n  </div>\n  <ng-container *ngIf=\"ciphers && ciphers.length && !showSearching()\">\n    <div class=\"box list\" *ngIf=\"favoriteCiphers\">\n      <h2 class=\"box-header\">\n        {{ \"favorites\" | i18n }}\n        <span class=\"flex-right\">{{ favoriteCiphers.length }}</span>\n      </h2>\n      <div class=\"box-content\">\n        <app-cipher-row\n          *ngFor=\"let favoriteCipher of favoriteCiphers\"\n          [cipher]=\"favoriteCipher\"\n          title=\"{{ 'viewItem' | i18n }}\"\n          (onSelected)=\"selectCipher($event)\"\n          (launchEvent)=\"launchCipher($event)\"\n        >\n        </app-cipher-row>\n      </div>\n    </div>\n    <div class=\"box list\">\n      <h2 class=\"box-header\">\n        {{ \"types\" | i18n }}\n        <span class=\"flex-right\">4</span>\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectType(cipherType.Login)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-globe\"></i></div>\n            <span class=\"text\">{{ \"typeLogin\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(cipherType.Login) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectType(cipherType.Card)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-credit-card\"></i></div>\n            <span class=\"text\">{{ \"typeCard\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(cipherType.Card) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectType(cipherType.Identity)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-id-card\"></i></div>\n            <span class=\"text\">{{ \"typeIdentity\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(cipherType.Identity) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectType(cipherType.SecureNote)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-sticky-note\"></i></div>\n            <span class=\"text\">{{ \"typeSecureNote\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(cipherType.SecureNote) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"nestedFolders?.length\">\n      <h2 class=\"box-header\">\n        {{ \"folders\" | i18n }}\n        <span class=\"flex-right\">{{ folderCount }}</span>\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          *ngFor=\"let f of nestedFolders\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectFolder(f.node)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\">\n              <i class=\"bwi bwi-fw bwi-lg bwi-folder\"></i>\n            </div>\n            <span class=\"text\">{{ f.node.name }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ folderCounts.get(f.node.id) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"showCollections && nestedCollections && nestedCollections.length\">\n      <h2 class=\"box-header\">\n        {{ \"collections\" | i18n }}\n        <span class=\"flex-right\">{{ nestedCollections.length }}</span>\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          *ngFor=\"let nestedCollection of nestedCollections\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectCollection(nestedCollection.node)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-collection\"></i></div>\n            <span class=\"text\">{{ nestedCollection.node.name }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{\n            collectionCounts.get(nestedCollection.node.id) || 0\n          }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"showNoFolderCiphers\">\n      <h2 class=\"box-header\">\n        {{ \"noneFolder\" | i18n }}\n        <div class=\"flex-right\">{{ noFolderCiphers.length }}</div>\n      </h2>\n      <div class=\"box-content\">\n        <app-cipher-row\n          *ngFor=\"let noFolderCipher of noFolderCiphers\"\n          [cipher]=\"noFolderCipher\"\n          title=\"{{ 'viewItem' | i18n }}\"\n          (onSelected)=\"selectCipher($event)\"\n          (launchEvent)=\"launchCipher($event)\"\n        >\n        </app-cipher-row>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"deletedCount\">\n      <h2 class=\"box-header\">\n        {{ \"trash\" | i18n }}\n        <span class=\"flex-right\">{{ deletedCount }}</span>\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectTrash()\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-trash\"></i></div>\n            <span class=\"text\">{{ \"trash\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ deletedCount }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"showSearching()\">\n    <div class=\"no-items\" *ngIf=\"!ciphers || !ciphers.length\">\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n    </div>\n    <cdk-virtual-scroll-viewport\n      itemSize=\"46\"\n      minBufferPx=\"400\"\n      maxBufferPx=\"600\"\n      *ngIf=\"ciphers && ciphers.length > 0\"\n    >\n      <div class=\"box list full-list\">\n        <div class=\"box-content\">\n          <app-cipher-row\n            *cdkVirtualFor=\"let searchedCipher of ciphers\"\n            [cipher]=\"searchedCipher\"\n            title=\"{{ 'viewItem' | i18n }}\"\n            (onSelected)=\"selectCipher($event)\"\n            (launchEvent)=\"launchCipher($event)\"\n          >\n          </app-cipher-row>\n        </div>\n      </div>\n    </cdk-virtual-scroll-viewport>\n  </ng-container>\n</main>\n","import { Location } from \"@angular/common\";\nimport { ChangeDetectorRef, Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { firstValueFrom } from \"rxjs\";\nimport { first } from \"rxjs/operators\";\n\nimport { VaultFilter } from \"@bitwarden/angular/modules/vault-filter/models/vault-filter.model\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/treeNode\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\nimport { BrowserGroupingsComponentState } from \"src/models/browserGroupingsComponentState\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { StateService } from \"../../services/abstractions/state.service\";\nimport { VaultFilterService } from \"../../services/vaultFilter.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst ComponentId = \"VaultComponent\";\n\n@Component({\n  selector: \"app-vault-filter\",\n  templateUrl: \"vault-filter.component.html\",\n})\nexport class VaultFilterComponent implements OnInit, OnDestroy {\n  get showNoFolderCiphers(): boolean {\n    return (\n      this.noFolderCiphers != null &&\n      this.noFolderCiphers.length < this.noFolderListSize &&\n      this.collections.length === 0\n    );\n  }\n\n  get folderCount(): number {\n    return this.nestedFolders.length - (this.showNoFolderCiphers ? 0 : 1);\n  }\n  folders: FolderView[];\n  nestedFolders: TreeNode<FolderView>[];\n  collections: CollectionView[];\n  nestedCollections: TreeNode<CollectionView>[];\n  loaded = false;\n  cipherType = CipherType;\n  ciphers: CipherView[];\n  favoriteCiphers: CipherView[];\n  noFolderCiphers: CipherView[];\n  folderCounts = new Map<string, number>();\n  collectionCounts = new Map<string, number>();\n  typeCounts = new Map<CipherType, number>();\n  searchText: string;\n  state: BrowserGroupingsComponentState;\n  showLeftHeader = true;\n  searchPending = false;\n  searchTypeSearch = false;\n  deletedCount = 0;\n  vaultFilter: VaultFilter;\n  selectedOrganization: string = null;\n  showCollections = true;\n\n  private loadedTimeout: number;\n  private selectedTimeout: number;\n  private preventSelected = false;\n  private noFolderListSize = 100;\n  private searchTimeout: any = null;\n  private hasSearched = false;\n  private hasLoadedAllCiphers = false;\n  private allCiphers: CipherView[] = null;\n\n  constructor(\n    private cipherService: CipherService,\n    private router: Router,\n    private ngZone: NgZone,\n    private broadcasterService: BroadcasterService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private route: ActivatedRoute,\n    private popupUtils: PopupUtilsService,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private searchService: SearchService,\n    private location: Location,\n    private browserStateService: StateService,\n    private vaultFilterService: VaultFilterService\n  ) {\n    this.noFolderListSize = 100;\n  }\n\n  async ngOnInit() {\n    this.searchTypeSearch = !this.platformUtilsService.isSafari();\n    this.showLeftHeader = !(\n      this.popupUtils.inSidebar(window) && this.platformUtilsService.isFirefox()\n    );\n    await this.browserStateService.setBrowserCipherComponentState(null);\n\n    this.broadcasterService.subscribe(ComponentId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            window.setTimeout(() => {\n              this.load();\n            }, 500);\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n\n    const restoredScopeState = await this.restoreState();\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      this.state = await this.browserStateService.getBrowserGroupingComponentState();\n      if (this.state?.searchText) {\n        this.searchText = this.state.searchText;\n      } else if (params.searchText) {\n        this.searchText = params.searchText;\n        this.location.replaceState(\"vault\");\n      }\n\n      if (!this.syncService.syncInProgress) {\n        this.load();\n      } else {\n        this.loadedTimeout = window.setTimeout(() => {\n          if (!this.loaded) {\n            this.load();\n          }\n        }, 5000);\n      }\n\n      if (!this.syncService.syncInProgress || restoredScopeState) {\n        window.setTimeout(() => this.popupUtils.setContentScrollY(window, this.state?.scrollY), 0);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.loadedTimeout != null) {\n      window.clearTimeout(this.loadedTimeout);\n    }\n    if (this.selectedTimeout != null) {\n      window.clearTimeout(this.selectedTimeout);\n    }\n    this.saveState();\n    this.broadcasterService.unsubscribe(ComponentId);\n  }\n\n  async load() {\n    this.vaultFilter = this.vaultFilterService.getVaultFilter();\n\n    this.updateSelectedOrg();\n    await this.loadCollectionsAndFolders();\n    await this.loadCiphers();\n\n    if (this.showNoFolderCiphers && this.nestedFolders.length > 0) {\n      // Remove \"No Folder\" from folder listing\n      this.nestedFolders = this.nestedFolders.slice(0, this.nestedFolders.length - 1);\n    }\n\n    this.loaded = true;\n  }\n\n  async loadCiphers() {\n    this.allCiphers = await this.cipherService.getAllDecrypted();\n    if (!this.hasLoadedAllCiphers) {\n      this.hasLoadedAllCiphers = !this.searchService.isSearchable(this.searchText);\n    }\n    await this.search(null);\n    this.getCounts();\n  }\n\n  async loadCollections() {\n    const allCollections = await this.vaultFilterService.buildCollections(\n      this.selectedOrganization\n    );\n    this.collections = allCollections.fullList;\n    this.nestedCollections = allCollections.nestedList;\n  }\n\n  async loadFolders() {\n    const allFolders = await firstValueFrom(\n      this.vaultFilterService.buildNestedFolders(this.selectedOrganization)\n    );\n    this.folders = allFolders.fullList;\n    this.nestedFolders = allFolders.nestedList;\n  }\n\n  async search(timeout: number = null) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    const filterDeleted = (c: CipherView) => !c.isDeleted;\n    if (timeout == null) {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.ciphers = await this.searchService.searchCiphers(\n        this.searchText,\n        filterDeleted,\n        this.allCiphers\n      );\n      this.ciphers = this.ciphers.filter(\n        (c) => !this.vaultFilterService.filterCipherForSelectedVault(c)\n      );\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      if (!this.hasLoadedAllCiphers && !this.hasSearched) {\n        await this.loadCiphers();\n      } else {\n        this.ciphers = await this.searchService.searchCiphers(\n          this.searchText,\n          filterDeleted,\n          this.allCiphers\n        );\n      }\n      this.ciphers = this.ciphers.filter(\n        (c) => !this.vaultFilterService.filterCipherForSelectedVault(c)\n      );\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  async selectType(type: CipherType) {\n    this.router.navigate([\"/ciphers\"], { queryParams: { type: type } });\n  }\n\n  async selectFolder(folder: FolderView) {\n    this.router.navigate([\"/ciphers\"], { queryParams: { folderId: folder.id || \"none\" } });\n  }\n\n  async selectCollection(collection: CollectionView) {\n    this.router.navigate([\"/ciphers\"], { queryParams: { collectionId: collection.id } });\n  }\n\n  async selectTrash() {\n    this.router.navigate([\"/ciphers\"], { queryParams: { deleted: true } });\n  }\n\n  async selectCipher(cipher: CipherView) {\n    this.selectedTimeout = window.setTimeout(() => {\n      if (!this.preventSelected) {\n        this.router.navigate([\"/view-cipher\"], { queryParams: { cipherId: cipher.id } });\n      }\n      this.preventSelected = false;\n    }, 200);\n  }\n\n  async launchCipher(cipher: CipherView) {\n    if (cipher.type !== CipherType.Login || !cipher.login.canLaunch) {\n      return;\n    }\n\n    if (this.selectedTimeout != null) {\n      window.clearTimeout(this.selectedTimeout);\n    }\n    this.preventSelected = true;\n    await this.cipherService.updateLastLaunchedDate(cipher.id);\n    BrowserApi.createNewTab(cipher.login.launchUri);\n    if (this.popupUtils.inPopup(window)) {\n      BrowserApi.closePopup(window);\n    }\n  }\n\n  async addCipher() {\n    this.router.navigate([\"/add-cipher\"], {\n      queryParams: { selectedVault: this.vaultFilter.selectedOrganizationId },\n    });\n  }\n\n  async vaultFilterChanged() {\n    if (this.showSearching) {\n      await this.search();\n    }\n    this.updateSelectedOrg();\n    await this.loadCollectionsAndFolders();\n    this.getCounts();\n  }\n\n  updateSelectedOrg() {\n    this.vaultFilter = this.vaultFilterService.getVaultFilter();\n    if (this.vaultFilter.selectedOrganizationId != null) {\n      this.selectedOrganization = this.vaultFilter.selectedOrganizationId;\n    } else {\n      this.selectedOrganization = null;\n    }\n  }\n\n  getCounts() {\n    let favoriteCiphers: CipherView[] = null;\n    let noFolderCiphers: CipherView[] = null;\n    const folderCounts = new Map<string, number>();\n    const collectionCounts = new Map<string, number>();\n    const typeCounts = new Map<CipherType, number>();\n\n    this.deletedCount = this.allCiphers.filter(\n      (c) => c.isDeleted && !this.vaultFilterService.filterCipherForSelectedVault(c)\n    ).length;\n\n    this.ciphers?.forEach((c) => {\n      if (!this.vaultFilterService.filterCipherForSelectedVault(c)) {\n        if (c.isDeleted) {\n          return;\n        }\n        if (c.favorite) {\n          if (favoriteCiphers == null) {\n            favoriteCiphers = [];\n          }\n          favoriteCiphers.push(c);\n        }\n\n        if (c.folderId == null) {\n          if (noFolderCiphers == null) {\n            noFolderCiphers = [];\n          }\n          noFolderCiphers.push(c);\n        }\n\n        if (typeCounts.has(c.type)) {\n          typeCounts.set(c.type, typeCounts.get(c.type) + 1);\n        } else {\n          typeCounts.set(c.type, 1);\n        }\n\n        if (folderCounts.has(c.folderId)) {\n          folderCounts.set(c.folderId, folderCounts.get(c.folderId) + 1);\n        } else {\n          folderCounts.set(c.folderId, 1);\n        }\n\n        if (c.collectionIds != null) {\n          c.collectionIds.forEach((colId) => {\n            if (collectionCounts.has(colId)) {\n              collectionCounts.set(colId, collectionCounts.get(colId) + 1);\n            } else {\n              collectionCounts.set(colId, 1);\n            }\n          });\n        }\n      }\n    });\n\n    this.favoriteCiphers = favoriteCiphers;\n    this.noFolderCiphers = noFolderCiphers;\n    this.typeCounts = typeCounts;\n    this.folderCounts = folderCounts;\n    this.collectionCounts = collectionCounts;\n  }\n\n  showSearching() {\n    return (\n      this.hasSearched || (!this.searchPending && this.searchService.isSearchable(this.searchText))\n    );\n  }\n\n  closeOnEsc(e: KeyboardEvent) {\n    // If input not empty, use browser default behavior of clearing input instead\n    if (e.key === \"Escape\" && (this.searchText == null || this.searchText === \"\")) {\n      BrowserApi.closePopup(window);\n    }\n  }\n\n  private async loadCollectionsAndFolders() {\n    this.showCollections = !this.vaultFilter.myVaultOnly;\n    await this.loadFolders();\n    await this.loadCollections();\n  }\n\n  private async saveState() {\n    this.state = {\n      scrollY: this.popupUtils.getContentScrollY(window),\n      searchText: this.searchText,\n      favoriteCiphers: this.favoriteCiphers,\n      noFolderCiphers: this.noFolderCiphers,\n      ciphers: this.ciphers,\n      collectionCounts: this.collectionCounts,\n      folderCounts: this.folderCounts,\n      typeCounts: this.typeCounts,\n      folders: this.folders,\n      collections: this.collections,\n      deletedCount: this.deletedCount,\n    };\n    await this.browserStateService.setBrowserGroupingComponentState(this.state);\n  }\n\n  private async restoreState(): Promise<boolean> {\n    this.state = await this.browserStateService.getBrowserGroupingComponentState();\n    if (this.state == null) {\n      return false;\n    }\n\n    if (this.state.favoriteCiphers != null) {\n      this.favoriteCiphers = this.state.favoriteCiphers;\n    }\n    if (this.state.noFolderCiphers != null) {\n      this.noFolderCiphers = this.state.noFolderCiphers;\n    }\n    if (this.state.ciphers != null) {\n      this.ciphers = this.state.ciphers;\n    }\n    if (this.state.collectionCounts != null) {\n      this.collectionCounts = this.state.collectionCounts;\n    }\n    if (this.state.folderCounts != null) {\n      this.folderCounts = this.state.folderCounts;\n    }\n    if (this.state.typeCounts != null) {\n      this.typeCounts = this.state.typeCounts;\n    }\n    if (this.state.folders != null) {\n      this.folders = this.state.folders;\n    }\n    if (this.state.collections != null) {\n      this.collections = this.state.collections;\n    }\n    if (this.state.deletedCount != null) {\n      this.deletedCount = this.state.deletedCount;\n    }\n\n    return true;\n  }\n}\n","import { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport abstract class TokenService {\n  setTokens: (\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ) => Promise<any>;\n  setToken: (token: string) => Promise<any>;\n  getToken: () => Promise<string>;\n  setRefreshToken: (refreshToken: string) => Promise<any>;\n  getRefreshToken: () => Promise<string>;\n  setClientId: (clientId: string) => Promise<any>;\n  getClientId: () => Promise<string>;\n  setClientSecret: (clientSecret: string) => Promise<any>;\n  getClientSecret: () => Promise<string>;\n  setTwoFactorToken: (tokenResponse: IdentityTokenResponse) => Promise<any>;\n  getTwoFactorToken: () => Promise<string>;\n  clearTwoFactorToken: () => Promise<any>;\n  clearToken: (userId?: string) => Promise<any>;\n  decodeToken: (token?: string) => any;\n  getTokenExpirationDate: () => Promise<Date>;\n  tokenSecondsRemaining: (offsetSeconds?: number) => Promise<number>;\n  tokenNeedsRefresh: (minutes?: number) => Promise<boolean>;\n  getUserId: () => Promise<string>;\n  getEmail: () => Promise<string>;\n  getEmailVerified: () => Promise<boolean>;\n  getName: () => Promise<string>;\n  getIssuer: () => Promise<string>;\n  getIsExternal: () => Promise<boolean>;\n}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n} from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { FieldType } from \"@bitwarden/common/enums/fieldType\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/errorResponse\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachmentView\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { LoginUriView } from \"@bitwarden/common/models/view/loginUriView\";\n\nconst BroadcasterSubscriptionId = \"ViewComponent\";\n\n@Directive()\nexport class ViewComponent implements OnDestroy, OnInit {\n  @Input() cipherId: string;\n  @Output() onEditCipher = new EventEmitter<CipherView>();\n  @Output() onCloneCipher = new EventEmitter<CipherView>();\n  @Output() onShareCipher = new EventEmitter<CipherView>();\n  @Output() onDeletedCipher = new EventEmitter<CipherView>();\n  @Output() onRestoredCipher = new EventEmitter<CipherView>();\n\n  cipher: CipherView;\n  showPassword: boolean;\n  showPasswordCount: boolean;\n  showCardNumber: boolean;\n  showCardCode: boolean;\n  canAccessPremium: boolean;\n  totpCode: string;\n  totpCodeFormatted: string;\n  totpDash: number;\n  totpSec: number;\n  totpLow: boolean;\n  fieldType = FieldType;\n  checkPasswordPromise: Promise<number>;\n\n  private totpInterval: any;\n  private previousCipherId: string;\n  private passwordReprompted = false;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected totpService: TotpService,\n    protected tokenService: TokenService,\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected auditService: AuditService,\n    protected win: Window,\n    protected broadcasterService: BroadcasterService,\n    protected ngZone: NgZone,\n    protected changeDetectorRef: ChangeDetectorRef,\n    protected eventService: EventService,\n    protected apiService: ApiService,\n    protected passwordRepromptService: PasswordRepromptService,\n    private logService: LogService,\n    protected stateService: StateService,\n    protected fileDownloadService: FileDownloadService\n  ) {}\n\n  ngOnInit() {\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (message.successfully) {\n              await this.load();\n              this.changeDetectorRef.detectChanges();\n            }\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    this.cleanUp();\n  }\n\n  async load() {\n    this.cleanUp();\n\n    const cipher = await this.cipherService.get(this.cipherId);\n    this.cipher = await cipher.decrypt();\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n\n    if (\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.totp &&\n      (cipher.organizationUseTotp || this.canAccessPremium)\n    ) {\n      await this.totpUpdateCode();\n      const interval = this.totpService.getTimeInterval(this.cipher.login.totp);\n      await this.totpTick(interval);\n\n      this.totpInterval = setInterval(async () => {\n        await this.totpTick(interval);\n      }, 1000);\n    }\n\n    if (this.previousCipherId !== this.cipherId) {\n      this.eventService.collect(EventType.Cipher_ClientViewed, this.cipherId);\n    }\n    this.previousCipherId = this.cipherId;\n  }\n\n  async edit() {\n    if (await this.promptPassword()) {\n      this.onEditCipher.emit(this.cipher);\n      return true;\n    }\n\n    return false;\n  }\n\n  async clone() {\n    if (await this.promptPassword()) {\n      this.onCloneCipher.emit(this.cipher);\n      return true;\n    }\n\n    return false;\n  }\n\n  async share() {\n    if (await this.promptPassword()) {\n      this.onShareCipher.emit(this.cipher);\n      return true;\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        this.cipher.isDeleted ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(\"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.deleteCipher();\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.cipher.isDeleted ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.onDeletedCipher.emit(this.cipher);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async restore(): Promise<boolean> {\n    if (!this.cipher.isDeleted) {\n      return false;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.restoreCipher();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.onRestoredCipher.emit(this.cipher);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async togglePassword() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    this.showPassword = !this.showPassword;\n    this.showPasswordCount = false;\n    if (this.showPassword) {\n      this.eventService.collect(EventType.Cipher_ClientToggledPasswordVisible, this.cipherId);\n    }\n  }\n\n  async togglePasswordCount() {\n    if (!this.showPassword) {\n      return;\n    }\n\n    this.showPasswordCount = !this.showPasswordCount;\n  }\n\n  async toggleCardNumber() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    this.showCardNumber = !this.showCardNumber;\n    if (this.showCardNumber) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardCodeVisible, this.cipherId);\n    }\n  }\n\n  async toggleCardCode() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    this.showCardCode = !this.showCardCode;\n    if (this.showCardCode) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardCodeVisible, this.cipherId);\n    }\n  }\n\n  async checkPassword() {\n    if (\n      this.cipher.login == null ||\n      this.cipher.login.password == null ||\n      this.cipher.login.password === \"\"\n    ) {\n      return;\n    }\n\n    this.checkPasswordPromise = this.auditService.passwordLeaked(this.cipher.login.password);\n    const matches = await this.checkPasswordPromise;\n\n    if (matches > 0) {\n      this.platformUtilsService.showToast(\n        \"warning\",\n        null,\n        this.i18nService.t(\"passwordExposed\", matches.toString())\n      );\n    } else {\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"passwordSafe\"));\n    }\n  }\n\n  launch(uri: LoginUriView, cipherId?: string) {\n    if (!uri.canLaunch) {\n      return;\n    }\n\n    if (cipherId) {\n      this.cipherService.updateLastLaunchedDate(cipherId);\n    }\n\n    this.platformUtilsService.launchUri(uri.launchUri);\n  }\n\n  async copy(value: string, typeI18nKey: string, aType: string) {\n    if (value == null) {\n      return;\n    }\n\n    if (\n      this.passwordRepromptService.protectedFields().includes(aType) &&\n      !(await this.promptPassword())\n    ) {\n      return;\n    }\n\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(value, copyOptions);\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (typeI18nKey === \"password\") {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipherId);\n    } else if (typeI18nKey === \"securityCode\") {\n      this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, this.cipherId);\n    } else if (aType === \"H_Field\") {\n      this.eventService.collect(EventType.Cipher_ClientCopiedHiddenField, this.cipherId);\n    }\n  }\n\n  setTextDataOnDrag(event: DragEvent, data: string) {\n    event.dataTransfer.setData(\"text\", data);\n  }\n\n  async downloadAttachment(attachment: AttachmentView) {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n    const a = attachment as any;\n    if (a.downloading) {\n      return;\n    }\n\n    if (this.cipher.organizationId == null && !this.canAccessPremium) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"premiumRequiredDesc\")\n      );\n      return;\n    }\n\n    let url: string;\n    try {\n      const attachmentDownloadResponse = await this.apiService.getAttachmentData(\n        this.cipher.id,\n        attachment.id\n      );\n      url = attachmentDownloadResponse.url;\n    } catch (e) {\n      if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n        url = attachment.url;\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    a.downloading = true;\n    const response = await fetch(new Request(url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      a.downloading = false;\n      return;\n    }\n\n    try {\n      const buf = await response.arrayBuffer();\n      const key =\n        attachment.key != null\n          ? attachment.key\n          : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n      const decBuf = await this.cryptoService.decryptFromBytes(buf, key);\n      this.fileDownloadService.download({\n        fileName: attachment.fileName,\n        blobData: decBuf,\n      });\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    a.downloading = false;\n  }\n\n  protected deleteCipher() {\n    return this.cipher.isDeleted\n      ? this.cipherService.deleteWithServer(this.cipher.id)\n      : this.cipherService.softDeleteWithServer(this.cipher.id);\n  }\n\n  protected restoreCipher() {\n    return this.cipherService.restoreWithServer(this.cipher.id);\n  }\n\n  protected async promptPassword() {\n    if (this.cipher.reprompt === CipherRepromptType.None || this.passwordReprompted) {\n      return true;\n    }\n\n    return (this.passwordReprompted = await this.passwordRepromptService.showPasswordPrompt());\n  }\n\n  private cleanUp() {\n    this.totpCode = null;\n    this.cipher = null;\n    this.showPassword = false;\n    this.showCardNumber = false;\n    this.showCardCode = false;\n    this.passwordReprompted = false;\n    if (this.totpInterval) {\n      clearInterval(this.totpInterval);\n    }\n  }\n\n  private async totpUpdateCode() {\n    if (\n      this.cipher == null ||\n      this.cipher.type !== CipherType.Login ||\n      this.cipher.login.totp == null\n    ) {\n      if (this.totpInterval) {\n        clearInterval(this.totpInterval);\n      }\n      return;\n    }\n\n    this.totpCode = await this.totpService.getCode(this.cipher.login.totp);\n    if (this.totpCode != null) {\n      if (this.totpCode.length > 4) {\n        const half = Math.floor(this.totpCode.length / 2);\n        this.totpCodeFormatted =\n          this.totpCode.substring(0, half) + \" \" + this.totpCode.substring(half);\n      } else {\n        this.totpCodeFormatted = this.totpCode;\n      }\n    } else {\n      this.totpCodeFormatted = null;\n      if (this.totpInterval) {\n        clearInterval(this.totpInterval);\n      }\n    }\n  }\n\n  private async totpTick(intervalSeconds: number) {\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const mod = epoch % intervalSeconds;\n\n    this.totpSec = intervalSeconds - mod;\n    this.totpDash = +(Math.round(((78.6 / intervalSeconds) * mod + \"e+2\") as any) + \"e-2\");\n    this.totpLow = this.totpSec <= 7;\n    if (mod === 0) {\n      await this.totpUpdateCode();\n    }\n  }\n}\n","import { Directive, Input } from \"@angular/core\";\n\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { FieldType } from \"@bitwarden/common/enums/fieldType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { FieldView } from \"@bitwarden/common/models/view/fieldView\";\n\n@Directive()\nexport class ViewCustomFieldsComponent {\n  @Input() cipher: CipherView;\n  @Input() promptPassword: () => Promise<boolean>;\n  @Input() copy: (value: string, typeI18nKey: string, aType: string) => void;\n\n  fieldType = FieldType;\n\n  constructor(private eventService: EventService) {}\n\n  async toggleFieldValue(field: FieldView) {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const f = field as any;\n    f.showValue = !f.showValue;\n    f.showCount = false;\n    if (f.showValue) {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipher.id);\n    }\n  }\n\n  async toggleFieldCount(field: FieldView) {\n    if (!field.showValue) {\n      return;\n    }\n\n    field.showCount = !field.showCount;\n  }\n}\n","import { Pipe } from \"@angular/core\";\n\nimport { ColorPasswordPipe } from \"./color-password.pipe\";\n\n/*\n An updated pipe that extends ColourPasswordPipe to include a character count\n*/\n@Pipe({ name: \"colorPasswordCount\" })\nexport class ColorPasswordCountPipe extends ColorPasswordPipe {\n  transform(password: string) {\n    const template = (character: string, type: string, index: number) =>\n      `<span class=\"password-character password-${type}\">\n                ${character}<span class=\"password-count\">${index + 1}</span>\n            </span>`;\n    const colorizedPasswordCount = this.generateTemplate(password, template);\n\n    return colorizedPasswordCount;\n  }\n}\n","<ng-container>\n  <h2 class=\"box-header\">\n    {{ \"customFields\" | i18n }}\n  </h2>\n  <div class=\"box-content\">\n    <div class=\"box-content-row box-content-row-flex\" *ngFor=\"let field of cipher.fields\">\n      <div class=\"row-main\">\n        <span class=\"row-label\">{{ field.name }}</span>\n        <div *ngIf=\"field.type === fieldType.Text\">\n          {{ field.value || \"&nbsp;\" }}\n        </div>\n        <div *ngIf=\"field.type === fieldType.Hidden\">\n          <span *ngIf=\"!field.showValue\" class=\"monospaced\">{{ field.maskedValue }}</span>\n          <span\n            *ngIf=\"field.showValue && !field.showCount\"\n            class=\"monospaced show-whitespace\"\n            [innerHTML]=\"field.value | colorPassword\"\n          ></span>\n          <span\n            *ngIf=\"field.showValue && field.showCount\"\n            [innerHTML]=\"field.value | colorPasswordCount\"\n          ></span>\n        </div>\n        <div *ngIf=\"field.type === fieldType.Boolean\">\n          <i class=\"bwi bwi-check-square\" *ngIf=\"field.value === 'true'\" aria-hidden=\"true\"></i>\n          <i class=\"bwi bwi-square\" *ngIf=\"field.value !== 'true'\" aria-hidden=\"true\"></i>\n          <span class=\"sr-only\">{{ field.value }}</span>\n        </div>\n        <div *ngIf=\"field.type === fieldType.Linked\" class=\"box-content-row-flex\">\n          <div class=\"icon icon-small\">\n            <i\n              class=\"bwi bwi-link\"\n              aria-hidden=\"true\"\n              appA11yTitle=\"{{ 'linkedValue' | i18n }}\"\n            ></i>\n            <span class=\"sr-only\">{{ \"linkedValue\" | i18n }}</span>\n          </div>\n          <span>{{ cipher.linkedFieldI18nKey(field.linkedId) | i18n }}</span>\n        </div>\n      </div>\n      <div class=\"action-buttons action-buttons-fixed\">\n        <button\n          type=\"button\"\n          class=\"row-btn\"\n          appStopClick\n          attr.aria-label=\"{{ 'toggleCharacterCount' | i18n }} {{ field.name }}\"\n          appA11yTitle=\"{{ 'toggleCharacterCount' | i18n }}\"\n          *ngIf=\"field.type === fieldType.Hidden && cipher.viewPassword && field.showValue\"\n          (click)=\"toggleFieldCount(field)\"\n          [attr.aria-pressed]=\"field.showCount\"\n        >\n          <i class=\"bwi bwi-lg bwi-numbered-list\" aria-hidden=\"true\"></i>\n        </button>\n        <button\n          type=\"button\"\n          class=\"row-btn\"\n          appStopClick\n          attr.aria-label=\"{{ 'toggleVisibility' | i18n }} {{ field.name }}\"\n          appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n          *ngIf=\"field.type === fieldType.Hidden && cipher.viewPassword\"\n          (click)=\"toggleFieldValue(field)\"\n          [attr.aria-pressed]=\"field.showValue\"\n        >\n          <i\n            class=\"bwi bwi-lg\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{ 'bwi-eye': !field.showValue, 'bwi-eye-slash': field.showValue }\"\n          ></i>\n        </button>\n        <button\n          type=\"button\"\n          class=\"row-btn\"\n          appStopClick\n          attr.aria-label=\"{{ 'copyValue' | i18n }} {{ field.name }}\"\n          appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n          *ngIf=\"\n            field.value &&\n            field.type !== fieldType.Boolean &&\n            field.type !== fieldType.Linked &&\n            !(field.type === fieldType.Hidden && !cipher.viewPassword)\n          \"\n          (click)=\"\n            copy(field.value, 'value', field.type === fieldType.Hidden ? 'H_Field' : 'Field')\n          \"\n        >\n          <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n        </button>\n      </div>\n    </div>\n  </div>\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { ViewCustomFieldsComponent as BaseViewCustomFieldsComponent } from \"@bitwarden/angular/components/view-custom-fields.component\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\n\n@Component({\n  selector: \"app-vault-view-custom-fields\",\n  templateUrl: \"view-custom-fields.component.html\",\n})\nexport class ViewCustomFieldsComponent extends BaseViewCustomFieldsComponent {\n  constructor(eventService: EventService) {\n    super(eventService);\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" appBlurClick (click)=\"close()\">{{ \"close\" | i18n }}</button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"viewItem\" | i18n }}</span>\n  </h1>\n  <div class=\"right\" *ngIf=\"cipher\">\n    <button type=\"button\" appBlurClick (click)=\"edit()\" *ngIf=\"!cipher.isDeleted\">\n      {{ \"edit\" | i18n }}\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\" *ngIf=\"cipher\">\n  <div class=\"box\">\n    <h2 class=\"box-header\">\n      {{ \"itemInformation\" | i18n }}\n    </h2>\n    <div class=\"box-content\">\n      <div class=\"box-content-row\">\n        <label for=\"name\">{{ \"name\" | i18n }}</label>\n        <input id=\"name\" type=\"text\" [value]=\"cipher.name\" readonly aria-readonly=\"true\" />\n      </div>\n      <!-- Login -->\n      <div *ngIf=\"cipher.login\">\n        <div class=\"box-content-row box-content-row-flex\" *ngIf=\"cipher.login.username\">\n          <div class=\"row-main\">\n            <label\n              for=\"loginUsername\"\n              class=\"row-label draggable\"\n              draggable=\"true\"\n              (dragstart)=\"setTextDataOnDrag($event, cipher.login.username)\"\n              >{{ \"username\" | i18n }}\n            </label>\n            <input\n              id=\"loginUsername\"\n              type=\"text\"\n              [value]=\"cipher.login.username\"\n              readonly\n              aria-readonly=\"true\"\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'copyUsername' | i18n }}\"\n              (click)=\"copy(cipher.login.username, 'username', 'Username')\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"box-content-row box-content-row-flex\" *ngIf=\"cipher.login.password\">\n          <div class=\"row-main\">\n            <span\n              class=\"row-label draggable\"\n              draggable=\"true\"\n              (dragstart)=\"setTextDataOnDrag($event, cipher.login.password)\"\n              >{{ \"password\" | i18n }}</span\n            >\n            <div *ngIf=\"!showPassword\" class=\"monospaced\">\n              {{ cipher.login.maskedPassword }}\n            </div>\n            <div\n              *ngIf=\"showPassword && !showPasswordCount\"\n              class=\"monospaced password-wrapper\"\n              appSelectCopy\n              [innerHTML]=\"cipher.login.password | colorPassword\"\n            ></div>\n            <div\n              *ngIf=\"showPassword && showPasswordCount\"\n              [innerHTML]=\"cipher.login.password | colorPasswordCount\"\n            ></div>\n          </div>\n          <div class=\"action-buttons action-buttons-fixed\">\n            <button\n              type=\"button\"\n              #checkPasswordBtn\n              class=\"row-btn btn\"\n              appBlurClick\n              appA11yTitle=\"{{ 'checkPassword' | i18n }}\"\n              (click)=\"checkPassword()\"\n              [appApiAction]=\"checkPasswordPromise\"\n              [disabled]=\"checkPasswordBtn.loading\"\n              *ngIf=\"cipher.viewPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg bwi-check-circle\"\n                [hidden]=\"checkPasswordBtn.loading\"\n                aria-hidden=\"true\"\n              ></i>\n              <i\n                class=\"bwi bwi-lg bwi-spinner bwi-spin\"\n                [hidden]=\"!checkPasswordBtn.loading\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              attr.aria-label=\"{{ 'toggleCharacterCount' | i18n }} {{ 'password' | i18n }}\"\n              appA11yTitle=\"{{ 'toggleCharacterCount' | i18n }}\"\n              (click)=\"togglePasswordCount()\"\n              *ngIf=\"showPassword\"\n              [attr.aria-pressed]=\"showPasswordCount\"\n            >\n              <i class=\"bwi bwi-lg bwi-numbered-list\" aria-hidden=\"true\"></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              attr.aria-label=\"{{ 'toggleVisibility' | i18n }} {{ 'password' | i18n }}\"\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n              *ngIf=\"cipher.viewPassword\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n              (click)=\"copy(cipher.login.password, 'password', 'Password')\"\n              *ngIf=\"cipher.viewPassword\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n        <div\n          class=\"box-content-row box-content-row-flex totp\"\n          [ngClass]=\"{ low: totpLow }\"\n          *ngIf=\"cipher.login.totp && totpCode\"\n        >\n          <div class=\"row-main\">\n            <span\n              class=\"row-label draggable\"\n              draggable=\"true\"\n              (dragstart)=\"setTextDataOnDrag($event, totpCode)\"\n              >{{ \"verificationCodeTotp\" | i18n }}</span\n            >\n            <span class=\"totp-code\">{{ totpCodeFormatted }}</span>\n          </div>\n          <span class=\"totp-countdown\">\n            <span class=\"totp-sec\">{{ totpSec }}</span>\n            <svg>\n              <g>\n                <circle\n                  class=\"totp-circle inner\"\n                  r=\"12.6\"\n                  cy=\"16\"\n                  cx=\"16\"\n                  [ngStyle]=\"{ 'stroke-dashoffset.px': totpDash }\"\n                ></circle>\n                <circle class=\"totp-circle outer\" r=\"14\" cy=\"16\" cx=\"16\"></circle>\n              </g>\n            </svg>\n          </span>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'copyVerificationCode' | i18n }}\"\n              (click)=\"copy(totpCode, 'verificationCodeTotp', 'TOTP')\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <!-- Card -->\n      <div *ngIf=\"cipher.card\">\n        <div class=\"box-content-row\" *ngIf=\"cipher.card.cardholderName\">\n          <span class=\"row-label\">{{ \"cardholderName\" | i18n }}</span>\n          {{ cipher.card.cardholderName }}\n        </div>\n        <div class=\"box-content-row box-content-row-flex\" *ngIf=\"cipher.card.number\">\n          <div class=\"row-main\">\n            <span class=\"row-label\">{{ \"number\" | i18n }}</span>\n            <span [hidden]=\"showCardNumber\" class=\"monospaced\">{{\n              cipher.card.maskedNumber | creditCardNumber: cipher.card.brand\n            }}</span>\n            <span [hidden]=\"!showCardNumber\" class=\"monospaced\">{{\n              cipher.card.number | creditCardNumber: cipher.card.brand\n            }}</span>\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              attr.aria-label=\"{{ 'toggleVisibility' | i18n }} {{ 'number' | i18n }}\"\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"toggleCardNumber()\"\n              [attr.aria-pressed]=\"showCardNumber\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showCardNumber, 'bwi-eye-slash': showCardNumber }\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'copyNumber' | i18n }}\"\n              (click)=\"copy(cipher.card.number, 'number', 'Card Number')\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.card.brand\">\n          <span class=\"row-label\">{{ \"brand\" | i18n }}</span>\n          {{ cipher.card.brand }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.card.expiration\">\n          <span class=\"row-label\">{{ \"expiration\" | i18n }}</span>\n          {{ cipher.card.expiration }}\n        </div>\n        <div class=\"box-content-row box-content-row-flex\" *ngIf=\"cipher.card.code\">\n          <div class=\"row-main\">\n            <span class=\"row-label\">{{ \"securityCode\" | i18n }}</span>\n            <span [hidden]=\"showCardCode\" class=\"monospaced\">{{ cipher.card.maskedCode }}</span>\n            <span [hidden]=\"!showCardCode\" class=\"monospaced\">{{ cipher.card.code }}</span>\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              attr.aria-label=\"{{ 'toggleVisibility' | i18n }} {{ 'securityCode' | i18n }}\"\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"toggleCardCode()\"\n              [attr.aria-pressed]=\"showCardCode\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showCardCode, 'bwi-eye-slash': showCardCode }\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'copySecurityCode' | i18n }}\"\n              (click)=\"copy(cipher.card.code, 'securityCode', 'Security Code')\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <!-- Identity -->\n      <div *ngIf=\"cipher.identity\">\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.fullName\">\n          <span class=\"row-label\">{{ \"identityName\" | i18n }}</span>\n          {{ cipher.identity.fullName }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.username\">\n          <span class=\"row-label\">{{ \"username\" | i18n }}</span>\n          {{ cipher.identity.username }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.company\">\n          <span class=\"row-label\">{{ \"company\" | i18n }}</span>\n          {{ cipher.identity.company }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.ssn\">\n          <span class=\"row-label\">{{ \"ssn\" | i18n }}</span>\n          {{ cipher.identity.ssn }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.passportNumber\">\n          <span class=\"row-label\">{{ \"passportNumber\" | i18n }}</span>\n          {{ cipher.identity.passportNumber }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.licenseNumber\">\n          <span class=\"row-label\">{{ \"licenseNumber\" | i18n }}</span>\n          {{ cipher.identity.licenseNumber }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.email\">\n          <span class=\"row-label\">{{ \"email\" | i18n }}</span>\n          {{ cipher.identity.email }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.phone\">\n          <span class=\"row-label\">{{ \"phone\" | i18n }}</span>\n          {{ cipher.identity.phone }}\n        </div>\n        <div\n          class=\"box-content-row\"\n          *ngIf=\"cipher.identity.address1 || cipher.identity.city || cipher.identity.country\"\n        >\n          <span class=\"row-label\">{{ \"address\" | i18n }}</span>\n          <div *ngIf=\"cipher.identity.address1\">{{ cipher.identity.address1 }}</div>\n          <div *ngIf=\"cipher.identity.address2\">{{ cipher.identity.address2 }}</div>\n          <div *ngIf=\"cipher.identity.address3\">{{ cipher.identity.address3 }}</div>\n          <div *ngIf=\"cipher.identity.fullAddressPart2\">{{ cipher.identity.fullAddressPart2 }}</div>\n          <div *ngIf=\"cipher.identity.country\">{{ cipher.identity.country }}</div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"box\" *ngIf=\"cipher.login && cipher.login.hasUris\">\n    <div class=\"box-content\">\n      <div\n        class=\"box-content-row box-content-row-flex\"\n        *ngFor=\"let u of cipher.login.uris; let i = index\"\n      >\n        <div class=\"row-main\">\n          <label for=\"hostOrUri{{ i }}\" class=\"row-label\" *ngIf=\"!u.isWebsite\">{{\n            \"uri\" | i18n\n          }}</label>\n          <label for=\"hostOrUri{{ i }}\" class=\"row-label\" *ngIf=\"u.isWebsite\">{{\n            \"website\" | i18n\n          }}</label>\n          <span title=\"{{ u.uri }}\">\n            <input\n              id=\"hostOrUri{{ i }}\"\n              type=\"text\"\n              [value]=\"u.hostOrUri\"\n              readonly\n              aria-readonly=\"true\"\n            />\n          </span>\n        </div>\n        <div class=\"action-buttons\">\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            attr.aria-label=\"{{ 'launch' | i18n }} {{ u.uri }}\"\n            appA11yTitle=\"{{ 'launch' | i18n }}\"\n            *ngIf=\"u.canLaunch\"\n            (click)=\"launch(u)\"\n          >\n            <i class=\"bwi bwi-lg bwi-share-square\" aria-hidden=\"true\"></i>\n          </button>\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            attr.aria-label=\"{{ 'copyUri' | i18n }} {{ u.uri }}\"\n            appA11yTitle=\"{{ 'copyUri' | i18n }}\"\n            (click)=\"copy(u.uri, u.isWebsite ? 'website' : 'uri', 'URI')\"\n          >\n            <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"box\" *ngIf=\"cipher.notes\">\n    <h2 class=\"box-header\">\n      <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n    </h2>\n    <div class=\"box-content\">\n      <div class=\"box-content-row\">\n        <textarea\n          id=\"notes\"\n          [value]=\"cipher.notes\"\n          rows=\"6\"\n          readonly\n          aria-readonly=\"true\"\n        ></textarea>\n      </div>\n    </div>\n  </div>\n  <div class=\"box\" *ngIf=\"cipher.hasFields\">\n    <app-vault-view-custom-fields\n      [cipher]=\"cipher\"\n      [promptPassword]=\"promptPassword.bind(this)\"\n      [copy]=\"copy.bind(this)\"\n    ></app-vault-view-custom-fields>\n  </div>\n  <div\n    class=\"box\"\n    *ngIf=\"cipher.hasAttachments && (canAccessPremium || cipher.organizationId) && showAttachments\"\n  >\n    <h2 class=\"box-header\">\n      {{ \"attachments\" | i18n }}\n    </h2>\n    <div class=\"box-content\">\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        *ngFor=\"let attachment of cipher.attachments\"\n        appStopClick\n        appBlurCLick\n        (click)=\"downloadAttachment(attachment)\"\n      >\n        <span class=\"row-main\">{{ attachment.fileName }}</span>\n        <small class=\"row-sub-label\">{{ attachment.sizeName }}</small>\n        <i\n          class=\"bwi bwi-download bwi-fw row-sub-icon\"\n          *ngIf=\"!attachment.downloading\"\n          aria-hidden=\"true\"\n        ></i>\n        <i\n          class=\"bwi bwi-spinner bwi-fw bwi-spin row-sub-icon\"\n          *ngIf=\"attachment.downloading\"\n          aria-hidden=\"true\"\n        ></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <div class=\"box-content single-line\">\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        appBlurClick\n        (click)=\"fillCipher()\"\n        *ngIf=\"cipher.type !== cipherType.SecureNote && !cipher.isDeleted && !inPopout\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-pencil-square bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"autoFill\" | i18n }}</span>\n        </div>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        appBlurClick\n        (click)=\"fillCipherAndSave()\"\n        *ngIf=\"cipher.type === cipherType.Login && !cipher.isDeleted && !inPopout\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-bookmark bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"autoFillAndSave\" | i18n }}</span>\n        </div>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        appBlurClick\n        (click)=\"clone()\"\n        *ngIf=\"!cipher.organizationId && !cipher.isDeleted\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-files bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"cloneItem\" | i18n }}</span>\n        </div>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        appBlurClick\n        (click)=\"share()\"\n        *ngIf=\"!cipher.organizationId\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-arrow-circle-right bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"moveToOrganization\" | i18n }}</span>\n        </div>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        appBlurClick\n        (click)=\"restore()\"\n        *ngIf=\"cipher.isDeleted\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-undo bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"restoreItem\" | i18n }}</span>\n        </div>\n      </button>\n      <button type=\"button\" class=\"box-content-row\" appStopClick appBlurClick (click)=\"delete()\">\n        <div class=\"row-main text-danger\">\n          <div class=\"icon text-danger\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-trash bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ (cipher.isDeleted ? \"permanentlyDeleteItem\" : \"deleteItem\") | i18n }}</span>\n        </div>\n      </button>\n    </div>\n  </div>\n  <div class=\"box\">\n    <div class=\"box-footer\">\n      <div>\n        <b class=\"font-weight-semibold\">{{ \"dateUpdated\" | i18n }}:</b>\n        {{ cipher.revisionDate | date: \"medium\" }}\n      </div>\n      <div *ngIf=\"cipher.passwordRevisionDisplayDate\">\n        <b class=\"font-weight-semibold\">{{ \"datePasswordUpdated\" | i18n }}:</b>\n        {{ cipher.passwordRevisionDisplayDate | date: \"medium\" }}\n      </div>\n      <div *ngIf=\"cipher.hasPasswordHistory\">\n        <b class=\"font-weight-semibold\">{{ \"passwordHistory\" | i18n }}:</b>\n        <a\n          routerLink=\"/cipher-password-history\"\n          [queryParams]=\"{ cipherId: cipher.id }\"\n          appStopClick\n          title=\"{{ 'passwordHistory' | i18n }}\"\n        >\n          {{ cipher.passwordHistory.length }}\n        </a>\n      </div>\n    </div>\n  </div>\n</main>\n","import { Location } from \"@angular/common\";\nimport { ChangeDetectorRef, Component, NgZone } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ViewComponent as BaseViewComponent } from \"@bitwarden/angular/components/view.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { LoginUriView } from \"@bitwarden/common/models/view/loginUriView\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { AutofillService } from \"../../services/abstractions/autofill.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst BroadcasterSubscriptionId = \"ChildViewComponent\";\n\n@Component({\n  selector: \"app-vault-view\",\n  templateUrl: \"view.component.html\",\n})\nexport class ViewComponent extends BaseViewComponent {\n  showAttachments = true;\n  pageDetails: any[] = [];\n  tab: any;\n  loadPageDetailsTimeout: number;\n  inPopout = false;\n  cipherType = CipherType;\n\n  constructor(\n    cipherService: CipherService,\n    totpService: TotpService,\n    tokenService: TokenService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    broadcasterService: BroadcasterService,\n    ngZone: NgZone,\n    changeDetectorRef: ChangeDetectorRef,\n    stateService: StateService,\n    eventService: EventService,\n    private autofillService: AutofillService,\n    private messagingService: MessagingService,\n    private popupUtilsService: PopupUtilsService,\n    apiService: ApiService,\n    passwordRepromptService: PasswordRepromptService,\n    logService: LogService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cipherService,\n      totpService,\n      tokenService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      auditService,\n      window,\n      broadcasterService,\n      ngZone,\n      changeDetectorRef,\n      eventService,\n      apiService,\n      passwordRepromptService,\n      logService,\n      stateService,\n      fileDownloadService\n    );\n  }\n\n  ngOnInit() {\n    this.inPopout = this.popupUtilsService.inPopout(window);\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.cipherId) {\n        this.cipherId = params.cipherId;\n      } else {\n        this.close();\n      }\n\n      await this.load();\n    });\n\n    super.ngOnInit();\n\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"collectPageDetailsResponse\":\n            if (message.sender === BroadcasterSubscriptionId) {\n              this.pageDetails.push({\n                frameId: message.webExtSender.frameId,\n                tab: message.tab,\n                details: message.details,\n              });\n            }\n            break;\n          case \"tabChanged\":\n          case \"windowChanged\":\n            if (this.loadPageDetailsTimeout != null) {\n              window.clearTimeout(this.loadPageDetailsTimeout);\n            }\n            this.loadPageDetailsTimeout = window.setTimeout(() => this.loadPageDetails(), 500);\n            break;\n          default:\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async load() {\n    await super.load();\n    await this.loadPageDetails();\n  }\n\n  async edit() {\n    if (this.cipher.isDeleted) {\n      return false;\n    }\n    if (!(await super.edit())) {\n      return false;\n    }\n\n    this.router.navigate([\"/edit-cipher\"], { queryParams: { cipherId: this.cipher.id } });\n    return true;\n  }\n\n  async clone() {\n    if (this.cipher.isDeleted) {\n      return false;\n    }\n\n    if (!(await super.clone())) {\n      return false;\n    }\n\n    this.router.navigate([\"/clone-cipher\"], {\n      queryParams: {\n        cloneMode: true,\n        cipherId: this.cipher.id,\n      },\n    });\n    return true;\n  }\n\n  async share() {\n    if (!(await super.share())) {\n      return false;\n    }\n\n    if (this.cipher.organizationId == null) {\n      this.router.navigate([\"/share-cipher\"], {\n        replaceUrl: true,\n        queryParams: { cipherId: this.cipher.id },\n      });\n    }\n    return true;\n  }\n\n  async fillCipher() {\n    const didAutofill = await this.doAutofill();\n    if (didAutofill) {\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"autoFillSuccess\"));\n    }\n  }\n\n  async fillCipherAndSave() {\n    const didAutofill = await this.doAutofill();\n\n    if (didAutofill) {\n      if (this.tab == null) {\n        throw new Error(\"No tab found.\");\n      }\n\n      if (this.cipher.login.uris == null) {\n        this.cipher.login.uris = [];\n      } else {\n        if (this.cipher.login.uris.some((uri) => uri.uri === this.tab.url)) {\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"autoFillSuccessAndSavedUri\")\n          );\n          return;\n        }\n      }\n\n      const loginUri = new LoginUriView();\n      loginUri.uri = this.tab.url;\n      this.cipher.login.uris.push(loginUri);\n\n      try {\n        const cipher: Cipher = await this.cipherService.encrypt(this.cipher);\n        await this.cipherService.saveWithServer(cipher);\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"autoFillSuccessAndSavedUri\")\n        );\n        this.messagingService.send(\"editedCipher\");\n      } catch {\n        this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"unexpectedError\"));\n      }\n    }\n  }\n\n  async restore() {\n    if (!this.cipher.isDeleted) {\n      return false;\n    }\n    if (await super.restore()) {\n      this.close();\n      return true;\n    }\n    return false;\n  }\n\n  async delete() {\n    if (await super.delete()) {\n      this.messagingService.send(\"deletedCipher\");\n      this.close();\n      return true;\n    }\n    return false;\n  }\n\n  close() {\n    this.location.back();\n  }\n\n  private async loadPageDetails() {\n    this.pageDetails = [];\n    this.tab = await BrowserApi.getTabFromCurrentWindow();\n    if (this.tab == null) {\n      return;\n    }\n    BrowserApi.tabSendMessage(this.tab, {\n      command: \"collectPageDetails\",\n      tab: this.tab,\n      sender: BroadcasterSubscriptionId,\n    });\n  }\n\n  private async doAutofill() {\n    if (!(await this.promptPassword())) {\n      return false;\n    }\n\n    if (this.pageDetails == null || this.pageDetails.length === 0) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"autofillError\"));\n      return false;\n    }\n\n    try {\n      this.totpCode = await this.autofillService.doAutoFill({\n        cipher: this.cipher,\n        pageDetails: this.pageDetails,\n        doc: window.document,\n        fillNewPassword: true,\n      });\n      if (this.totpCode != null) {\n        this.platformUtilsService.copyToClipboard(this.totpCode, { window: window });\n      }\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"autofillError\"));\n      this.changeDetectorRef.detectChanges();\n      return false;\n    }\n\n    return true;\n  }\n}\n","import { Injectable, NgModule } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, RouteReuseStrategy, RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\nimport { LockGuard } from \"@bitwarden/angular/guards/lock.guard\";\nimport { UnauthGuard } from \"@bitwarden/angular/guards/unauth.guard\";\n\nimport { EnvironmentComponent } from \"./accounts/environment.component\";\nimport { HintComponent } from \"./accounts/hint.component\";\nimport { HomeComponent } from \"./accounts/home.component\";\nimport { LockComponent } from \"./accounts/lock.component\";\nimport { LoginComponent } from \"./accounts/login.component\";\nimport { RegisterComponent } from \"./accounts/register.component\";\nimport { RemovePasswordComponent } from \"./accounts/remove-password.component\";\nimport { SetPasswordComponent } from \"./accounts/set-password.component\";\nimport { SsoComponent } from \"./accounts/sso.component\";\nimport { TwoFactorOptionsComponent } from \"./accounts/two-factor-options.component\";\nimport { TwoFactorComponent } from \"./accounts/two-factor.component\";\nimport { UpdateTempPasswordComponent } from \"./accounts/update-temp-password.component\";\nimport { GeneratorComponent } from \"./generator/generator.component\";\nimport { PasswordGeneratorHistoryComponent } from \"./generator/password-generator-history.component\";\nimport { SendAddEditComponent } from \"./send/send-add-edit.component\";\nimport { SendGroupingsComponent } from \"./send/send-groupings.component\";\nimport { SendTypeComponent } from \"./send/send-type.component\";\nimport { DebounceNavigationService } from \"./services/debounceNavigationService\";\nimport { ExcludedDomainsComponent } from \"./settings/excluded-domains.component\";\nimport { ExportComponent } from \"./settings/export.component\";\nimport { FolderAddEditComponent } from \"./settings/folder-add-edit.component\";\nimport { FoldersComponent } from \"./settings/folders.component\";\nimport { OptionsComponent } from \"./settings/options.component\";\nimport { PremiumComponent } from \"./settings/premium.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SyncComponent } from \"./settings/sync.component\";\nimport { TabsComponent } from \"./tabs.component\";\nimport { AddEditComponent } from \"./vault/add-edit.component\";\nimport { AttachmentsComponent } from \"./vault/attachments.component\";\nimport { CiphersComponent } from \"./vault/ciphers.component\";\nimport { CollectionsComponent } from \"./vault/collections.component\";\nimport { CurrentTabComponent } from \"./vault/current-tab.component\";\nimport { PasswordHistoryComponent } from \"./vault/password-history.component\";\nimport { ShareComponent } from \"./vault/share.component\";\nimport { VaultFilterComponent } from \"./vault/vault-filter.component\";\nimport { ViewComponent } from \"./vault/view.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    redirectTo: \"home\",\n    pathMatch: \"full\",\n  },\n  {\n    path: \"vault\",\n    redirectTo: \"/tabs/vault\",\n    pathMatch: \"full\",\n  },\n  {\n    path: \"home\",\n    component: HomeComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"home\" },\n  },\n  {\n    path: \"login\",\n    component: LoginComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"login\" },\n  },\n  {\n    path: \"lock\",\n    component: LockComponent,\n    canActivate: [LockGuard],\n    data: { state: \"lock\" },\n  },\n  {\n    path: \"2fa\",\n    component: TwoFactorComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"2fa\" },\n  },\n  {\n    path: \"2fa-options\",\n    component: TwoFactorOptionsComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"2fa-options\" },\n  },\n  {\n    path: \"sso\",\n    component: SsoComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"sso\" },\n  },\n  {\n    path: \"set-password\",\n    component: SetPasswordComponent,\n    data: { state: \"set-password\" },\n  },\n  {\n    path: \"remove-password\",\n    component: RemovePasswordComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"remove-password\" },\n  },\n  {\n    path: \"register\",\n    component: RegisterComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"register\" },\n  },\n  {\n    path: \"hint\",\n    component: HintComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"hint\" },\n  },\n  {\n    path: \"environment\",\n    component: EnvironmentComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"environment\" },\n  },\n  {\n    path: \"ciphers\",\n    component: CiphersComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"ciphers\" },\n  },\n  {\n    path: \"view-cipher\",\n    component: ViewComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"view-cipher\" },\n  },\n  {\n    path: \"cipher-password-history\",\n    component: PasswordHistoryComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"cipher-password-history\" },\n  },\n  {\n    path: \"add-cipher\",\n    component: AddEditComponent,\n    canActivate: [AuthGuard, DebounceNavigationService],\n    data: { state: \"add-cipher\" },\n    runGuardsAndResolvers: \"always\",\n  },\n  {\n    path: \"edit-cipher\",\n    component: AddEditComponent,\n    canActivate: [AuthGuard, DebounceNavigationService],\n    data: { state: \"edit-cipher\" },\n    runGuardsAndResolvers: \"always\",\n  },\n  {\n    path: \"share-cipher\",\n    component: ShareComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"share-cipher\" },\n  },\n  {\n    path: \"collections\",\n    component: CollectionsComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"collections\" },\n  },\n  {\n    path: \"attachments\",\n    component: AttachmentsComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"attachments\" },\n  },\n  {\n    path: \"generator\",\n    component: GeneratorComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"generator\" },\n  },\n  {\n    path: \"generator-history\",\n    component: PasswordGeneratorHistoryComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"generator-history\" },\n  },\n  {\n    path: \"export\",\n    component: ExportComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"export\" },\n  },\n  {\n    path: \"folders\",\n    component: FoldersComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"folders\" },\n  },\n  {\n    path: \"add-folder\",\n    component: FolderAddEditComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"add-folder\" },\n  },\n  {\n    path: \"edit-folder\",\n    component: FolderAddEditComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"edit-folder\" },\n  },\n  {\n    path: \"sync\",\n    component: SyncComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"sync\" },\n  },\n  {\n    path: \"excluded-domains\",\n    component: ExcludedDomainsComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"excluded-domains\" },\n  },\n  {\n    path: \"premium\",\n    component: PremiumComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"premium\" },\n  },\n  {\n    path: \"options\",\n    component: OptionsComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"options\" },\n  },\n  {\n    path: \"clone-cipher\",\n    component: AddEditComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"clone-cipher\" },\n  },\n  {\n    path: \"send-type\",\n    component: SendTypeComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"send-type\" },\n  },\n  {\n    path: \"add-send\",\n    component: SendAddEditComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"add-send\" },\n  },\n  {\n    path: \"edit-send\",\n    component: SendAddEditComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"edit-send\" },\n  },\n  {\n    path: \"update-temp-password\",\n    component: UpdateTempPasswordComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"update-temp-password\" },\n  },\n  {\n    path: \"tabs\",\n    component: TabsComponent,\n    data: { state: \"tabs\" },\n    children: [\n      {\n        path: \"\",\n        redirectTo: \"/tabs/vault\",\n        pathMatch: \"full\",\n      },\n      {\n        path: \"current\",\n        component: CurrentTabComponent,\n        canActivate: [AuthGuard],\n        data: { state: \"tabs_current\" },\n        runGuardsAndResolvers: \"always\",\n      },\n      {\n        path: \"vault\",\n        component: VaultFilterComponent,\n        canActivate: [AuthGuard],\n        data: { state: \"tabs_vault\" },\n      },\n      {\n        path: \"generator\",\n        component: GeneratorComponent,\n        canActivate: [AuthGuard],\n        data: { state: \"tabs_generator\" },\n      },\n      {\n        path: \"settings\",\n        component: SettingsComponent,\n        canActivate: [AuthGuard],\n        data: { state: \"tabs_settings\" },\n      },\n      {\n        path: \"send\",\n        component: SendGroupingsComponent,\n        canActivate: [AuthGuard],\n        data: { state: \"tabs_send\" },\n      },\n    ],\n  },\n];\n\n@Injectable()\nexport class NoRouteReuseStrategy implements RouteReuseStrategy {\n  shouldDetach(route: ActivatedRouteSnapshot) {\n    return false;\n  }\n\n  // eslint-disable-next-line\n  store(route: ActivatedRouteSnapshot, handle: {}) {\n    /* Nothing */\n  }\n\n  shouldAttach(route: ActivatedRouteSnapshot) {\n    return false;\n  }\n\n  retrieve(route: ActivatedRouteSnapshot): any {\n    return null;\n  }\n\n  shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot) {\n    return false;\n  }\n}\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      useHash: true,\n      onSameUrlNavigation: \"reload\",\n      /*enableTracing: true,*/\n    }),\n  ],\n  exports: [RouterModule],\n  providers: [{ provide: RouteReuseStrategy, useClass: NoRouteReuseStrategy }],\n})\nexport class AppRoutingModule {}\n","import { animate, group, query, style, transition, trigger } from \"@angular/animations\";\n\nconst queryShown = query(\n  \":enter, :leave\",\n  [style({ position: \"fixed\", width: \"100%\", height: \"100%\" })],\n  {\n    optional: true,\n  }\n);\n\n// ref: https://github.com/angular/angular/issues/15477\nconst queryChildRoute = query(\"router-outlet ~ *\", [style({}), animate(1, style({}))], {\n  optional: true,\n});\n\nconst speed = \"0.4s\";\n\nexport function queryTranslate(\n  direction: string,\n  axis: string,\n  from: number,\n  to: number,\n  zIndex = 1000\n) {\n  return query(\n    \":\" + direction,\n    [\n      style({\n        transform: \"translate\" + axis + \"(\" + from + \"%)\",\n        zIndex: zIndex,\n        boxShadow: \"0 3px 2px -2px gray\",\n      }),\n      animate(speed + \" ease-in-out\", style({ transform: \"translate\" + axis + \"(\" + to + \"%)\" })),\n    ],\n    { optional: true }\n  );\n}\n\nexport function queryTranslateX(direction: string, from: number, to: number, zIndex = 1000) {\n  return queryTranslate(direction, \"X\", from, to, zIndex);\n}\n\nexport function queryTranslateY(direction: string, from: number, to: number, zIndex = 1000) {\n  return queryTranslate(direction, \"Y\", from, to, zIndex);\n}\n\nconst inSlideLeft = [\n  queryShown,\n  group([queryTranslateX(\"enter\", 100, 0), queryTranslateX(\"leave\", 0, -100), queryChildRoute]),\n];\n\nconst outSlideRight = [\n  queryShown,\n  group([queryTranslateX(\"enter\", -100, 0), queryTranslateX(\"leave\", 0, 100)]),\n];\n\nconst inSlideUp = [\n  queryShown,\n  group([queryTranslateY(\"enter\", 100, 0, 1010), queryTranslateY(\"leave\", 0, 0), queryChildRoute]),\n];\n\nconst outSlideDown = [\n  queryShown,\n  group([queryTranslateY(\"enter\", 0, 0), queryTranslateY(\"leave\", 0, 100, 1010)]),\n];\n\nconst inSlideDown = [\n  queryShown,\n  group([queryTranslateY(\"enter\", -100, 0, 1010), queryTranslateY(\"leave\", 0, 0), queryChildRoute]),\n];\n\n// eslint-disable-next-line\nconst outSlideUp = [\n  queryShown,\n  group([queryTranslateY(\"enter\", 0, 0), queryTranslateY(\"leave\", 0, -100, 1010)]),\n];\n\nexport function tabsToCiphers(fromState: string, toState: string) {\n  if (fromState == null || toState === null || toState.indexOf(\"ciphers_\") === -1) {\n    return false;\n  }\n  return (\n    (fromState.indexOf(\"ciphers_\") === 0 && fromState.indexOf(\"ciphers_direction=b\") === -1) ||\n    fromState === \"tabs\"\n  );\n}\n\nexport function ciphersToTabs(fromState: string, toState: string) {\n  if (fromState == null || toState === null || fromState.indexOf(\"ciphers_\") === -1) {\n    return false;\n  }\n  return toState.indexOf(\"ciphers_direction=b\") === 0 || toState === \"tabs\";\n}\n\nexport function ciphersToView(fromState: string, toState: string) {\n  if (fromState == null || toState === null) {\n    return false;\n  }\n  return (\n    fromState.indexOf(\"ciphers_\") === 0 &&\n    (toState === \"view-cipher\" || toState === \"add-cipher\" || toState === \"clone-cipher\")\n  );\n}\n\nexport function viewToCiphers(fromState: string, toState: string) {\n  if (fromState == null || toState === null) {\n    return false;\n  }\n  return (\n    (fromState === \"view-cipher\" || fromState === \"add-cipher\" || fromState === \"clone-cipher\") &&\n    toState.indexOf(\"ciphers_\") === 0\n  );\n}\n\nexport const routerTransition = trigger(\"routerTransition\", [\n  transition(\"void => home\", inSlideLeft),\n  transition(\"void => tabs\", inSlideLeft),\n\n  transition(\"home => environment, home => login, home => register\", inSlideUp),\n\n  transition(\"login => home\", outSlideDown),\n  transition(\"login => hint\", inSlideUp),\n  transition(\"login => tabs, login => 2fa\", inSlideLeft),\n\n  transition(\"hint => login, register => home, environment => home\", outSlideDown),\n\n  transition(\"2fa => login\", outSlideRight),\n  transition(\"2fa => 2fa-options\", inSlideUp),\n  transition(\"2fa-options => 2fa\", outSlideDown),\n  transition(\"2fa => tabs\", inSlideLeft),\n\n  transition(tabsToCiphers, inSlideLeft),\n  transition(ciphersToTabs, outSlideRight),\n\n  transition(ciphersToView, inSlideUp),\n  transition(viewToCiphers, outSlideDown),\n\n  transition(\"tabs => view-cipher\", inSlideUp),\n  transition(\"view-cipher => tabs\", outSlideDown),\n\n  transition(\"view-cipher => edit-cipher, view-cipher => cipher-password-history\", inSlideUp),\n  transition(\n    \"edit-cipher => view-cipher, cipher-password-history => view-cipher, edit-cipher => tabs\",\n    outSlideDown\n  ),\n\n  transition(\"view-cipher => clone-cipher\", inSlideUp),\n  transition(\"clone-cipher => view-cipher, clone-cipher => tabs\", outSlideDown),\n\n  transition(\"view-cipher => share-cipher\", inSlideUp),\n  transition(\"share-cipher => view-cipher\", outSlideDown),\n\n  transition(\"tabs => add-cipher\", inSlideUp),\n  transition(\"add-cipher => tabs\", outSlideDown),\n\n  transition(\"generator => generator-history, tabs => generator-history\", inSlideLeft),\n  transition(\"generator-history => generator, generator-history => tabs\", outSlideRight),\n\n  transition(\n    \"add-cipher => generator, edit-cipher => generator, clone-cipher => generator\",\n    inSlideUp\n  ),\n  transition(\n    \"generator => add-cipher, generator => edit-cipher, generator => clone-cipher\",\n    outSlideDown\n  ),\n\n  transition(\"edit-cipher => attachments, edit-cipher => collections\", inSlideLeft),\n  transition(\"attachments => edit-cipher, collections => edit-cipher\", outSlideRight),\n\n  transition(\"clone-cipher => attachments, clone-cipher => collections\", inSlideLeft),\n  transition(\"attachments => clone-cipher, collections => clone-cipher\", outSlideRight),\n\n  transition(\"tabs => export\", inSlideLeft),\n  transition(\"export => tabs\", outSlideRight),\n\n  transition(\"tabs => folders\", inSlideLeft),\n  transition(\"folders => tabs\", outSlideRight),\n\n  transition(\"folders => edit-folder, folders => add-folder\", inSlideUp),\n  transition(\"edit-folder => folders, add-folder => folders\", outSlideDown),\n\n  transition(\"tabs => sync\", inSlideLeft),\n  transition(\"sync => tabs\", outSlideRight),\n\n  transition(\"tabs => excluded-domains\", inSlideLeft),\n  transition(\"excluded-domains => tabs\", outSlideRight),\n\n  transition(\"tabs => options\", inSlideLeft),\n  transition(\"options => tabs\", outSlideRight),\n\n  transition(\"tabs => premium\", inSlideLeft),\n  transition(\"premium => tabs\", outSlideRight),\n\n  transition(\"tabs => lock\", inSlideDown),\n\n  transition(\"tabs => send-type\", inSlideLeft),\n  transition(\"send-type => tabs\", outSlideRight),\n\n  transition(\"tabs => add-send, send-type => add-send\", inSlideUp),\n  transition(\"add-send => tabs, add-send => send-type\", outSlideDown),\n\n  transition(\"tabs => edit-send, send-type => edit-send\", inSlideUp),\n  transition(\"edit-send => tabs, edit-send => send-type\", outSlideDown),\n]);\n","import {\n  ChangeDetectorRef,\n  Component,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  SecurityContext,\n} from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { NavigationEnd, Router, RouterOutlet } from \"@angular/router\";\nimport { IndividualConfig, ToastrService } from \"ngx-toastr\";\nimport { Subject, takeUntil } from \"rxjs\";\nimport Swal, { SweetAlertIcon } from \"sweetalert2\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { StateService } from \"../services/abstractions/state.service\";\n\nimport { routerTransition } from \"./app-routing.animations\";\n\n@Component({\n  selector: \"app-root\",\n  styles: [],\n  animations: [routerTransition],\n  template: ` <div [@routerTransition]=\"getState(o)\">\n    <router-outlet #o=\"outlet\"></router-outlet>\n  </div>`,\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  private lastActivity: number = null;\n  private activeUserId: string;\n\n  private destroy$: Subject<void> = new Subject<void>();\n\n  constructor(\n    private toastrService: ToastrService,\n    private broadcasterService: BroadcasterService,\n    private authService: AuthService,\n    private i18nService: I18nService,\n    private router: Router,\n    private stateService: StateService,\n    private messagingService: MessagingService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private ngZone: NgZone,\n    private sanitizer: DomSanitizer,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async ngOnInit() {\n    // Component states must not persist between closing and reopening the popup, otherwise they become dead objects\n    // Clear them aggressively to make sure this doesn't occur\n    await this.clearComponentStates();\n\n    this.stateService.activeAccount.pipe(takeUntil(this.destroy$)).subscribe((userId) => {\n      this.activeUserId = userId;\n    });\n\n    this.ngZone.runOutsideAngular(() => {\n      window.onmousedown = () => this.recordActivity();\n      window.ontouchstart = () => this.recordActivity();\n      window.onclick = () => this.recordActivity();\n      window.onscroll = () => this.recordActivity();\n      window.onkeypress = () => this.recordActivity();\n    });\n\n    (window as any).bitwardenPopupMainMessageListener = async (\n      msg: any,\n      sender: any,\n      sendResponse: any\n    ) => {\n      if (msg.command === \"doneLoggingOut\") {\n        this.ngZone.run(async () => {\n          this.authService.logOut(async () => {\n            if (msg.expired) {\n              this.showToast({\n                type: \"warning\",\n                title: this.i18nService.t(\"loggedOut\"),\n                text: this.i18nService.t(\"loginExpired\"),\n              });\n            }\n\n            if (this.stateService.activeAccount.getValue() == null) {\n              this.router.navigate([\"home\"]);\n            }\n          });\n          this.changeDetectorRef.detectChanges();\n        });\n      } else if (msg.command === \"authBlocked\") {\n        this.ngZone.run(() => {\n          this.router.navigate([\"home\"]);\n        });\n      } else if (msg.command === \"locked\") {\n        if (msg.userId == null || msg.userId === (await this.stateService.getUserId())) {\n          this.ngZone.run(() => {\n            this.router.navigate([\"lock\"]);\n          });\n        }\n      } else if (msg.command === \"showDialog\") {\n        await this.showDialog(msg);\n      } else if (msg.command === \"showToast\") {\n        this.ngZone.run(() => {\n          this.showToast(msg);\n        });\n      } else if (msg.command === \"reloadProcess\") {\n        const windowReload =\n          this.platformUtilsService.isSafari() ||\n          this.platformUtilsService.isFirefox() ||\n          this.platformUtilsService.isOpera();\n        if (windowReload) {\n          // Wait to make sure background has reloaded first.\n          window.setTimeout(() => BrowserApi.reloadExtension(window), 2000);\n        }\n      } else if (msg.command === \"reloadPopup\") {\n        this.ngZone.run(() => {\n          this.router.navigate([\"/\"]);\n        });\n      } else if (msg.command === \"convertAccountToKeyConnector\") {\n        this.ngZone.run(async () => {\n          this.router.navigate([\"/remove-password\"]);\n        });\n      } else {\n        msg.webExtSender = sender;\n        this.broadcasterService.send(msg);\n      }\n    };\n\n    BrowserApi.messageListener(\"app.component\", (window as any).bitwardenPopupMainMessageListener);\n\n    this.router.events.pipe(takeUntil(this.destroy$)).subscribe(async (event) => {\n      if (event instanceof NavigationEnd) {\n        const url = event.urlAfterRedirects || event.url || \"\";\n        if (\n          url.startsWith(\"/tabs/\") &&\n          (window as any).previousPopupUrl != null &&\n          (window as any).previousPopupUrl.startsWith(\"/tabs/\")\n        ) {\n          await this.clearComponentStates();\n        }\n        if (url.startsWith(\"/tabs/\")) {\n          await this.stateService.setAddEditCipherInfo(null);\n        }\n        (window as any).previousPopupUrl = url;\n\n        // Clear route direction after animation (400ms)\n        if ((window as any).routeDirection != null) {\n          window.setTimeout(() => {\n            (window as any).routeDirection = null;\n          }, 400);\n        }\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  getState(outlet: RouterOutlet) {\n    if (outlet.activatedRouteData.state === \"ciphers\") {\n      const routeDirection =\n        (window as any).routeDirection != null ? (window as any).routeDirection : \"\";\n      return (\n        \"ciphers_direction=\" +\n        routeDirection +\n        \"_\" +\n        (outlet.activatedRoute.queryParams as any).value.folderId +\n        \"_\" +\n        (outlet.activatedRoute.queryParams as any).value.collectionId\n      );\n    } else {\n      return outlet.activatedRouteData.state;\n    }\n  }\n\n  private async recordActivity() {\n    if (this.activeUserId == null) {\n      return;\n    }\n\n    const now = new Date().getTime();\n    if (this.lastActivity != null && now - this.lastActivity < 250) {\n      return;\n    }\n\n    this.lastActivity = now;\n    await this.stateService.setLastActive(now, { userId: this.activeUserId });\n  }\n\n  private showToast(msg: any) {\n    let message = \"\";\n\n    const options: Partial<IndividualConfig> = {};\n\n    if (typeof msg.text === \"string\") {\n      message = msg.text;\n    } else if (msg.text.length === 1) {\n      message = msg.text[0];\n    } else {\n      msg.text.forEach(\n        (t: string) =>\n          (message += \"<p>\" + this.sanitizer.sanitize(SecurityContext.HTML, t) + \"</p>\")\n      );\n      options.enableHtml = true;\n    }\n    if (msg.options != null) {\n      if (msg.options.trustedHtml === true) {\n        options.enableHtml = true;\n      }\n      if (msg.options.timeout != null && msg.options.timeout > 0) {\n        options.timeOut = msg.options.timeout;\n      }\n    }\n\n    this.toastrService.show(message, msg.title, options, \"toast-\" + msg.type);\n  }\n\n  private async showDialog(msg: any) {\n    let iconClasses: string = null;\n    const type = msg.type;\n    if (type != null) {\n      // If you add custom types to this part, the type to SweetAlertIcon cast below needs to be changed.\n      switch (type) {\n        case \"success\":\n          iconClasses = \"bwi-check text-success\";\n          break;\n        case \"warning\":\n          iconClasses = \"bwi-exclamation-triangle text-warning\";\n          break;\n        case \"error\":\n          iconClasses = \"bwi-error text-danger\";\n          break;\n        case \"info\":\n          iconClasses = \"bwi-info-circle text-info\";\n          break;\n        default:\n          break;\n      }\n    }\n\n    const cancelText = msg.cancelText;\n    const confirmText = msg.confirmText;\n    const confirmed = await Swal.fire({\n      heightAuto: false,\n      buttonsStyling: false,\n      icon: type as SweetAlertIcon, // required to be any of the SweetAlertIcons to output the iconHtml.\n      iconHtml:\n        iconClasses != null ? `<i class=\"swal-custom-icon bwi ${iconClasses}\"></i>` : undefined,\n      text: msg.text,\n      html: msg.html,\n      titleText: msg.title,\n      showCancelButton: cancelText != null,\n      cancelButtonText: cancelText,\n      showConfirmButton: true,\n      confirmButtonText: confirmText == null ? this.i18nService.t(\"ok\") : confirmText,\n      timer: 300000,\n    });\n\n    this.messagingService.send(\"showDialogResolve\", {\n      dialogId: msg.dialogId,\n      confirmed: confirmed.value,\n    });\n  }\n\n  private async clearComponentStates() {\n    if (!(await this.stateService.getIsAuthenticated())) {\n      return;\n    }\n\n    await Promise.all([\n      this.stateService.setBrowserGroupingComponentState(null),\n      this.stateService.setBrowserCipherComponentState(null),\n      this.stateService.setBrowserSendComponentState(null),\n      this.stateService.setBrowserSendTypeComponentState(null),\n    ]);\n  }\n}\n","import { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { Theme } from \"./theme\";\n\nexport class ThemeBuilder implements Theme {\n  get effectiveTheme(): ThemeType {\n    return this.configuredTheme != ThemeType.System ? this.configuredTheme : this.systemTheme;\n  }\n\n  constructor(readonly configuredTheme: ThemeType, readonly systemTheme: ThemeType) {}\n\n  updateSystemTheme(systemTheme: ThemeType): ThemeBuilder {\n    return new ThemeBuilder(this.configuredTheme, systemTheme);\n  }\n\n  updateConfiguredTheme(configuredTheme: ThemeType): ThemeBuilder {\n    return new ThemeBuilder(configuredTheme, this.systemTheme);\n  }\n}\n","export enum StateVersion {\n  One = 1, // Original flat key/value pair store\n  Two = 2, // Move to a typed State object\n  Three = 3, // Fix migration of users' premium status\n  Four = 4, // Fix 'Never Lock' option by removing stale data\n  Five = 5, // Migrate to new storage of encrypted organization keys\n  Latest = Five,\n}\n","export enum SsoType {\n  None = 0,\n  OpenIdConnect = 1,\n  Saml2 = 2,\n}\n\nexport enum OpenIdConnectRedirectBehavior {\n  RedirectGet = 0,\n  FormPost = 1,\n}\n\nexport enum Saml2BindingType {\n  HttpRedirect = 1,\n  HttpPost = 2,\n}\n\nexport enum Saml2NameIdFormat {\n  NotConfigured = 0,\n  Unspecified = 1,\n  EmailAddress = 2,\n  X509SubjectName = 3,\n  WindowsDomainQualifiedName = 4,\n  KerberosPrincipalName = 5,\n  EntityIdentifier = 6,\n  Persistent = 7,\n  Transient = 8,\n}\n\nexport enum Saml2SigningBehavior {\n  IfIdpWantAuthnRequestsSigned = 0,\n  Always = 1,\n  Never = 3,\n}\n","import { DOCUMENT } from \"@angular/common\";\nimport { Inject, Injectable } from \"@angular/core\";\nimport { BehaviorSubject, filter, fromEvent, Observable } from \"rxjs\";\n\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { WINDOW } from \"../jslib-services.module\";\n\nimport { Theme } from \"./theme\";\nimport { ThemeBuilder } from \"./themeBuilder\";\nimport { AbstractThemingService } from \"./theming.service.abstraction\";\n\n@Injectable()\nexport class ThemingService implements AbstractThemingService {\n  private _theme = new BehaviorSubject<ThemeBuilder | null>(null);\n  theme$: Observable<Theme> = this._theme.pipe(filter((x) => x !== null));\n\n  constructor(\n    private stateService: StateService,\n    @Inject(WINDOW) private window: Window,\n    @Inject(DOCUMENT) private document: Document\n  ) {\n    this.monitorThemeChanges();\n  }\n\n  async monitorThemeChanges(): Promise<void> {\n    this._theme.next(\n      new ThemeBuilder(await this.stateService.getTheme(), await this.getSystemTheme())\n    );\n    this.monitorConfiguredThemeChanges();\n    this.monitorSystemThemeChanges();\n  }\n\n  updateSystemTheme(systemTheme: ThemeType): void {\n    this._theme.next(this._theme.getValue().updateSystemTheme(systemTheme));\n  }\n\n  async updateConfiguredTheme(theme: ThemeType): Promise<void> {\n    await this.stateService.setTheme(theme);\n    this._theme.next(this._theme.getValue().updateConfiguredTheme(theme));\n  }\n\n  protected monitorConfiguredThemeChanges(): void {\n    this.theme$.subscribe((theme: Theme) => {\n      this.document.documentElement.classList.remove(\n        \"theme_\" + ThemeType.Light,\n        \"theme_\" + ThemeType.Dark,\n        \"theme_\" + ThemeType.Nord,\n        \"theme_\" + ThemeType.SolarizedDark\n      );\n      this.document.documentElement.classList.add(\"theme_\" + theme.effectiveTheme);\n    });\n  }\n\n  // We use a media match query for monitoring the system theme on web and browser, but this doesn't work for electron apps on Linux.\n  // In desktop we override these methods to track systemTheme with the electron renderer instead, which works for all OSs.\n  protected async getSystemTheme(): Promise<ThemeType> {\n    return this.window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n      ? ThemeType.Dark\n      : ThemeType.Light;\n  }\n\n  protected monitorSystemThemeChanges(): void {\n    fromEvent<MediaQueryListEvent>(\n      this.window.matchMedia(\"(prefers-color-scheme: dark)\"),\n      \"change\"\n    ).subscribe((event) => {\n      this.updateSystemTheme(event.matches ? ThemeType.Dark : ThemeType.Light);\n    });\n  }\n}\n","import { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\n\nexport abstract class AbstractEncryptService {\n  abstract encrypt(plainValue: string | ArrayBuffer, key: SymmetricCryptoKey): Promise<EncString>;\n  abstract decryptToUtf8(encString: EncString, key: SymmetricCryptoKey): Promise<string>;\n}\n","import { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\n\nexport abstract class FileUploadService {\n  uploadSendFile: (\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n  uploadCipherAttachment: (\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n}\n","export abstract class NotificationsService {\n  init: () => Promise<void>;\n  updateConnection: (sync?: boolean) => Promise<void>;\n  reconnectFromActivity: () => Promise<void>;\n  disconnectFromInactivity: () => Promise<void>;\n}\n","import { ProviderData } from \"../models/data/providerData\";\nimport { Provider } from \"../models/domain/provider\";\n\nexport abstract class ProviderService {\n  get: (id: string) => Promise<Provider>;\n  getAll: () => Promise<Provider[]>;\n  save: (providers: { [id: string]: ProviderData }) => Promise<any>;\n}\n","export abstract class SettingsService {\n  clearCache: () => Promise<void>;\n  getEquivalentDomains: () => Promise<any>;\n  setEquivalentDomains: (equivalentDomains: string[][]) => Promise<any>;\n  clear: (userId?: string) => Promise<void>;\n}\n","export abstract class StateMigrationService {\n  needsMigration: () => Promise<boolean>;\n  migrate: () => Promise<void>;\n}\n","import { StorageOptions } from \"../models/domain/storageOptions\";\n\nexport abstract class AbstractStorageService {\n  abstract get<T>(key: string, options?: StorageOptions): Promise<T>;\n  abstract has(key: string, options?: StorageOptions): Promise<boolean>;\n  abstract save<T>(key: string, obj: T, options?: StorageOptions): Promise<void>;\n  abstract remove(key: string, options?: StorageOptions): Promise<void>;\n}\n","import { Account } from \"../models/domain/account\";\n\nexport class AccountFactory<T extends Account = Account> {\n  private accountConstructor: new (init: Partial<T>) => T;\n\n  constructor(accountConstructor: new (init: Partial<T>) => T) {\n    this.accountConstructor = accountConstructor;\n  }\n\n  create(args: Partial<T>) {\n    return new this.accountConstructor(args);\n  }\n}\n","import { GlobalState } from \"../models/domain/globalState\";\n\nexport class GlobalStateFactory<T extends GlobalState = GlobalState> {\n  private globalStateConstructor: new (init: Partial<T>) => T;\n\n  constructor(globalStateConstructor: new (init: Partial<T>) => T) {\n    this.globalStateConstructor = globalStateConstructor;\n  }\n\n  create(args?: Partial<T>) {\n    return new this.globalStateConstructor(args);\n  }\n}\n","import { Account } from \"../models/domain/account\";\nimport { GlobalState } from \"../models/domain/globalState\";\n\nimport { AccountFactory } from \"./accountFactory\";\nimport { GlobalStateFactory } from \"./globalStateFactory\";\n\nexport class StateFactory<\n  TGlobal extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  private globalStateFactory: GlobalStateFactory<TGlobal>;\n  private accountFactory: AccountFactory<TAccount>;\n\n  constructor(\n    globalStateConstructor: new (init: Partial<TGlobal>) => TGlobal,\n    accountConstructor: new (init: Partial<TAccount>) => TAccount\n  ) {\n    this.globalStateFactory = new GlobalStateFactory(globalStateConstructor);\n    this.accountFactory = new AccountFactory(accountConstructor);\n  }\n\n  createGlobal(args: Partial<TGlobal>): TGlobal {\n    return this.globalStateFactory.create(args);\n  }\n\n  createAccount(args: Partial<TAccount>): TAccount {\n    return this.accountFactory.create(args);\n  }\n}\n","export class EnvironmentUrls {\n  base: string = null;\n  api: string = null;\n  identity: string = null;\n  icons: string = null;\n  notifications: string = null;\n  events: string = null;\n  webVault: string = null;\n  keyConnector: string = null;\n}\n","import { AuthenticationStatus } from \"../../enums/authenticationStatus\";\nimport { KdfType } from \"../../enums/kdfType\";\nimport { UriMatchType } from \"../../enums/uriMatchType\";\nimport { CipherData } from \"../data/cipherData\";\nimport { CollectionData } from \"../data/collectionData\";\nimport { EncryptedOrganizationKeyData } from \"../data/encryptedOrganizationKeyData\";\nimport { EventData } from \"../data/eventData\";\nimport { FolderData } from \"../data/folderData\";\nimport { OrganizationData } from \"../data/organizationData\";\nimport { PolicyData } from \"../data/policyData\";\nimport { ProviderData } from \"../data/providerData\";\nimport { SendData } from \"../data/sendData\";\nimport { CipherView } from \"../view/cipherView\";\nimport { CollectionView } from \"../view/collectionView\";\nimport { SendView } from \"../view/sendView\";\n\nimport { EncString } from \"./encString\";\nimport { EnvironmentUrls } from \"./environmentUrls\";\nimport { GeneratedPasswordHistory } from \"./generatedPasswordHistory\";\nimport { Policy } from \"./policy\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: TEncrypted;\n  decrypted?: TDecrypted;\n  decryptedSerialized?: string;\n}\n\nexport class DataEncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: { [id: string]: TEncrypted };\n  decrypted?: TDecrypted[];\n}\n\n// This is a temporary structure to handle migrated `DataEncryptionPair` to\n//  avoid needing a data migration at this stage. It should be replaced with\n//  proper data migrations when `DataEncryptionPair` is deprecated.\nexport class TemporaryDataEncryption<TEncrypted> {\n  encrypted?: { [id: string]: TEncrypted };\n}\n\nexport class AccountData {\n  ciphers?: DataEncryptionPair<CipherData, CipherView> = new DataEncryptionPair<\n    CipherData,\n    CipherView\n  >();\n  folders? = new TemporaryDataEncryption<FolderData>();\n  localData?: any;\n  sends?: DataEncryptionPair<SendData, SendView> = new DataEncryptionPair<SendData, SendView>();\n  collections?: DataEncryptionPair<CollectionData, CollectionView> = new DataEncryptionPair<\n    CollectionData,\n    CollectionView\n  >();\n  policies?: DataEncryptionPair<PolicyData, Policy> = new DataEncryptionPair<PolicyData, Policy>();\n  passwordGenerationHistory?: EncryptionPair<\n    GeneratedPasswordHistory[],\n    GeneratedPasswordHistory[]\n  > = new EncryptionPair<GeneratedPasswordHistory[], GeneratedPasswordHistory[]>();\n  addEditCipherInfo?: any;\n  eventCollection?: EventData[];\n  organizations?: { [id: string]: OrganizationData };\n  providers?: { [id: string]: ProviderData };\n}\n\nexport class AccountKeys {\n  cryptoMasterKey?: SymmetricCryptoKey;\n  cryptoMasterKeyAuto?: string;\n  cryptoMasterKeyB64?: string;\n  cryptoMasterKeyBiometric?: string;\n  cryptoSymmetricKey?: EncryptionPair<string, SymmetricCryptoKey> = new EncryptionPair<\n    string,\n    SymmetricCryptoKey\n  >();\n  organizationKeys?: EncryptionPair<\n    { [orgId: string]: EncryptedOrganizationKeyData },\n    Map<string, SymmetricCryptoKey>\n  > = new EncryptionPair<\n    { [orgId: string]: EncryptedOrganizationKeyData },\n    Map<string, SymmetricCryptoKey>\n  >();\n  providerKeys?: EncryptionPair<any, Map<string, SymmetricCryptoKey>> = new EncryptionPair<\n    any,\n    Map<string, SymmetricCryptoKey>\n  >();\n  privateKey?: EncryptionPair<string, ArrayBuffer> = new EncryptionPair<string, ArrayBuffer>();\n  legacyEtmKey?: SymmetricCryptoKey;\n  publicKey?: ArrayBuffer;\n  publicKeySerialized?: string;\n  apiKeyClientSecret?: string;\n}\n\nexport class AccountProfile {\n  apiKeyClientId?: string;\n  authenticationStatus?: AuthenticationStatus;\n  convertAccountToKeyConnector?: boolean;\n  email?: string;\n  emailVerified?: boolean;\n  entityId?: string;\n  entityType?: string;\n  everBeenUnlocked?: boolean;\n  forcePasswordReset?: boolean;\n  hasPremiumPersonally?: boolean;\n  hasPremiumFromOrganization?: boolean;\n  lastSync?: string;\n  userId?: string;\n  usesKeyConnector?: boolean;\n  keyHash?: string;\n  kdfIterations?: number;\n  kdfType?: KdfType;\n}\n\nexport class AccountSettings {\n  autoConfirmFingerPrints?: boolean;\n  autoFillOnPageLoadDefault?: boolean;\n  biometricLocked?: boolean;\n  biometricUnlock?: boolean;\n  clearClipboard?: number;\n  collapsedGroupings?: string[];\n  defaultUriMatch?: UriMatchType;\n  disableAddLoginNotification?: boolean;\n  disableAutoBiometricsPrompt?: boolean;\n  disableAutoTotpCopy?: boolean;\n  disableBadgeCounter?: boolean;\n  disableChangedPasswordNotification?: boolean;\n  disableContextMenuItem?: boolean;\n  disableGa?: boolean;\n  dontShowCardsCurrentTab?: boolean;\n  dontShowIdentitiesCurrentTab?: boolean;\n  enableAlwaysOnTop?: boolean;\n  enableAutoFillOnPageLoad?: boolean;\n  enableBiometric?: boolean;\n  enableFullWidth?: boolean;\n  enableGravitars?: boolean;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  equivalentDomains?: any;\n  minimizeOnCopyToClipboard?: boolean;\n  neverDomains?: { [id: string]: any };\n  passwordGenerationOptions?: any;\n  usernameGenerationOptions?: any;\n  generatorOptions?: any;\n  pinProtected?: EncryptionPair<string, EncString> = new EncryptionPair<string, EncString>();\n  protectedPin?: string;\n  settings?: any; // TODO: Merge whatever is going on here into the AccountSettings model properly\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string = \"lock\";\n}\n\nexport class AccountTokens {\n  accessToken?: string;\n  decodedToken?: any;\n  refreshToken?: string;\n  securityStamp?: string;\n}\n\nexport class Account {\n  data?: AccountData = new AccountData();\n  keys?: AccountKeys = new AccountKeys();\n  profile?: AccountProfile = new AccountProfile();\n  settings?: AccountSettings = new AccountSettings();\n  tokens?: AccountTokens = new AccountTokens();\n\n  constructor(init: Partial<Account>) {\n    Object.assign(this, {\n      data: {\n        ...new AccountData(),\n        ...init?.data,\n      },\n      keys: {\n        ...new AccountKeys(),\n        ...init?.keys,\n      },\n      profile: {\n        ...new AccountProfile(),\n        ...init?.profile,\n      },\n      settings: {\n        ...new AccountSettings(),\n        ...init?.settings,\n      },\n      tokens: {\n        ...new AccountTokens(),\n        ...init?.tokens,\n      },\n    });\n  }\n}\n","export class WindowState {\n  width?: number;\n  height?: number;\n  isMaximized?: boolean;\n  // TODO: displayBounds is an Electron.Rectangle.\n  // We need to establish some kind of client-specific global state, similiar to the way we already extend a base Account.\n  displayBounds: any;\n  x?: number;\n  y?: number;\n}\n","import { StateVersion } from \"../../enums/stateVersion\";\nimport { ThemeType } from \"../../enums/themeType\";\n\nimport { EnvironmentUrls } from \"./environmentUrls\";\nimport { WindowState } from \"./windowState\";\n\nexport class GlobalState {\n  enableAlwaysOnTop?: boolean;\n  installedVersion?: string;\n  locale?: string;\n  organizationInvitation?: any;\n  ssoCodeVerifier?: string;\n  ssoOrganizationIdentifier?: string;\n  ssoState?: string;\n  rememberedEmail?: string;\n  theme?: ThemeType = ThemeType.System;\n  window?: WindowState = new WindowState();\n  twoFactorToken?: string;\n  disableFavicon?: boolean;\n  biometricAwaitingAcceptance?: boolean;\n  biometricFingerprintValidated?: boolean;\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string;\n  loginRedirect?: any;\n  mainWindowSize?: number;\n  enableBiometrics?: boolean;\n  biometricText?: string;\n  noAutoPromptBiometrics?: boolean;\n  noAutoPromptBiometricsText?: string;\n  stateVersion: StateVersion = StateVersion.One;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  enableTray?: boolean;\n  enableMinimizeToTray?: boolean;\n  enableCloseToTray?: boolean;\n  enableStartToTray?: boolean;\n  openAtLogin?: boolean;\n  alwaysShowDock?: boolean;\n  enableBrowserIntegration?: boolean;\n  enableBrowserIntegrationFingerprint?: boolean;\n}\n","import { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { DeviceType } from \"../../enums/deviceType\";\n\nexport class DeviceRequest {\n  type: DeviceType;\n  name: string;\n  identifier: string;\n  pushToken?: string;\n\n  constructor(appId: string, platformUtilsService: PlatformUtilsService) {\n    this.type = platformUtilsService.getDevice();\n    this.name = platformUtilsService.getDeviceString();\n    this.identifier = appId;\n    this.pushToken = null;\n  }\n}\n","import { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport abstract class TokenRequest {\n  protected device?: DeviceRequest;\n\n  constructor(protected twoFactor: TokenRequestTwoFactor, device?: DeviceRequest) {\n    this.device = device != null ? device : null;\n  }\n\n  // eslint-disable-next-line\n  alterIdentityTokenHeaders(headers: Headers) {\n    // Implemented in subclass if required\n  }\n\n  setTwoFactor(twoFactor: TokenRequestTwoFactor) {\n    this.twoFactor = twoFactor;\n  }\n\n  protected toIdentityToken(clientId: string) {\n    const obj: any = {\n      scope: \"api offline_access\",\n      client_id: clientId,\n    };\n\n    if (this.device) {\n      obj.deviceType = this.device.type;\n      obj.deviceIdentifier = this.device.identifier;\n      obj.deviceName = this.device.name;\n      // no push tokens for browser apps yet\n      // obj.devicePushToken = this.device.pushToken;\n    }\n\n    if (this.twoFactor.token && this.twoFactor.provider != null) {\n      obj.twoFactorToken = this.twoFactor.token;\n      obj.twoFactorProvider = this.twoFactor.provider;\n      obj.twoFactorRemember = this.twoFactor.remember ? \"1\" : \"0\";\n    }\n\n    return obj;\n  }\n}\n","import { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest } from \"./tokenRequest\";\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport class ApiTokenRequest extends TokenRequest {\n  constructor(\n    public clientId: string,\n    public clientSecret: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken() {\n    const obj = super.toIdentityToken(this.clientId);\n\n    obj.scope = this.clientId.startsWith(\"organization\") ? \"api.organization\" : \"api\";\n    obj.grant_type = \"client_credentials\";\n    obj.client_secret = this.clientSecret;\n\n    return obj;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class ApiKeyResponse extends BaseResponse {\n  apiKey: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.apiKey = this.getResponseProperty(\"ApiKey\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class AttachmentResponse extends BaseResponse {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class CardApi extends BaseResponse {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.cardholderName = this.getResponseProperty(\"CardholderName\");\n    this.brand = this.getResponseProperty(\"Brand\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.expMonth = this.getResponseProperty(\"ExpMonth\");\n    this.expYear = this.getResponseProperty(\"ExpYear\");\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class FieldApi extends BaseResponse {\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.value = this.getResponseProperty(\"Value\");\n    this.linkedId = this.getResponseProperty(\"linkedId\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class IdentityApi extends BaseResponse {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.title = this.getResponseProperty(\"Title\");\n    this.firstName = this.getResponseProperty(\"FirstName\");\n    this.middleName = this.getResponseProperty(\"MiddleName\");\n    this.lastName = this.getResponseProperty(\"LastName\");\n    this.address1 = this.getResponseProperty(\"Address1\");\n    this.address2 = this.getResponseProperty(\"Address2\");\n    this.address3 = this.getResponseProperty(\"Address3\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.company = this.getResponseProperty(\"Company\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.phone = this.getResponseProperty(\"Phone\");\n    this.ssn = this.getResponseProperty(\"SSN\");\n    this.username = this.getResponseProperty(\"Username\");\n    this.passportNumber = this.getResponseProperty(\"PassportNumber\");\n    this.licenseNumber = this.getResponseProperty(\"LicenseNumber\");\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class LoginUriApi extends BaseResponse {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.uri = this.getResponseProperty(\"Uri\");\n    const match = this.getResponseProperty(\"Match\");\n    this.match = match != null ? match : null;\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nimport { LoginUriApi } from \"./loginUriApi\";\n\nexport class LoginApi extends BaseResponse {\n  uris: LoginUriApi[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.username = this.getResponseProperty(\"Username\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.passwordRevisionDate = this.getResponseProperty(\"PasswordRevisionDate\");\n    this.totp = this.getResponseProperty(\"Totp\");\n    this.autofillOnPageLoad = this.getResponseProperty(\"AutofillOnPageLoad\");\n\n    const uris = this.getResponseProperty(\"Uris\");\n    if (uris != null) {\n      this.uris = uris.map((u: any) => new LoginUriApi(u));\n    }\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class SecureNoteApi extends BaseResponse {\n  type: SecureNoteType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class PasswordHistoryResponse extends BaseResponse {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.password = this.getResponseProperty(\"Password\");\n    this.lastUsedDate = this.getResponseProperty(\"LastUsedDate\");\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CardApi } from \"../api/cardApi\";\nimport { FieldApi } from \"../api/fieldApi\";\nimport { IdentityApi } from \"../api/identityApi\";\nimport { LoginApi } from \"../api/loginApi\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\n\nimport { AttachmentResponse } from \"./attachmentResponse\";\nimport { BaseResponse } from \"./baseResponse\";\nimport { PasswordHistoryResponse } from \"./passwordHistoryResponse\";\n\nexport class CipherResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  type: number;\n  name: string;\n  notes: string;\n  fields: FieldApi[];\n  login: LoginApi;\n  card: CardApi;\n  identity: IdentityApi;\n  secureNote: SecureNoteApi;\n  favorite: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  revisionDate: string;\n  attachments: AttachmentResponse[];\n  passwordHistory: PasswordHistoryResponse[];\n  collectionIds: string[];\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.folderId = this.getResponseProperty(\"FolderId\") || null;\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.favorite = this.getResponseProperty(\"Favorite\") || false;\n    this.edit = !!this.getResponseProperty(\"Edit\");\n    if (this.getResponseProperty(\"ViewPassword\") == null) {\n      this.viewPassword = true;\n    } else {\n      this.viewPassword = this.getResponseProperty(\"ViewPassword\");\n    }\n    this.organizationUseTotp = this.getResponseProperty(\"OrganizationUseTotp\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.deletedDate = this.getResponseProperty(\"DeletedDate\");\n\n    const login = this.getResponseProperty(\"Login\");\n    if (login != null) {\n      this.login = new LoginApi(login);\n    }\n\n    const card = this.getResponseProperty(\"Card\");\n    if (card != null) {\n      this.card = new CardApi(card);\n    }\n\n    const identity = this.getResponseProperty(\"Identity\");\n    if (identity != null) {\n      this.identity = new IdentityApi(identity);\n    }\n\n    const secureNote = this.getResponseProperty(\"SecureNote\");\n    if (secureNote != null) {\n      this.secureNote = new SecureNoteApi(secureNote);\n    }\n\n    const fields = this.getResponseProperty(\"Fields\");\n    if (fields != null) {\n      this.fields = fields.map((f: any) => new FieldApi(f));\n    }\n\n    const attachments = this.getResponseProperty(\"Attachments\");\n    if (attachments != null) {\n      this.attachments = attachments.map((a: any) => new AttachmentResponse(a));\n    }\n\n    const passwordHistory = this.getResponseProperty(\"PasswordHistory\");\n    if (passwordHistory != null) {\n      this.passwordHistory = passwordHistory.map((h: any) => new PasswordHistoryResponse(h));\n    }\n\n    this.reprompt = this.getResponseProperty(\"Reprompt\") || CipherRepromptType.None;\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\n\nexport class AttachmentUploadDataResponse extends BaseResponse {\n  attachmentId: string;\n  fileUploadType: FileUploadType;\n  cipherResponse: CipherResponse;\n  cipherMiniResponse: CipherResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.attachmentId = this.getResponseProperty(\"AttachmentId\");\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const cipherResponse = this.getResponseProperty(\"CipherResponse\");\n    const cipherMiniResponse = this.getResponseProperty(\"CipherMiniResponse\");\n    this.cipherResponse = cipherResponse == null ? null : new CipherResponse(cipherResponse);\n    this.cipherMiniResponse =\n      cipherMiniResponse == null ? null : new CipherResponse(cipherMiniResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { TransactionType } from \"../../enums/transactionType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class BillingResponse extends BaseResponse {\n  balance: number;\n  paymentSource: BillingSourceResponse;\n  invoices: BillingInvoiceResponse[] = [];\n  transactions: BillingTransactionResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.balance = this.getResponseProperty(\"Balance\");\n    const paymentSource = this.getResponseProperty(\"PaymentSource\");\n    const transactions = this.getResponseProperty(\"Transactions\");\n    const invoices = this.getResponseProperty(\"Invoices\");\n    this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n    if (transactions != null) {\n      this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n    }\n    if (invoices != null) {\n      this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n    }\n  }\n}\n\nexport class BillingSourceResponse extends BaseResponse {\n  type: PaymentMethodType;\n  cardBrand: string;\n  description: string;\n  needsVerification: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.cardBrand = this.getResponseProperty(\"CardBrand\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.needsVerification = this.getResponseProperty(\"NeedsVerification\");\n  }\n}\n\nexport class BillingInvoiceResponse extends BaseResponse {\n  url: string;\n  pdfUrl: string;\n  number: string;\n  paid: boolean;\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.url = this.getResponseProperty(\"Url\");\n    this.pdfUrl = this.getResponseProperty(\"PdfUrl\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.paid = this.getResponseProperty(\"Paid\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n\nexport class BillingTransactionResponse extends BaseResponse {\n  createdDate: string;\n  amount: number;\n  refunded: boolean;\n  partiallyRefunded: boolean;\n  refundedAmount: number;\n  type: TransactionType;\n  paymentMethodType: PaymentMethodType;\n  details: string;\n\n  constructor(response: any) {\n    super(response);\n    this.createdDate = this.getResponseProperty(\"CreatedDate\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.refunded = this.getResponseProperty(\"Refunded\");\n    this.partiallyRefunded = this.getResponseProperty(\"PartiallyRefunded\");\n    this.refundedAmount = this.getResponseProperty(\"RefundedAmount\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.paymentMethodType = this.getResponseProperty(\"PaymentMethodType\");\n    this.details = this.getResponseProperty(\"Details\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { BillingInvoiceResponse, BillingTransactionResponse } from \"./billingResponse\";\n\nexport class BillingHistoryResponse extends BaseResponse {\n  invoices: BillingInvoiceResponse[] = [];\n  transactions: BillingTransactionResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const transactions = this.getResponseProperty(\"Transactions\");\n    const invoices = this.getResponseProperty(\"Invoices\");\n    if (transactions != null) {\n      this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n    }\n    if (invoices != null) {\n      this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n    }\n  }\n\n  get hasNoHistory() {\n    return this.invoices.length == 0 && this.transactions.length == 0;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { BillingSourceResponse } from \"./billingResponse\";\n\nexport class BillingPaymentResponse extends BaseResponse {\n  balance: number;\n  paymentSource: BillingSourceResponse;\n\n  constructor(response: any) {\n    super(response);\n    this.balance = this.getResponseProperty(\"Balance\");\n    const paymentSource = this.getResponseProperty(\"PaymentSource\");\n    this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class BreachAccountResponse extends BaseResponse {\n  addedDate: string;\n  breachDate: string;\n  dataClasses: string[];\n  description: string;\n  domain: string;\n  isActive: boolean;\n  isVerified: boolean;\n  logoPath: string;\n  modifiedDate: string;\n  name: string;\n  pwnCount: number;\n  title: string;\n\n  constructor(response: any) {\n    super(response);\n    this.addedDate = this.getResponseProperty(\"AddedDate\");\n    this.breachDate = this.getResponseProperty(\"BreachDate\");\n    this.dataClasses = this.getResponseProperty(\"DataClasses\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.domain = this.getResponseProperty(\"Domain\");\n    this.isActive = this.getResponseProperty(\"IsActive\");\n    this.isVerified = this.getResponseProperty(\"IsVerified\");\n    this.logoPath = this.getResponseProperty(\"LogoPath\");\n    this.modifiedDate = this.getResponseProperty(\"ModifiedDate\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.pwnCount = this.getResponseProperty(\"PwnCount\");\n    this.title = this.getResponseProperty(\"Title\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SelectionReadOnlyResponse extends BaseResponse {\n  id: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.readOnly = this.getResponseProperty(\"ReadOnly\");\n    this.hidePasswords = this.getResponseProperty(\"HidePasswords\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class CollectionResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class CollectionDetailsResponse extends CollectionResponse {\n  readOnly: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.readOnly = this.getResponseProperty(\"ReadOnly\") || false;\n  }\n}\n\nexport class CollectionGroupDetailsResponse extends CollectionResponse {\n  groups: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const groups = this.getResponseProperty(\"Groups\");\n    if (groups != null) {\n      this.groups = groups.map((g: any) => new SelectionReadOnlyResponse(g));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class DeviceVerificationResponse extends BaseResponse {\n  isDeviceVerificationSectionEnabled: boolean;\n  unknownDeviceVerificationEnabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.isDeviceVerificationSectionEnabled = this.getResponseProperty(\n      \"IsDeviceVerificationSectionEnabled\"\n    );\n    this.unknownDeviceVerificationEnabled = this.getResponseProperty(\n      \"UnknownDeviceVerificationEnabled\"\n    );\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class GlobalDomainResponse extends BaseResponse {\n  type: number;\n  domains: string[];\n  excluded: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.domains = this.getResponseProperty(\"Domains\");\n    this.excluded = this.getResponseProperty(\"Excluded\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { GlobalDomainResponse } from \"./globalDomainResponse\";\n\nexport class DomainsResponse extends BaseResponse {\n  equivalentDomains: string[][];\n  globalEquivalentDomains: GlobalDomainResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.equivalentDomains = this.getResponseProperty(\"EquivalentDomains\");\n    const globalEquivalentDomains = this.getResponseProperty(\"GlobalEquivalentDomains\");\n    if (globalEquivalentDomains != null) {\n      this.globalEquivalentDomains = globalEquivalentDomains.map(\n        (d: any) => new GlobalDomainResponse(d)\n      );\n    } else {\n      this.globalEquivalentDomains = [];\n    }\n  }\n}\n","import { EmergencyAccessStatusType } from \"../../enums/emergencyAccessStatusType\";\nimport { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\nimport { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\n\nexport class EmergencyAccessGranteeDetailsResponse extends BaseResponse {\n  id: string;\n  granteeId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.granteeId = this.getResponseProperty(\"GranteeId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessGrantorDetailsResponse extends BaseResponse {\n  id: string;\n  grantorId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.grantorId = this.getResponseProperty(\"GrantorId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessTakeoverResponse extends BaseResponse {\n  keyEncrypted: string;\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n\nexport class EmergencyAccessViewResponse extends BaseResponse {\n  keyEncrypted: string;\n  ciphers: CipherResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n  }\n}\n","import { DeviceType } from \"../../enums/deviceType\";\nimport { EventType } from \"../../enums/eventType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class EventResponse extends BaseResponse {\n  type: EventType;\n  userId: string;\n  organizationId: string;\n  providerId: string;\n  cipherId: string;\n  collectionId: string;\n  groupId: string;\n  policyId: string;\n  organizationUserId: string;\n  providerUserId: string;\n  providerOrganizationId: string;\n  actingUserId: string;\n  date: string;\n  deviceType: DeviceType;\n  ipAddress: string;\n  installationId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.cipherId = this.getResponseProperty(\"CipherId\");\n    this.collectionId = this.getResponseProperty(\"CollectionId\");\n    this.groupId = this.getResponseProperty(\"GroupId\");\n    this.policyId = this.getResponseProperty(\"PolicyId\");\n    this.organizationUserId = this.getResponseProperty(\"OrganizationUserId\");\n    this.providerUserId = this.getResponseProperty(\"ProviderUserId\");\n    this.providerOrganizationId = this.getResponseProperty(\"ProviderOrganizationId\");\n    this.actingUserId = this.getResponseProperty(\"ActingUserId\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.deviceType = this.getResponseProperty(\"DeviceType\");\n    this.ipAddress = this.getResponseProperty(\"IpAddress\");\n    this.installationId = this.getResponseProperty(\"InstallationId\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class GroupResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  accessAll: boolean;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class GroupDetailsResponse extends GroupResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityCaptchaResponse extends BaseResponse {\n  siteKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.siteKey = this.getResponseProperty(\"HCaptcha_SiteKey\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityTokenResponse extends BaseResponse {\n  accessToken: string;\n  expiresIn: number;\n  refreshToken: string;\n  tokenType: string;\n\n  resetMasterPassword: boolean;\n  privateKey: string;\n  key: string;\n  twoFactorToken: string;\n  kdf: KdfType;\n  kdfIterations: number;\n  forcePasswordReset: boolean;\n  apiUseKeyConnector: boolean;\n  keyConnectorUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.accessToken = response.access_token;\n    this.expiresIn = response.expires_in;\n    this.refreshToken = response.refresh_token;\n    this.tokenType = response.token_type;\n\n    this.resetMasterPassword = this.getResponseProperty(\"ResetMasterPassword\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.twoFactorToken = this.getResponseProperty(\"TwoFactorToken\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\");\n    this.apiUseKeyConnector = this.getResponseProperty(\"ApiUseKeyConnector\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityTwoFactorResponse extends BaseResponse {\n  twoFactorProviders: TwoFactorProviderType[];\n  twoFactorProviders2 = new Map<TwoFactorProviderType, { [key: string]: string }>();\n  captchaToken: string;\n\n  constructor(response: any) {\n    super(response);\n    this.captchaToken = this.getResponseProperty(\"CaptchaBypassToken\");\n    this.twoFactorProviders = this.getResponseProperty(\"TwoFactorProviders\");\n    const twoFactorProviders2 = this.getResponseProperty(\"TwoFactorProviders2\");\n    if (twoFactorProviders2 != null) {\n      for (const prop in twoFactorProviders2) {\n        // eslint-disable-next-line\n        if (twoFactorProviders2.hasOwnProperty(prop)) {\n          this.twoFactorProviders2.set(parseInt(prop, null), twoFactorProviders2[prop]);\n        }\n      }\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class KeyConnectorUserKeyResponse extends BaseResponse {\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class ListResponse<T> extends BaseResponse {\n  data: T[];\n  continuationToken: string;\n\n  constructor(response: any, t: new (dataResponse: any) => T) {\n    super(response);\n    const data = this.getResponseProperty(\"Data\");\n    this.data = data == null ? [] : data.map((dr: any) => new t(dr));\n    this.continuationToken = this.getResponseProperty(\"ContinuationToken\");\n  }\n}\n","import {\n  OpenIdConnectRedirectBehavior,\n  Saml2BindingType,\n  Saml2NameIdFormat,\n  Saml2SigningBehavior,\n  SsoType,\n} from \"../../enums/ssoEnums\";\nimport { BaseResponse } from \"../response/baseResponse\";\nimport { SsoConfigView } from \"../view/ssoConfigView\";\n\nexport class SsoConfigApi extends BaseResponse {\n  static fromView(view: SsoConfigView, api = new SsoConfigApi()) {\n    api.configType = view.configType;\n\n    api.keyConnectorEnabled = view.keyConnectorEnabled;\n    api.keyConnectorUrl = view.keyConnectorUrl;\n\n    if (api.configType === SsoType.OpenIdConnect) {\n      api.authority = view.openId.authority;\n      api.clientId = view.openId.clientId;\n      api.clientSecret = view.openId.clientSecret;\n      api.metadataAddress = view.openId.metadataAddress;\n      api.redirectBehavior = view.openId.redirectBehavior;\n      api.getClaimsFromUserInfoEndpoint = view.openId.getClaimsFromUserInfoEndpoint;\n      api.additionalScopes = view.openId.additionalScopes;\n      api.additionalUserIdClaimTypes = view.openId.additionalUserIdClaimTypes;\n      api.additionalEmailClaimTypes = view.openId.additionalEmailClaimTypes;\n      api.additionalNameClaimTypes = view.openId.additionalNameClaimTypes;\n      api.acrValues = view.openId.acrValues;\n      api.expectedReturnAcrValue = view.openId.expectedReturnAcrValue;\n    } else if (api.configType === SsoType.Saml2) {\n      api.spNameIdFormat = view.saml.spNameIdFormat;\n      api.spOutboundSigningAlgorithm = view.saml.spOutboundSigningAlgorithm;\n      api.spSigningBehavior = view.saml.spSigningBehavior;\n      api.spMinIncomingSigningAlgorithm = view.saml.spMinIncomingSigningAlgorithm;\n      api.spWantAssertionsSigned = view.saml.spWantAssertionsSigned;\n      api.spValidateCertificates = view.saml.spValidateCertificates;\n\n      api.idpEntityId = view.saml.idpEntityId;\n      api.idpBindingType = view.saml.idpBindingType;\n      api.idpSingleSignOnServiceUrl = view.saml.idpSingleSignOnServiceUrl;\n      api.idpSingleLogoutServiceUrl = view.saml.idpSingleLogoutServiceUrl;\n      api.idpX509PublicCert = view.saml.idpX509PublicCert;\n      api.idpOutboundSigningAlgorithm = view.saml.idpOutboundSigningAlgorithm;\n      api.idpAllowUnsolicitedAuthnResponse = view.saml.idpAllowUnsolicitedAuthnResponse;\n      api.idpWantAuthnRequestsSigned = view.saml.idpWantAuthnRequestsSigned;\n\n      // Value is inverted in the api model (disable instead of allow)\n      api.idpDisableOutboundLogoutRequests = !view.saml.idpAllowOutboundLogoutRequests;\n    }\n\n    return api;\n  }\n  configType: SsoType;\n\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  // OpenId\n  authority: string;\n  clientId: string;\n  clientSecret: string;\n  metadataAddress: string;\n  redirectBehavior: OpenIdConnectRedirectBehavior;\n  getClaimsFromUserInfoEndpoint: boolean;\n  additionalScopes: string;\n  additionalUserIdClaimTypes: string;\n  additionalEmailClaimTypes: string;\n  additionalNameClaimTypes: string;\n  acrValues: string;\n  expectedReturnAcrValue: string;\n\n  // SAML\n  spNameIdFormat: Saml2NameIdFormat;\n  spOutboundSigningAlgorithm: string;\n  spSigningBehavior: Saml2SigningBehavior;\n  spMinIncomingSigningAlgorithm: boolean;\n  spWantAssertionsSigned: boolean;\n  spValidateCertificates: boolean;\n\n  idpEntityId: string;\n  idpBindingType: Saml2BindingType;\n  idpSingleSignOnServiceUrl: string;\n  idpSingleLogoutServiceUrl: string;\n  idpX509PublicCert: string;\n  idpOutboundSigningAlgorithm: string;\n  idpAllowUnsolicitedAuthnResponse: boolean;\n  idpDisableOutboundLogoutRequests: boolean;\n  idpWantAuthnRequestsSigned: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n\n    this.configType = this.getResponseProperty(\"ConfigType\");\n\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n\n    this.authority = this.getResponseProperty(\"Authority\");\n    this.clientId = this.getResponseProperty(\"ClientId\");\n    this.clientSecret = this.getResponseProperty(\"ClientSecret\");\n    this.metadataAddress = this.getResponseProperty(\"MetadataAddress\");\n    this.redirectBehavior = this.getResponseProperty(\"RedirectBehavior\");\n    this.getClaimsFromUserInfoEndpoint = this.getResponseProperty(\"GetClaimsFromUserInfoEndpoint\");\n    this.additionalScopes = this.getResponseProperty(\"AdditionalScopes\");\n    this.additionalUserIdClaimTypes = this.getResponseProperty(\"AdditionalUserIdClaimTypes\");\n    this.additionalEmailClaimTypes = this.getResponseProperty(\"AdditionalEmailClaimTypes\");\n    this.additionalNameClaimTypes = this.getResponseProperty(\"AdditionalNameClaimTypes\");\n    this.acrValues = this.getResponseProperty(\"AcrValues\");\n    this.expectedReturnAcrValue = this.getResponseProperty(\"ExpectedReturnAcrValue\");\n\n    this.spNameIdFormat = this.getResponseProperty(\"SpNameIdFormat\");\n    this.spOutboundSigningAlgorithm = this.getResponseProperty(\"SpOutboundSigningAlgorithm\");\n    this.spSigningBehavior = this.getResponseProperty(\"SpSigningBehavior\");\n    this.spMinIncomingSigningAlgorithm = this.getResponseProperty(\"SpMinIncomingSigningAlgorithm\");\n    this.spWantAssertionsSigned = this.getResponseProperty(\"SpWantAssertionsSigned\");\n    this.spValidateCertificates = this.getResponseProperty(\"SpValidateCertificates\");\n\n    this.idpEntityId = this.getResponseProperty(\"IdpEntityId\");\n    this.idpBindingType = this.getResponseProperty(\"IdpBindingType\");\n    this.idpSingleSignOnServiceUrl = this.getResponseProperty(\"IdpSingleSignOnServiceUrl\");\n    this.idpSingleLogoutServiceUrl = this.getResponseProperty(\"IdpSingleLogoutServiceUrl\");\n    this.idpX509PublicCert = this.getResponseProperty(\"IdpX509PublicCert\");\n    this.idpOutboundSigningAlgorithm = this.getResponseProperty(\"IdpOutboundSigningAlgorithm\");\n    this.idpAllowUnsolicitedAuthnResponse = this.getResponseProperty(\n      \"IdpAllowUnsolicitedAuthnResponse\"\n    );\n    this.idpDisableOutboundLogoutRequests = this.getResponseProperty(\n      \"IdpDisableOutboundLogoutRequests\"\n    );\n    this.idpWantAuthnRequestsSigned = this.getResponseProperty(\"IdpWantAuthnRequestsSigned\");\n  }\n}\n","import { SsoConfigApi } from \"../../api/ssoConfigApi\";\nimport { BaseResponse } from \"../baseResponse\";\n\nexport class OrganizationSsoResponse extends BaseResponse {\n  enabled: boolean;\n  data: SsoConfigApi;\n  urls: SsoUrls;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.data =\n      this.getResponseProperty(\"Data\") != null\n        ? new SsoConfigApi(this.getResponseProperty(\"Data\"))\n        : null;\n    this.urls = new SsoUrls(this.getResponseProperty(\"Urls\"));\n  }\n}\n\nclass SsoUrls extends BaseResponse {\n  callbackPath: string;\n  signedOutCallbackPath: string;\n  spEntityId: string;\n  spMetadataUrl: string;\n  spAcsUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.callbackPath = this.getResponseProperty(\"CallbackPath\");\n    this.signedOutCallbackPath = this.getResponseProperty(\"SignedOutCallbackPath\");\n    this.spEntityId = this.getResponseProperty(\"SpEntityId\");\n    this.spMetadataUrl = this.getResponseProperty(\"SpMetadataUrl\");\n    this.spAcsUrl = this.getResponseProperty(\"SpAcsUrl\");\n  }\n}\n","import { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationApiKeyInformationResponse extends BaseResponse {\n  keyType: OrganizationApiKeyType;\n\n  constructor(response: any) {\n    super(response);\n    this.keyType = this.getResponseProperty(\"KeyType\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationAutoEnrollStatusResponse extends BaseResponse {\n  id: string;\n  resetPasswordEnabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.resetPasswordEnabled = this.getResponseProperty(\"ResetPasswordEnabled\");\n  }\n}\n","import { OrganizationConnectionType } from \"../../enums/organizationConnectionType\";\nimport { BillingSyncConfigApi } from \"../api/billingSyncConfigApi\";\nimport { ScimConfigApi } from \"../api/scimConfigApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\n/**API response config types for OrganizationConnectionResponse */\nexport type OrganizationConnectionConfigApis = BillingSyncConfigApi | ScimConfigApi;\n\nexport class OrganizationConnectionResponse<\n  TConfig extends OrganizationConnectionConfigApis\n> extends BaseResponse {\n  id: string;\n  type: OrganizationConnectionType;\n  organizationId: string;\n  enabled: boolean;\n  config: TConfig;\n\n  constructor(response: any, configType: { new (response: any): TConfig }) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    const rawConfig = this.getResponseProperty(\"Config\");\n    this.config = rawConfig == null ? null : new configType(rawConfig);\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class KeysResponse extends BaseResponse {\n  privateKey: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","import { KeysResponse } from \"./keysResponse\";\n\nexport class OrganizationKeysResponse extends KeysResponse {\n  constructor(response: any) {\n    super(response);\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\nimport { ProductType } from \"../../enums/productType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PlanResponse extends BaseResponse {\n  type: PlanType;\n  product: ProductType;\n  name: string;\n  isAnnual: boolean;\n  nameLocalizationKey: string;\n  descriptionLocalizationKey: string;\n  canBeUsedByBusiness: boolean;\n  baseSeats: number;\n  baseStorageGb: number;\n  maxCollections: number;\n  maxUsers: number;\n\n  hasAdditionalSeatsOption: boolean;\n  maxAdditionalSeats: number;\n  hasAdditionalStorageOption: boolean;\n  maxAdditionalStorage: number;\n  hasPremiumAccessOption: boolean;\n  trialPeriodDays: number;\n\n  hasSelfHost: boolean;\n  hasPolicies: boolean;\n  hasGroups: boolean;\n  hasDirectory: boolean;\n  hasEvents: boolean;\n  hasTotp: boolean;\n  has2fa: boolean;\n  hasApi: boolean;\n  hasSso: boolean;\n  hasResetPassword: boolean;\n  usersGetPremium: boolean;\n\n  upgradeSortOrder: number;\n  displaySortOrder: number;\n  legacyYear: number;\n  disabled: boolean;\n\n  stripePlanId: string;\n  stripeSeatPlanId: string;\n  stripeStoragePlanId: string;\n  stripePremiumAccessPlanId: string;\n  basePrice: number;\n  seatPrice: number;\n  additionalStoragePricePerGb: number;\n  premiumAccessOptionPrice: number;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.product = this.getResponseProperty(\"Product\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.isAnnual = this.getResponseProperty(\"IsAnnual\");\n    this.nameLocalizationKey = this.getResponseProperty(\"NameLocalizationKey\");\n    this.descriptionLocalizationKey = this.getResponseProperty(\"DescriptionLocalizationKey\");\n    this.canBeUsedByBusiness = this.getResponseProperty(\"CanBeUsedByBusiness\");\n    this.baseSeats = this.getResponseProperty(\"BaseSeats\");\n    this.baseStorageGb = this.getResponseProperty(\"BaseStorageGb\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxUsers = this.getResponseProperty(\"MaxUsers\");\n    this.hasAdditionalSeatsOption = this.getResponseProperty(\"HasAdditionalSeatsOption\");\n    this.maxAdditionalSeats = this.getResponseProperty(\"MaxAdditionalSeats\");\n    this.hasAdditionalStorageOption = this.getResponseProperty(\"HasAdditionalStorageOption\");\n    this.maxAdditionalStorage = this.getResponseProperty(\"MaxAdditionalStorage\");\n    this.hasPremiumAccessOption = this.getResponseProperty(\"HasPremiumAccessOption\");\n    this.trialPeriodDays = this.getResponseProperty(\"TrialPeriodDays\");\n    this.hasSelfHost = this.getResponseProperty(\"HasSelfHost\");\n    this.hasPolicies = this.getResponseProperty(\"HasPolicies\");\n    this.hasGroups = this.getResponseProperty(\"HasGroups\");\n    this.hasDirectory = this.getResponseProperty(\"HasDirectory\");\n    this.hasEvents = this.getResponseProperty(\"HasEvents\");\n    this.hasTotp = this.getResponseProperty(\"HasTotp\");\n    this.has2fa = this.getResponseProperty(\"Has2fa\");\n    this.hasApi = this.getResponseProperty(\"HasApi\");\n    this.hasSso = this.getResponseProperty(\"HasSso\");\n    this.hasResetPassword = this.getResponseProperty(\"HasResetPassword\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.upgradeSortOrder = this.getResponseProperty(\"UpgradeSortOrder\");\n    this.displaySortOrder = this.getResponseProperty(\"SortOrder\");\n    this.legacyYear = this.getResponseProperty(\"LegacyYear\");\n    this.disabled = this.getResponseProperty(\"Disabled\");\n    this.stripePlanId = this.getResponseProperty(\"StripePlanId\");\n    this.stripeSeatPlanId = this.getResponseProperty(\"StripeSeatPlanId\");\n    this.stripeStoragePlanId = this.getResponseProperty(\"StripeStoragePlanId\");\n    this.stripePremiumAccessPlanId = this.getResponseProperty(\"StripePremiumAccessPlanId\");\n    this.basePrice = this.getResponseProperty(\"BasePrice\");\n    this.seatPrice = this.getResponseProperty(\"SeatPrice\");\n    this.additionalStoragePricePerGb = this.getResponseProperty(\"AdditionalStoragePricePerGb\");\n    this.premiumAccessOptionPrice = this.getResponseProperty(\"PremiumAccessOptionPrice\");\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { PlanResponse } from \"./planResponse\";\n\nexport class OrganizationResponse extends BaseResponse {\n  id: string;\n  identifier: string;\n  name: string;\n  businessName: string;\n  businessAddress1: string;\n  businessAddress2: string;\n  businessAddress3: string;\n  businessCountry: string;\n  businessTaxNumber: string;\n  billingEmail: string;\n  plan: PlanResponse;\n  planType: PlanType;\n  seats: number;\n  maxAutoscaleSeats: number;\n  maxCollections: number;\n  maxStorageGb: number;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useResetPassword: boolean;\n  hasPublicAndPrivateKeys: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.businessAddress1 = this.getResponseProperty(\"BusinessAddress1\");\n    this.businessAddress2 = this.getResponseProperty(\"BusinessAddress2\");\n    this.businessAddress3 = this.getResponseProperty(\"BusinessAddress3\");\n    this.businessCountry = this.getResponseProperty(\"BusinessCountry\");\n    this.businessTaxNumber = this.getResponseProperty(\"BusinessTaxNumber\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n    const plan = this.getResponseProperty(\"Plan\");\n    this.plan = plan == null ? null : new PlanResponse(plan);\n    this.planType = this.getResponseProperty(\"PlanType\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxAutoscaleSeats = this.getResponseProperty(\"MaxAutoscaleSeats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationSponsorshipSyncStatusResponse extends BaseResponse {\n  lastSyncDate?: Date;\n\n  constructor(response: any) {\n    super(response);\n    const lastSyncDate = this.getResponseProperty(\"LastSyncDate\");\n    if (lastSyncDate) {\n      this.lastSyncDate = new Date(lastSyncDate);\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SubscriptionResponse extends BaseResponse {\n  storageName: string;\n  storageGb: number;\n  maxStorageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  license: any;\n  expiration: string;\n  usingInAppPurchase: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.license = this.getResponseProperty(\"License\");\n    this.expiration = this.getResponseProperty(\"Expiration\");\n    this.usingInAppPurchase = this.getResponseProperty(\"UsingInAppPurchase\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n  }\n}\n\nexport class BillingSubscriptionResponse extends BaseResponse {\n  trialStartDate: string;\n  trialEndDate: string;\n  periodStartDate: string;\n  periodEndDate: string;\n  cancelledDate: string;\n  cancelAtEndDate: boolean;\n  status: string;\n  cancelled: boolean;\n  items: BillingSubscriptionItemResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.trialEndDate = this.getResponseProperty(\"TrialStartDate\");\n    this.trialEndDate = this.getResponseProperty(\"TrialEndDate\");\n    this.periodStartDate = this.getResponseProperty(\"PeriodStartDate\");\n    this.periodEndDate = this.getResponseProperty(\"PeriodEndDate\");\n    this.cancelledDate = this.getResponseProperty(\"CancelledDate\");\n    this.cancelAtEndDate = this.getResponseProperty(\"CancelAtEndDate\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.cancelled = this.getResponseProperty(\"Cancelled\");\n    const items = this.getResponseProperty(\"Items\");\n    if (items != null) {\n      this.items = items.map((i: any) => new BillingSubscriptionItemResponse(i));\n    }\n  }\n}\n\nexport class BillingSubscriptionItemResponse extends BaseResponse {\n  name: string;\n  amount: number;\n  quantity: number;\n  interval: string;\n  sponsoredSubscriptionItem: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.quantity = this.getResponseProperty(\"Quantity\");\n    this.interval = this.getResponseProperty(\"Interval\");\n    this.sponsoredSubscriptionItem = this.getResponseProperty(\"SponsoredSubscriptionItem\");\n  }\n}\n\nexport class BillingSubscriptionUpcomingInvoiceResponse extends BaseResponse {\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n","import { OrganizationResponse } from \"./organizationResponse\";\nimport {\n  BillingSubscriptionResponse,\n  BillingSubscriptionUpcomingInvoiceResponse,\n} from \"./subscriptionResponse\";\n\nexport class OrganizationSubscriptionResponse extends OrganizationResponse {\n  storageName: string;\n  storageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  expiration: string;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n    this.expiration = this.getResponseProperty(\"Expiration\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationUserBulkPublicKeyResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class PermissionsApi extends BaseResponse {\n  accessEventLogs: boolean;\n  accessImportExport: boolean;\n  accessReports: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `createNewCollections`, `editAnyCollection`, and\n   * `deleteAnyCollection`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAllCollections: boolean;\n  createNewCollections: boolean;\n  editAnyCollection: boolean;\n  deleteAnyCollection: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `editAssignedCollections` and\n   * `deleteAssignedCollections`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAssignedCollections: boolean;\n  editAssignedCollections: boolean;\n  deleteAssignedCollections: boolean;\n  manageCiphers: boolean;\n  manageGroups: boolean;\n  manageSso: boolean;\n  managePolicies: boolean;\n  manageUsers: boolean;\n  manageResetPassword: boolean;\n  manageScim: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return this;\n    }\n    this.accessEventLogs = this.getResponseProperty(\"AccessEventLogs\");\n    this.accessImportExport = this.getResponseProperty(\"AccessImportExport\");\n    this.accessReports = this.getResponseProperty(\"AccessReports\");\n\n    // For backwards compatibility with Server <= 1.43.0\n    this.manageAllCollections = this.getResponseProperty(\"ManageAllCollections\");\n    this.manageAssignedCollections = this.getResponseProperty(\"ManageAssignedCollections\");\n\n    this.createNewCollections = this.getResponseProperty(\"CreateNewCollections\");\n    this.editAnyCollection = this.getResponseProperty(\"EditAnyCollection\");\n    this.deleteAnyCollection = this.getResponseProperty(\"DeleteAnyCollection\");\n    this.editAssignedCollections = this.getResponseProperty(\"EditAssignedCollections\");\n    this.deleteAssignedCollections = this.getResponseProperty(\"DeleteAssignedCollections\");\n\n    this.manageCiphers = this.getResponseProperty(\"ManageCiphers\");\n    this.manageGroups = this.getResponseProperty(\"ManageGroups\");\n    this.manageSso = this.getResponseProperty(\"ManageSso\");\n    this.managePolicies = this.getResponseProperty(\"ManagePolicies\");\n    this.manageUsers = this.getResponseProperty(\"ManageUsers\");\n    this.manageResetPassword = this.getResponseProperty(\"ManageResetPassword\");\n    this.manageScim = this.getResponseProperty(\"ManageScim\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class OrganizationUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: OrganizationUserType;\n  status: OrganizationUserStatusType;\n  accessAll: boolean;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n  }\n}\n\nexport class OrganizationUserUserDetailsResponse extends OrganizationUserResponse {\n  name: string;\n  email: string;\n  twoFactorEnabled: boolean;\n  usesKeyConnector: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n  }\n}\n\nexport class OrganizationUserDetailsResponse extends OrganizationUserResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n\nexport class OrganizationUserResetPasswordDetailsReponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n  resetPasswordKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.resetPasswordKey = this.getResponseProperty(\"ResetPasswordKey\");\n    this.encryptedPrivateKey = this.getResponseProperty(\"EncryptedPrivateKey\");\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ProfileOrganizationResponse extends BaseResponse {\n  id: string;\n  name: string;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useScim: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  key: string;\n  hasPublicAndPrivateKeys: boolean;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  providerId: string;\n  providerName: string;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.usePolicies = this.getResponseProperty(\"UsePolicies\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useSso = this.getResponseProperty(\"UseSso\");\n    this.useKeyConnector = this.getResponseProperty(\"UseKeyConnector\") ?? false;\n    this.useScim = this.getResponseProperty(\"UseScim\") ?? false;\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.selfHost = this.getResponseProperty(\"SelfHost\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.ssoBound = this.getResponseProperty(\"SsoBound\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.providerName = this.getResponseProperty(\"ProviderName\");\n    this.familySponsorshipFriendlyName = this.getResponseProperty(\"FamilySponsorshipFriendlyName\");\n    this.familySponsorshipAvailable = this.getResponseProperty(\"FamilySponsorshipAvailable\");\n    this.planProductType = this.getResponseProperty(\"PlanProductType\");\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\") ?? false;\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n    const familySponsorshipLastSyncDateString = this.getResponseProperty(\n      \"FamilySponsorshipLastSyncDate\"\n    );\n    if (familySponsorshipLastSyncDateString) {\n      this.familySponsorshipLastSyncDate = new Date(familySponsorshipLastSyncDateString);\n    }\n    const familySponsorshipValidUntilString = this.getResponseProperty(\n      \"FamilySponsorshipValidUntil\"\n    );\n    if (familySponsorshipValidUntilString) {\n      this.familySponsorshipValidUntil = new Date(familySponsorshipValidUntilString);\n    }\n    this.familySponsorshipToDelete = this.getResponseProperty(\"FamilySponsorshipToDelete\");\n  }\n}\n","import { ProfileOrganizationResponse } from \"./profileOrganizationResponse\";\n\nexport class ProfileProviderOrganizationResponse extends ProfileOrganizationResponse {\n  constructor(response: any) {\n    super(response);\n    this.keyConnectorEnabled = false;\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ProfileProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  key: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  permissions: PermissionsApi;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { ProfileOrganizationResponse } from \"./profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"./profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"./profileProviderResponse\";\n\nexport class ProfileResponse extends BaseResponse {\n  id: string;\n  name: string;\n  email: string;\n  emailVerified: boolean;\n  masterPasswordHint: string;\n  premiumPersonally: boolean;\n  premiumFromOrganization: boolean;\n  culture: string;\n  twoFactorEnabled: boolean;\n  key: string;\n  privateKey: string;\n  securityStamp: string;\n  forcePasswordReset: boolean;\n  usesKeyConnector: boolean;\n  organizations: ProfileOrganizationResponse[] = [];\n  providers: ProfileProviderResponse[] = [];\n  providerOrganizations: ProfileProviderOrganizationResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.emailVerified = this.getResponseProperty(\"EmailVerified\");\n    this.masterPasswordHint = this.getResponseProperty(\"MasterPasswordHint\");\n    this.premiumPersonally = this.getResponseProperty(\"Premium\");\n    this.premiumFromOrganization = this.getResponseProperty(\"PremiumFromOrganization\");\n    this.culture = this.getResponseProperty(\"Culture\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.securityStamp = this.getResponseProperty(\"SecurityStamp\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\") ?? false;\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n\n    const organizations = this.getResponseProperty(\"Organizations\");\n    if (organizations != null) {\n      this.organizations = organizations.map((o: any) => new ProfileOrganizationResponse(o));\n    }\n    const providers = this.getResponseProperty(\"Providers\");\n    if (providers != null) {\n      this.providers = providers.map((o: any) => new ProfileProviderResponse(o));\n    }\n    const providerOrganizations = this.getResponseProperty(\"ProviderOrganizations\");\n    if (providerOrganizations != null) {\n      this.providerOrganizations = providerOrganizations.map(\n        (o: any) => new ProfileProviderOrganizationResponse(o)\n      );\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { ProfileResponse } from \"./profileResponse\";\n\nexport class PaymentResponse extends BaseResponse {\n  userProfile: ProfileResponse;\n  paymentIntentClientSecret: string;\n  success: boolean;\n\n  constructor(response: any) {\n    super(response);\n    const userProfile = this.getResponseProperty(\"UserProfile\");\n    if (userProfile != null) {\n      this.userProfile = new ProfileResponse(userProfile);\n    }\n    this.paymentIntentClientSecret = this.getResponseProperty(\"PaymentIntentClientSecret\");\n    this.success = this.getResponseProperty(\"Success\");\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PolicyResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.data = this.getResponseProperty(\"Data\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PreloginResponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderOrganizationResponse extends BaseResponse {\n  id: string;\n  providerId: string;\n  organizationId: string;\n  key: string;\n  settings: string;\n  creationDate: string;\n  revisionDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.settings = this.getResponseProperty(\"Settings\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n  }\n}\n\nexport class ProviderOrganizationOrganizationDetailsResponse extends ProviderOrganizationResponse {\n  organizationName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.organizationName = this.getResponseProperty(\"OrganizationName\");\n  }\n}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  businessName: string;\n  billingEmail: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n  }\n}\n","import { OrganizationUserBulkPublicKeyResponse } from \"../organizationUserBulkPublicKeyResponse\";\n\nexport class ProviderUserBulkPublicKeyResponse extends OrganizationUserBulkPublicKeyResponse {}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { ProviderUserStatusType } from \"../../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../../enums/providerUserType\";\nimport { PermissionsApi } from \"../../api/permissionsApi\";\nimport { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: ProviderUserType;\n  status: ProviderUserStatusType;\n  permissions: PermissionsApi;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n  }\n}\n\nexport class ProviderUserUserDetailsResponse extends ProviderUserResponse {\n  name: string;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class SendFileApi extends BaseResponse {\n  id: string;\n  fileName: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.id = this.getResponseProperty(\"Id\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class SendTextApi extends BaseResponse {\n  text: string;\n  hidden: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.text = this.getResponseProperty(\"Text\");\n    this.hidden = this.getResponseProperty(\"Hidden\") || false;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class SendAccessResponse extends BaseResponse {\n  id: string;\n  type: SendType;\n  name: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  expirationDate: Date;\n  creatorIdentifier: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.creatorIdentifier = this.getResponseProperty(\"CreatorIdentifier\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SendFileDownloadDataResponse extends BaseResponse {\n  id: string = null;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class SendResponse extends BaseResponse {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disable: boolean;\n  hideEmail: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.accessId = this.getResponseProperty(\"AccessId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.maxAccessCount = this.getResponseProperty(\"MaxAccessCount\");\n    this.accessCount = this.getResponseProperty(\"AccessCount\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.deletionDate = this.getResponseProperty(\"DeletionDate\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.disable = this.getResponseProperty(\"Disabled\") || false;\n    this.hideEmail = this.getResponseProperty(\"HideEmail\") || false;\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { SendResponse } from \"./sendResponse\";\n\nexport class SendFileUploadDataResponse extends BaseResponse {\n  fileUploadType: FileUploadType;\n  sendResponse: SendResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const sendResponse = this.getResponseProperty(\"SendResponse\");\n    this.sendResponse = sendResponse == null ? null : new SendResponse(sendResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SsoPreValidateResponse extends BaseResponse {\n  token: string;\n\n  constructor(response: any) {\n    super(response);\n    this.token = this.getResponseProperty(\"Token\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class FolderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\nimport { CollectionDetailsResponse } from \"./collectionResponse\";\nimport { DomainsResponse } from \"./domainsResponse\";\nimport { FolderResponse } from \"./folderResponse\";\nimport { PolicyResponse } from \"./policyResponse\";\nimport { ProfileResponse } from \"./profileResponse\";\nimport { SendResponse } from \"./sendResponse\";\n\nexport class SyncResponse extends BaseResponse {\n  profile?: ProfileResponse;\n  folders: FolderResponse[] = [];\n  collections: CollectionDetailsResponse[] = [];\n  ciphers: CipherResponse[] = [];\n  domains?: DomainsResponse;\n  policies?: PolicyResponse[] = [];\n  sends: SendResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    const profile = this.getResponseProperty(\"Profile\");\n    if (profile != null) {\n      this.profile = new ProfileResponse(profile);\n    }\n\n    const folders = this.getResponseProperty(\"Folders\");\n    if (folders != null) {\n      this.folders = folders.map((f: any) => new FolderResponse(f));\n    }\n\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new CollectionDetailsResponse(c));\n    }\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n\n    const domains = this.getResponseProperty(\"Domains\");\n    if (domains != null) {\n      this.domains = new DomainsResponse(domains);\n    }\n\n    const policies = this.getResponseProperty(\"Policies\");\n    if (policies != null) {\n      this.policies = policies.map((p: any) => new PolicyResponse(p));\n    }\n\n    const sends = this.getResponseProperty(\"Sends\");\n    if (sends != null) {\n      this.sends = sends.map((s: any) => new SendResponse(s));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TaxInfoResponse extends BaseResponse {\n  taxId: string;\n  taxIdType: string;\n  line1: string;\n  line2: string;\n  city: string;\n  state: string;\n  country: string;\n  postalCode: string;\n\n  constructor(response: any) {\n    super(response);\n    this.taxId = this.getResponseProperty(\"TaxIdNumber\");\n    this.taxIdType = this.getResponseProperty(\"TaxIdType\");\n    this.line1 = this.getResponseProperty(\"Line1\");\n    this.line2 = this.getResponseProperty(\"Line2\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TaxRateResponse extends BaseResponse {\n  id: string;\n  country: string;\n  state: string;\n  postalCode: string;\n  rate: number;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.rate = this.getResponseProperty(\"Rate\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorAuthenticatorResponse extends BaseResponse {\n  enabled: boolean;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorDuoResponse extends BaseResponse {\n  enabled: boolean;\n  host: string;\n  secretKey: string;\n  integrationKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.host = this.getResponseProperty(\"Host\");\n    this.secretKey = this.getResponseProperty(\"SecretKey\");\n    this.integrationKey = this.getResponseProperty(\"IntegrationKey\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorEmailResponse extends BaseResponse {\n  enabled: boolean;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorProviderResponse extends BaseResponse {\n  enabled: boolean;\n  type: TwoFactorProviderType;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorRecoverResponse extends BaseResponse {\n  code: string;\n\n  constructor(response: any) {\n    super(response);\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorWebAuthnResponse extends BaseResponse {\n  enabled: boolean;\n  keys: KeyResponse[];\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    const keys = this.getResponseProperty(\"Keys\");\n    this.keys = keys == null ? null : keys.map((k: any) => new KeyResponse(k));\n  }\n}\n\nexport class KeyResponse extends BaseResponse {\n  name: string;\n  id: number;\n  migrated: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.id = this.getResponseProperty(\"Id\");\n    this.migrated = this.getResponseProperty(\"Migrated\");\n  }\n}\n\nexport class ChallengeResponse extends BaseResponse implements PublicKeyCredentialCreationOptions {\n  attestation?: AttestationConveyancePreference;\n  authenticatorSelection?: AuthenticatorSelectionCriteria;\n  challenge: BufferSource;\n  excludeCredentials?: PublicKeyCredentialDescriptor[];\n  extensions?: AuthenticationExtensionsClientInputs;\n  pubKeyCredParams: PublicKeyCredentialParameters[];\n  rp: PublicKeyCredentialRpEntity;\n  timeout?: number;\n  user: PublicKeyCredentialUserEntity;\n\n  constructor(response: any) {\n    super(response);\n    this.attestation = this.getResponseProperty(\"attestation\");\n    this.authenticatorSelection = this.getResponseProperty(\"authenticatorSelection\");\n    this.challenge = Utils.fromUrlB64ToArray(this.getResponseProperty(\"challenge\"));\n    this.excludeCredentials = this.getResponseProperty(\"excludeCredentials\").map((c: any) => {\n      c.id = Utils.fromUrlB64ToArray(c.id).buffer;\n      return c;\n    });\n    this.extensions = this.getResponseProperty(\"extensions\");\n    this.pubKeyCredParams = this.getResponseProperty(\"pubKeyCredParams\");\n    this.rp = this.getResponseProperty(\"rp\");\n    this.timeout = this.getResponseProperty(\"timeout\");\n\n    const user = this.getResponseProperty(\"user\");\n    user.id = Utils.fromUrlB64ToArray(user.id);\n\n    this.user = user;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorYubiKeyResponse extends BaseResponse {\n  enabled: boolean;\n  key1: string;\n  key2: string;\n  key3: string;\n  key4: string;\n  key5: string;\n  nfc: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key1 = this.getResponseProperty(\"Key1\");\n    this.key2 = this.getResponseProperty(\"Key2\");\n    this.key3 = this.getResponseProperty(\"Key3\");\n    this.key4 = this.getResponseProperty(\"Key4\");\n    this.key5 = this.getResponseProperty(\"Key5\");\n    this.nfc = this.getResponseProperty(\"Nfc\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class UserKeyResponse extends BaseResponse {\n  userId: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","export enum HtmlStorageLocation {\n  Local = \"local\",\n  Memory = \"memory\",\n  Session = \"session\",\n}\n","import { ApiService as ApiServiceAbstraction } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { DeviceType } from \"../enums/deviceType\";\nimport { OrganizationApiKeyType } from \"../enums/organizationApiKeyType\";\nimport { OrganizationConnectionType } from \"../enums/organizationConnectionType\";\nimport { PolicyType } from \"../enums/policyType\";\nimport { Utils } from \"../misc/utils\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { VerifyOTPRequest } from \"../models/request/account/verifyOTPRequest\";\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { BitPayInvoiceRequest } from \"../models/request/bitPayInvoiceRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CollectionRequest } from \"../models/request/collectionRequest\";\nimport { DeleteRecoverRequest } from \"../models/request/deleteRecoverRequest\";\nimport { DeviceRequest } from \"../models/request/deviceRequest\";\nimport { DeviceVerificationRequest } from \"../models/request/deviceVerificationRequest\";\nimport { EmailRequest } from \"../models/request/emailRequest\";\nimport { EmailTokenRequest } from \"../models/request/emailTokenRequest\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergencyAccessAcceptRequest\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergencyAccessConfirmRequest\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergencyAccessInviteRequest\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergencyAccessPasswordRequest\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergencyAccessUpdateRequest\";\nimport { EventRequest } from \"../models/request/eventRequest\";\nimport { GroupRequest } from \"../models/request/groupRequest\";\nimport { IapCheckRequest } from \"../models/request/iapCheckRequest\";\nimport { ApiTokenRequest } from \"../models/request/identityToken/apiTokenRequest\";\nimport { PasswordTokenRequest } from \"../models/request/identityToken/passwordTokenRequest\";\nimport { SsoTokenRequest } from \"../models/request/identityToken/ssoTokenRequest\";\nimport { TokenRequestTwoFactor } from \"../models/request/identityToken/tokenRequestTwoFactor\";\nimport { ImportCiphersRequest } from \"../models/request/importCiphersRequest\";\nimport { ImportDirectoryRequest } from \"../models/request/importDirectoryRequest\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/importOrganizationCiphersRequest\";\nimport { KdfRequest } from \"../models/request/kdfRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organizationSponsorshipCreateRequest\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organizationSponsorshipRedeemRequest\";\nimport { OrganizationSsoRequest } from \"../models/request/organization/organizationSsoRequest\";\nimport { OrganizationApiKeyRequest } from \"../models/request/organizationApiKeyRequest\";\nimport { OrganizationConnectionRequest } from \"../models/request/organizationConnectionRequest\";\nimport { OrganizationCreateRequest } from \"../models/request/organizationCreateRequest\";\nimport { OrganizationImportRequest } from \"../models/request/organizationImportRequest\";\nimport { OrganizationKeysRequest } from \"../models/request/organizationKeysRequest\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../models/request/organizationSubscriptionUpdateRequest\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../models/request/organizationTaxInfoUpdateRequest\";\nimport { OrganizationUpdateRequest } from \"../models/request/organizationUpdateRequest\";\nimport { OrganizationUpgradeRequest } from \"../models/request/organizationUpgradeRequest\";\nimport { OrganizationUserAcceptRequest } from \"../models/request/organizationUserAcceptRequest\";\nimport { OrganizationUserBulkConfirmRequest } from \"../models/request/organizationUserBulkConfirmRequest\";\nimport { OrganizationUserBulkRequest } from \"../models/request/organizationUserBulkRequest\";\nimport { OrganizationUserConfirmRequest } from \"../models/request/organizationUserConfirmRequest\";\nimport { OrganizationUserInviteRequest } from \"../models/request/organizationUserInviteRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"../models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { OrganizationUserResetPasswordRequest } from \"../models/request/organizationUserResetPasswordRequest\";\nimport { OrganizationUserUpdateGroupsRequest } from \"../models/request/organizationUserUpdateGroupsRequest\";\nimport { OrganizationUserUpdateRequest } from \"../models/request/organizationUserUpdateRequest\";\nimport { PasswordHintRequest } from \"../models/request/passwordHintRequest\";\nimport { PasswordRequest } from \"../models/request/passwordRequest\";\nimport { PaymentRequest } from \"../models/request/paymentRequest\";\nimport { PolicyRequest } from \"../models/request/policyRequest\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/providerAddOrganizationRequest\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/providerOrganizationCreateRequest\";\nimport { ProviderSetupRequest } from \"../models/request/provider/providerSetupRequest\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/providerUpdateRequest\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/providerUserAcceptRequest\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/providerUserBulkConfirmRequest\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/providerUserBulkRequest\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/providerUserConfirmRequest\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/providerUserInviteRequest\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/providerUserUpdateRequest\";\nimport { RegisterRequest } from \"../models/request/registerRequest\";\nimport { SeatRequest } from \"../models/request/seatRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selectionReadOnlyRequest\";\nimport { SendAccessRequest } from \"../models/request/sendAccessRequest\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { SetPasswordRequest } from \"../models/request/setPasswordRequest\";\nimport { StorageRequest } from \"../models/request/storageRequest\";\nimport { TaxInfoUpdateRequest } from \"../models/request/taxInfoUpdateRequest\";\nimport { TwoFactorEmailRequest } from \"../models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviderRequest } from \"../models/request/twoFactorProviderRequest\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/twoFactorRecoveryRequest\";\nimport { UpdateDomainsRequest } from \"../models/request/updateDomainsRequest\";\nimport { UpdateKeyRequest } from \"../models/request/updateKeyRequest\";\nimport { UpdateProfileRequest } from \"../models/request/updateProfileRequest\";\nimport { UpdateTempPasswordRequest } from \"../models/request/updateTempPasswordRequest\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/updateTwoFactorAuthenticatorRequest\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/updateTwoFactorDuoRequest\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/updateTwoFactorEmailRequest\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/updateTwoFactorWebAuthnDeleteRequest\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/updateTwoFactorWebAuthnRequest\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/updateTwoFactorYubioOtpRequest\";\nimport { VerifyBankRequest } from \"../models/request/verifyBankRequest\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verifyDeleteRecoverRequest\";\nimport { VerifyEmailRequest } from \"../models/request/verifyEmailRequest\";\nimport { ApiKeyResponse } from \"../models/response/apiKeyResponse\";\nimport { AttachmentResponse } from \"../models/response/attachmentResponse\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { BillingHistoryResponse } from \"../models/response/billingHistoryResponse\";\nimport { BillingPaymentResponse } from \"../models/response/billingPaymentResponse\";\nimport { BillingResponse } from \"../models/response/billingResponse\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport {\n  CollectionGroupDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collectionResponse\";\nimport { DeviceVerificationResponse } from \"../models/response/deviceVerificationResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergencyAccessResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { EventResponse } from \"../models/response/eventResponse\";\nimport { GroupDetailsResponse, GroupResponse } from \"../models/response/groupResponse\";\nimport { IdentityCaptchaResponse } from \"../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/keyConnectorUserKeyResponse\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { OrganizationSsoResponse } from \"../models/response/organization/organizationSsoResponse\";\nimport { OrganizationApiKeyInformationResponse } from \"../models/response/organizationApiKeyInformationResponse\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../models/response/organizationAutoEnrollStatusResponse\";\nimport {\n  OrganizationConnectionConfigApis,\n  OrganizationConnectionResponse,\n} from \"../models/response/organizationConnectionResponse\";\nimport { OrganizationKeysResponse } from \"../models/response/organizationKeysResponse\";\nimport { OrganizationResponse } from \"../models/response/organizationResponse\";\nimport { OrganizationSponsorshipSyncStatusResponse } from \"../models/response/organizationSponsorshipSyncStatusResponse\";\nimport { OrganizationSubscriptionResponse } from \"../models/response/organizationSubscriptionResponse\";\nimport { OrganizationUserBulkPublicKeyResponse } from \"../models/response/organizationUserBulkPublicKeyResponse\";\nimport { OrganizationUserBulkResponse } from \"../models/response/organizationUserBulkResponse\";\nimport {\n  OrganizationUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n  OrganizationUserUserDetailsResponse,\n} from \"../models/response/organizationUserResponse\";\nimport { PaymentResponse } from \"../models/response/paymentResponse\";\nimport { PlanResponse } from \"../models/response/planResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { PreloginResponse } from \"../models/response/preloginResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/providerOrganizationResponse\";\nimport { ProviderResponse } from \"../models/response/provider/providerResponse\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/providerUserBulkPublicKeyResponse\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/providerUserBulkResponse\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/providerUserResponse\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selectionReadOnlyResponse\";\nimport { SendAccessResponse } from \"../models/response/sendAccessResponse\";\nimport { SendFileDownloadDataResponse } from \"../models/response/sendFileDownloadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SsoPreValidateResponse } from \"../models/response/ssoPreValidateResponse\";\nimport { SubscriptionResponse } from \"../models/response/subscriptionResponse\";\nimport { SyncResponse } from \"../models/response/syncResponse\";\nimport { TaxInfoResponse } from \"../models/response/taxInfoResponse\";\nimport { TaxRateResponse } from \"../models/response/taxRateResponse\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/twoFactorAuthenticatorResponse\";\nimport { TwoFactorDuoResponse } from \"../models/response/twoFactorDuoResponse\";\nimport { TwoFactorEmailResponse } from \"../models/response/twoFactorEmailResponse\";\nimport { TwoFactorProviderResponse } from \"../models/response/twoFactorProviderResponse\";\nimport { TwoFactorRecoverResponse } from \"../models/response/twoFactorRescoverResponse\";\nimport {\n  TwoFactorWebAuthnResponse,\n  ChallengeResponse,\n} from \"../models/response/twoFactorWebAuthnResponse\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/twoFactorYubiKeyResponse\";\nimport { UserKeyResponse } from \"../models/response/userKeyResponse\";\nimport { SendAccessView } from \"../models/view/sendAccessView\";\n\nexport class ApiService implements ApiServiceAbstraction {\n  private device: DeviceType;\n  private deviceType: string;\n  private isWebClient = false;\n  private isDesktopClient = false;\n\n  constructor(\n    private tokenService: TokenService,\n    private platformUtilsService: PlatformUtilsService,\n    private environmentService: EnvironmentService,\n    private appIdService: AppIdService,\n    private logoutCallback: (expired: boolean) => Promise<void>,\n    private customUserAgent: string = null\n  ) {\n    this.device = platformUtilsService.getDevice();\n    this.deviceType = this.device.toString();\n    this.isWebClient =\n      this.device === DeviceType.IEBrowser ||\n      this.device === DeviceType.ChromeBrowser ||\n      this.device === DeviceType.EdgeBrowser ||\n      this.device === DeviceType.FirefoxBrowser ||\n      this.device === DeviceType.OperaBrowser ||\n      this.device === DeviceType.SafariBrowser ||\n      this.device === DeviceType.UnknownBrowser ||\n      this.device === DeviceType.VivaldiBrowser;\n    this.isDesktopClient =\n      this.device === DeviceType.WindowsDesktop ||\n      this.device === DeviceType.MacOsDesktop ||\n      this.device === DeviceType.LinuxDesktop;\n  }\n\n  // Auth APIs\n\n  async postIdentityToken(\n    request: ApiTokenRequest | PasswordTokenRequest | SsoTokenRequest\n  ): Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse> {\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    request.alterIdentityTokenHeaders(headers);\n\n    const identityToken =\n      request instanceof ApiTokenRequest\n        ? request.toIdentityToken()\n        : request.toIdentityToken(this.platformUtilsService.getClientType());\n\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify(identityToken),\n        credentials: this.getCredentials(),\n        cache: \"no-store\",\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    }\n\n    if (responseJson != null) {\n      if (response.status === 200) {\n        return new IdentityTokenResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.TwoFactorProviders2 &&\n        Object.keys(responseJson.TwoFactorProviders2).length\n      ) {\n        await this.tokenService.clearTwoFactorToken();\n        return new IdentityTwoFactorResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.HCaptcha_SiteKey &&\n        Object.keys(responseJson.HCaptcha_SiteKey).length\n      ) {\n        return new IdentityCaptchaResponse(responseJson);\n      }\n    }\n\n    return Promise.reject(new ErrorResponse(responseJson, response.status, true));\n  }\n\n  async refreshIdentityToken(): Promise<any> {\n    try {\n      await this.doAuthRefresh();\n    } catch (e) {\n      return Promise.reject(null);\n    }\n  }\n\n  // Account APIs\n\n  async getProfile(): Promise<ProfileResponse> {\n    const r = await this.send(\"GET\", \"/accounts/profile\", null, true, true);\n    return new ProfileResponse(r);\n  }\n\n  async getUserSubscription(): Promise<SubscriptionResponse> {\n    const r = await this.send(\"GET\", \"/accounts/subscription\", null, true, true);\n    return new SubscriptionResponse(r);\n  }\n\n  async getTaxInfo(): Promise<TaxInfoResponse> {\n    const r = await this.send(\"GET\", \"/accounts/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async putProfile(request: UpdateProfileRequest): Promise<ProfileResponse> {\n    const r = await this.send(\"PUT\", \"/accounts/profile\", request, true, true);\n    return new ProfileResponse(r);\n  }\n\n  putTaxInfo(request: TaxInfoUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/tax\", request, true, false);\n  }\n\n  async postPrelogin(request: PreloginRequest): Promise<PreloginResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/accounts/prelogin\",\n      request,\n      false,\n      true,\n      this.platformUtilsService.isDev()\n        ? this.environmentService.getIdentityUrl()\n        : this.environmentService.getApiUrl()\n    );\n    return new PreloginResponse(r);\n  }\n\n  postEmailToken(request: EmailTokenRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email-token\", request, true, false);\n  }\n\n  postEmail(request: EmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email\", request, true, false);\n  }\n\n  postPassword(request: PasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password\", request, true, false);\n  }\n\n  setPassword(request: SetPasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-password\", request, true, false);\n  }\n\n  postSetKeyConnectorKey(request: SetKeyConnectorKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-key-connector-key\", request, true, false);\n  }\n\n  postSecurityStamp(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/security-stamp\", request, true, false);\n  }\n\n  deleteAccount(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/accounts\", request, true, false);\n  }\n\n  async getAccountRevisionDate(): Promise<number> {\n    const r = await this.send(\"GET\", \"/accounts/revision-date\", null, true, true);\n    return r as number;\n  }\n\n  postPasswordHint(request: PasswordHintRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password-hint\", request, false, false);\n  }\n\n  postRegister(request: RegisterRequest): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/accounts/register\",\n      request,\n      false,\n      false,\n      this.platformUtilsService.isDev()\n        ? this.environmentService.getIdentityUrl()\n        : this.environmentService.getApiUrl()\n    );\n  }\n\n  async postPremium(data: FormData): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/premium\", data, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postIapCheck(request: IapCheckRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/iap-check\", request, true, false);\n  }\n\n  postReinstatePremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/reinstate-premium\", null, true, false);\n  }\n\n  postCancelPremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/cancel-premium\", null, true, false);\n  }\n\n  async postAccountStorage(request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/storage\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  postAccountPayment(request: PaymentRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/payment\", request, true, false);\n  }\n\n  postAccountLicense(data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/accounts/license\", data, true, false);\n  }\n\n  postAccountKeys(request: KeysRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/keys\", request, true, false);\n  }\n\n  postAccountKey(request: UpdateKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/key\", request, true, false);\n  }\n\n  postAccountVerifyEmail(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email\", null, true, false);\n  }\n\n  postAccountVerifyEmailToken(request: VerifyEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email-token\", request, false, false);\n  }\n\n  postAccountVerifyPassword(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-password\", request, true, false);\n  }\n\n  postAccountRecoverDelete(request: DeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover\", request, false, false);\n  }\n\n  postAccountRecoverDeleteToken(request: VerifyDeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover-token\", request, false, false);\n  }\n\n  postAccountKdf(request: KdfRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/kdf\", request, true, false);\n  }\n\n  async deleteSsoUser(organizationId: string): Promise<any> {\n    return this.send(\"DELETE\", \"/accounts/sso/\" + organizationId, null, true, false);\n  }\n\n  async getSsoUserIdentifier(): Promise<string> {\n    return this.send(\"GET\", \"/accounts/sso/user-identifier\", null, true, true);\n  }\n\n  async postUserApiKey(id: string, request: SecretVerificationRequest): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  async postUserRotateApiKey(\n    id: string,\n    request: SecretVerificationRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/rotate-api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  putUpdateTempPassword(request: UpdateTempPasswordRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/update-temp-password\", request, true, false);\n  }\n\n  postAccountRequestOTP(): Promise<void> {\n    return this.send(\"POST\", \"/accounts/request-otp\", null, true, false);\n  }\n\n  postAccountVerifyOTP(request: VerifyOTPRequest): Promise<void> {\n    return this.send(\"POST\", \"/accounts/verify-otp\", request, true, false);\n  }\n\n  postConvertToKeyConnector(): Promise<void> {\n    return this.send(\"POST\", \"/accounts/convert-to-key-connector\", null, true, false);\n  }\n\n  // Account Billing APIs\n\n  async getUserBillingHistory(): Promise<BillingHistoryResponse> {\n    const r = await this.send(\"GET\", \"/accounts/billing/history\", null, true, true);\n    return new BillingHistoryResponse(r);\n  }\n\n  async getUserBillingPayment(): Promise<BillingPaymentResponse> {\n    const r = await this.send(\"GET\", \"/accounts/billing/payment-method\", null, true, true);\n    return new BillingPaymentResponse(r);\n  }\n\n  // Send APIs\n\n  async getSend(id: string): Promise<SendResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + id, null, true, true);\n    return new SendResponse(r);\n  }\n\n  async postSendAccess(\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendAccessResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/access/\" + id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendAccessResponse(r);\n  }\n\n  async getSendFileDownloadData(\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendFileDownloadDataResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", send.id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/\" + send.id + \"/access/file/\" + send.file.id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendFileDownloadDataResponse(r);\n  }\n\n  async getSends(): Promise<ListResponse<SendResponse>> {\n    const r = await this.send(\"GET\", \"/sends\", null, true, true);\n    return new ListResponse(r, SendResponse);\n  }\n\n  async postSend(request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends\", request, true, true);\n    return new SendResponse(r);\n  }\n\n  async postFileTypeSend(request: SendRequest): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/sends/file/v2\", request, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  async renewSendFileUploadUrl(\n    sendId: string,\n    fileId: string\n  ): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + sendId + \"/file/\" + fileId, null, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  postSendFile(sendId: string, fileId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/sends/\" + sendId + \"/file/\" + fileId, data, true, false);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postSendFileLegacy(data: FormData): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends/file\", data, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSend(id: string, request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id, request, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSendRemovePassword(id: string): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id + \"/remove-password\", null, true, true);\n    return new SendResponse(r);\n  }\n\n  deleteSend(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/sends/\" + id, null, true, false);\n  }\n\n  // Cipher APIs\n\n  async getCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id, null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getFullCipherDetails(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id + \"/details\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id + \"/admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCiphersOrganization(organizationId: string): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/organization-details?organizationId=\" + organizationId,\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CipherResponse);\n  }\n\n  async postCipher(request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherCreate(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/create\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherAdmin(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipher(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id, request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipherAdmin(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipher(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id, null, true, false);\n  }\n\n  deleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/admin\", null, true, false);\n  }\n\n  deleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers\", request, true, false);\n  }\n\n  deleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/admin\", request, true, false);\n  }\n\n  putMoveCiphers(request: CipherBulkMoveRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/move\", request, true, false);\n  }\n\n  async putShareCipher(id: string, request: CipherShareRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/share\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  putShareCiphers(request: CipherBulkShareRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/share\", request, true, false);\n  }\n\n  putCipherCollections(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections\", request, true, false);\n  }\n\n  putCipherCollectionsAdmin(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections-admin\", request, true, false);\n  }\n\n  postPurgeCiphers(\n    request: SecretVerificationRequest,\n    organizationId: string = null\n  ): Promise<any> {\n    let path = \"/ciphers/purge\";\n    if (organizationId != null) {\n      path += \"?organizationId=\" + organizationId;\n    }\n    return this.send(\"POST\", path, request, true, false);\n  }\n\n  postImportCiphers(request: ImportCiphersRequest): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/import\", request, true, false);\n  }\n\n  postImportOrganizationCiphers(\n    organizationId: string,\n    request: ImportOrganizationCiphersRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/import-organization?organizationId=\" + organizationId,\n      request,\n      true,\n      false\n    );\n  }\n\n  putDeleteCipher(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete\", null, true, false);\n  }\n\n  putDeleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete-admin\", null, true, false);\n  }\n\n  putDeleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete\", request, true, false);\n  }\n\n  putDeleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete-admin\", request, true, false);\n  }\n\n  async putRestoreCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore-admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreManyCiphers(\n    request: CipherBulkDeleteRequest\n  ): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\"PUT\", \"/ciphers/restore\", request, true, true);\n    return new ListResponse<CipherResponse>(r, CipherResponse);\n  }\n\n  // Attachments APIs\n\n  async getAttachmentData(\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ): Promise<AttachmentResponse> {\n    const path =\n      (emergencyAccessId != null ? \"/emergency-access/\" + emergencyAccessId + \"/\" : \"/ciphers/\") +\n      cipherId +\n      \"/attachment/\" +\n      attachmentId;\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new AttachmentResponse(r);\n  }\n\n  async postCipherAttachment(\n    id: string,\n    request: AttachmentRequest\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/v2\", request, true, true);\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentAdminLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment-admin\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipherAttachment(id: string, attachmentId: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, null, true, false);\n  }\n\n  deleteCipherAttachmentAdmin(id: string, attachmentId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/admin\",\n      null,\n      true,\n      false\n    );\n  }\n\n  postShareCipherAttachment(\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/share?organizationId=\" + organizationId,\n      data,\n      true,\n      false\n    );\n  }\n\n  async renewAttachmentUploadUrl(\n    id: string,\n    attachmentId: string\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/renew\",\n      null,\n      true,\n      true\n    );\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  postAttachmentFile(id: string, attachmentId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, data, true, false);\n  }\n\n  // Collections APIs\n\n  async getCollectionDetails(\n    organizationId: string,\n    id: string\n  ): Promise<CollectionGroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new CollectionGroupDetailsResponse(r);\n  }\n\n  async getUserCollections(): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\"GET\", \"/collections\", null, true, true);\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollections(organizationId: string): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollectionUsers(\n    organizationId: string,\n    id: string\n  ): Promise<SelectionReadOnlyResponse[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r.map((dr: any) => new SelectionReadOnlyResponse(dr));\n  }\n\n  async postCollection(\n    organizationId: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollection(\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollectionUsers(\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteCollection(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteCollectionUser(\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Groups APIs\n\n  async getGroupDetails(organizationId: string, id: string): Promise<GroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new GroupDetailsResponse(r);\n  }\n\n  async getGroups(organizationId: string): Promise<ListResponse<GroupResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, GroupResponse);\n  }\n\n  async getGroupUsers(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async postGroup(organizationId: string, request: GroupRequest): Promise<GroupResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroup(\n    organizationId: string,\n    id: string,\n    request: GroupRequest\n  ): Promise<GroupResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroupUsers(organizationId: string, id: string, request: string[]): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteGroup(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteGroupUser(organizationId: string, id: string, organizationUserId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Policy APIs\n\n  async getPolicy(organizationId: string, type: PolicyType): Promise<PolicyResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      null,\n      true,\n      true\n    );\n    return new PolicyResponse(r);\n  }\n\n  async getPolicies(organizationId: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByToken(\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" +\n        organizationId +\n        \"/policies/token?\" +\n        \"token=\" +\n        encodeURIComponent(token) +\n        \"&email=\" +\n        encodeURIComponent(email) +\n        \"&organizationUserId=\" +\n        organizationUserId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByInvitedUser(\n    organizationId: string,\n    userId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/invited-user?\" + \"userId=\" + userId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async putPolicy(\n    organizationId: string,\n    type: PolicyType,\n    request: PolicyRequest\n  ): Promise<PolicyResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      request,\n      true,\n      true\n    );\n    return new PolicyResponse(r);\n  }\n\n  // Organization User APIs\n\n  async getOrganizationUser(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserDetailsResponse(r);\n  }\n\n  async getOrganizationUserGroups(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async getOrganizationUsers(\n    organizationId: string\n  ): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserUserDetailsResponse);\n  }\n\n  async getOrganizationUserResetPasswordDetails(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserResetPasswordDetailsReponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password-details\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserResetPasswordDetailsReponse(r);\n  }\n\n  async getOrganizationAutoEnrollStatus(\n    identifier: string\n  ): Promise<OrganizationAutoEnrollStatusResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + identifier + \"/auto-enroll-status\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationAutoEnrollStatusResponse(r);\n  }\n\n  postOrganizationUserInvite(\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/invite\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserReinvite(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyOrganizationUserReinvite(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  postOrganizationUserAccept(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserConfirm(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postOrganizationUsersPublicKey(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkPublicKeyResponse);\n  }\n\n  async postOrganizationUserBulkConfirm(\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  putOrganizationUser(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserGroups(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateGroupsRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPasswordEnrollment(\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + userId + \"/reset-password-enrollment\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPassword(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteManyOrganizationUsers(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  deactivateOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/deactivate\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async deactivateManyOrganizationUsers(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/deactivate\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  activateOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/activate\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async activateManyOrganizationUsers(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/activate\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  // Plan APIs\n\n  async getPlans(): Promise<ListResponse<PlanResponse>> {\n    const r = await this.send(\"GET\", \"/plans/\", null, true, true);\n    return new ListResponse(r, PlanResponse);\n  }\n\n  async postImportDirectory(organizationId: string, request: ImportDirectoryRequest): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + organizationId + \"/import\", request, true, false);\n  }\n\n  async postPublicImportDirectory(request: OrganizationImportRequest): Promise<any> {\n    return this.send(\"POST\", \"/public/organization/import\", request, true, false);\n  }\n\n  async getTaxRates(): Promise<ListResponse<TaxRateResponse>> {\n    const r = await this.send(\"GET\", \"/plans/sales-tax-rates/\", null, true, true);\n    return new ListResponse(r, TaxRateResponse);\n  }\n\n  // Settings APIs\n\n  async getSettingsDomains(): Promise<DomainsResponse> {\n    const r = await this.send(\"GET\", \"/settings/domains\", null, true, true);\n    return new DomainsResponse(r);\n  }\n\n  async putSettingsDomains(request: UpdateDomainsRequest): Promise<DomainsResponse> {\n    const r = await this.send(\"PUT\", \"/settings/domains\", request, true, true);\n    return new DomainsResponse(r);\n  }\n\n  // Sync APIs\n\n  async getSync(): Promise<SyncResponse> {\n    const path = this.isDesktopClient || this.isWebClient ? \"/sync?excludeDomains=true\" : \"/sync\";\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new SyncResponse(r);\n  }\n\n  // Two-factor APIs\n\n  async getTwoFactorProviders(): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\"GET\", \"/two-factor\", null, true, true);\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorOrganizationProviders(\n    organizationId: string\n  ): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/two-factor\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorAuthenticator(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async getTwoFactorEmail(request: SecretVerificationRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async getTwoFactorDuo(request: SecretVerificationRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/two-factor/get-duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorYubiKey(request: SecretVerificationRequest): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async getTwoFactorWebAuthn(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async getTwoFactorWebAuthnChallenge(\n    request: SecretVerificationRequest\n  ): Promise<ChallengeResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn-challenge\", request, true, true);\n    return new ChallengeResponse(r);\n  }\n\n  async getTwoFactorRecover(request: SecretVerificationRequest): Promise<TwoFactorRecoverResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-recover\", request, true, true);\n    return new TwoFactorRecoverResponse(r);\n  }\n\n  async putTwoFactorAuthenticator(\n    request: UpdateTwoFactorAuthenticatorRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async putTwoFactorEmail(request: UpdateTwoFactorEmailRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async putTwoFactorDuo(request: UpdateTwoFactorDuoRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorYubiKey(\n    request: UpdateTwoFactorYubioOtpRequest\n  ): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async putTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const response = request.deviceResponse.response as AuthenticatorAttestationResponse;\n    const data: any = Object.assign({}, request);\n\n    data.deviceResponse = {\n      id: request.deviceResponse.id,\n      rawId: btoa(request.deviceResponse.id),\n      type: request.deviceResponse.type,\n      extensions: request.deviceResponse.getClientExtensionResults(),\n      response: {\n        AttestationObject: Utils.fromBufferToB64(response.attestationObject),\n        clientDataJson: Utils.fromBufferToB64(response.clientDataJSON),\n      },\n    };\n\n    const r = await this.send(\"PUT\", \"/two-factor/webauthn\", data, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async deleteTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"DELETE\", \"/two-factor/webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async putTwoFactorDisable(request: TwoFactorProviderRequest): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/disable\", request, true, true);\n    return new TwoFactorProviderResponse(r);\n  }\n\n  async putTwoFactorOrganizationDisable(\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/disable\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorProviderResponse(r);\n  }\n\n  postTwoFactorRecover(request: TwoFactorRecoveryRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/recover\", request, false, false);\n  }\n\n  postTwoFactorEmailSetup(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email\", request, true, false);\n  }\n\n  postTwoFactorEmail(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email-login\", request, false, false);\n  }\n\n  async getDeviceVerificationSettings(): Promise<DeviceVerificationResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/two-factor/get-device-verification-settings\",\n      null,\n      true,\n      true\n    );\n    return new DeviceVerificationResponse(r);\n  }\n\n  async putDeviceVerificationSettings(\n    request: DeviceVerificationRequest\n  ): Promise<DeviceVerificationResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/two-factor/device-verification-settings\",\n      request,\n      true,\n      true\n    );\n    return new DeviceVerificationResponse(r);\n  }\n\n  // Emergency Access APIs\n\n  async getEmergencyAccessTrusted(): Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/trusted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGranteeDetailsResponse);\n  }\n\n  async getEmergencyAccessGranted(): Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/granted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGrantorDetailsResponse);\n  }\n\n  async getEmergencyAccess(id: string): Promise<EmergencyAccessGranteeDetailsResponse> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id, null, true, true);\n    return new EmergencyAccessGranteeDetailsResponse(r);\n  }\n\n  async getEmergencyGrantorPolicies(id: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id + \"/policies\", null, true, true);\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  putEmergencyAccess(id: string, request: EmergencyAccessUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/emergency-access/\" + id, request, true, false);\n  }\n\n  deleteEmergencyAccess(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/emergency-access/\" + id, null, true, false);\n  }\n\n  postEmergencyAccessInvite(request: EmergencyAccessInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/invite\", request, true, false);\n  }\n\n  postEmergencyAccessReinvite(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reinvite\", null, true, false);\n  }\n\n  postEmergencyAccessAccept(id: string, request: EmergencyAccessAcceptRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/accept\", request, true, false);\n  }\n\n  postEmergencyAccessConfirm(id: string, request: EmergencyAccessConfirmRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/confirm\", request, true, false);\n  }\n\n  postEmergencyAccessInitiate(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/initiate\", null, true, false);\n  }\n\n  postEmergencyAccessApprove(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/approve\", null, true, false);\n  }\n\n  postEmergencyAccessReject(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reject\", null, true, false);\n  }\n\n  async postEmergencyAccessTakeover(id: string): Promise<EmergencyAccessTakeoverResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/takeover\", null, true, true);\n    return new EmergencyAccessTakeoverResponse(r);\n  }\n\n  async postEmergencyAccessPassword(\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ): Promise<any> {\n    await this.send(\"POST\", \"/emergency-access/\" + id + \"/password\", request, true, true);\n  }\n\n  async postEmergencyAccessView(id: string): Promise<EmergencyAccessViewResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/view\", null, true, true);\n    return new EmergencyAccessViewResponse(r);\n  }\n\n  // Organization APIs\n\n  async getOrganization(id: string): Promise<OrganizationResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id, null, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async getOrganizationBilling(id: string): Promise<BillingResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/billing\", null, true, true);\n    return new BillingResponse(r);\n  }\n\n  async getOrganizationSubscription(id: string): Promise<OrganizationSubscriptionResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/subscription\", null, true, true);\n    return new OrganizationSubscriptionResponse(r);\n  }\n\n  async getCloudCommunicationsEnabled(): Promise<boolean> {\n    const r = await this.send(\"GET\", \"/organizations/connections/enabled\", null, true, true);\n    return r as boolean;\n  }\n\n  async getOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    id: string,\n    type: OrganizationConnectionType,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\"GET\", `/organizations/connections/${id}/${type}`, null, true, true);\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async createOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\"POST\", \"/organizations/connections/\", request, true, true);\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async updateOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig },\n    organizationConnectionId?: string\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/connections/\" + organizationConnectionId,\n      request,\n      true,\n      true\n    );\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async deleteOrganizationConnection(id: string): Promise<void> {\n    return this.send(\"DELETE\", \"/organizations/connections/\" + id, null, true, false);\n  }\n\n  async getOrganizationLicense(id: string, installationId: string): Promise<any> {\n    return this.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/license?installationId=\" + installationId,\n      null,\n      true,\n      true\n    );\n  }\n\n  async getOrganizationTaxInfo(id: string): Promise<TaxInfoResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async getOrganizationSso(id: string): Promise<OrganizationSsoResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/sso\", null, true, true);\n    return new OrganizationSsoResponse(r);\n  }\n\n  async postOrganization(request: OrganizationCreateRequest): Promise<OrganizationResponse> {\n    const r = await this.send(\"POST\", \"/organizations\", request, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async putOrganization(\n    id: string,\n    request: OrganizationUpdateRequest\n  ): Promise<OrganizationResponse> {\n    const r = await this.send(\"PUT\", \"/organizations/\" + id, request, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async putOrganizationTaxInfo(\n    id: string,\n    request: OrganizationTaxInfoUpdateRequest\n  ): Promise<any> {\n    return this.send(\"PUT\", \"/organizations/\" + id + \"/tax\", request, true, false);\n  }\n\n  postLeaveOrganization(id: string): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/leave\", null, true, false);\n  }\n\n  async postOrganizationLicense(data: FormData): Promise<OrganizationResponse> {\n    const r = await this.send(\"POST\", \"/organizations/license\", data, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async postOrganizationLicenseUpdate(id: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/license\", data, true, false);\n  }\n\n  async postOrganizationApiKey(\n    id: string,\n    request: OrganizationApiKeyRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  async getOrganizationApiKeyInformation(\n    id: string,\n    type: OrganizationApiKeyType = null\n  ): Promise<ListResponse<OrganizationApiKeyInformationResponse>> {\n    const uri =\n      type === null\n        ? \"/organizations/\" + id + \"/api-key-information\"\n        : \"/organizations/\" + id + \"/api-key-information/\" + type;\n    const r = await this.send(\"GET\", uri, null, true, true);\n    return new ListResponse(r, OrganizationApiKeyInformationResponse);\n  }\n\n  async postOrganizationRotateApiKey(\n    id: string,\n    request: OrganizationApiKeyRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/rotate-api-key\",\n      request,\n      true,\n      true\n    );\n    return new ApiKeyResponse(r);\n  }\n\n  async postOrganizationSso(\n    id: string,\n    request: OrganizationSsoRequest\n  ): Promise<OrganizationSsoResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/sso\", request, true, true);\n    return new OrganizationSsoResponse(r);\n  }\n\n  async postOrganizationUpgrade(\n    id: string,\n    request: OrganizationUpgradeRequest\n  ): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/upgrade\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postOrganizationUpdateSubscription(\n    id: string,\n    request: OrganizationSubscriptionUpdateRequest\n  ): Promise<void> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/subscription\", request, true, false);\n  }\n\n  async postOrganizationSeat(id: string, request: SeatRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/seat\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postOrganizationStorage(id: string, request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/storage\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  postOrganizationPayment(id: string, request: PaymentRequest): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/payment\", request, true, false);\n  }\n\n  postOrganizationVerifyBank(id: string, request: VerifyBankRequest): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/verify-bank\", request, true, false);\n  }\n\n  postOrganizationCancel(id: string): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/cancel\", null, true, false);\n  }\n\n  postOrganizationReinstate(id: string): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/reinstate\", null, true, false);\n  }\n\n  deleteOrganization(id: string, request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/organizations/\" + id, request, true, false);\n  }\n\n  async getOrganizationKeys(id: string): Promise<OrganizationKeysResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/keys\", null, true, true);\n    return new OrganizationKeysResponse(r);\n  }\n\n  async postOrganizationKeys(\n    id: string,\n    request: OrganizationKeysRequest\n  ): Promise<OrganizationKeysResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/keys\", request, true, true);\n    return new OrganizationKeysResponse(r);\n  }\n\n  // Provider APIs\n\n  async postProviderSetup(id: string, request: ProviderSetupRequest) {\n    const r = await this.send(\"POST\", \"/providers/\" + id + \"/setup\", request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async getProvider(id: string) {\n    const r = await this.send(\"GET\", \"/providers/\" + id, null, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async putProvider(id: string, request: ProviderUpdateRequest) {\n    const r = await this.send(\"PUT\", \"/providers/\" + id, request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  // Provider User APIs\n\n  async getProviderUsers(\n    providerId: string\n  ): Promise<ListResponse<ProviderUserUserDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users\", null, true, true);\n    return new ListResponse(r, ProviderUserUserDetailsResponse);\n  }\n\n  async getProviderUser(providerId: string, id: string): Promise<ProviderUserResponse> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users/\" + id, null, true, true);\n    return new ProviderUserResponse(r);\n  }\n\n  postProviderUserInvite(providerId: string, request: ProviderUserInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/providers/\" + providerId + \"/users/invite\", request, true, false);\n  }\n\n  postProviderUserReinvite(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyProviderUserReinvite(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async postProviderUserBulkConfirm(\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async deleteManyProviderUsers(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\"DELETE\", \"/providers/\" + providerId + \"/users\", request, true, true);\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  postProviderUserAccept(\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postProviderUserConfirm(\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderUsersPublicKey(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkPublicKeyResponse);\n  }\n\n  putProviderUser(\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\"PUT\", \"/providers/\" + providerId + \"/users/\" + id, request, true, false);\n  }\n\n  deleteProviderUser(providerId: string, id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/providers/\" + providerId + \"/users/\" + id, null, true, false);\n  }\n\n  // Provider Organization APIs\n\n  async getProviderClients(\n    providerId: string\n  ): Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/providers/\" + providerId + \"/organizations\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderOrganizationOrganizationDetailsResponse);\n  }\n\n  postProviderAddOrganization(\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations/add\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderCreateOrganization(\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ): Promise<ProviderOrganizationResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations\",\n      request,\n      true,\n      true\n    );\n    return new ProviderOrganizationResponse(r);\n  }\n\n  deleteProviderOrganization(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/providers/\" + providerId + \"/organizations/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Event APIs\n\n  async getEvents(start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsCipher(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/ciphers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganization(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/organizations/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganizationUser(\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/organizations/\" + organizationId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProvider(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/providers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProviderUser(\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/providers/\" + providerId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async postEventsCollect(request: EventRequest[]): Promise<any> {\n    const authHeader = await this.getActiveBearerToken();\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n      Authorization: \"Bearer \" + authHeader,\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    const response = await this.fetch(\n      new Request(this.environmentService.getEventsUrl() + \"/collect\", {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        method: \"POST\",\n        body: JSON.stringify(request),\n        headers: headers,\n      })\n    );\n    if (response.status !== 200) {\n      return Promise.reject(\"Event post failed.\");\n    }\n  }\n\n  // User APIs\n\n  async getUserPublicKey(id: string): Promise<UserKeyResponse> {\n    const r = await this.send(\"GET\", \"/users/\" + id + \"/public-key\", null, true, true);\n    return new UserKeyResponse(r);\n  }\n\n  // HIBP APIs\n\n  async getHibpBreach(username: string): Promise<BreachAccountResponse[]> {\n    const r = await this.send(\"GET\", \"/hibp/breach?username=\" + username, null, true, true);\n    return r.map((a: any) => new BreachAccountResponse(a));\n  }\n\n  // Misc\n\n  async postBitPayInvoice(request: BitPayInvoiceRequest): Promise<string> {\n    const r = await this.send(\"POST\", \"/bitpay-invoice\", request, true, true);\n    return r as string;\n  }\n\n  async postSetupPayment(): Promise<string> {\n    const r = await this.send(\"POST\", \"/setup-payment\", null, true, true);\n    return r as string;\n  }\n\n  // Key Connector\n\n  async getUserKeyFromKeyConnector(keyConnectorUrl: string): Promise<KeyConnectorUserKeyResponse> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n\n    return new KeyConnectorUserKeyResponse(await response.json());\n  }\n\n  async postUserKeyToKeyConnector(\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ): Promise<void> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"POST\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n        body: JSON.stringify(request),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async getKeyConnectorAlive(keyConnectorUrl: string) {\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/alive\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  // Helpers\n\n  async getActiveBearerToken(): Promise<string> {\n    let accessToken = await this.tokenService.getToken();\n    if (await this.tokenService.tokenNeedsRefresh()) {\n      await this.doAuthRefresh();\n      accessToken = await this.tokenService.getToken();\n    }\n    return accessToken;\n  }\n\n  async fetch(request: Request): Promise<Response> {\n    if (request.method === \"GET\") {\n      request.headers.set(\"Cache-Control\", \"no-store\");\n      request.headers.set(\"Pragma\", \"no-cache\");\n    }\n    request.headers.set(\"Bitwarden-Client-Name\", this.platformUtilsService.getClientType());\n    request.headers.set(\n      \"Bitwarden-Client-Version\",\n      await this.platformUtilsService.getApplicationVersion()\n    );\n    return this.nativeFetch(request);\n  }\n\n  nativeFetch(request: Request): Promise<Response> {\n    return fetch(request);\n  }\n\n  async preValidateSso(identifier: string): Promise<SsoPreValidateResponse> {\n    if (identifier == null || identifier === \"\") {\n      throw new Error(\"Organization Identifier was not provided.\");\n    }\n    const headers = new Headers({\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const path = `/account/prevalidate?domainHint=${encodeURIComponent(identifier)}`;\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + path, {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"GET\",\n      })\n    );\n\n    if (response.status === 200) {\n      const body = await response.json();\n      return new SsoPreValidateResponse(body);\n    } else {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async postCreateSponsorship(\n    sponsoredOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" +\n        (this.platformUtilsService.isSelfHost() ? \"self-hosted/\" : \"\") +\n        sponsoredOrgId +\n        \"/families-for-enterprise\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async getSponsorshipSyncStatus(\n    sponsoredOrgId: string\n  ): Promise<OrganizationSponsorshipSyncStatusResponse> {\n    const response = await this.send(\n      \"GET\",\n      \"/organization/sponsorship/\" + sponsoredOrgId + \"/sync-status\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationSponsorshipSyncStatusResponse(response);\n  }\n\n  async deleteRevokeSponsorship(sponsoringOrganizationId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/\" +\n        (this.platformUtilsService.isSelfHost() ? \"self-hosted/\" : \"\") +\n        sponsoringOrganizationId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteRemoveSponsorship(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/sponsored/\" + sponsoringOrgId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async postPreValidateSponsorshipToken(sponsorshipToken: string): Promise<boolean> {\n    const r = await this.send(\n      \"POST\",\n      \"/organization/sponsorship/validate-token?sponsorshipToken=\" +\n        encodeURIComponent(sponsorshipToken),\n      null,\n      true,\n      true\n    );\n    return r as boolean;\n  }\n\n  async postRedeemSponsorship(\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/redeem?sponsorshipToken=\" + encodeURIComponent(sponsorshipToken),\n      request,\n      true,\n      false\n    );\n  }\n\n  async postResendSponsorshipOffer(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" + sponsoringOrgId + \"/families-for-enterprise/resend\",\n      null,\n      true,\n      false\n    );\n  }\n\n  protected async doAuthRefresh(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken != null && refreshToken !== \"\") {\n      return this.doRefreshToken();\n    }\n\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n    if (!Utils.isNullOrWhitespace(clientId) && !Utils.isNullOrWhitespace(clientSecret)) {\n      return this.doApiTokenRefresh();\n    }\n\n    throw new Error(\"Cannot refresh token, no refresh token or api keys are stored\");\n  }\n\n  protected async doRefreshToken(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken == null || refreshToken === \"\") {\n      throw new Error();\n    }\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const decodedToken = await this.tokenService.decodeToken();\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify({\n          grant_type: \"refresh_token\",\n          client_id: decodedToken.client_id,\n          refresh_token: refreshToken,\n        }),\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    if (response.status === 200) {\n      const responseJson = await response.json();\n      const tokenResponse = new IdentityTokenResponse(responseJson);\n      await this.tokenService.setTokens(\n        tokenResponse.accessToken,\n        tokenResponse.refreshToken,\n        null\n      );\n    } else {\n      const error = await this.handleError(response, true, true);\n      return Promise.reject(error);\n    }\n  }\n\n  protected async doApiTokenRefresh(): Promise<void> {\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n\n    const appId = await this.appIdService.getAppId();\n    const deviceRequest = new DeviceRequest(appId, this.platformUtilsService);\n\n    const tokenRequest = new ApiTokenRequest(\n      clientId,\n      clientSecret,\n      new TokenRequestTwoFactor(),\n      deviceRequest\n    );\n\n    const response = await this.postIdentityToken(tokenRequest);\n    if (!(response instanceof IdentityTokenResponse)) {\n      throw new Error(\"Invalid response received when refreshing api token\");\n    }\n\n    await this.tokenService.setToken(response.accessToken);\n  }\n\n  async send(\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n    path: string,\n    body: any,\n    authed: boolean,\n    hasResponse: boolean,\n    apiUrl?: string,\n    alterHeaders?: (headers: Headers) => void\n  ): Promise<any> {\n    apiUrl = Utils.isNullOrWhitespace(apiUrl) ? this.environmentService.getApiUrl() : apiUrl;\n\n    const requestUrl = apiUrl + path;\n    // Prevent directory traversal from malicious paths\n    if (new URL(requestUrl).href !== requestUrl) {\n      return Promise.reject(\"Invalid request url path.\");\n    }\n\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const requestInit: RequestInit = {\n      cache: \"no-store\",\n      credentials: this.getCredentials(),\n      method: method,\n    };\n\n    if (authed) {\n      const authHeader = await this.getActiveBearerToken();\n      headers.set(\"Authorization\", \"Bearer \" + authHeader);\n    }\n    if (body != null) {\n      if (typeof body === \"string\") {\n        requestInit.body = body;\n        headers.set(\"Content-Type\", \"application/x-www-form-urlencoded; charset=utf-8\");\n      } else if (typeof body === \"object\") {\n        if (body instanceof FormData) {\n          requestInit.body = body;\n        } else {\n          headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n          requestInit.body = JSON.stringify(body);\n        }\n      }\n    }\n    if (hasResponse) {\n      headers.set(\"Accept\", \"application/json\");\n    }\n    if (alterHeaders != null) {\n      alterHeaders(headers);\n    }\n\n    requestInit.headers = headers;\n    const response = await this.fetch(new Request(requestUrl, requestInit));\n\n    if (hasResponse && response.status === 200) {\n      const responseJson = await response.json();\n      return responseJson;\n    } else if (response.status !== 200) {\n      const error = await this.handleError(response, false, authed);\n      return Promise.reject(error);\n    }\n  }\n\n  private async handleError(\n    response: Response,\n    tokenError: boolean,\n    authed: boolean\n  ): Promise<ErrorResponse> {\n    if (\n      authed &&\n      ((tokenError && response.status === 400) ||\n        response.status === 401 ||\n        response.status === 403)\n    ) {\n      await this.logoutCallback(true);\n      return null;\n    }\n\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    } else if (this.isTextResponse(response)) {\n      responseJson = { Message: await response.text() };\n    }\n\n    return new ErrorResponse(responseJson, response.status, tokenError);\n  }\n\n  private qsStringify(params: any): string {\n    return Object.keys(params)\n      .map((key) => {\n        return encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key]);\n      })\n      .join(\"&\");\n  }\n\n  private getCredentials(): RequestCredentials {\n    if (!this.isWebClient || this.environmentService.hasBaseUrl()) {\n      return \"include\";\n    }\n    return undefined;\n  }\n\n  private addEventParameters(base: string, start: string, end: string, token: string) {\n    if (start != null) {\n      base += \"?start=\" + start;\n    }\n    if (end != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"end=\" + end;\n    }\n    if (token != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"continuationToken=\" + token;\n    }\n    return base;\n  }\n\n  private isJsonResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"application/json\") > -1;\n  }\n\n  private isTextResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"text\") > -1;\n  }\n}\n","import { AppIdService as AppIdServiceAbstraction } from \"../abstractions/appId.service\";\nimport { AbstractStorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { Utils } from \"../misc/utils\";\n\nexport class AppIdService implements AppIdServiceAbstraction {\n  constructor(private storageService: AbstractStorageService) {}\n\n  getAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"appId\");\n  }\n\n  getAnonymousAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"anonymousAppId\");\n  }\n\n  private async makeAndGetAppId(key: string) {\n    const existingId = await this.storageService.get<string>(key, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    if (existingId != null) {\n      return existingId;\n    }\n\n    const guid = Utils.newGuid();\n    await this.storageService.save(key, guid, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    return guid;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { AuditService as AuditServiceAbstraction } from \"../abstractions/audit.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { throttle } from \"../misc/throttle\";\nimport { Utils } from \"../misc/utils\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\n\nconst PwnedPasswordsApi = \"https://api.pwnedpasswords.com/range/\";\n\nexport class AuditService implements AuditServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService\n  ) {}\n\n  @throttle(100, () => \"passwordLeaked\")\n  async passwordLeaked(password: string): Promise<number> {\n    const hashBytes = await this.cryptoFunctionService.hash(password, \"sha1\");\n    const hash = Utils.fromBufferToHex(hashBytes).toUpperCase();\n    const hashStart = hash.substr(0, 5);\n    const hashEnding = hash.substr(5);\n\n    const response = await this.apiService.nativeFetch(new Request(PwnedPasswordsApi + hashStart));\n    const leakedHashes = await response.text();\n    const match = leakedHashes.split(/\\r?\\n/).find((v) => {\n      return v.split(\":\")[0] === hashEnding;\n    });\n\n    return match != null ? parseInt(match.split(\":\")[1], 10) : 0;\n  }\n\n  async breachedAccounts(username: string): Promise<BreachAccountResponse[]> {\n    try {\n      return await this.apiService.getHibpBreach(username);\n    } catch (e) {\n      const error = e as ErrorResponse;\n      if (error.statusCode === 404) {\n        return [];\n      }\n      throw new Error();\n    }\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will limit how many times the function can be\n * in-flight at a time.\n *\n * Calls beyond the limit will be queued, and run when one of the active calls finishes\n */\nexport function throttle(limit: number, throttleKey: (args: any[]) => string) {\n  return <T>(\n    target: any,\n    propertyKey: string | symbol,\n    descriptor: TypedPropertyDescriptor<(...args: any[]) => Promise<T>>\n  ) => {\n    const originalMethod: () => Promise<T> = descriptor.value;\n    const allThrottles = new Map<any, Map<string, (() => void)[]>>();\n\n    const getThrottles = (obj: any) => {\n      let throttles = allThrottles.get(obj);\n      if (throttles != null) {\n        return throttles;\n      }\n      throttles = new Map<string, (() => void)[]>();\n      allThrottles.set(obj, throttles);\n      return throttles;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const throttles = getThrottles(this);\n        const argsThrottleKey = throttleKey(args);\n        let queue = throttles.get(argsThrottleKey);\n        if (queue == null) {\n          queue = [];\n          throttles.set(argsThrottleKey, queue);\n        }\n\n        return new Promise<T>((resolve, reject) => {\n          const exec = () => {\n            const onFinally = () => {\n              queue.splice(queue.indexOf(exec), 1);\n              if (queue.length >= limit) {\n                queue[limit - 1]();\n              } else if (queue.length === 0) {\n                throttles.delete(argsThrottleKey);\n                if (throttles.size === 0) {\n                  allThrottles.delete(this);\n                }\n              }\n            };\n            originalMethod\n              .apply(this, args)\n              .then((val: any) => {\n                onFinally();\n                return val;\n              })\n              .catch((err: any) => {\n                onFinally();\n                throw err;\n              })\n              .then(resolve, reject);\n          };\n          queue.push(exec);\n          if (queue.length <= limit) {\n            exec();\n          }\n        });\n      },\n    };\n  };\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\nimport { Utils } from \"../../misc/utils\";\n\nexport class AuthResult {\n  captchaSiteKey = \"\";\n  resetMasterPassword = false;\n  forcePasswordReset = false;\n  twoFactorProviders: Map<TwoFactorProviderType, { [key: string]: string }> = null;\n\n  get requiresCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  get requiresTwoFactor() {\n    return this.twoFactorProviders != null;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\nimport { Account, AccountProfile, AccountTokens } from \"../../models/domain/account\";\nimport { AuthResult } from \"../../models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n} from \"../../models/domain/logInCredentials\";\nimport { DeviceRequest } from \"../../models/request/deviceRequest\";\nimport { ApiTokenRequest } from \"../../models/request/identityToken/apiTokenRequest\";\nimport { PasswordTokenRequest } from \"../../models/request/identityToken/passwordTokenRequest\";\nimport { SsoTokenRequest } from \"../../models/request/identityToken/ssoTokenRequest\";\nimport { TokenRequestTwoFactor } from \"../../models/request/identityToken/tokenRequestTwoFactor\";\nimport { KeysRequest } from \"../../models/request/keysRequest\";\nimport { IdentityCaptchaResponse } from \"../../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../../models/response/identityTwoFactorResponse\";\n\nexport abstract class LogInStrategy {\n  protected abstract tokenRequest: ApiTokenRequest | PasswordTokenRequest | SsoTokenRequest;\n  protected captchaBypassToken: string = null;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService\n  ) {}\n\n  abstract logIn(\n    credentials: ApiLogInCredentials | PasswordLogInCredentials | SsoLogInCredentials\n  ): Promise<AuthResult>;\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string = null\n  ): Promise<AuthResult> {\n    this.tokenRequest.setTwoFactor(twoFactor);\n    return this.startLogIn();\n  }\n\n  protected async startLogIn(): Promise<AuthResult> {\n    this.twoFactorService.clearSelectedProvider();\n\n    const response = await this.apiService.postIdentityToken(this.tokenRequest);\n\n    if (response instanceof IdentityTwoFactorResponse) {\n      return this.processTwoFactorResponse(response);\n    } else if (response instanceof IdentityCaptchaResponse) {\n      return this.processCaptchaResponse(response);\n    } else if (response instanceof IdentityTokenResponse) {\n      return this.processTokenResponse(response);\n    }\n\n    throw new Error(\"Invalid response object.\");\n  }\n\n  protected onSuccessfulLogin(response: IdentityTokenResponse): Promise<void> {\n    // Implemented in subclass if required\n    return null;\n  }\n\n  protected async buildDeviceRequest() {\n    const appId = await this.appIdService.getAppId();\n    return new DeviceRequest(appId, this.platformUtilsService);\n  }\n\n  protected async buildTwoFactor(userProvidedTwoFactor?: TokenRequestTwoFactor) {\n    if (userProvidedTwoFactor != null) {\n      return userProvidedTwoFactor;\n    }\n\n    const storedTwoFactorToken = await this.tokenService.getTwoFactorToken();\n    if (storedTwoFactorToken != null) {\n      return new TokenRequestTwoFactor(TwoFactorProviderType.Remember, storedTwoFactorToken, false);\n    }\n\n    return new TokenRequestTwoFactor();\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    const accountInformation = await this.tokenService.decodeToken(tokenResponse.accessToken);\n    await this.stateService.addAccount(\n      new Account({\n        profile: {\n          ...new AccountProfile(),\n          ...{\n            userId: accountInformation.sub,\n            email: accountInformation.email,\n            hasPremiumPersonally: accountInformation.premium,\n            kdfIterations: tokenResponse.kdfIterations,\n            kdfType: tokenResponse.kdf,\n          },\n        },\n        tokens: {\n          ...new AccountTokens(),\n          ...{\n            accessToken: tokenResponse.accessToken,\n            refreshToken: tokenResponse.refreshToken,\n          },\n        },\n      })\n    );\n  }\n\n  protected async processTokenResponse(response: IdentityTokenResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.resetMasterPassword = response.resetMasterPassword;\n    result.forcePasswordReset = response.forcePasswordReset;\n\n    await this.saveAccountInformation(response);\n\n    if (response.twoFactorToken != null) {\n      await this.tokenService.setTwoFactorToken(response);\n    }\n\n    const newSsoUser = response.key == null;\n    if (!newSsoUser) {\n      await this.cryptoService.setEncKey(response.key);\n      await this.cryptoService.setEncPrivateKey(\n        response.privateKey ?? (await this.createKeyPairForOldAccount())\n      );\n    }\n\n    await this.onSuccessfulLogin(response);\n\n    await this.stateService.setBiometricLocked(false);\n    this.messagingService.send(\"loggedIn\");\n\n    return result;\n  }\n\n  private async processTwoFactorResponse(response: IdentityTwoFactorResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.twoFactorProviders = response.twoFactorProviders2;\n    this.twoFactorService.setProviders(response);\n    this.captchaBypassToken = response.captchaToken ?? null;\n    return result;\n  }\n\n  private async processCaptchaResponse(response: IdentityCaptchaResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.captchaSiteKey = response.siteKey;\n    return result;\n  }\n\n  private async createKeyPairForOldAccount() {\n    try {\n      const [publicKey, privateKey] = await this.cryptoService.makeKeyPair();\n      await this.apiService.postAccountKeys(new KeysRequest(publicKey, privateKey.encryptedString));\n      return privateKey.encryptedString;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EnvironmentService } from \"../../abstractions/environment.service\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { ApiLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { ApiTokenRequest } from \"../../models/request/identityToken/apiTokenRequest\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class ApiLogInStrategy extends LogInStrategy {\n  tokenRequest: ApiTokenRequest;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private environmentService: EnvironmentService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin(tokenResponse: IdentityTokenResponse) {\n    if (tokenResponse.apiUseKeyConnector) {\n      const keyConnectorUrl = this.environmentService.getKeyConnectorUrl();\n      await this.keyConnectorService.getAndSetKey(keyConnectorUrl);\n    }\n  }\n\n  async logIn(credentials: ApiLogInCredentials) {\n    this.tokenRequest = new ApiTokenRequest(\n      credentials.clientId,\n      credentials.clientSecret,\n      await this.buildTwoFactor(),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    await super.saveAccountInformation(tokenResponse);\n    await this.stateService.setApiKeyClientId(this.tokenRequest.clientId);\n    await this.stateService.setApiKeyClientSecret(this.tokenRequest.clientSecret);\n  }\n}\n","import { ClientType } from \"../../../enums/clientType\";\nimport { Utils } from \"../../../misc/utils\";\nimport { CaptchaProtectedRequest } from \"../captchaProtectedRequest\";\nimport { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest } from \"./tokenRequest\";\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport class PasswordTokenRequest extends TokenRequest implements CaptchaProtectedRequest {\n  constructor(\n    public email: string,\n    public masterPasswordHash: string,\n    public captchaResponse: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: ClientType) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"password\";\n    obj.username = this.email;\n    obj.password = this.masterPasswordHash;\n\n    if (this.captchaResponse != null) {\n      obj.captchaResponse = this.captchaResponse;\n    }\n\n    return obj;\n  }\n\n  alterIdentityTokenHeaders(headers: Headers) {\n    headers.set(\"Auth-Email\", Utils.fromUtf8ToUrlB64(this.email));\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { AuthService } from \"../../abstractions/auth.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { HashPurpose } from \"../../enums/hashPurpose\";\nimport { AuthResult } from \"../../models/domain/authResult\";\nimport { PasswordLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetricCryptoKey\";\nimport { PasswordTokenRequest } from \"../../models/request/identityToken/passwordTokenRequest\";\nimport { TokenRequestTwoFactor } from \"../../models/request/identityToken/tokenRequestTwoFactor\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class PasswordLogInStrategy extends LogInStrategy {\n  get email() {\n    return this.tokenRequest.email;\n  }\n\n  get masterPasswordHash() {\n    return this.tokenRequest.masterPasswordHash;\n  }\n\n  tokenRequest: PasswordTokenRequest;\n\n  private localHashedPassword: string;\n  private key: SymmetricCryptoKey;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private authService: AuthService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin() {\n    await this.cryptoService.setKey(this.key);\n    await this.cryptoService.setKeyHash(this.localHashedPassword);\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    this.tokenRequest.captchaResponse = captchaResponse ?? this.captchaBypassToken;\n    return super.logInTwoFactor(twoFactor);\n  }\n\n  async logIn(credentials: PasswordLogInCredentials) {\n    const { email, masterPassword, captchaToken, twoFactor } = credentials;\n\n    this.key = await this.authService.makePreloginKey(masterPassword, email);\n\n    // Hash the password early (before authentication) so we don't persist it in memory in plaintext\n    this.localHashedPassword = await this.cryptoService.hashPassword(\n      masterPassword,\n      this.key,\n      HashPurpose.LocalAuthorization\n    );\n    const hashedPassword = await this.cryptoService.hashPassword(masterPassword, this.key);\n\n    this.tokenRequest = new PasswordTokenRequest(\n      email,\n      hashedPassword,\n      captchaToken,\n      await this.buildTwoFactor(twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","import { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest } from \"./tokenRequest\";\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport class SsoTokenRequest extends TokenRequest {\n  constructor(\n    public code: string,\n    public codeVerifier: string,\n    public redirectUri: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: string) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"authorization_code\";\n    obj.code = this.code;\n    obj.code_verifier = this.codeVerifier;\n    obj.redirect_uri = this.redirectUri;\n\n    return obj;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { SsoLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { SsoTokenRequest } from \"../../models/request/identityToken/ssoTokenRequest\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class SsoLogInStrategy extends LogInStrategy {\n  tokenRequest: SsoTokenRequest;\n  orgId: string;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin(tokenResponse: IdentityTokenResponse) {\n    const newSsoUser = tokenResponse.key == null;\n\n    if (tokenResponse.keyConnectorUrl != null) {\n      if (!newSsoUser) {\n        await this.keyConnectorService.getAndSetKey(tokenResponse.keyConnectorUrl);\n      } else {\n        await this.keyConnectorService.convertNewSsoUserToKeyConnector(tokenResponse, this.orgId);\n      }\n    }\n  }\n\n  async logIn(credentials: SsoLogInCredentials) {\n    this.orgId = credentials.orgId;\n    this.tokenRequest = new SsoTokenRequest(\n      credentials.code,\n      credentials.codeVerifier,\n      credentials.redirectUrl,\n      await this.buildTwoFactor(credentials.twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","export class PreloginRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { AuthService as AuthServiceAbstraction } from \"../abstractions/auth.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { TwoFactorService } from \"../abstractions/twoFactor.service\";\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { AuthenticationType } from \"../enums/authenticationType\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { ApiLogInStrategy } from \"../misc/logInStrategies/apiLogin.strategy\";\nimport { PasswordLogInStrategy } from \"../misc/logInStrategies/passwordLogin.strategy\";\nimport { SsoLogInStrategy } from \"../misc/logInStrategies/ssoLogin.strategy\";\nimport { AuthResult } from \"../models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n} from \"../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TokenRequestTwoFactor } from \"../models/request/identityToken/tokenRequestTwoFactor\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\n\nconst sessionTimeoutLength = 2 * 60 * 1000; // 2 minutes\n\nexport class AuthService implements AuthServiceAbstraction {\n  get email(): string {\n    return this.logInStrategy instanceof PasswordLogInStrategy ? this.logInStrategy.email : null;\n  }\n\n  get masterPasswordHash(): string {\n    return this.logInStrategy instanceof PasswordLogInStrategy\n      ? this.logInStrategy.masterPasswordHash\n      : null;\n  }\n\n  private logInStrategy: ApiLogInStrategy | PasswordLogInStrategy | SsoLogInStrategy;\n  private sessionTimeout: any;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected keyConnectorService: KeyConnectorService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService,\n    protected i18nService: I18nService\n  ) {}\n\n  async logIn(\n    credentials: ApiLogInCredentials | PasswordLogInCredentials | SsoLogInCredentials\n  ): Promise<AuthResult> {\n    this.clearState();\n\n    let strategy: ApiLogInStrategy | PasswordLogInStrategy | SsoLogInStrategy;\n\n    if (credentials.type === AuthenticationType.Password) {\n      strategy = new PasswordLogInStrategy(\n        this.cryptoService,\n        this.apiService,\n        this.tokenService,\n        this.appIdService,\n        this.platformUtilsService,\n        this.messagingService,\n        this.logService,\n        this.stateService,\n        this.twoFactorService,\n        this\n      );\n    } else if (credentials.type === AuthenticationType.Sso) {\n      strategy = new SsoLogInStrategy(\n        this.cryptoService,\n        this.apiService,\n        this.tokenService,\n        this.appIdService,\n        this.platformUtilsService,\n        this.messagingService,\n        this.logService,\n        this.stateService,\n        this.twoFactorService,\n        this.keyConnectorService\n      );\n    } else if (credentials.type === AuthenticationType.Api) {\n      strategy = new ApiLogInStrategy(\n        this.cryptoService,\n        this.apiService,\n        this.tokenService,\n        this.appIdService,\n        this.platformUtilsService,\n        this.messagingService,\n        this.logService,\n        this.stateService,\n        this.twoFactorService,\n        this.environmentService,\n        this.keyConnectorService\n      );\n    }\n\n    const result = await strategy.logIn(credentials as any);\n\n    if (result?.requiresTwoFactor) {\n      this.saveState(strategy);\n    }\n    return result;\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    if (this.logInStrategy == null) {\n      throw new Error(this.i18nService.t(\"sessionTimeout\"));\n    }\n\n    try {\n      const result = await this.logInStrategy.logInTwoFactor(twoFactor, captchaResponse);\n\n      // Only clear state if 2FA token has been accepted, otherwise we need to be able to try again\n      if (!result.requiresTwoFactor && !result.requiresCaptcha) {\n        this.clearState();\n      }\n      return result;\n    } catch (e) {\n      // API exceptions are okay, but if there are any unhandled client-side errors then clear state to be safe\n      if (!(e instanceof ErrorResponse)) {\n        this.clearState();\n      }\n      throw e;\n    }\n  }\n\n  logOut(callback: () => void) {\n    callback();\n    this.messagingService.send(\"loggedOut\");\n  }\n\n  authingWithApiKey(): boolean {\n    return this.logInStrategy instanceof ApiLogInStrategy;\n  }\n\n  authingWithSso(): boolean {\n    return this.logInStrategy instanceof SsoLogInStrategy;\n  }\n\n  authingWithPassword(): boolean {\n    return this.logInStrategy instanceof PasswordLogInStrategy;\n  }\n\n  async getAuthStatus(userId?: string): Promise<AuthenticationStatus> {\n    const isAuthenticated = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!isAuthenticated) {\n      return AuthenticationStatus.LoggedOut;\n    }\n\n    // Keys aren't stored for a device that is locked or logged out\n    // Make sure we're logged in before checking this, otherwise we could mix up those states\n    const neverLock =\n      (await this.cryptoService.hasKeyStored(KeySuffixOptions.Auto, userId)) &&\n      !(await this.stateService.getEverBeenUnlocked({ userId: userId }));\n    if (neverLock) {\n      // TODO: This also _sets_ the key so when we check memory in the next line it finds a key.\n      // We should refactor here.\n      await this.cryptoService.getKey(KeySuffixOptions.Auto, userId);\n    }\n\n    const hasKeyInMemory = await this.cryptoService.hasKeyInMemory(userId);\n    if (!hasKeyInMemory) {\n      return AuthenticationStatus.Locked;\n    }\n\n    return AuthenticationStatus.Unlocked;\n  }\n\n  async makePreloginKey(masterPassword: string, email: string): Promise<SymmetricCryptoKey> {\n    email = email.trim().toLowerCase();\n    let kdf: KdfType = null;\n    let kdfIterations: number = null;\n    try {\n      const preloginResponse = await this.apiService.postPrelogin(new PreloginRequest(email));\n      if (preloginResponse != null) {\n        kdf = preloginResponse.kdf;\n        kdfIterations = preloginResponse.kdfIterations;\n      }\n    } catch (e) {\n      if (e == null || e.statusCode !== 404) {\n        throw e;\n      }\n    }\n    return this.cryptoService.makeKey(masterPassword, email, kdf, kdfIterations);\n  }\n\n  private saveState(strategy: ApiLogInStrategy | PasswordLogInStrategy | SsoLogInStrategy) {\n    this.logInStrategy = strategy;\n    this.startSessionTimeout();\n  }\n\n  private clearState() {\n    this.logInStrategy = null;\n    this.clearSessionTimeout();\n  }\n\n  private startSessionTimeout() {\n    this.clearSessionTimeout();\n    this.sessionTimeout = setTimeout(() => this.clearState(), sessionTimeoutLength);\n  }\n\n  private clearSessionTimeout() {\n    if (this.sessionTimeout != null) {\n      clearTimeout(this.sessionTimeout);\n    }\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will prevent multiple 'active' calls as the same time\n *\n * If a promise was returned from a previous call to this function, that hasn't yet resolved it will\n * be returned, instead of calling the original function again\n *\n * Results are not cached, once the promise has returned, the next call will result in a fresh call\n *\n * Read more at https://github.com/bitwarden/jslib/pull/7\n */\nexport function sequentialize(cacheKey: (args: any[]) => string) {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod: () => Promise<any> = descriptor.value;\n    const caches = new Map<any, Map<string, Promise<any>>>();\n\n    const getCache = (obj: any) => {\n      let cache = caches.get(obj);\n      if (cache != null) {\n        return cache;\n      }\n      cache = new Map<string, Promise<any>>();\n      caches.set(obj, cache);\n      return cache;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const cache = getCache(this);\n        const argsCacheKey = cacheKey(args);\n        let response = cache.get(argsCacheKey);\n        if (response != null) {\n          return response;\n        }\n\n        const onFinally = () => {\n          cache.delete(argsCacheKey);\n          if (cache.size === 0) {\n            caches.delete(this);\n          }\n        };\n        response = originalMethod\n          .apply(this, args)\n          .then((val: any) => {\n            onFinally();\n            return val;\n          })\n          .catch((err: any) => {\n            onFinally();\n            throw err;\n          });\n\n        cache.set(argsCacheKey, response);\n        return response;\n      },\n    };\n  };\n}\n","import { AttachmentResponse } from \"../response/attachmentResponse\";\n\nexport class AttachmentData {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response?: AttachmentResponse) {\n    if (response == null) {\n      return;\n    }\n    this.id = response.id;\n    this.url = response.url;\n    this.fileName = response.fileName;\n    this.key = response.key;\n    this.size = response.size;\n    this.sizeName = response.sizeName;\n  }\n}\n","import { CardApi } from \"../api/cardApi\";\n\nexport class CardData {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data?: CardApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.cardholderName = data.cardholderName;\n    this.brand = data.brand;\n    this.number = data.number;\n    this.expMonth = data.expMonth;\n    this.expYear = data.expYear;\n    this.code = data.code;\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { FieldApi } from \"../api/fieldApi\";\n\nexport class FieldData {\n  type: FieldType;\n  name: string;\n  value: string;\n  linkedId: LinkedIdType;\n\n  constructor(response?: FieldApi) {\n    if (response == null) {\n      return;\n    }\n    this.type = response.type;\n    this.name = response.name;\n    this.value = response.value;\n    this.linkedId = response.linkedId;\n  }\n}\n","import { IdentityApi } from \"../api/identityApi\";\n\nexport class IdentityData {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data?: IdentityApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.title = data.title;\n    this.firstName = data.firstName;\n    this.middleName = data.middleName;\n    this.lastName = data.lastName;\n    this.address1 = data.address1;\n    this.address2 = data.address2;\n    this.address3 = data.address3;\n    this.city = data.city;\n    this.state = data.state;\n    this.postalCode = data.postalCode;\n    this.country = data.country;\n    this.company = data.company;\n    this.email = data.email;\n    this.phone = data.phone;\n    this.ssn = data.ssn;\n    this.username = data.username;\n    this.passportNumber = data.passportNumber;\n    this.licenseNumber = data.licenseNumber;\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { LoginUriApi } from \"../api/loginUriApi\";\n\nexport class LoginUriData {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data?: LoginUriApi) {\n    if (data == null) {\n      return;\n    }\n    this.uri = data.uri;\n    this.match = data.match;\n  }\n}\n","import { LoginApi } from \"../api/loginApi\";\n\nimport { LoginUriData } from \"./loginUriData\";\n\nexport class LoginData {\n  uris: LoginUriData[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data?: LoginApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.username = data.username;\n    this.password = data.password;\n    this.passwordRevisionDate = data.passwordRevisionDate;\n    this.totp = data.totp;\n    this.autofillOnPageLoad = data.autofillOnPageLoad;\n\n    if (data.uris) {\n      this.uris = data.uris.map((u) => new LoginUriData(u));\n    }\n  }\n}\n","import { PasswordHistoryResponse } from \"../response/passwordHistoryResponse\";\n\nexport class PasswordHistoryData {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response?: PasswordHistoryResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.password = response.password;\n    this.lastUsedDate = response.lastUsedDate;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\n\nexport class SecureNoteData {\n  type: SecureNoteType;\n\n  constructor(data?: SecureNoteApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.type = data.type;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CipherResponse } from \"../response/cipherResponse\";\n\nimport { AttachmentData } from \"./attachmentData\";\nimport { CardData } from \"./cardData\";\nimport { FieldData } from \"./fieldData\";\nimport { IdentityData } from \"./identityData\";\nimport { LoginData } from \"./loginData\";\nimport { PasswordHistoryData } from \"./passwordHistoryData\";\nimport { SecureNoteData } from \"./secureNoteData\";\n\nexport class CipherData {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  favorite: boolean;\n  revisionDate: string;\n  type: CipherType;\n  name: string;\n  notes: string;\n  login?: LoginData;\n  secureNote?: SecureNoteData;\n  card?: CardData;\n  identity?: IdentityData;\n  fields?: FieldData[];\n  attachments?: AttachmentData[];\n  passwordHistory?: PasswordHistoryData[];\n  collectionIds?: string[];\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response?: CipherResponse, collectionIds?: string[]) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.folderId = response.folderId;\n    this.edit = response.edit;\n    this.viewPassword = response.viewPassword;\n    this.organizationUseTotp = response.organizationUseTotp;\n    this.favorite = response.favorite;\n    this.revisionDate = response.revisionDate;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.collectionIds = collectionIds != null ? collectionIds : response.collectionIds;\n    this.deletedDate = response.deletedDate;\n    this.reprompt = response.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginData(response.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteData(response.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardData(response.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityData(response.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (response.fields != null) {\n      this.fields = response.fields.map((f) => new FieldData(f));\n    }\n    if (response.attachments != null) {\n      this.attachments = response.attachments.map((a) => new AttachmentData(a));\n    }\n    if (response.passwordHistory != null) {\n      this.passwordHistory = response.passwordHistory.map((ph) => new PasswordHistoryData(ph));\n    }\n  }\n}\n","import { Attachment } from \"../domain/attachment\";\nimport { SymmetricCryptoKey } from \"../domain/symmetricCryptoKey\";\n\nimport { View } from \"./view\";\n\nexport class AttachmentView implements View {\n  id: string = null;\n  url: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n  key: SymmetricCryptoKey = null;\n\n  constructor(a?: Attachment) {\n    if (!a) {\n      return;\n    }\n\n    this.id = a.id;\n    this.url = a.url;\n    this.size = a.size;\n    this.sizeName = a.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n}\n","import { EncryptionType } from \"../../enums/encryptionType\";\nimport { Utils } from \"../../misc/utils\";\n\nexport class SymmetricCryptoKey {\n  key: ArrayBuffer;\n  encKey?: ArrayBuffer;\n  macKey?: ArrayBuffer;\n  encType: EncryptionType;\n\n  keyB64: string;\n  encKeyB64: string;\n  macKeyB64: string;\n\n  meta: any;\n\n  constructor(key: ArrayBuffer, encType?: EncryptionType) {\n    if (key == null) {\n      throw new Error(\"Must provide key\");\n    }\n\n    if (encType == null) {\n      if (key.byteLength === 32) {\n        encType = EncryptionType.AesCbc256_B64;\n      } else if (key.byteLength === 64) {\n        encType = EncryptionType.AesCbc256_HmacSha256_B64;\n      } else {\n        throw new Error(\"Unable to determine encType.\");\n      }\n    }\n\n    this.key = key;\n    this.encType = encType;\n\n    if (encType === EncryptionType.AesCbc256_B64 && key.byteLength === 32) {\n      this.encKey = key;\n      this.macKey = null;\n    } else if (encType === EncryptionType.AesCbc128_HmacSha256_B64 && key.byteLength === 32) {\n      this.encKey = key.slice(0, 16);\n      this.macKey = key.slice(16, 32);\n    } else if (encType === EncryptionType.AesCbc256_HmacSha256_B64 && key.byteLength === 64) {\n      this.encKey = key.slice(0, 32);\n      this.macKey = key.slice(32, 64);\n    } else {\n      throw new Error(\"Unsupported encType/key length.\");\n    }\n\n    if (this.key != null) {\n      this.keyB64 = Utils.fromBufferToB64(this.key);\n    }\n    if (this.encKey != null) {\n      this.encKeyB64 = Utils.fromBufferToB64(this.encKey);\n    }\n    if (this.macKey != null) {\n      this.macKeyB64 = Utils.fromBufferToB64(this.macKey);\n    }\n  }\n\n  static initFromJson(jsonResult: SymmetricCryptoKey): SymmetricCryptoKey {\n    if (jsonResult == null) {\n      return jsonResult;\n    }\n\n    if (jsonResult.keyB64 != null) {\n      jsonResult.key = Utils.fromB64ToArray(jsonResult.keyB64).buffer;\n    }\n    if (jsonResult.encKeyB64 != null) {\n      jsonResult.encKey = Utils.fromB64ToArray(jsonResult.encKeyB64).buffer;\n    }\n    if (jsonResult.macKeyB64 != null) {\n      jsonResult.macKey = Utils.fromB64ToArray(jsonResult.macKeyB64).buffer;\n    }\n\n    return jsonResult;\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { Utils } from \"../../misc/utils\";\nimport { AttachmentData } from \"../data/attachmentData\";\nimport { AttachmentView } from \"../view/attachmentView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Attachment extends Domain {\n  id: string;\n  url: string;\n  size: string;\n  sizeName: string; // Readable size, ex: \"4.2 KB\" or \"1.43 GB\"\n  key: EncString;\n  fileName: EncString;\n\n  constructor(obj?: AttachmentData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<AttachmentView> {\n    const view = await this.decryptObj(\n      new AttachmentView(this),\n      {\n        fileName: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.key != null) {\n      let cryptoService: CryptoService;\n      const containerService = (Utils.global as any).bitwardenContainerService;\n      if (containerService) {\n        cryptoService = containerService.getCryptoService();\n      } else {\n        throw new Error(\"global bitwardenContainerService not initialized.\");\n      }\n\n      try {\n        const orgKey = await cryptoService.getOrgKey(orgId);\n        const decValue = await cryptoService.decryptToBytes(this.key, orgKey ?? encKey);\n        view.key = new SymmetricCryptoKey(decValue);\n      } catch (e) {\n        // TODO: error?\n      }\n    }\n\n    return view;\n  }\n\n  toAttachmentData(): AttachmentData {\n    const a = new AttachmentData();\n    a.size = this.size;\n    this.buildDataModel(\n      this,\n      a,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n    return a;\n  }\n}\n","import { CardData } from \"../data/cardData\";\nimport { CardView } from \"../view/cardView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Card extends Domain {\n  cardholderName: EncString;\n  brand: EncString;\n  number: EncString;\n  expMonth: EncString;\n  expYear: EncString;\n  code: EncString;\n\n  constructor(obj?: CardData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<CardView> {\n    return this.decryptObj(\n      new CardView(),\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toCardData(): CardData {\n    const c = new CardData();\n    this.buildDataModel(this, c, {\n      cardholderName: null,\n      brand: null,\n      number: null,\n      expMonth: null,\n      expYear: null,\n      code: null,\n    });\n    return c;\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { FieldData } from \"../data/fieldData\";\nimport { FieldView } from \"../view/fieldView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Field extends Domain {\n  name: EncString;\n  value: EncString;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(obj?: FieldData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n    this.linkedId = obj.linkedId;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        name: null,\n        value: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<FieldView> {\n    return this.decryptObj(\n      new FieldView(this),\n      {\n        name: null,\n        value: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toFieldData(): FieldData {\n    const f = new FieldData();\n    this.buildDataModel(\n      this,\n      f,\n      {\n        name: null,\n        value: null,\n        type: null,\n        linkedId: null,\n      },\n      [\"type\", \"linkedId\"]\n    );\n    return f;\n  }\n}\n","import { IdentityData } from \"../data/identityData\";\nimport { IdentityView } from \"../view/identityView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Identity extends Domain {\n  title: EncString;\n  firstName: EncString;\n  middleName: EncString;\n  lastName: EncString;\n  address1: EncString;\n  address2: EncString;\n  address3: EncString;\n  city: EncString;\n  state: EncString;\n  postalCode: EncString;\n  country: EncString;\n  company: EncString;\n  email: EncString;\n  phone: EncString;\n  ssn: EncString;\n  username: EncString;\n  passportNumber: EncString;\n  licenseNumber: EncString;\n\n  constructor(obj?: IdentityData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<IdentityView> {\n    return this.decryptObj(\n      new IdentityView(),\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toIdentityData(): IdentityData {\n    const i = new IdentityData();\n    this.buildDataModel(this, i, {\n      title: null,\n      firstName: null,\n      middleName: null,\n      lastName: null,\n      address1: null,\n      address2: null,\n      address3: null,\n      city: null,\n      state: null,\n      postalCode: null,\n      country: null,\n      company: null,\n      email: null,\n      phone: null,\n      ssn: null,\n      username: null,\n      passportNumber: null,\n      licenseNumber: null,\n    });\n    return i;\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { LoginUriData } from \"../data/loginUriData\";\nimport { LoginUriView } from \"../view/loginUriView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class LoginUri extends Domain {\n  uri: EncString;\n  match: UriMatchType;\n\n  constructor(obj?: LoginUriData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.match = obj.match;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        uri: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginUriView> {\n    return this.decryptObj(\n      new LoginUriView(this),\n      {\n        uri: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toLoginUriData(): LoginUriData {\n    const u = new LoginUriData();\n    this.buildDataModel(\n      this,\n      u,\n      {\n        uri: null,\n        match: null,\n      },\n      [\"match\"]\n    );\n    return u;\n  }\n}\n","import { LoginData } from \"../data/loginData\";\nimport { LoginView } from \"../view/loginView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { LoginUri } from \"./loginUri\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Login extends Domain {\n  uris: LoginUri[];\n  username: EncString;\n  password: EncString;\n  passwordRevisionDate?: Date;\n  totp: EncString;\n  autofillOnPageLoad: boolean;\n\n  constructor(obj?: LoginData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.passwordRevisionDate =\n      obj.passwordRevisionDate != null ? new Date(obj.passwordRevisionDate) : null;\n    this.autofillOnPageLoad = obj.autofillOnPageLoad;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      []\n    );\n\n    if (obj.uris) {\n      this.uris = [];\n      obj.uris.forEach((u) => {\n        this.uris.push(new LoginUri(u));\n      });\n    }\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginView> {\n    const view = await this.decryptObj(\n      new LoginView(this),\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.uris != null) {\n      view.uris = [];\n      for (let i = 0; i < this.uris.length; i++) {\n        const uri = await this.uris[i].decrypt(orgId, encKey);\n        view.uris.push(uri);\n      }\n    }\n\n    return view;\n  }\n\n  toLoginData(): LoginData {\n    const l = new LoginData();\n    l.passwordRevisionDate =\n      this.passwordRevisionDate != null ? this.passwordRevisionDate.toISOString() : null;\n    l.autofillOnPageLoad = this.autofillOnPageLoad;\n    this.buildDataModel(this, l, {\n      username: null,\n      password: null,\n      totp: null,\n    });\n\n    if (this.uris != null && this.uris.length > 0) {\n      l.uris = [];\n      this.uris.forEach((u) => {\n        l.uris.push(u.toLoginUriData());\n      });\n    }\n\n    return l;\n  }\n}\n","import { Password } from \"../domain/password\";\n\nimport { View } from \"./view\";\n\nexport class PasswordHistoryView implements View {\n  password: string = null;\n  lastUsedDate: Date = null;\n\n  constructor(ph?: Password) {\n    if (!ph) {\n      return;\n    }\n\n    this.lastUsedDate = ph.lastUsedDate;\n  }\n}\n","import { PasswordHistoryData } from \"../data/passwordHistoryData\";\nimport { PasswordHistoryView } from \"../view/passwordHistoryView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Password extends Domain {\n  password: EncString;\n  lastUsedDate: Date;\n\n  constructor(obj?: PasswordHistoryData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(this, obj, {\n      password: null,\n    });\n    this.lastUsedDate = new Date(obj.lastUsedDate);\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<PasswordHistoryView> {\n    return this.decryptObj(\n      new PasswordHistoryView(this),\n      {\n        password: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toPasswordHistoryData(): PasswordHistoryData {\n    const ph = new PasswordHistoryData();\n    ph.lastUsedDate = this.lastUsedDate.toISOString();\n    this.buildDataModel(this, ph, {\n      password: null,\n    });\n    return ph;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNoteData } from \"../data/secureNoteData\";\nimport { SecureNoteView } from \"../view/secureNoteView\";\n\nimport Domain from \"./domainBase\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SecureNote extends Domain {\n  type: SecureNoteType;\n\n  constructor(obj?: SecureNoteData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<SecureNoteView> {\n    return Promise.resolve(new SecureNoteView(this));\n  }\n\n  toSecureNoteData(): SecureNoteData {\n    const n = new SecureNoteData();\n    n.type = this.type;\n    return n;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CipherData } from \"../data/cipherData\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { Attachment } from \"./attachment\";\nimport { Card } from \"./card\";\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { Field } from \"./field\";\nimport { Identity } from \"./identity\";\nimport { Login } from \"./login\";\nimport { Password } from \"./password\";\nimport { SecureNote } from \"./secureNote\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Cipher extends Domain {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  name: EncString;\n  notes: EncString;\n  type: CipherType;\n  favorite: boolean;\n  organizationUseTotp: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  revisionDate: Date;\n  localData: any;\n  login: Login;\n  identity: Identity;\n  card: Card;\n  secureNote: SecureNote;\n  attachments: Attachment[];\n  fields: Field[];\n  passwordHistory: Password[];\n  collectionIds: string[];\n  deletedDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(obj?: CipherData, localData: any = null) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        folderId: null,\n        name: null,\n        notes: null,\n      },\n      [\"id\", \"organizationId\", \"folderId\"]\n    );\n\n    this.type = obj.type;\n    this.favorite = obj.favorite;\n    this.organizationUseTotp = obj.organizationUseTotp;\n    this.edit = obj.edit;\n    if (obj.viewPassword != null) {\n      this.viewPassword = obj.viewPassword;\n    } else {\n      this.viewPassword = true; // Default for already synced Ciphers without viewPassword\n    }\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.collectionIds = obj.collectionIds;\n    this.localData = localData;\n    this.deletedDate = obj.deletedDate != null ? new Date(obj.deletedDate) : null;\n    this.reprompt = obj.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new Login(obj.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNote(obj.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new Card(obj.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new Identity(obj.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (obj.attachments != null) {\n      this.attachments = obj.attachments.map((a) => new Attachment(a));\n    } else {\n      this.attachments = null;\n    }\n\n    if (obj.fields != null) {\n      this.fields = obj.fields.map((f) => new Field(f));\n    } else {\n      this.fields = null;\n    }\n\n    if (obj.passwordHistory != null) {\n      this.passwordHistory = obj.passwordHistory.map((ph) => new Password(ph));\n    } else {\n      this.passwordHistory = null;\n    }\n  }\n\n  async decrypt(encKey?: SymmetricCryptoKey): Promise<CipherView> {\n    const model = new CipherView(this);\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      this.organizationId,\n      encKey\n    );\n\n    switch (this.type) {\n      case CipherType.Login:\n        model.login = await this.login.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.SecureNote:\n        model.secureNote = await this.secureNote.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Card:\n        model.card = await this.card.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Identity:\n        model.identity = await this.identity.decrypt(this.organizationId, encKey);\n        break;\n      default:\n        break;\n    }\n\n    const orgId = this.organizationId;\n\n    if (this.attachments != null && this.attachments.length > 0) {\n      const attachments: any[] = [];\n      await this.attachments.reduce((promise, attachment) => {\n        return promise\n          .then(() => {\n            return attachment.decrypt(orgId, encKey);\n          })\n          .then((decAttachment) => {\n            attachments.push(decAttachment);\n          });\n      }, Promise.resolve());\n      model.attachments = attachments;\n    }\n\n    if (this.fields != null && this.fields.length > 0) {\n      const fields: any[] = [];\n      await this.fields.reduce((promise, field) => {\n        return promise\n          .then(() => {\n            return field.decrypt(orgId, encKey);\n          })\n          .then((decField) => {\n            fields.push(decField);\n          });\n      }, Promise.resolve());\n      model.fields = fields;\n    }\n\n    if (this.passwordHistory != null && this.passwordHistory.length > 0) {\n      const passwordHistory: any[] = [];\n      await this.passwordHistory.reduce((promise, ph) => {\n        return promise\n          .then(() => {\n            return ph.decrypt(orgId, encKey);\n          })\n          .then((decPh) => {\n            passwordHistory.push(decPh);\n          });\n      }, Promise.resolve());\n      model.passwordHistory = passwordHistory;\n    }\n\n    return model;\n  }\n\n  toCipherData(): CipherData {\n    const c = new CipherData();\n    c.id = this.id;\n    c.organizationId = this.organizationId;\n    c.folderId = this.folderId;\n    c.edit = this.edit;\n    c.viewPassword = this.viewPassword;\n    c.organizationUseTotp = this.organizationUseTotp;\n    c.favorite = this.favorite;\n    c.revisionDate = this.revisionDate != null ? this.revisionDate.toISOString() : null;\n    c.type = this.type;\n    c.collectionIds = this.collectionIds;\n    c.deletedDate = this.deletedDate != null ? this.deletedDate.toISOString() : null;\n    c.reprompt = this.reprompt;\n\n    this.buildDataModel(this, c, {\n      name: null,\n      notes: null,\n    });\n\n    switch (c.type) {\n      case CipherType.Login:\n        c.login = this.login.toLoginData();\n        break;\n      case CipherType.SecureNote:\n        c.secureNote = this.secureNote.toSecureNoteData();\n        break;\n      case CipherType.Card:\n        c.card = this.card.toCardData();\n        break;\n      case CipherType.Identity:\n        c.identity = this.identity.toIdentityData();\n        break;\n      default:\n        break;\n    }\n\n    if (this.fields != null) {\n      c.fields = this.fields.map((f) => f.toFieldData());\n    }\n    if (this.attachments != null) {\n      c.attachments = this.attachments.map((a) => a.toAttachmentData());\n    }\n    if (this.passwordHistory != null) {\n      c.passwordHistory = this.passwordHistory.map((ph) => ph.toPasswordHistoryData());\n    }\n    return c;\n  }\n}\n","import { CipherView } from \"../view/cipherView\";\n\nconst CacheTTL = 3000;\n\nexport class SortedCiphersCache {\n  private readonly sortedCiphersByUrl: Map<string, Ciphers> = new Map<string, Ciphers>();\n  private readonly timeouts: Map<string, any> = new Map<string, any>();\n\n  constructor(private readonly comparator: (a: CipherView, b: CipherView) => number) {}\n\n  isCached(url: string) {\n    return this.sortedCiphersByUrl.has(url);\n  }\n\n  addCiphers(url: string, ciphers: CipherView[]) {\n    ciphers.sort(this.comparator);\n    this.sortedCiphersByUrl.set(url, new Ciphers(ciphers));\n    this.resetTimer(url);\n  }\n\n  getLastUsed(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastUsed() : null;\n  }\n\n  getLastLaunched(url: string) {\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastLaunched() : null;\n  }\n\n  getNext(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getNext() : null;\n  }\n\n  updateLastUsedIndex(url: string) {\n    if (this.isCached(url)) {\n      this.sortedCiphersByUrl.get(url).updateLastUsedIndex();\n    }\n  }\n\n  clear() {\n    this.sortedCiphersByUrl.clear();\n    this.timeouts.clear();\n  }\n\n  private resetTimer(url: string) {\n    clearTimeout(this.timeouts.get(url));\n    this.timeouts.set(\n      url,\n      setTimeout(() => {\n        this.sortedCiphersByUrl.delete(url);\n        this.timeouts.delete(url);\n      }, CacheTTL)\n    );\n  }\n}\n\nclass Ciphers {\n  lastUsedIndex = -1;\n\n  constructor(private readonly ciphers: CipherView[]) {}\n\n  getLastUsed() {\n    this.lastUsedIndex = Math.max(this.lastUsedIndex, 0);\n    return this.ciphers[this.lastUsedIndex];\n  }\n\n  getLastLaunched() {\n    const usedCiphers = this.ciphers.filter((cipher) => cipher.localData?.lastLaunched);\n    const sortedCiphers = usedCiphers.sort(\n      (x, y) => y.localData.lastLaunched.valueOf() - x.localData.lastLaunched.valueOf()\n    );\n    return sortedCiphers[0];\n  }\n\n  getNextIndex() {\n    return (this.lastUsedIndex + 1) % this.ciphers.length;\n  }\n\n  getNext() {\n    return this.ciphers[this.getNextIndex()];\n  }\n\n  updateLastUsedIndex() {\n    this.lastUsedIndex = this.getNextIndex();\n  }\n}\n","export class CipherBulkDeleteRequest {\n  ids: string[];\n  organizationId: string;\n\n  constructor(ids: string[], organizationId?: string) {\n    this.ids = ids == null ? [] : ids;\n    this.organizationId = organizationId;\n  }\n}\n","export class CipherBulkMoveRequest {\n  ids: string[];\n  folderId: string;\n\n  constructor(ids: string[], folderId: string) {\n    this.ids = ids == null ? [] : ids;\n    this.folderId = folderId;\n  }\n}\n","export class CipherBulkRestoreRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","export class AttachmentRequest {\n  fileName: string;\n  key: string;\n  fileSize: number;\n  adminRequest: boolean;\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CardApi } from \"../api/cardApi\";\nimport { FieldApi } from \"../api/fieldApi\";\nimport { IdentityApi } from \"../api/identityApi\";\nimport { LoginApi } from \"../api/loginApi\";\nimport { LoginUriApi } from \"../api/loginUriApi\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentRequest } from \"./attachmentRequest\";\nimport { PasswordHistoryRequest } from \"./passwordHistoryRequest\";\n\nexport class CipherRequest {\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  name: string;\n  notes: string;\n  favorite: boolean;\n  login: LoginApi;\n  secureNote: SecureNoteApi;\n  card: CardApi;\n  identity: IdentityApi;\n  fields: FieldApi[];\n  passwordHistory: PasswordHistoryRequest[];\n  // Deprecated, remove at some point and rename attachments2 to attachments\n  attachments: { [id: string]: string };\n  attachments2: { [id: string]: AttachmentRequest };\n  lastKnownRevisionDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(cipher: Cipher) {\n    this.type = cipher.type;\n    this.folderId = cipher.folderId;\n    this.organizationId = cipher.organizationId;\n    this.name = cipher.name ? cipher.name.encryptedString : null;\n    this.notes = cipher.notes ? cipher.notes.encryptedString : null;\n    this.favorite = cipher.favorite;\n    this.lastKnownRevisionDate = cipher.revisionDate;\n    this.reprompt = cipher.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginApi();\n        this.login.uris = null;\n        this.login.username = cipher.login.username ? cipher.login.username.encryptedString : null;\n        this.login.password = cipher.login.password ? cipher.login.password.encryptedString : null;\n        this.login.passwordRevisionDate =\n          cipher.login.passwordRevisionDate != null\n            ? cipher.login.passwordRevisionDate.toISOString()\n            : null;\n        this.login.totp = cipher.login.totp ? cipher.login.totp.encryptedString : null;\n        this.login.autofillOnPageLoad = cipher.login.autofillOnPageLoad;\n\n        if (cipher.login.uris != null) {\n          this.login.uris = cipher.login.uris.map((u) => {\n            const uri = new LoginUriApi();\n            uri.uri = u.uri != null ? u.uri.encryptedString : null;\n            uri.match = u.match != null ? u.match : null;\n            return uri;\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteApi();\n        this.secureNote.type = cipher.secureNote.type;\n        break;\n      case CipherType.Card:\n        this.card = new CardApi();\n        this.card.cardholderName =\n          cipher.card.cardholderName != null ? cipher.card.cardholderName.encryptedString : null;\n        this.card.brand = cipher.card.brand != null ? cipher.card.brand.encryptedString : null;\n        this.card.number = cipher.card.number != null ? cipher.card.number.encryptedString : null;\n        this.card.expMonth =\n          cipher.card.expMonth != null ? cipher.card.expMonth.encryptedString : null;\n        this.card.expYear =\n          cipher.card.expYear != null ? cipher.card.expYear.encryptedString : null;\n        this.card.code = cipher.card.code != null ? cipher.card.code.encryptedString : null;\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityApi();\n        this.identity.title =\n          cipher.identity.title != null ? cipher.identity.title.encryptedString : null;\n        this.identity.firstName =\n          cipher.identity.firstName != null ? cipher.identity.firstName.encryptedString : null;\n        this.identity.middleName =\n          cipher.identity.middleName != null ? cipher.identity.middleName.encryptedString : null;\n        this.identity.lastName =\n          cipher.identity.lastName != null ? cipher.identity.lastName.encryptedString : null;\n        this.identity.address1 =\n          cipher.identity.address1 != null ? cipher.identity.address1.encryptedString : null;\n        this.identity.address2 =\n          cipher.identity.address2 != null ? cipher.identity.address2.encryptedString : null;\n        this.identity.address3 =\n          cipher.identity.address3 != null ? cipher.identity.address3.encryptedString : null;\n        this.identity.city =\n          cipher.identity.city != null ? cipher.identity.city.encryptedString : null;\n        this.identity.state =\n          cipher.identity.state != null ? cipher.identity.state.encryptedString : null;\n        this.identity.postalCode =\n          cipher.identity.postalCode != null ? cipher.identity.postalCode.encryptedString : null;\n        this.identity.country =\n          cipher.identity.country != null ? cipher.identity.country.encryptedString : null;\n        this.identity.company =\n          cipher.identity.company != null ? cipher.identity.company.encryptedString : null;\n        this.identity.email =\n          cipher.identity.email != null ? cipher.identity.email.encryptedString : null;\n        this.identity.phone =\n          cipher.identity.phone != null ? cipher.identity.phone.encryptedString : null;\n        this.identity.ssn =\n          cipher.identity.ssn != null ? cipher.identity.ssn.encryptedString : null;\n        this.identity.username =\n          cipher.identity.username != null ? cipher.identity.username.encryptedString : null;\n        this.identity.passportNumber =\n          cipher.identity.passportNumber != null\n            ? cipher.identity.passportNumber.encryptedString\n            : null;\n        this.identity.licenseNumber =\n          cipher.identity.licenseNumber != null\n            ? cipher.identity.licenseNumber.encryptedString\n            : null;\n        break;\n      default:\n        break;\n    }\n\n    if (cipher.fields != null) {\n      this.fields = cipher.fields.map((f) => {\n        const field = new FieldApi();\n        field.type = f.type;\n        field.name = f.name ? f.name.encryptedString : null;\n        field.value = f.value ? f.value.encryptedString : null;\n        field.linkedId = f.linkedId;\n        return field;\n      });\n    }\n\n    if (cipher.passwordHistory != null) {\n      this.passwordHistory = [];\n      cipher.passwordHistory.forEach((ph) => {\n        this.passwordHistory.push({\n          lastUsedDate: ph.lastUsedDate,\n          password: ph.password ? ph.password.encryptedString : null,\n        });\n      });\n    }\n\n    if (cipher.attachments != null) {\n      this.attachments = {};\n      this.attachments2 = {};\n      cipher.attachments.forEach((attachment) => {\n        const fileName = attachment.fileName ? attachment.fileName.encryptedString : null;\n        this.attachments[attachment.id] = fileName;\n        const attachmentRequest = new AttachmentRequest();\n        attachmentRequest.fileName = fileName;\n        if (attachment.key != null) {\n          attachmentRequest.key = attachment.key.encryptedString;\n        }\n        this.attachments2[attachment.id] = attachmentRequest;\n      });\n    }\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherWithIdRequest extends CipherRequest {\n  id: string;\n\n  constructor(cipher: Cipher) {\n    super(cipher);\n    this.id = cipher.id;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherWithIdRequest } from \"./cipherWithIdRequest\";\n\nexport class CipherBulkShareRequest {\n  ciphers: CipherWithIdRequest[];\n  collectionIds: string[];\n\n  constructor(ciphers: Cipher[], collectionIds: string[]) {\n    if (ciphers != null) {\n      this.ciphers = [];\n      ciphers.forEach((c) => {\n        this.ciphers.push(new CipherWithIdRequest(c));\n      });\n    }\n    this.collectionIds = collectionIds;\n  }\n}\n","export class CipherCollectionsRequest {\n  collectionIds: string[];\n\n  constructor(collectionIds: string[]) {\n    this.collectionIds = collectionIds == null ? [] : collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherCreateRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherShareRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService as CipherServiceAbstraction } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService } from \"../abstractions/search.service\";\nimport { SettingsService } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { Attachment } from \"../models/domain/attachment\";\nimport { Card } from \"../models/domain/card\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport Domain from \"../models/domain/domainBase\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { Field } from \"../models/domain/field\";\nimport { Identity } from \"../models/domain/identity\";\nimport { Login } from \"../models/domain/login\";\nimport { LoginUri } from \"../models/domain/loginUri\";\nimport { Password } from \"../models/domain/password\";\nimport { SecureNote } from \"../models/domain/secureNote\";\nimport { SortedCiphersCache } from \"../models/domain/sortedCiphersCache\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipherBulkRestoreRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { AttachmentView } from \"../models/view/attachmentView\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { FieldView } from \"../models/view/fieldView\";\nimport { PasswordHistoryView } from \"../models/view/passwordHistoryView\";\nimport { View } from \"../models/view/view\";\n\nconst DomainMatchBlacklist = new Map<string, Set<string>>([\n  [\"google.com\", new Set([\"script.google.com\"])],\n]);\n\nexport class CipherService implements CipherServiceAbstraction {\n  private sortedCiphersCache: SortedCiphersCache = new SortedCiphersCache(\n    this.sortCiphersByLastUsed\n  );\n\n  constructor(\n    private cryptoService: CryptoService,\n    private settingsService: SettingsService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private searchService: () => SearchService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async getDecryptedCipherCache(): Promise<CipherView[]> {\n    const decryptedCiphers = await this.stateService.getDecryptedCiphers();\n    return decryptedCiphers;\n  }\n\n  async setDecryptedCipherCache(value: CipherView[]) {\n    await this.stateService.setDecryptedCiphers(value);\n    if (this.searchService != null) {\n      if (value == null) {\n        this.searchService().clearIndex();\n      } else {\n        this.searchService().indexCiphers();\n      }\n    }\n  }\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.clearDecryptedCiphersState(userId);\n  }\n\n  async encrypt(\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher: Cipher = null\n  ): Promise<Cipher> {\n    // Adjust password history\n    if (model.id != null) {\n      if (originalCipher == null) {\n        originalCipher = await this.get(model.id);\n      }\n      if (originalCipher != null) {\n        const existingCipher = await originalCipher.decrypt();\n        model.passwordHistory = existingCipher.passwordHistory || [];\n        if (model.type === CipherType.Login && existingCipher.type === CipherType.Login) {\n          if (\n            existingCipher.login.password != null &&\n            existingCipher.login.password !== \"\" &&\n            existingCipher.login.password !== model.login.password\n          ) {\n            const ph = new PasswordHistoryView();\n            ph.password = existingCipher.login.password;\n            ph.lastUsedDate = model.login.passwordRevisionDate = new Date();\n            model.passwordHistory.splice(0, 0, ph);\n          } else {\n            model.login.passwordRevisionDate = existingCipher.login.passwordRevisionDate;\n          }\n        }\n        if (existingCipher.hasFields) {\n          const existingHiddenFields = existingCipher.fields.filter(\n            (f) =>\n              f.type === FieldType.Hidden &&\n              f.name != null &&\n              f.name !== \"\" &&\n              f.value != null &&\n              f.value !== \"\"\n          );\n          const hiddenFields =\n            model.fields == null\n              ? []\n              : model.fields.filter(\n                  (f) => f.type === FieldType.Hidden && f.name != null && f.name !== \"\"\n                );\n          existingHiddenFields.forEach((ef) => {\n            const matchedField = hiddenFields.find((f) => f.name === ef.name);\n            if (matchedField == null || matchedField.value !== ef.value) {\n              const ph = new PasswordHistoryView();\n              ph.password = ef.name + \": \" + ef.value;\n              ph.lastUsedDate = new Date();\n              model.passwordHistory.splice(0, 0, ph);\n            }\n          });\n        }\n      }\n      if (model.passwordHistory != null && model.passwordHistory.length === 0) {\n        model.passwordHistory = null;\n      } else if (model.passwordHistory != null && model.passwordHistory.length > 5) {\n        // only save last 5 history\n        model.passwordHistory = model.passwordHistory.slice(0, 5);\n      }\n    }\n\n    const cipher = new Cipher();\n    cipher.id = model.id;\n    cipher.folderId = model.folderId;\n    cipher.favorite = model.favorite;\n    cipher.organizationId = model.organizationId;\n    cipher.type = model.type;\n    cipher.collectionIds = model.collectionIds;\n    cipher.revisionDate = model.revisionDate;\n    cipher.reprompt = model.reprompt;\n\n    if (key == null && cipher.organizationId != null) {\n      key = await this.cryptoService.getOrgKey(cipher.organizationId);\n      if (key == null) {\n        throw new Error(\"Cannot encrypt cipher for organization. No key.\");\n      }\n    }\n    await Promise.all([\n      this.encryptObjProperty(\n        model,\n        cipher,\n        {\n          name: null,\n          notes: null,\n        },\n        key\n      ),\n      this.encryptCipherData(cipher, model, key),\n      this.encryptFields(model.fields, key).then((fields) => {\n        cipher.fields = fields;\n      }),\n      this.encryptPasswordHistories(model.passwordHistory, key).then((ph) => {\n        cipher.passwordHistory = ph;\n      }),\n      this.encryptAttachments(model.attachments, key).then((attachments) => {\n        cipher.attachments = attachments;\n      }),\n    ]);\n\n    return cipher;\n  }\n\n  async encryptAttachments(\n    attachmentsModel: AttachmentView[],\n    key: SymmetricCryptoKey\n  ): Promise<Attachment[]> {\n    if (attachmentsModel == null || attachmentsModel.length === 0) {\n      return null;\n    }\n\n    const promises: Promise<any>[] = [];\n    const encAttachments: Attachment[] = [];\n    attachmentsModel.forEach(async (model) => {\n      const attachment = new Attachment();\n      attachment.id = model.id;\n      attachment.size = model.size;\n      attachment.sizeName = model.sizeName;\n      attachment.url = model.url;\n      const promise = this.encryptObjProperty(\n        model,\n        attachment,\n        {\n          fileName: null,\n        },\n        key\n      ).then(async () => {\n        if (model.key != null) {\n          attachment.key = await this.cryptoService.encrypt(model.key.key, key);\n        }\n        encAttachments.push(attachment);\n      });\n      promises.push(promise);\n    });\n\n    await Promise.all(promises);\n    return encAttachments;\n  }\n\n  async encryptFields(fieldsModel: FieldView[], key: SymmetricCryptoKey): Promise<Field[]> {\n    if (!fieldsModel || !fieldsModel.length) {\n      return null;\n    }\n\n    const self = this;\n    const encFields: Field[] = [];\n    await fieldsModel.reduce(async (promise, field) => {\n      await promise;\n      const encField = await self.encryptField(field, key);\n      encFields.push(encField);\n    }, Promise.resolve());\n\n    return encFields;\n  }\n\n  async encryptField(fieldModel: FieldView, key: SymmetricCryptoKey): Promise<Field> {\n    const field = new Field();\n    field.type = fieldModel.type;\n    field.linkedId = fieldModel.linkedId;\n    // normalize boolean type field values\n    if (fieldModel.type === FieldType.Boolean && fieldModel.value !== \"true\") {\n      fieldModel.value = \"false\";\n    }\n\n    await this.encryptObjProperty(\n      fieldModel,\n      field,\n      {\n        name: null,\n        value: null,\n      },\n      key\n    );\n\n    return field;\n  }\n\n  async encryptPasswordHistories(\n    phModels: PasswordHistoryView[],\n    key: SymmetricCryptoKey\n  ): Promise<Password[]> {\n    if (!phModels || !phModels.length) {\n      return null;\n    }\n\n    const self = this;\n    const encPhs: Password[] = [];\n    await phModels.reduce(async (promise, ph) => {\n      await promise;\n      const encPh = await self.encryptPasswordHistory(ph, key);\n      encPhs.push(encPh);\n    }, Promise.resolve());\n\n    return encPhs;\n  }\n\n  async encryptPasswordHistory(\n    phModel: PasswordHistoryView,\n    key: SymmetricCryptoKey\n  ): Promise<Password> {\n    const ph = new Password();\n    ph.lastUsedDate = phModel.lastUsedDate;\n\n    await this.encryptObjProperty(\n      phModel,\n      ph,\n      {\n        password: null,\n      },\n      key\n    );\n\n    return ph;\n  }\n\n  async get(id: string): Promise<Cipher> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    const localData = await this.stateService.getLocalData();\n    return new Cipher(ciphers[id], localData ? localData[id] : null);\n  }\n\n  async getAll(): Promise<Cipher[]> {\n    const localData = await this.stateService.getLocalData();\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    const response: Cipher[] = [];\n    for (const id in ciphers) {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        response.push(new Cipher(ciphers[id], localData ? localData[id] : null));\n      }\n    }\n    return response;\n  }\n\n  @sequentialize(() => \"getAllDecrypted\")\n  async getAllDecrypted(): Promise<CipherView[]> {\n    const userId = await this.stateService.getUserId();\n    if ((await this.getDecryptedCipherCache()) != null) {\n      if (\n        this.searchService != null &&\n        (this.searchService().indexedEntityId ?? userId) !== userId\n      ) {\n        await this.searchService().indexCiphers(userId, await this.getDecryptedCipherCache());\n      }\n      return await this.getDecryptedCipherCache();\n    }\n\n    const decCiphers: CipherView[] = [];\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const promises: any[] = [];\n    const ciphers = await this.getAll();\n    ciphers.forEach(async (cipher) => {\n      promises.push(cipher.decrypt().then((c) => decCiphers.push(c)));\n    });\n\n    await Promise.all(promises);\n    decCiphers.sort(this.getLocaleSortingFunction());\n    await this.setDecryptedCipherCache(decCiphers);\n    return decCiphers;\n  }\n\n  async getAllDecryptedForGrouping(groupingId: string, folder = true): Promise<CipherView[]> {\n    const ciphers = await this.getAllDecrypted();\n\n    return ciphers.filter((cipher) => {\n      if (cipher.isDeleted) {\n        return false;\n      }\n      if (folder && cipher.folderId === groupingId) {\n        return true;\n      } else if (\n        !folder &&\n        cipher.collectionIds != null &&\n        cipher.collectionIds.indexOf(groupingId) > -1\n      ) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  async getAllDecryptedForUrl(\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch: UriMatchType = null\n  ): Promise<CipherView[]> {\n    if (url == null && includeOtherTypes == null) {\n      return Promise.resolve([]);\n    }\n\n    const domain = Utils.getDomain(url);\n    const eqDomainsPromise =\n      domain == null\n        ? Promise.resolve([])\n        : this.settingsService.getEquivalentDomains().then((eqDomains: any[][]) => {\n            let matches: any[] = [];\n            eqDomains.forEach((eqDomain) => {\n              if (eqDomain.length && eqDomain.indexOf(domain) >= 0) {\n                matches = matches.concat(eqDomain);\n              }\n            });\n\n            if (!matches.length) {\n              matches.push(domain);\n            }\n\n            return matches;\n          });\n\n    const result = await Promise.all([eqDomainsPromise, this.getAllDecrypted()]);\n    const matchingDomains = result[0];\n    const ciphers = result[1];\n\n    if (defaultMatch == null) {\n      defaultMatch = await this.stateService.getDefaultUriMatch();\n      if (defaultMatch == null) {\n        defaultMatch = UriMatchType.Domain;\n      }\n    }\n\n    return ciphers.filter((cipher) => {\n      if (cipher.deletedDate != null) {\n        return false;\n      }\n      if (includeOtherTypes != null && includeOtherTypes.indexOf(cipher.type) > -1) {\n        return true;\n      }\n\n      if (url != null && cipher.type === CipherType.Login && cipher.login.uris != null) {\n        for (let i = 0; i < cipher.login.uris.length; i++) {\n          const u = cipher.login.uris[i];\n          if (u.uri == null) {\n            continue;\n          }\n\n          const match = u.match == null ? defaultMatch : u.match;\n          switch (match) {\n            case UriMatchType.Domain:\n              if (domain != null && u.domain != null && matchingDomains.indexOf(u.domain) > -1) {\n                if (DomainMatchBlacklist.has(u.domain)) {\n                  const domainUrlHost = Utils.getHost(url);\n                  if (!DomainMatchBlacklist.get(u.domain).has(domainUrlHost)) {\n                    return true;\n                  }\n                } else {\n                  return true;\n                }\n              }\n              break;\n            case UriMatchType.Host: {\n              const urlHost = Utils.getHost(url);\n              if (urlHost != null && urlHost === Utils.getHost(u.uri)) {\n                return true;\n              }\n              break;\n            }\n            case UriMatchType.Exact:\n              if (url === u.uri) {\n                return true;\n              }\n              break;\n            case UriMatchType.StartsWith:\n              if (url.startsWith(u.uri)) {\n                return true;\n              }\n              break;\n            case UriMatchType.RegularExpression:\n              try {\n                const regex = new RegExp(u.uri, \"i\");\n                if (regex.test(url)) {\n                  return true;\n                }\n              } catch (e) {\n                this.logService.error(e);\n              }\n              break;\n            case UriMatchType.Never:\n            default:\n              break;\n          }\n        }\n      }\n\n      return false;\n    });\n  }\n\n  async getAllFromApiForOrganization(organizationId: string): Promise<CipherView[]> {\n    const ciphers = await this.apiService.getCiphersOrganization(organizationId);\n    if (ciphers != null && ciphers.data != null && ciphers.data.length) {\n      const decCiphers: CipherView[] = [];\n      const promises: any[] = [];\n      ciphers.data.forEach((r) => {\n        const data = new CipherData(r);\n        const cipher = new Cipher(data);\n        promises.push(cipher.decrypt().then((c) => decCiphers.push(c)));\n      });\n      await Promise.all(promises);\n      decCiphers.sort(this.getLocaleSortingFunction());\n      return decCiphers;\n    } else {\n      return [];\n    }\n  }\n\n  async getLastUsedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, true, false, autofillOnPageLoad);\n  }\n\n  async getLastLaunchedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, true, autofillOnPageLoad);\n  }\n\n  async getNextCipherForUrl(url: string): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, false, false);\n  }\n\n  updateLastUsedIndexForUrl(url: string) {\n    this.sortedCiphersCache.updateLastUsedIndex(url);\n  }\n\n  async updateLastUsedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastUsedDate = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async updateLastLaunchedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastLaunched = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async saveNeverDomain(domain: string): Promise<void> {\n    if (domain == null) {\n      return;\n    }\n\n    let domains = await this.stateService.getNeverDomains();\n    if (!domains) {\n      domains = {};\n    }\n    domains[domain] = null;\n    await this.stateService.setNeverDomains(domains);\n  }\n\n  async saveWithServer(cipher: Cipher): Promise<any> {\n    let response: CipherResponse;\n    if (cipher.id == null) {\n      if (cipher.collectionIds != null) {\n        const request = new CipherCreateRequest(cipher);\n        response = await this.apiService.postCipherCreate(request);\n      } else {\n        const request = new CipherRequest(cipher);\n        response = await this.apiService.postCipher(request);\n      }\n      cipher.id = response.id;\n    } else {\n      const request = new CipherRequest(cipher);\n      response = await this.apiService.putCipher(cipher.id, request);\n    }\n\n    const data = new CipherData(response, cipher.collectionIds);\n    await this.upsert(data);\n  }\n\n  async shareWithServer(\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const attachmentPromises: Promise<any>[] = [];\n    if (cipher.attachments != null) {\n      cipher.attachments.forEach((attachment) => {\n        if (attachment.key == null) {\n          attachmentPromises.push(\n            this.shareAttachmentWithServer(attachment, cipher.id, organizationId)\n          );\n        }\n      });\n    }\n    await Promise.all(attachmentPromises);\n\n    cipher.organizationId = organizationId;\n    cipher.collectionIds = collectionIds;\n    const encCipher = await this.encrypt(cipher);\n    const request = new CipherShareRequest(encCipher);\n    const response = await this.apiService.putShareCipher(cipher.id, request);\n    const data = new CipherData(response, collectionIds);\n    await this.upsert(data);\n  }\n\n  async shareManyWithServer(\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const promises: Promise<any>[] = [];\n    const encCiphers: Cipher[] = [];\n    for (const cipher of ciphers) {\n      cipher.organizationId = organizationId;\n      cipher.collectionIds = collectionIds;\n      promises.push(\n        this.encrypt(cipher).then((c) => {\n          encCiphers.push(c);\n        })\n      );\n    }\n    await Promise.all(promises);\n    const request = new CipherBulkShareRequest(encCiphers, collectionIds);\n    try {\n      await this.apiService.putShareCiphers(request);\n    } catch (e) {\n      for (const cipher of ciphers) {\n        cipher.organizationId = null;\n        cipher.collectionIds = null;\n      }\n      throw e;\n    }\n    await this.upsert(encCiphers.map((c) => c.toCipherData()));\n  }\n\n  saveAttachmentWithServer(cipher: Cipher, unencryptedFile: any, admin = false): Promise<Cipher> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(unencryptedFile);\n      reader.onload = async (evt: any) => {\n        try {\n          const cData = await this.saveAttachmentRawWithServer(\n            cipher,\n            unencryptedFile.name,\n            evt.target.result,\n            admin\n          );\n          resolve(cData);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  async saveAttachmentRawWithServer(\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin = false\n  ): Promise<Cipher> {\n    const key = await this.cryptoService.getOrgKey(cipher.organizationId);\n    const encFileName = await this.cryptoService.encrypt(filename, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(data, dataEncKey[0]);\n\n    const request: AttachmentRequest = {\n      key: dataEncKey[1].encryptedString,\n      fileName: encFileName.encryptedString,\n      fileSize: encData.buffer.byteLength,\n      adminRequest: admin,\n    };\n\n    let response: CipherResponse;\n    try {\n      const uploadDataResponse = await this.apiService.postCipherAttachment(cipher.id, request);\n      response = admin ? uploadDataResponse.cipherMiniResponse : uploadDataResponse.cipherResponse;\n      await this.fileUploadService.uploadCipherAttachment(\n        admin,\n        uploadDataResponse,\n        encFileName,\n        encData\n      );\n    } catch (e) {\n      if (\n        (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) ||\n        (e as ErrorResponse).statusCode === 405\n      ) {\n        response = await this.legacyServerAttachmentFileUpload(\n          admin,\n          cipher.id,\n          encFileName,\n          encData,\n          dataEncKey[1]\n        );\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    const cData = new CipherData(response, cipher.collectionIds);\n    if (!admin) {\n      await this.upsert(cData);\n    }\n    return new Cipher(cData);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerAttachmentFileUpload(\n    admin: boolean,\n    cipherId: string,\n    encFileName: EncString,\n    encData: EncArrayBuffer,\n    key: EncString\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", key.encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", key.encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    let response: CipherResponse;\n    try {\n      if (admin) {\n        response = await this.apiService.postCipherAttachmentAdminLegacy(cipherId, fd);\n      } else {\n        response = await this.apiService.postCipherAttachmentLegacy(cipherId, fd);\n      }\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n\n    return response;\n  }\n\n  async saveCollectionsWithServer(cipher: Cipher): Promise<any> {\n    const request = new CipherCollectionsRequest(cipher.collectionIds);\n    await this.apiService.putCipherCollections(cipher.id, request);\n    const data = cipher.toCipherData();\n    await this.upsert(data);\n  }\n\n  async upsert(cipher: CipherData | CipherData[]): Promise<any> {\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    if (cipher instanceof CipherData) {\n      const c = cipher as CipherData;\n      ciphers[c.id] = c;\n    } else {\n      (cipher as CipherData[]).forEach((c) => {\n        ciphers[c.id] = c;\n      });\n    }\n\n    await this.replace(ciphers);\n  }\n\n  async replace(ciphers: { [id: string]: CipherData }): Promise<any> {\n    await this.clearDecryptedCiphersState();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearEncryptedCiphersState(userId);\n    await this.clearCache(userId);\n  }\n\n  async moveManyWithServer(ids: string[], folderId: string): Promise<any> {\n    await this.apiService.putMoveCiphers(new CipherBulkMoveRequest(ids, folderId));\n\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    ids.forEach((id) => {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        ciphers[id].folderId = folderId;\n      }\n    });\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (ciphers[id] == null) {\n        return;\n      }\n      delete ciphers[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete ciphers[i];\n      });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteCipher(id);\n    await this.delete(id);\n  }\n\n  async deleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.deleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.delete(ids);\n  }\n\n  async deleteAttachment(id: string, attachmentId: string): Promise<void> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id) || ciphers[id].attachments == null) {\n      return;\n    }\n\n    for (let i = 0; i < ciphers[id].attachments.length; i++) {\n      if (ciphers[id].attachments[i].id === attachmentId) {\n        ciphers[id].attachments.splice(i, 1);\n      }\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteAttachmentWithServer(id: string, attachmentId: string): Promise<void> {\n    try {\n      await this.apiService.deleteCipherAttachment(id, attachmentId);\n    } catch (e) {\n      return Promise.reject((e as ErrorResponse).getSingleMessage());\n    }\n    await this.deleteAttachment(id, attachmentId);\n  }\n\n  sortCiphersByLastUsed(a: CipherView, b: CipherView): number {\n    const aLastUsed =\n      a.localData && a.localData.lastUsedDate ? (a.localData.lastUsedDate as number) : null;\n    const bLastUsed =\n      b.localData && b.localData.lastUsedDate ? (b.localData.lastUsedDate as number) : null;\n\n    const bothNotNull = aLastUsed != null && bLastUsed != null;\n    if (bothNotNull && aLastUsed < bLastUsed) {\n      return 1;\n    }\n    if (aLastUsed != null && bLastUsed == null) {\n      return -1;\n    }\n\n    if (bothNotNull && aLastUsed > bLastUsed) {\n      return -1;\n    }\n    if (bLastUsed != null && aLastUsed == null) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  sortCiphersByLastUsedThenName(a: CipherView, b: CipherView): number {\n    const result = this.sortCiphersByLastUsed(a, b);\n    if (result !== 0) {\n      return result;\n    }\n\n    return this.getLocaleSortingFunction()(a, b);\n  }\n\n  getLocaleSortingFunction(): (a: CipherView, b: CipherView) => number {\n    return (a, b) => {\n      let aName = a.name;\n      let bName = b.name;\n\n      if (aName == null && bName != null) {\n        return -1;\n      }\n      if (aName != null && bName == null) {\n        return 1;\n      }\n      if (aName == null && bName == null) {\n        return 0;\n      }\n\n      const result = this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n\n      if (result !== 0 || a.type !== CipherType.Login || b.type !== CipherType.Login) {\n        return result;\n      }\n\n      if (a.login.username != null) {\n        aName += a.login.username;\n      }\n\n      if (b.login.username != null) {\n        bName += b.login.username;\n      }\n\n      return this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n    };\n  }\n\n  async softDelete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const setDeletedDate = (cipherId: string) => {\n      if (ciphers[cipherId] == null) {\n        return;\n      }\n      ciphers[cipherId].deletedDate = new Date().toISOString();\n    };\n\n    if (typeof id === \"string\") {\n      setDeletedDate(id);\n    } else {\n      (id as string[]).forEach(setDeletedDate);\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async softDeleteWithServer(id: string): Promise<any> {\n    await this.apiService.putDeleteCipher(id);\n    await this.softDelete(id);\n  }\n\n  async softDeleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.putDeleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.softDelete(ids);\n  }\n\n  async restore(\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const clearDeletedDate = (c: { id: string; revisionDate: string }) => {\n      if (ciphers[c.id] == null) {\n        return;\n      }\n      ciphers[c.id].deletedDate = null;\n      ciphers[c.id].revisionDate = c.revisionDate;\n    };\n\n    if (cipher.constructor.name === Array.name) {\n      (cipher as { id: string; revisionDate: string }[]).forEach(clearDeletedDate);\n    } else {\n      clearDeletedDate(cipher as { id: string; revisionDate: string });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async restoreWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putRestoreCipher(id);\n    await this.restore({ id: id, revisionDate: response.revisionDate });\n  }\n\n  async restoreManyWithServer(ids: string[]): Promise<any> {\n    const response = await this.apiService.putRestoreManyCiphers(new CipherBulkRestoreRequest(ids));\n    const restores: { id: string; revisionDate: string }[] = [];\n    for (const cipher of response.data) {\n      restores.push({ id: cipher.id, revisionDate: cipher.revisionDate });\n    }\n    await this.restore(restores);\n  }\n\n  // Helpers\n\n  private async shareAttachmentWithServer(\n    attachmentView: AttachmentView,\n    cipherId: string,\n    organizationId: string\n  ): Promise<any> {\n    const attachmentResponse = await this.apiService.nativeFetch(\n      new Request(attachmentView.url, { cache: \"no-store\" })\n    );\n    if (attachmentResponse.status !== 200) {\n      throw Error(\"Failed to download attachment: \" + attachmentResponse.status.toString());\n    }\n\n    const buf = await attachmentResponse.arrayBuffer();\n    const decBuf = await this.cryptoService.decryptFromBytes(buf, null);\n    const key = await this.cryptoService.getOrgKey(organizationId);\n    const encFileName = await this.cryptoService.encrypt(attachmentView.fileName, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(decBuf, dataEncKey[0]);\n\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", dataEncKey[1].encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", dataEncKey[1].encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    try {\n      await this.apiService.postShareCipherAttachment(\n        cipherId,\n        attachmentView.id,\n        fd,\n        organizationId\n      );\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n  }\n\n  private async encryptObjProperty<V extends View, D extends Domain>(\n    model: V,\n    obj: D,\n    map: any,\n    key: SymmetricCryptoKey\n  ): Promise<void> {\n    const promises = [];\n    const self = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp, theObj) {\n        const p = Promise.resolve()\n          .then(() => {\n            const modelProp = (model as any)[map[theProp] || theProp];\n            if (modelProp && modelProp !== \"\") {\n              return self.cryptoService.encrypt(modelProp, key);\n            }\n            return null;\n          })\n          .then((val: EncString) => {\n            (theObj as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop, obj);\n    }\n\n    await Promise.all(promises);\n  }\n\n  private async encryptCipherData(cipher: Cipher, model: CipherView, key: SymmetricCryptoKey) {\n    switch (cipher.type) {\n      case CipherType.Login:\n        cipher.login = new Login();\n        cipher.login.passwordRevisionDate = model.login.passwordRevisionDate;\n        cipher.login.autofillOnPageLoad = model.login.autofillOnPageLoad;\n        await this.encryptObjProperty(\n          model.login,\n          cipher.login,\n          {\n            username: null,\n            password: null,\n            totp: null,\n          },\n          key\n        );\n\n        if (model.login.uris != null) {\n          cipher.login.uris = [];\n          for (let i = 0; i < model.login.uris.length; i++) {\n            const loginUri = new LoginUri();\n            loginUri.match = model.login.uris[i].match;\n            await this.encryptObjProperty(\n              model.login.uris[i],\n              loginUri,\n              {\n                uri: null,\n              },\n              key\n            );\n            cipher.login.uris.push(loginUri);\n          }\n        }\n        return;\n      case CipherType.SecureNote:\n        cipher.secureNote = new SecureNote();\n        cipher.secureNote.type = model.secureNote.type;\n        return;\n      case CipherType.Card:\n        cipher.card = new Card();\n        await this.encryptObjProperty(\n          model.card,\n          cipher.card,\n          {\n            cardholderName: null,\n            brand: null,\n            number: null,\n            expMonth: null,\n            expYear: null,\n            code: null,\n          },\n          key\n        );\n        return;\n      case CipherType.Identity:\n        cipher.identity = new Identity();\n        await this.encryptObjProperty(\n          model.identity,\n          cipher.identity,\n          {\n            title: null,\n            firstName: null,\n            middleName: null,\n            lastName: null,\n            address1: null,\n            address2: null,\n            address3: null,\n            city: null,\n            state: null,\n            postalCode: null,\n            country: null,\n            company: null,\n            email: null,\n            phone: null,\n            ssn: null,\n            username: null,\n            passportNumber: null,\n            licenseNumber: null,\n          },\n          key\n        );\n        return;\n      default:\n        throw new Error(\"Unknown cipher type.\");\n    }\n  }\n\n  private async getCipherForUrl(\n    url: string,\n    lastUsed: boolean,\n    lastLaunched: boolean,\n    autofillOnPageLoad: boolean\n  ): Promise<CipherView> {\n    const cacheKey = autofillOnPageLoad ? \"autofillOnPageLoad-\" + url : url;\n\n    if (!this.sortedCiphersCache.isCached(cacheKey)) {\n      let ciphers = await this.getAllDecryptedForUrl(url);\n      if (!ciphers) {\n        return null;\n      }\n\n      if (autofillOnPageLoad) {\n        const autofillOnPageLoadDefault = await this.stateService.getAutoFillOnPageLoadDefault();\n        ciphers = ciphers.filter(\n          (cipher) =>\n            cipher.login.autofillOnPageLoad ||\n            (cipher.login.autofillOnPageLoad == null && autofillOnPageLoadDefault !== false)\n        );\n        if (ciphers.length === 0) {\n          return null;\n        }\n      }\n\n      this.sortedCiphersCache.addCiphers(cacheKey, ciphers);\n    }\n\n    if (lastLaunched) {\n      return this.sortedCiphersCache.getLastLaunched(cacheKey);\n    } else if (lastUsed) {\n      return this.sortedCiphersCache.getLastUsed(cacheKey);\n    } else {\n      return this.sortedCiphersCache.getNext(cacheKey);\n    }\n  }\n\n  private async clearEncryptedCiphersState(userId?: string) {\n    await this.stateService.setEncryptedCiphers(null, { userId: userId });\n  }\n\n  private async clearDecryptedCiphersState(userId?: string) {\n    await this.stateService.setDecryptedCiphers(null, { userId: userId });\n    this.clearSortedCiphers();\n  }\n\n  private clearSortedCiphers() {\n    this.sortedCiphersCache.clear();\n  }\n}\n","import { CollectionDetailsResponse } from \"../response/collectionResponse\";\n\nexport class CollectionData {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n  readOnly: boolean;\n\n  constructor(response: CollectionDetailsResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.name = response.name;\n    this.externalId = response.externalId;\n    this.readOnly = response.readOnly;\n  }\n}\n","import { Collection } from \"../domain/collection\";\nimport { ITreeNodeObject } from \"../domain/treeNode\";\nimport { CollectionGroupDetailsResponse } from \"../response/collectionResponse\";\n\nimport { View } from \"./view\";\n\nexport class CollectionView implements View, ITreeNodeObject {\n  id: string = null;\n  organizationId: string = null;\n  name: string = null;\n  externalId: string = null;\n  readOnly: boolean = null;\n  hidePasswords: boolean = null;\n\n  constructor(c?: Collection | CollectionGroupDetailsResponse) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.externalId = c.externalId;\n    if (c instanceof Collection) {\n      this.readOnly = c.readOnly;\n      this.hidePasswords = c.hidePasswords;\n    }\n  }\n}\n","import { CollectionData } from \"../data/collectionData\";\nimport { CollectionView } from \"../view/collectionView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\n\nexport class Collection extends Domain {\n  id: string;\n  organizationId: string;\n  name: EncString;\n  externalId: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(obj?: CollectionData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        name: null,\n        externalId: null,\n        readOnly: null,\n        hidePasswords: null,\n      },\n      [\"id\", \"organizationId\", \"externalId\", \"readOnly\", \"hidePasswords\"]\n    );\n  }\n\n  decrypt(): Promise<CollectionView> {\n    return this.decryptObj(\n      new CollectionView(this),\n      {\n        name: null,\n      },\n      this.organizationId\n    );\n  }\n}\n","import { CollectionService as CollectionServiceAbstraction } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ServiceUtils } from \"../misc/serviceUtils\";\nimport { Utils } from \"../misc/utils\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/treeNode\";\nimport { CollectionView } from \"../models/view/collectionView\";\n\nconst NestingDelimiter = \"/\";\n\nexport class CollectionService implements CollectionServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCollections(null, { userId: userId });\n  }\n\n  async encrypt(model: CollectionView): Promise<Collection> {\n    if (model.organizationId == null) {\n      throw new Error(\"Collection has no organization id.\");\n    }\n    const key = await this.cryptoService.getOrgKey(model.organizationId);\n    if (key == null) {\n      throw new Error(\"No key for this collection's organization.\");\n    }\n    const collection = new Collection();\n    collection.id = model.id;\n    collection.organizationId = model.organizationId;\n    collection.readOnly = model.readOnly;\n    collection.name = await this.cryptoService.encrypt(model.name, key);\n    return collection;\n  }\n\n  async decryptMany(collections: Collection[]): Promise<CollectionView[]> {\n    if (collections == null) {\n      return [];\n    }\n    const decCollections: CollectionView[] = [];\n    const promises: Promise<any>[] = [];\n    collections.forEach((collection) => {\n      promises.push(collection.decrypt().then((c) => decCollections.push(c)));\n    });\n    await Promise.all(promises);\n    return decCollections.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  async get(id: string): Promise<Collection> {\n    const collections = await this.stateService.getEncryptedCollections();\n    // eslint-disable-next-line\n    if (collections == null || !collections.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Collection(collections[id]);\n  }\n\n  async getAll(): Promise<Collection[]> {\n    const collections = await this.stateService.getEncryptedCollections();\n    const response: Collection[] = [];\n    for (const id in collections) {\n      // eslint-disable-next-line\n      if (collections.hasOwnProperty(id)) {\n        response.push(new Collection(collections[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<CollectionView[]> {\n    let decryptedCollections = await this.stateService.getDecryptedCollections();\n    if (decryptedCollections != null) {\n      return decryptedCollections;\n    }\n\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const collections = await this.getAll();\n    decryptedCollections = await this.decryptMany(collections);\n\n    await this.stateService.setDecryptedCollections(decryptedCollections);\n    return decryptedCollections;\n  }\n\n  async getAllNested(collections: CollectionView[] = null): Promise<TreeNode<CollectionView>[]> {\n    if (collections == null) {\n      collections = await this.getAllDecrypted();\n    }\n    const nodes: TreeNode<CollectionView>[] = [];\n    collections.forEach((c) => {\n      const collectionCopy = new CollectionView();\n      collectionCopy.id = c.id;\n      collectionCopy.organizationId = c.organizationId;\n      const parts = c.name != null ? c.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, collectionCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getNested(id: string): Promise<TreeNode<CollectionView>> {\n    const collections = await this.getAllNested();\n    return ServiceUtils.getTreeNodeObject(collections, id) as TreeNode<CollectionView>;\n  }\n\n  async upsert(collection: CollectionData | CollectionData[]): Promise<any> {\n    let collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      collections = {};\n    }\n\n    if (collection instanceof CollectionData) {\n      const c = collection as CollectionData;\n      collections[c.id] = c;\n    } else {\n      (collection as CollectionData[]).forEach((c) => {\n        collections[c.id] = c;\n      });\n    }\n\n    await this.replace(collections);\n  }\n\n  async replace(collections: { [id: string]: CollectionData }): Promise<any> {\n    await this.clearCache();\n    await this.stateService.setEncryptedCollections(collections);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearCache(userId);\n    await this.stateService.setEncryptedCollections(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      delete collections[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete collections[i];\n      });\n    }\n\n    await this.replace(collections);\n  }\n}\n","export enum LogLevelType {\n  Debug,\n  Info,\n  Warning,\n  Error,\n}\n","import * as hrtime from \"browser-hrtime\";\n\nimport { LogService as LogServiceAbstraction } from \"../abstractions/log.service\";\nimport { LogLevelType } from \"../enums/logLevelType\";\n\nexport class ConsoleLogService implements LogServiceAbstraction {\n  protected timersMap: Map<string, [number, number]> = new Map();\n\n  constructor(\n    protected isDev: boolean,\n    protected filter: (level: LogLevelType) => boolean = null\n  ) {}\n\n  debug(message: string) {\n    if (!this.isDev) {\n      return;\n    }\n    this.write(LogLevelType.Debug, message);\n  }\n\n  info(message: string) {\n    this.write(LogLevelType.Info, message);\n  }\n\n  warning(message: string) {\n    this.write(LogLevelType.Warning, message);\n  }\n\n  error(message: string) {\n    this.write(LogLevelType.Error, message);\n  }\n\n  write(level: LogLevelType, message: string) {\n    if (this.filter != null && this.filter(level)) {\n      return;\n    }\n\n    switch (level) {\n      case LogLevelType.Debug:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Info:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Warning:\n        // eslint-disable-next-line\n        console.warn(message);\n        break;\n      case LogLevelType.Error:\n        // eslint-disable-next-line\n        console.error(message);\n        break;\n      default:\n        break;\n    }\n  }\n\n  time(label = \"default\") {\n    if (!this.timersMap.has(label)) {\n      this.timersMap.set(label, hrtime());\n    }\n  }\n\n  timeEnd(label = \"default\"): [number, number] {\n    const elapsed = hrtime(this.timersMap.get(label));\n    this.timersMap.delete(label);\n    this.write(LogLevelType.Info, `${label}: ${elapsed[0] * 1000 + elapsed[1] / 10e6}ms`);\n    return elapsed;\n  }\n}\n","// EFF's Long Wordlist from https://www.eff.org/dice\nexport const EEFLongWordList = [\n  \"abacus\",\n  \"abdomen\",\n  \"abdominal\",\n  \"abide\",\n  \"abiding\",\n  \"ability\",\n  \"ablaze\",\n  \"able\",\n  \"abnormal\",\n  \"abrasion\",\n  \"abrasive\",\n  \"abreast\",\n  \"abridge\",\n  \"abroad\",\n  \"abruptly\",\n  \"absence\",\n  \"absentee\",\n  \"absently\",\n  \"absinthe\",\n  \"absolute\",\n  \"absolve\",\n  \"abstain\",\n  \"abstract\",\n  \"absurd\",\n  \"accent\",\n  \"acclaim\",\n  \"acclimate\",\n  \"accompany\",\n  \"account\",\n  \"accuracy\",\n  \"accurate\",\n  \"accustom\",\n  \"acetone\",\n  \"achiness\",\n  \"aching\",\n  \"acid\",\n  \"acorn\",\n  \"acquaint\",\n  \"acquire\",\n  \"acre\",\n  \"acrobat\",\n  \"acronym\",\n  \"acting\",\n  \"action\",\n  \"activate\",\n  \"activator\",\n  \"active\",\n  \"activism\",\n  \"activist\",\n  \"activity\",\n  \"actress\",\n  \"acts\",\n  \"acutely\",\n  \"acuteness\",\n  \"aeration\",\n  \"aerobics\",\n  \"aerosol\",\n  \"aerospace\",\n  \"afar\",\n  \"affair\",\n  \"affected\",\n  \"affecting\",\n  \"affection\",\n  \"affidavit\",\n  \"affiliate\",\n  \"affirm\",\n  \"affix\",\n  \"afflicted\",\n  \"affluent\",\n  \"afford\",\n  \"affront\",\n  \"aflame\",\n  \"afloat\",\n  \"aflutter\",\n  \"afoot\",\n  \"afraid\",\n  \"afterglow\",\n  \"afterlife\",\n  \"aftermath\",\n  \"aftermost\",\n  \"afternoon\",\n  \"aged\",\n  \"ageless\",\n  \"agency\",\n  \"agenda\",\n  \"agent\",\n  \"aggregate\",\n  \"aghast\",\n  \"agile\",\n  \"agility\",\n  \"aging\",\n  \"agnostic\",\n  \"agonize\",\n  \"agonizing\",\n  \"agony\",\n  \"agreeable\",\n  \"agreeably\",\n  \"agreed\",\n  \"agreeing\",\n  \"agreement\",\n  \"aground\",\n  \"ahead\",\n  \"ahoy\",\n  \"aide\",\n  \"aids\",\n  \"aim\",\n  \"ajar\",\n  \"alabaster\",\n  \"alarm\",\n  \"albatross\",\n  \"album\",\n  \"alfalfa\",\n  \"algebra\",\n  \"algorithm\",\n  \"alias\",\n  \"alibi\",\n  \"alienable\",\n  \"alienate\",\n  \"aliens\",\n  \"alike\",\n  \"alive\",\n  \"alkaline\",\n  \"alkalize\",\n  \"almanac\",\n  \"almighty\",\n  \"almost\",\n  \"aloe\",\n  \"aloft\",\n  \"aloha\",\n  \"alone\",\n  \"alongside\",\n  \"aloof\",\n  \"alphabet\",\n  \"alright\",\n  \"although\",\n  \"altitude\",\n  \"alto\",\n  \"aluminum\",\n  \"alumni\",\n  \"always\",\n  \"amaretto\",\n  \"amaze\",\n  \"amazingly\",\n  \"amber\",\n  \"ambiance\",\n  \"ambiguity\",\n  \"ambiguous\",\n  \"ambition\",\n  \"ambitious\",\n  \"ambulance\",\n  \"ambush\",\n  \"amendable\",\n  \"amendment\",\n  \"amends\",\n  \"amenity\",\n  \"amiable\",\n  \"amicably\",\n  \"amid\",\n  \"amigo\",\n  \"amino\",\n  \"amiss\",\n  \"ammonia\",\n  \"ammonium\",\n  \"amnesty\",\n  \"amniotic\",\n  \"among\",\n  \"amount\",\n  \"amperage\",\n  \"ample\",\n  \"amplifier\",\n  \"amplify\",\n  \"amply\",\n  \"amuck\",\n  \"amulet\",\n  \"amusable\",\n  \"amused\",\n  \"amusement\",\n  \"amuser\",\n  \"amusing\",\n  \"anaconda\",\n  \"anaerobic\",\n  \"anagram\",\n  \"anatomist\",\n  \"anatomy\",\n  \"anchor\",\n  \"anchovy\",\n  \"ancient\",\n  \"android\",\n  \"anemia\",\n  \"anemic\",\n  \"aneurism\",\n  \"anew\",\n  \"angelfish\",\n  \"angelic\",\n  \"anger\",\n  \"angled\",\n  \"angler\",\n  \"angles\",\n  \"angling\",\n  \"angrily\",\n  \"angriness\",\n  \"anguished\",\n  \"angular\",\n  \"animal\",\n  \"animate\",\n  \"animating\",\n  \"animation\",\n  \"animator\",\n  \"anime\",\n  \"animosity\",\n  \"ankle\",\n  \"annex\",\n  \"annotate\",\n  \"announcer\",\n  \"annoying\",\n  \"annually\",\n  \"annuity\",\n  \"anointer\",\n  \"another\",\n  \"answering\",\n  \"antacid\",\n  \"antarctic\",\n  \"anteater\",\n  \"antelope\",\n  \"antennae\",\n  \"anthem\",\n  \"anthill\",\n  \"anthology\",\n  \"antibody\",\n  \"antics\",\n  \"antidote\",\n  \"antihero\",\n  \"antiquely\",\n  \"antiques\",\n  \"antiquity\",\n  \"antirust\",\n  \"antitoxic\",\n  \"antitrust\",\n  \"antiviral\",\n  \"antivirus\",\n  \"antler\",\n  \"antonym\",\n  \"antsy\",\n  \"anvil\",\n  \"anybody\",\n  \"anyhow\",\n  \"anymore\",\n  \"anyone\",\n  \"anyplace\",\n  \"anything\",\n  \"anytime\",\n  \"anyway\",\n  \"anywhere\",\n  \"aorta\",\n  \"apache\",\n  \"apostle\",\n  \"appealing\",\n  \"appear\",\n  \"appease\",\n  \"appeasing\",\n  \"appendage\",\n  \"appendix\",\n  \"appetite\",\n  \"appetizer\",\n  \"applaud\",\n  \"applause\",\n  \"apple\",\n  \"appliance\",\n  \"applicant\",\n  \"applied\",\n  \"apply\",\n  \"appointee\",\n  \"appraisal\",\n  \"appraiser\",\n  \"apprehend\",\n  \"approach\",\n  \"approval\",\n  \"approve\",\n  \"apricot\",\n  \"april\",\n  \"apron\",\n  \"aptitude\",\n  \"aptly\",\n  \"aqua\",\n  \"aqueduct\",\n  \"arbitrary\",\n  \"arbitrate\",\n  \"ardently\",\n  \"area\",\n  \"arena\",\n  \"arguable\",\n  \"arguably\",\n  \"argue\",\n  \"arise\",\n  \"armadillo\",\n  \"armband\",\n  \"armchair\",\n  \"armed\",\n  \"armful\",\n  \"armhole\",\n  \"arming\",\n  \"armless\",\n  \"armoire\",\n  \"armored\",\n  \"armory\",\n  \"armrest\",\n  \"army\",\n  \"aroma\",\n  \"arose\",\n  \"around\",\n  \"arousal\",\n  \"arrange\",\n  \"array\",\n  \"arrest\",\n  \"arrival\",\n  \"arrive\",\n  \"arrogance\",\n  \"arrogant\",\n  \"arson\",\n  \"art\",\n  \"ascend\",\n  \"ascension\",\n  \"ascent\",\n  \"ascertain\",\n  \"ashamed\",\n  \"ashen\",\n  \"ashes\",\n  \"ashy\",\n  \"aside\",\n  \"askew\",\n  \"asleep\",\n  \"asparagus\",\n  \"aspect\",\n  \"aspirate\",\n  \"aspire\",\n  \"aspirin\",\n  \"astonish\",\n  \"astound\",\n  \"astride\",\n  \"astrology\",\n  \"astronaut\",\n  \"astronomy\",\n  \"astute\",\n  \"atlantic\",\n  \"atlas\",\n  \"atom\",\n  \"atonable\",\n  \"atop\",\n  \"atrium\",\n  \"atrocious\",\n  \"atrophy\",\n  \"attach\",\n  \"attain\",\n  \"attempt\",\n  \"attendant\",\n  \"attendee\",\n  \"attention\",\n  \"attentive\",\n  \"attest\",\n  \"attic\",\n  \"attire\",\n  \"attitude\",\n  \"attractor\",\n  \"attribute\",\n  \"atypical\",\n  \"auction\",\n  \"audacious\",\n  \"audacity\",\n  \"audible\",\n  \"audibly\",\n  \"audience\",\n  \"audio\",\n  \"audition\",\n  \"augmented\",\n  \"august\",\n  \"authentic\",\n  \"author\",\n  \"autism\",\n  \"autistic\",\n  \"autograph\",\n  \"automaker\",\n  \"automated\",\n  \"automatic\",\n  \"autopilot\",\n  \"available\",\n  \"avalanche\",\n  \"avatar\",\n  \"avenge\",\n  \"avenging\",\n  \"avenue\",\n  \"average\",\n  \"aversion\",\n  \"avert\",\n  \"aviation\",\n  \"aviator\",\n  \"avid\",\n  \"avoid\",\n  \"await\",\n  \"awaken\",\n  \"award\",\n  \"aware\",\n  \"awhile\",\n  \"awkward\",\n  \"awning\",\n  \"awoke\",\n  \"awry\",\n  \"axis\",\n  \"babble\",\n  \"babbling\",\n  \"babied\",\n  \"baboon\",\n  \"backache\",\n  \"backboard\",\n  \"backboned\",\n  \"backdrop\",\n  \"backed\",\n  \"backer\",\n  \"backfield\",\n  \"backfire\",\n  \"backhand\",\n  \"backing\",\n  \"backlands\",\n  \"backlash\",\n  \"backless\",\n  \"backlight\",\n  \"backlit\",\n  \"backlog\",\n  \"backpack\",\n  \"backpedal\",\n  \"backrest\",\n  \"backroom\",\n  \"backshift\",\n  \"backside\",\n  \"backslid\",\n  \"backspace\",\n  \"backspin\",\n  \"backstab\",\n  \"backstage\",\n  \"backtalk\",\n  \"backtrack\",\n  \"backup\",\n  \"backward\",\n  \"backwash\",\n  \"backwater\",\n  \"backyard\",\n  \"bacon\",\n  \"bacteria\",\n  \"bacterium\",\n  \"badass\",\n  \"badge\",\n  \"badland\",\n  \"badly\",\n  \"badness\",\n  \"baffle\",\n  \"baffling\",\n  \"bagel\",\n  \"bagful\",\n  \"baggage\",\n  \"bagged\",\n  \"baggie\",\n  \"bagginess\",\n  \"bagging\",\n  \"baggy\",\n  \"bagpipe\",\n  \"baguette\",\n  \"baked\",\n  \"bakery\",\n  \"bakeshop\",\n  \"baking\",\n  \"balance\",\n  \"balancing\",\n  \"balcony\",\n  \"balmy\",\n  \"balsamic\",\n  \"bamboo\",\n  \"banana\",\n  \"banish\",\n  \"banister\",\n  \"banjo\",\n  \"bankable\",\n  \"bankbook\",\n  \"banked\",\n  \"banker\",\n  \"banking\",\n  \"banknote\",\n  \"bankroll\",\n  \"banner\",\n  \"bannister\",\n  \"banshee\",\n  \"banter\",\n  \"barbecue\",\n  \"barbed\",\n  \"barbell\",\n  \"barber\",\n  \"barcode\",\n  \"barge\",\n  \"bargraph\",\n  \"barista\",\n  \"baritone\",\n  \"barley\",\n  \"barmaid\",\n  \"barman\",\n  \"barn\",\n  \"barometer\",\n  \"barrack\",\n  \"barracuda\",\n  \"barrel\",\n  \"barrette\",\n  \"barricade\",\n  \"barrier\",\n  \"barstool\",\n  \"bartender\",\n  \"barterer\",\n  \"bash\",\n  \"basically\",\n  \"basics\",\n  \"basil\",\n  \"basin\",\n  \"basis\",\n  \"basket\",\n  \"batboy\",\n  \"batch\",\n  \"bath\",\n  \"baton\",\n  \"bats\",\n  \"battalion\",\n  \"battered\",\n  \"battering\",\n  \"battery\",\n  \"batting\",\n  \"battle\",\n  \"bauble\",\n  \"bazooka\",\n  \"blabber\",\n  \"bladder\",\n  \"blade\",\n  \"blah\",\n  \"blame\",\n  \"blaming\",\n  \"blanching\",\n  \"blandness\",\n  \"blank\",\n  \"blaspheme\",\n  \"blasphemy\",\n  \"blast\",\n  \"blatancy\",\n  \"blatantly\",\n  \"blazer\",\n  \"blazing\",\n  \"bleach\",\n  \"bleak\",\n  \"bleep\",\n  \"blemish\",\n  \"blend\",\n  \"bless\",\n  \"blighted\",\n  \"blimp\",\n  \"bling\",\n  \"blinked\",\n  \"blinker\",\n  \"blinking\",\n  \"blinks\",\n  \"blip\",\n  \"blissful\",\n  \"blitz\",\n  \"blizzard\",\n  \"bloated\",\n  \"bloating\",\n  \"blob\",\n  \"blog\",\n  \"bloomers\",\n  \"blooming\",\n  \"blooper\",\n  \"blot\",\n  \"blouse\",\n  \"blubber\",\n  \"bluff\",\n  \"bluish\",\n  \"blunderer\",\n  \"blunt\",\n  \"blurb\",\n  \"blurred\",\n  \"blurry\",\n  \"blurt\",\n  \"blush\",\n  \"blustery\",\n  \"boaster\",\n  \"boastful\",\n  \"boasting\",\n  \"boat\",\n  \"bobbed\",\n  \"bobbing\",\n  \"bobble\",\n  \"bobcat\",\n  \"bobsled\",\n  \"bobtail\",\n  \"bodacious\",\n  \"body\",\n  \"bogged\",\n  \"boggle\",\n  \"bogus\",\n  \"boil\",\n  \"bok\",\n  \"bolster\",\n  \"bolt\",\n  \"bonanza\",\n  \"bonded\",\n  \"bonding\",\n  \"bondless\",\n  \"boned\",\n  \"bonehead\",\n  \"boneless\",\n  \"bonelike\",\n  \"boney\",\n  \"bonfire\",\n  \"bonnet\",\n  \"bonsai\",\n  \"bonus\",\n  \"bony\",\n  \"boogeyman\",\n  \"boogieman\",\n  \"book\",\n  \"boondocks\",\n  \"booted\",\n  \"booth\",\n  \"bootie\",\n  \"booting\",\n  \"bootlace\",\n  \"bootleg\",\n  \"boots\",\n  \"boozy\",\n  \"borax\",\n  \"boring\",\n  \"borough\",\n  \"borrower\",\n  \"borrowing\",\n  \"boss\",\n  \"botanical\",\n  \"botanist\",\n  \"botany\",\n  \"botch\",\n  \"both\",\n  \"bottle\",\n  \"bottling\",\n  \"bottom\",\n  \"bounce\",\n  \"bouncing\",\n  \"bouncy\",\n  \"bounding\",\n  \"boundless\",\n  \"bountiful\",\n  \"bovine\",\n  \"boxcar\",\n  \"boxer\",\n  \"boxing\",\n  \"boxlike\",\n  \"boxy\",\n  \"breach\",\n  \"breath\",\n  \"breeches\",\n  \"breeching\",\n  \"breeder\",\n  \"breeding\",\n  \"breeze\",\n  \"breezy\",\n  \"brethren\",\n  \"brewery\",\n  \"brewing\",\n  \"briar\",\n  \"bribe\",\n  \"brick\",\n  \"bride\",\n  \"bridged\",\n  \"brigade\",\n  \"bright\",\n  \"brilliant\",\n  \"brim\",\n  \"bring\",\n  \"brink\",\n  \"brisket\",\n  \"briskly\",\n  \"briskness\",\n  \"bristle\",\n  \"brittle\",\n  \"broadband\",\n  \"broadcast\",\n  \"broaden\",\n  \"broadly\",\n  \"broadness\",\n  \"broadside\",\n  \"broadways\",\n  \"broiler\",\n  \"broiling\",\n  \"broken\",\n  \"broker\",\n  \"bronchial\",\n  \"bronco\",\n  \"bronze\",\n  \"bronzing\",\n  \"brook\",\n  \"broom\",\n  \"brought\",\n  \"browbeat\",\n  \"brownnose\",\n  \"browse\",\n  \"browsing\",\n  \"bruising\",\n  \"brunch\",\n  \"brunette\",\n  \"brunt\",\n  \"brush\",\n  \"brussels\",\n  \"brute\",\n  \"brutishly\",\n  \"bubble\",\n  \"bubbling\",\n  \"bubbly\",\n  \"buccaneer\",\n  \"bucked\",\n  \"bucket\",\n  \"buckle\",\n  \"buckshot\",\n  \"buckskin\",\n  \"bucktooth\",\n  \"buckwheat\",\n  \"buddhism\",\n  \"buddhist\",\n  \"budding\",\n  \"buddy\",\n  \"budget\",\n  \"buffalo\",\n  \"buffed\",\n  \"buffer\",\n  \"buffing\",\n  \"buffoon\",\n  \"buggy\",\n  \"bulb\",\n  \"bulge\",\n  \"bulginess\",\n  \"bulgur\",\n  \"bulk\",\n  \"bulldog\",\n  \"bulldozer\",\n  \"bullfight\",\n  \"bullfrog\",\n  \"bullhorn\",\n  \"bullion\",\n  \"bullish\",\n  \"bullpen\",\n  \"bullring\",\n  \"bullseye\",\n  \"bullwhip\",\n  \"bully\",\n  \"bunch\",\n  \"bundle\",\n  \"bungee\",\n  \"bunion\",\n  \"bunkbed\",\n  \"bunkhouse\",\n  \"bunkmate\",\n  \"bunny\",\n  \"bunt\",\n  \"busboy\",\n  \"bush\",\n  \"busily\",\n  \"busload\",\n  \"bust\",\n  \"busybody\",\n  \"buzz\",\n  \"cabana\",\n  \"cabbage\",\n  \"cabbie\",\n  \"cabdriver\",\n  \"cable\",\n  \"caboose\",\n  \"cache\",\n  \"cackle\",\n  \"cacti\",\n  \"cactus\",\n  \"caddie\",\n  \"caddy\",\n  \"cadet\",\n  \"cadillac\",\n  \"cadmium\",\n  \"cage\",\n  \"cahoots\",\n  \"cake\",\n  \"calamari\",\n  \"calamity\",\n  \"calcium\",\n  \"calculate\",\n  \"calculus\",\n  \"caliber\",\n  \"calibrate\",\n  \"calm\",\n  \"caloric\",\n  \"calorie\",\n  \"calzone\",\n  \"camcorder\",\n  \"cameo\",\n  \"camera\",\n  \"camisole\",\n  \"camper\",\n  \"campfire\",\n  \"camping\",\n  \"campsite\",\n  \"campus\",\n  \"canal\",\n  \"canary\",\n  \"cancel\",\n  \"candied\",\n  \"candle\",\n  \"candy\",\n  \"cane\",\n  \"canine\",\n  \"canister\",\n  \"cannabis\",\n  \"canned\",\n  \"canning\",\n  \"cannon\",\n  \"cannot\",\n  \"canola\",\n  \"canon\",\n  \"canopener\",\n  \"canopy\",\n  \"canteen\",\n  \"canyon\",\n  \"capable\",\n  \"capably\",\n  \"capacity\",\n  \"cape\",\n  \"capillary\",\n  \"capital\",\n  \"capitol\",\n  \"capped\",\n  \"capricorn\",\n  \"capsize\",\n  \"capsule\",\n  \"caption\",\n  \"captivate\",\n  \"captive\",\n  \"captivity\",\n  \"capture\",\n  \"caramel\",\n  \"carat\",\n  \"caravan\",\n  \"carbon\",\n  \"cardboard\",\n  \"carded\",\n  \"cardiac\",\n  \"cardigan\",\n  \"cardinal\",\n  \"cardstock\",\n  \"carefully\",\n  \"caregiver\",\n  \"careless\",\n  \"caress\",\n  \"caretaker\",\n  \"cargo\",\n  \"caring\",\n  \"carless\",\n  \"carload\",\n  \"carmaker\",\n  \"carnage\",\n  \"carnation\",\n  \"carnival\",\n  \"carnivore\",\n  \"carol\",\n  \"carpenter\",\n  \"carpentry\",\n  \"carpool\",\n  \"carport\",\n  \"carried\",\n  \"carrot\",\n  \"carrousel\",\n  \"carry\",\n  \"cartel\",\n  \"cartload\",\n  \"carton\",\n  \"cartoon\",\n  \"cartridge\",\n  \"cartwheel\",\n  \"carve\",\n  \"carving\",\n  \"carwash\",\n  \"cascade\",\n  \"case\",\n  \"cash\",\n  \"casing\",\n  \"casino\",\n  \"casket\",\n  \"cassette\",\n  \"casually\",\n  \"casualty\",\n  \"catacomb\",\n  \"catalog\",\n  \"catalyst\",\n  \"catalyze\",\n  \"catapult\",\n  \"cataract\",\n  \"catatonic\",\n  \"catcall\",\n  \"catchable\",\n  \"catcher\",\n  \"catching\",\n  \"catchy\",\n  \"caterer\",\n  \"catering\",\n  \"catfight\",\n  \"catfish\",\n  \"cathedral\",\n  \"cathouse\",\n  \"catlike\",\n  \"catnap\",\n  \"catnip\",\n  \"catsup\",\n  \"cattail\",\n  \"cattishly\",\n  \"cattle\",\n  \"catty\",\n  \"catwalk\",\n  \"caucasian\",\n  \"caucus\",\n  \"causal\",\n  \"causation\",\n  \"cause\",\n  \"causing\",\n  \"cauterize\",\n  \"caution\",\n  \"cautious\",\n  \"cavalier\",\n  \"cavalry\",\n  \"caviar\",\n  \"cavity\",\n  \"cedar\",\n  \"celery\",\n  \"celestial\",\n  \"celibacy\",\n  \"celibate\",\n  \"celtic\",\n  \"cement\",\n  \"census\",\n  \"ceramics\",\n  \"ceremony\",\n  \"certainly\",\n  \"certainty\",\n  \"certified\",\n  \"certify\",\n  \"cesarean\",\n  \"cesspool\",\n  \"chafe\",\n  \"chaffing\",\n  \"chain\",\n  \"chair\",\n  \"chalice\",\n  \"challenge\",\n  \"chamber\",\n  \"chamomile\",\n  \"champion\",\n  \"chance\",\n  \"change\",\n  \"channel\",\n  \"chant\",\n  \"chaos\",\n  \"chaperone\",\n  \"chaplain\",\n  \"chapped\",\n  \"chaps\",\n  \"chapter\",\n  \"character\",\n  \"charbroil\",\n  \"charcoal\",\n  \"charger\",\n  \"charging\",\n  \"chariot\",\n  \"charity\",\n  \"charm\",\n  \"charred\",\n  \"charter\",\n  \"charting\",\n  \"chase\",\n  \"chasing\",\n  \"chaste\",\n  \"chastise\",\n  \"chastity\",\n  \"chatroom\",\n  \"chatter\",\n  \"chatting\",\n  \"chatty\",\n  \"cheating\",\n  \"cheddar\",\n  \"cheek\",\n  \"cheer\",\n  \"cheese\",\n  \"cheesy\",\n  \"chef\",\n  \"chemicals\",\n  \"chemist\",\n  \"chemo\",\n  \"cherisher\",\n  \"cherub\",\n  \"chess\",\n  \"chest\",\n  \"chevron\",\n  \"chevy\",\n  \"chewable\",\n  \"chewer\",\n  \"chewing\",\n  \"chewy\",\n  \"chief\",\n  \"chihuahua\",\n  \"childcare\",\n  \"childhood\",\n  \"childish\",\n  \"childless\",\n  \"childlike\",\n  \"chili\",\n  \"chill\",\n  \"chimp\",\n  \"chip\",\n  \"chirping\",\n  \"chirpy\",\n  \"chitchat\",\n  \"chivalry\",\n  \"chive\",\n  \"chloride\",\n  \"chlorine\",\n  \"choice\",\n  \"chokehold\",\n  \"choking\",\n  \"chomp\",\n  \"chooser\",\n  \"choosing\",\n  \"choosy\",\n  \"chop\",\n  \"chosen\",\n  \"chowder\",\n  \"chowtime\",\n  \"chrome\",\n  \"chubby\",\n  \"chuck\",\n  \"chug\",\n  \"chummy\",\n  \"chump\",\n  \"chunk\",\n  \"churn\",\n  \"chute\",\n  \"cider\",\n  \"cilantro\",\n  \"cinch\",\n  \"cinema\",\n  \"cinnamon\",\n  \"circle\",\n  \"circling\",\n  \"circular\",\n  \"circulate\",\n  \"circus\",\n  \"citable\",\n  \"citadel\",\n  \"citation\",\n  \"citizen\",\n  \"citric\",\n  \"citrus\",\n  \"city\",\n  \"civic\",\n  \"civil\",\n  \"clad\",\n  \"claim\",\n  \"clambake\",\n  \"clammy\",\n  \"clamor\",\n  \"clamp\",\n  \"clamshell\",\n  \"clang\",\n  \"clanking\",\n  \"clapped\",\n  \"clapper\",\n  \"clapping\",\n  \"clarify\",\n  \"clarinet\",\n  \"clarity\",\n  \"clash\",\n  \"clasp\",\n  \"class\",\n  \"clatter\",\n  \"clause\",\n  \"clavicle\",\n  \"claw\",\n  \"clay\",\n  \"clean\",\n  \"clear\",\n  \"cleat\",\n  \"cleaver\",\n  \"cleft\",\n  \"clench\",\n  \"clergyman\",\n  \"clerical\",\n  \"clerk\",\n  \"clever\",\n  \"clicker\",\n  \"client\",\n  \"climate\",\n  \"climatic\",\n  \"cling\",\n  \"clinic\",\n  \"clinking\",\n  \"clip\",\n  \"clique\",\n  \"cloak\",\n  \"clobber\",\n  \"clock\",\n  \"clone\",\n  \"cloning\",\n  \"closable\",\n  \"closure\",\n  \"clothes\",\n  \"clothing\",\n  \"cloud\",\n  \"clover\",\n  \"clubbed\",\n  \"clubbing\",\n  \"clubhouse\",\n  \"clump\",\n  \"clumsily\",\n  \"clumsy\",\n  \"clunky\",\n  \"clustered\",\n  \"clutch\",\n  \"clutter\",\n  \"coach\",\n  \"coagulant\",\n  \"coastal\",\n  \"coaster\",\n  \"coasting\",\n  \"coastland\",\n  \"coastline\",\n  \"coat\",\n  \"coauthor\",\n  \"cobalt\",\n  \"cobbler\",\n  \"cobweb\",\n  \"cocoa\",\n  \"coconut\",\n  \"cod\",\n  \"coeditor\",\n  \"coerce\",\n  \"coexist\",\n  \"coffee\",\n  \"cofounder\",\n  \"cognition\",\n  \"cognitive\",\n  \"cogwheel\",\n  \"coherence\",\n  \"coherent\",\n  \"cohesive\",\n  \"coil\",\n  \"coke\",\n  \"cola\",\n  \"cold\",\n  \"coleslaw\",\n  \"coliseum\",\n  \"collage\",\n  \"collapse\",\n  \"collar\",\n  \"collected\",\n  \"collector\",\n  \"collide\",\n  \"collie\",\n  \"collision\",\n  \"colonial\",\n  \"colonist\",\n  \"colonize\",\n  \"colony\",\n  \"colossal\",\n  \"colt\",\n  \"coma\",\n  \"come\",\n  \"comfort\",\n  \"comfy\",\n  \"comic\",\n  \"coming\",\n  \"comma\",\n  \"commence\",\n  \"commend\",\n  \"comment\",\n  \"commerce\",\n  \"commode\",\n  \"commodity\",\n  \"commodore\",\n  \"common\",\n  \"commotion\",\n  \"commute\",\n  \"commuting\",\n  \"compacted\",\n  \"compacter\",\n  \"compactly\",\n  \"compactor\",\n  \"companion\",\n  \"company\",\n  \"compare\",\n  \"compel\",\n  \"compile\",\n  \"comply\",\n  \"component\",\n  \"composed\",\n  \"composer\",\n  \"composite\",\n  \"compost\",\n  \"composure\",\n  \"compound\",\n  \"compress\",\n  \"comprised\",\n  \"computer\",\n  \"computing\",\n  \"comrade\",\n  \"concave\",\n  \"conceal\",\n  \"conceded\",\n  \"concept\",\n  \"concerned\",\n  \"concert\",\n  \"conch\",\n  \"concierge\",\n  \"concise\",\n  \"conclude\",\n  \"concrete\",\n  \"concur\",\n  \"condense\",\n  \"condiment\",\n  \"condition\",\n  \"condone\",\n  \"conducive\",\n  \"conductor\",\n  \"conduit\",\n  \"cone\",\n  \"confess\",\n  \"confetti\",\n  \"confidant\",\n  \"confident\",\n  \"confider\",\n  \"confiding\",\n  \"configure\",\n  \"confined\",\n  \"confining\",\n  \"confirm\",\n  \"conflict\",\n  \"conform\",\n  \"confound\",\n  \"confront\",\n  \"confused\",\n  \"confusing\",\n  \"confusion\",\n  \"congenial\",\n  \"congested\",\n  \"congrats\",\n  \"congress\",\n  \"conical\",\n  \"conjoined\",\n  \"conjure\",\n  \"conjuror\",\n  \"connected\",\n  \"connector\",\n  \"consensus\",\n  \"consent\",\n  \"console\",\n  \"consoling\",\n  \"consonant\",\n  \"constable\",\n  \"constant\",\n  \"constrain\",\n  \"constrict\",\n  \"construct\",\n  \"consult\",\n  \"consumer\",\n  \"consuming\",\n  \"contact\",\n  \"container\",\n  \"contempt\",\n  \"contend\",\n  \"contented\",\n  \"contently\",\n  \"contents\",\n  \"contest\",\n  \"context\",\n  \"contort\",\n  \"contour\",\n  \"contrite\",\n  \"control\",\n  \"contusion\",\n  \"convene\",\n  \"convent\",\n  \"copartner\",\n  \"cope\",\n  \"copied\",\n  \"copier\",\n  \"copilot\",\n  \"coping\",\n  \"copious\",\n  \"copper\",\n  \"copy\",\n  \"coral\",\n  \"cork\",\n  \"cornball\",\n  \"cornbread\",\n  \"corncob\",\n  \"cornea\",\n  \"corned\",\n  \"corner\",\n  \"cornfield\",\n  \"cornflake\",\n  \"cornhusk\",\n  \"cornmeal\",\n  \"cornstalk\",\n  \"corny\",\n  \"coronary\",\n  \"coroner\",\n  \"corporal\",\n  \"corporate\",\n  \"corral\",\n  \"correct\",\n  \"corridor\",\n  \"corrode\",\n  \"corroding\",\n  \"corrosive\",\n  \"corsage\",\n  \"corset\",\n  \"cortex\",\n  \"cosigner\",\n  \"cosmetics\",\n  \"cosmic\",\n  \"cosmos\",\n  \"cosponsor\",\n  \"cost\",\n  \"cottage\",\n  \"cotton\",\n  \"couch\",\n  \"cough\",\n  \"could\",\n  \"countable\",\n  \"countdown\",\n  \"counting\",\n  \"countless\",\n  \"country\",\n  \"county\",\n  \"courier\",\n  \"covenant\",\n  \"cover\",\n  \"coveted\",\n  \"coveting\",\n  \"coyness\",\n  \"cozily\",\n  \"coziness\",\n  \"cozy\",\n  \"crabbing\",\n  \"crabgrass\",\n  \"crablike\",\n  \"crabmeat\",\n  \"cradle\",\n  \"cradling\",\n  \"crafter\",\n  \"craftily\",\n  \"craftsman\",\n  \"craftwork\",\n  \"crafty\",\n  \"cramp\",\n  \"cranberry\",\n  \"crane\",\n  \"cranial\",\n  \"cranium\",\n  \"crank\",\n  \"crate\",\n  \"crave\",\n  \"craving\",\n  \"crawfish\",\n  \"crawlers\",\n  \"crawling\",\n  \"crayfish\",\n  \"crayon\",\n  \"crazed\",\n  \"crazily\",\n  \"craziness\",\n  \"crazy\",\n  \"creamed\",\n  \"creamer\",\n  \"creamlike\",\n  \"crease\",\n  \"creasing\",\n  \"creatable\",\n  \"create\",\n  \"creation\",\n  \"creative\",\n  \"creature\",\n  \"credible\",\n  \"credibly\",\n  \"credit\",\n  \"creed\",\n  \"creme\",\n  \"creole\",\n  \"crepe\",\n  \"crept\",\n  \"crescent\",\n  \"crested\",\n  \"cresting\",\n  \"crestless\",\n  \"crevice\",\n  \"crewless\",\n  \"crewman\",\n  \"crewmate\",\n  \"crib\",\n  \"cricket\",\n  \"cried\",\n  \"crier\",\n  \"crimp\",\n  \"crimson\",\n  \"cringe\",\n  \"cringing\",\n  \"crinkle\",\n  \"crinkly\",\n  \"crisped\",\n  \"crisping\",\n  \"crisply\",\n  \"crispness\",\n  \"crispy\",\n  \"criteria\",\n  \"critter\",\n  \"croak\",\n  \"crock\",\n  \"crook\",\n  \"croon\",\n  \"crop\",\n  \"cross\",\n  \"crouch\",\n  \"crouton\",\n  \"crowbar\",\n  \"crowd\",\n  \"crown\",\n  \"crucial\",\n  \"crudely\",\n  \"crudeness\",\n  \"cruelly\",\n  \"cruelness\",\n  \"cruelty\",\n  \"crumb\",\n  \"crummiest\",\n  \"crummy\",\n  \"crumpet\",\n  \"crumpled\",\n  \"cruncher\",\n  \"crunching\",\n  \"crunchy\",\n  \"crusader\",\n  \"crushable\",\n  \"crushed\",\n  \"crusher\",\n  \"crushing\",\n  \"crust\",\n  \"crux\",\n  \"crying\",\n  \"cryptic\",\n  \"crystal\",\n  \"cubbyhole\",\n  \"cube\",\n  \"cubical\",\n  \"cubicle\",\n  \"cucumber\",\n  \"cuddle\",\n  \"cuddly\",\n  \"cufflink\",\n  \"culinary\",\n  \"culminate\",\n  \"culpable\",\n  \"culprit\",\n  \"cultivate\",\n  \"cultural\",\n  \"culture\",\n  \"cupbearer\",\n  \"cupcake\",\n  \"cupid\",\n  \"cupped\",\n  \"cupping\",\n  \"curable\",\n  \"curator\",\n  \"curdle\",\n  \"cure\",\n  \"curfew\",\n  \"curing\",\n  \"curled\",\n  \"curler\",\n  \"curliness\",\n  \"curling\",\n  \"curly\",\n  \"curry\",\n  \"curse\",\n  \"cursive\",\n  \"cursor\",\n  \"curtain\",\n  \"curtly\",\n  \"curtsy\",\n  \"curvature\",\n  \"curve\",\n  \"curvy\",\n  \"cushy\",\n  \"cusp\",\n  \"cussed\",\n  \"custard\",\n  \"custodian\",\n  \"custody\",\n  \"customary\",\n  \"customer\",\n  \"customize\",\n  \"customs\",\n  \"cut\",\n  \"cycle\",\n  \"cyclic\",\n  \"cycling\",\n  \"cyclist\",\n  \"cylinder\",\n  \"cymbal\",\n  \"cytoplasm\",\n  \"cytoplast\",\n  \"dab\",\n  \"dad\",\n  \"daffodil\",\n  \"dagger\",\n  \"daily\",\n  \"daintily\",\n  \"dainty\",\n  \"dairy\",\n  \"daisy\",\n  \"dallying\",\n  \"dance\",\n  \"dancing\",\n  \"dandelion\",\n  \"dander\",\n  \"dandruff\",\n  \"dandy\",\n  \"danger\",\n  \"dangle\",\n  \"dangling\",\n  \"daredevil\",\n  \"dares\",\n  \"daringly\",\n  \"darkened\",\n  \"darkening\",\n  \"darkish\",\n  \"darkness\",\n  \"darkroom\",\n  \"darling\",\n  \"darn\",\n  \"dart\",\n  \"darwinism\",\n  \"dash\",\n  \"dastardly\",\n  \"data\",\n  \"datebook\",\n  \"dating\",\n  \"daughter\",\n  \"daunting\",\n  \"dawdler\",\n  \"dawn\",\n  \"daybed\",\n  \"daybreak\",\n  \"daycare\",\n  \"daydream\",\n  \"daylight\",\n  \"daylong\",\n  \"dayroom\",\n  \"daytime\",\n  \"dazzler\",\n  \"dazzling\",\n  \"deacon\",\n  \"deafening\",\n  \"deafness\",\n  \"dealer\",\n  \"dealing\",\n  \"dealmaker\",\n  \"dealt\",\n  \"dean\",\n  \"debatable\",\n  \"debate\",\n  \"debating\",\n  \"debit\",\n  \"debrief\",\n  \"debtless\",\n  \"debtor\",\n  \"debug\",\n  \"debunk\",\n  \"decade\",\n  \"decaf\",\n  \"decal\",\n  \"decathlon\",\n  \"decay\",\n  \"deceased\",\n  \"deceit\",\n  \"deceiver\",\n  \"deceiving\",\n  \"december\",\n  \"decency\",\n  \"decent\",\n  \"deception\",\n  \"deceptive\",\n  \"decibel\",\n  \"decidable\",\n  \"decimal\",\n  \"decimeter\",\n  \"decipher\",\n  \"deck\",\n  \"declared\",\n  \"decline\",\n  \"decode\",\n  \"decompose\",\n  \"decorated\",\n  \"decorator\",\n  \"decoy\",\n  \"decrease\",\n  \"decree\",\n  \"dedicate\",\n  \"dedicator\",\n  \"deduce\",\n  \"deduct\",\n  \"deed\",\n  \"deem\",\n  \"deepen\",\n  \"deeply\",\n  \"deepness\",\n  \"deface\",\n  \"defacing\",\n  \"defame\",\n  \"default\",\n  \"defeat\",\n  \"defection\",\n  \"defective\",\n  \"defendant\",\n  \"defender\",\n  \"defense\",\n  \"defensive\",\n  \"deferral\",\n  \"deferred\",\n  \"defiance\",\n  \"defiant\",\n  \"defile\",\n  \"defiling\",\n  \"define\",\n  \"definite\",\n  \"deflate\",\n  \"deflation\",\n  \"deflator\",\n  \"deflected\",\n  \"deflector\",\n  \"defog\",\n  \"deforest\",\n  \"defraud\",\n  \"defrost\",\n  \"deftly\",\n  \"defuse\",\n  \"defy\",\n  \"degraded\",\n  \"degrading\",\n  \"degrease\",\n  \"degree\",\n  \"dehydrate\",\n  \"deity\",\n  \"dejected\",\n  \"delay\",\n  \"delegate\",\n  \"delegator\",\n  \"delete\",\n  \"deletion\",\n  \"delicacy\",\n  \"delicate\",\n  \"delicious\",\n  \"delighted\",\n  \"delirious\",\n  \"delirium\",\n  \"deliverer\",\n  \"delivery\",\n  \"delouse\",\n  \"delta\",\n  \"deluge\",\n  \"delusion\",\n  \"deluxe\",\n  \"demanding\",\n  \"demeaning\",\n  \"demeanor\",\n  \"demise\",\n  \"democracy\",\n  \"democrat\",\n  \"demote\",\n  \"demotion\",\n  \"demystify\",\n  \"denatured\",\n  \"deniable\",\n  \"denial\",\n  \"denim\",\n  \"denote\",\n  \"dense\",\n  \"density\",\n  \"dental\",\n  \"dentist\",\n  \"denture\",\n  \"deny\",\n  \"deodorant\",\n  \"deodorize\",\n  \"departed\",\n  \"departure\",\n  \"depict\",\n  \"deplete\",\n  \"depletion\",\n  \"deplored\",\n  \"deploy\",\n  \"deport\",\n  \"depose\",\n  \"depraved\",\n  \"depravity\",\n  \"deprecate\",\n  \"depress\",\n  \"deprive\",\n  \"depth\",\n  \"deputize\",\n  \"deputy\",\n  \"derail\",\n  \"deranged\",\n  \"derby\",\n  \"derived\",\n  \"desecrate\",\n  \"deserve\",\n  \"deserving\",\n  \"designate\",\n  \"designed\",\n  \"designer\",\n  \"designing\",\n  \"deskbound\",\n  \"desktop\",\n  \"deskwork\",\n  \"desolate\",\n  \"despair\",\n  \"despise\",\n  \"despite\",\n  \"destiny\",\n  \"destitute\",\n  \"destruct\",\n  \"detached\",\n  \"detail\",\n  \"detection\",\n  \"detective\",\n  \"detector\",\n  \"detention\",\n  \"detergent\",\n  \"detest\",\n  \"detonate\",\n  \"detonator\",\n  \"detoxify\",\n  \"detract\",\n  \"deuce\",\n  \"devalue\",\n  \"deviancy\",\n  \"deviant\",\n  \"deviate\",\n  \"deviation\",\n  \"deviator\",\n  \"device\",\n  \"devious\",\n  \"devotedly\",\n  \"devotee\",\n  \"devotion\",\n  \"devourer\",\n  \"devouring\",\n  \"devoutly\",\n  \"dexterity\",\n  \"dexterous\",\n  \"diabetes\",\n  \"diabetic\",\n  \"diabolic\",\n  \"diagnoses\",\n  \"diagnosis\",\n  \"diagram\",\n  \"dial\",\n  \"diameter\",\n  \"diaper\",\n  \"diaphragm\",\n  \"diary\",\n  \"dice\",\n  \"dicing\",\n  \"dictate\",\n  \"dictation\",\n  \"dictator\",\n  \"difficult\",\n  \"diffused\",\n  \"diffuser\",\n  \"diffusion\",\n  \"diffusive\",\n  \"dig\",\n  \"dilation\",\n  \"diligence\",\n  \"diligent\",\n  \"dill\",\n  \"dilute\",\n  \"dime\",\n  \"diminish\",\n  \"dimly\",\n  \"dimmed\",\n  \"dimmer\",\n  \"dimness\",\n  \"dimple\",\n  \"diner\",\n  \"dingbat\",\n  \"dinghy\",\n  \"dinginess\",\n  \"dingo\",\n  \"dingy\",\n  \"dining\",\n  \"dinner\",\n  \"diocese\",\n  \"dioxide\",\n  \"diploma\",\n  \"dipped\",\n  \"dipper\",\n  \"dipping\",\n  \"directed\",\n  \"direction\",\n  \"directive\",\n  \"directly\",\n  \"directory\",\n  \"direness\",\n  \"dirtiness\",\n  \"disabled\",\n  \"disagree\",\n  \"disallow\",\n  \"disarm\",\n  \"disarray\",\n  \"disaster\",\n  \"disband\",\n  \"disbelief\",\n  \"disburse\",\n  \"discard\",\n  \"discern\",\n  \"discharge\",\n  \"disclose\",\n  \"discolor\",\n  \"discount\",\n  \"discourse\",\n  \"discover\",\n  \"discuss\",\n  \"disdain\",\n  \"disengage\",\n  \"disfigure\",\n  \"disgrace\",\n  \"dish\",\n  \"disinfect\",\n  \"disjoin\",\n  \"disk\",\n  \"dislike\",\n  \"disliking\",\n  \"dislocate\",\n  \"dislodge\",\n  \"disloyal\",\n  \"dismantle\",\n  \"dismay\",\n  \"dismiss\",\n  \"dismount\",\n  \"disobey\",\n  \"disorder\",\n  \"disown\",\n  \"disparate\",\n  \"disparity\",\n  \"dispatch\",\n  \"dispense\",\n  \"dispersal\",\n  \"dispersed\",\n  \"disperser\",\n  \"displace\",\n  \"display\",\n  \"displease\",\n  \"disposal\",\n  \"dispose\",\n  \"disprove\",\n  \"dispute\",\n  \"disregard\",\n  \"disrupt\",\n  \"dissuade\",\n  \"distance\",\n  \"distant\",\n  \"distaste\",\n  \"distill\",\n  \"distinct\",\n  \"distort\",\n  \"distract\",\n  \"distress\",\n  \"district\",\n  \"distrust\",\n  \"ditch\",\n  \"ditto\",\n  \"ditzy\",\n  \"dividable\",\n  \"divided\",\n  \"dividend\",\n  \"dividers\",\n  \"dividing\",\n  \"divinely\",\n  \"diving\",\n  \"divinity\",\n  \"divisible\",\n  \"divisibly\",\n  \"division\",\n  \"divisive\",\n  \"divorcee\",\n  \"dizziness\",\n  \"dizzy\",\n  \"doable\",\n  \"docile\",\n  \"dock\",\n  \"doctrine\",\n  \"document\",\n  \"dodge\",\n  \"dodgy\",\n  \"doily\",\n  \"doing\",\n  \"dole\",\n  \"dollar\",\n  \"dollhouse\",\n  \"dollop\",\n  \"dolly\",\n  \"dolphin\",\n  \"domain\",\n  \"domelike\",\n  \"domestic\",\n  \"dominion\",\n  \"dominoes\",\n  \"donated\",\n  \"donation\",\n  \"donator\",\n  \"donor\",\n  \"donut\",\n  \"doodle\",\n  \"doorbell\",\n  \"doorframe\",\n  \"doorknob\",\n  \"doorman\",\n  \"doormat\",\n  \"doornail\",\n  \"doorpost\",\n  \"doorstep\",\n  \"doorstop\",\n  \"doorway\",\n  \"doozy\",\n  \"dork\",\n  \"dormitory\",\n  \"dorsal\",\n  \"dosage\",\n  \"dose\",\n  \"dotted\",\n  \"doubling\",\n  \"douche\",\n  \"dove\",\n  \"down\",\n  \"dowry\",\n  \"doze\",\n  \"drab\",\n  \"dragging\",\n  \"dragonfly\",\n  \"dragonish\",\n  \"dragster\",\n  \"drainable\",\n  \"drainage\",\n  \"drained\",\n  \"drainer\",\n  \"drainpipe\",\n  \"dramatic\",\n  \"dramatize\",\n  \"drank\",\n  \"drapery\",\n  \"drastic\",\n  \"draw\",\n  \"dreaded\",\n  \"dreadful\",\n  \"dreadlock\",\n  \"dreamboat\",\n  \"dreamily\",\n  \"dreamland\",\n  \"dreamless\",\n  \"dreamlike\",\n  \"dreamt\",\n  \"dreamy\",\n  \"drearily\",\n  \"dreary\",\n  \"drench\",\n  \"dress\",\n  \"drew\",\n  \"dribble\",\n  \"dried\",\n  \"drier\",\n  \"drift\",\n  \"driller\",\n  \"drilling\",\n  \"drinkable\",\n  \"drinking\",\n  \"dripping\",\n  \"drippy\",\n  \"drivable\",\n  \"driven\",\n  \"driver\",\n  \"driveway\",\n  \"driving\",\n  \"drizzle\",\n  \"drizzly\",\n  \"drone\",\n  \"drool\",\n  \"droop\",\n  \"drop-down\",\n  \"dropbox\",\n  \"dropkick\",\n  \"droplet\",\n  \"dropout\",\n  \"dropper\",\n  \"drove\",\n  \"drown\",\n  \"drowsily\",\n  \"drudge\",\n  \"drum\",\n  \"dry\",\n  \"dubbed\",\n  \"dubiously\",\n  \"duchess\",\n  \"duckbill\",\n  \"ducking\",\n  \"duckling\",\n  \"ducktail\",\n  \"ducky\",\n  \"duct\",\n  \"dude\",\n  \"duffel\",\n  \"dugout\",\n  \"duh\",\n  \"duke\",\n  \"duller\",\n  \"dullness\",\n  \"duly\",\n  \"dumping\",\n  \"dumpling\",\n  \"dumpster\",\n  \"duo\",\n  \"dupe\",\n  \"duplex\",\n  \"duplicate\",\n  \"duplicity\",\n  \"durable\",\n  \"durably\",\n  \"duration\",\n  \"duress\",\n  \"during\",\n  \"dusk\",\n  \"dust\",\n  \"dutiful\",\n  \"duty\",\n  \"duvet\",\n  \"dwarf\",\n  \"dweeb\",\n  \"dwelled\",\n  \"dweller\",\n  \"dwelling\",\n  \"dwindle\",\n  \"dwindling\",\n  \"dynamic\",\n  \"dynamite\",\n  \"dynasty\",\n  \"dyslexia\",\n  \"dyslexic\",\n  \"each\",\n  \"eagle\",\n  \"earache\",\n  \"eardrum\",\n  \"earflap\",\n  \"earful\",\n  \"earlobe\",\n  \"early\",\n  \"earmark\",\n  \"earmuff\",\n  \"earphone\",\n  \"earpiece\",\n  \"earplugs\",\n  \"earring\",\n  \"earshot\",\n  \"earthen\",\n  \"earthlike\",\n  \"earthling\",\n  \"earthly\",\n  \"earthworm\",\n  \"earthy\",\n  \"earwig\",\n  \"easeful\",\n  \"easel\",\n  \"easiest\",\n  \"easily\",\n  \"easiness\",\n  \"easing\",\n  \"eastbound\",\n  \"eastcoast\",\n  \"easter\",\n  \"eastward\",\n  \"eatable\",\n  \"eaten\",\n  \"eatery\",\n  \"eating\",\n  \"eats\",\n  \"ebay\",\n  \"ebony\",\n  \"ebook\",\n  \"ecard\",\n  \"eccentric\",\n  \"echo\",\n  \"eclair\",\n  \"eclipse\",\n  \"ecologist\",\n  \"ecology\",\n  \"economic\",\n  \"economist\",\n  \"economy\",\n  \"ecosphere\",\n  \"ecosystem\",\n  \"edge\",\n  \"edginess\",\n  \"edging\",\n  \"edgy\",\n  \"edition\",\n  \"editor\",\n  \"educated\",\n  \"education\",\n  \"educator\",\n  \"eel\",\n  \"effective\",\n  \"effects\",\n  \"efficient\",\n  \"effort\",\n  \"eggbeater\",\n  \"egging\",\n  \"eggnog\",\n  \"eggplant\",\n  \"eggshell\",\n  \"egomaniac\",\n  \"egotism\",\n  \"egotistic\",\n  \"either\",\n  \"eject\",\n  \"elaborate\",\n  \"elastic\",\n  \"elated\",\n  \"elbow\",\n  \"eldercare\",\n  \"elderly\",\n  \"eldest\",\n  \"electable\",\n  \"election\",\n  \"elective\",\n  \"elephant\",\n  \"elevate\",\n  \"elevating\",\n  \"elevation\",\n  \"elevator\",\n  \"eleven\",\n  \"elf\",\n  \"eligible\",\n  \"eligibly\",\n  \"eliminate\",\n  \"elite\",\n  \"elitism\",\n  \"elixir\",\n  \"elk\",\n  \"ellipse\",\n  \"elliptic\",\n  \"elm\",\n  \"elongated\",\n  \"elope\",\n  \"eloquence\",\n  \"eloquent\",\n  \"elsewhere\",\n  \"elude\",\n  \"elusive\",\n  \"elves\",\n  \"email\",\n  \"embargo\",\n  \"embark\",\n  \"embassy\",\n  \"embattled\",\n  \"embellish\",\n  \"ember\",\n  \"embezzle\",\n  \"emblaze\",\n  \"emblem\",\n  \"embody\",\n  \"embolism\",\n  \"emboss\",\n  \"embroider\",\n  \"emcee\",\n  \"emerald\",\n  \"emergency\",\n  \"emission\",\n  \"emit\",\n  \"emote\",\n  \"emoticon\",\n  \"emotion\",\n  \"empathic\",\n  \"empathy\",\n  \"emperor\",\n  \"emphases\",\n  \"emphasis\",\n  \"emphasize\",\n  \"emphatic\",\n  \"empirical\",\n  \"employed\",\n  \"employee\",\n  \"employer\",\n  \"emporium\",\n  \"empower\",\n  \"emptier\",\n  \"emptiness\",\n  \"empty\",\n  \"emu\",\n  \"enable\",\n  \"enactment\",\n  \"enamel\",\n  \"enchanted\",\n  \"enchilada\",\n  \"encircle\",\n  \"enclose\",\n  \"enclosure\",\n  \"encode\",\n  \"encore\",\n  \"encounter\",\n  \"encourage\",\n  \"encroach\",\n  \"encrust\",\n  \"encrypt\",\n  \"endanger\",\n  \"endeared\",\n  \"endearing\",\n  \"ended\",\n  \"ending\",\n  \"endless\",\n  \"endnote\",\n  \"endocrine\",\n  \"endorphin\",\n  \"endorse\",\n  \"endowment\",\n  \"endpoint\",\n  \"endurable\",\n  \"endurance\",\n  \"enduring\",\n  \"energetic\",\n  \"energize\",\n  \"energy\",\n  \"enforced\",\n  \"enforcer\",\n  \"engaged\",\n  \"engaging\",\n  \"engine\",\n  \"engorge\",\n  \"engraved\",\n  \"engraver\",\n  \"engraving\",\n  \"engross\",\n  \"engulf\",\n  \"enhance\",\n  \"enigmatic\",\n  \"enjoyable\",\n  \"enjoyably\",\n  \"enjoyer\",\n  \"enjoying\",\n  \"enjoyment\",\n  \"enlarged\",\n  \"enlarging\",\n  \"enlighten\",\n  \"enlisted\",\n  \"enquirer\",\n  \"enrage\",\n  \"enrich\",\n  \"enroll\",\n  \"enslave\",\n  \"ensnare\",\n  \"ensure\",\n  \"entail\",\n  \"entangled\",\n  \"entering\",\n  \"entertain\",\n  \"enticing\",\n  \"entire\",\n  \"entitle\",\n  \"entity\",\n  \"entomb\",\n  \"entourage\",\n  \"entrap\",\n  \"entree\",\n  \"entrench\",\n  \"entrust\",\n  \"entryway\",\n  \"entwine\",\n  \"enunciate\",\n  \"envelope\",\n  \"enviable\",\n  \"enviably\",\n  \"envious\",\n  \"envision\",\n  \"envoy\",\n  \"envy\",\n  \"enzyme\",\n  \"epic\",\n  \"epidemic\",\n  \"epidermal\",\n  \"epidermis\",\n  \"epidural\",\n  \"epilepsy\",\n  \"epileptic\",\n  \"epilogue\",\n  \"epiphany\",\n  \"episode\",\n  \"equal\",\n  \"equate\",\n  \"equation\",\n  \"equator\",\n  \"equinox\",\n  \"equipment\",\n  \"equity\",\n  \"equivocal\",\n  \"eradicate\",\n  \"erasable\",\n  \"erased\",\n  \"eraser\",\n  \"erasure\",\n  \"ergonomic\",\n  \"errand\",\n  \"errant\",\n  \"erratic\",\n  \"error\",\n  \"erupt\",\n  \"escalate\",\n  \"escalator\",\n  \"escapable\",\n  \"escapade\",\n  \"escapist\",\n  \"escargot\",\n  \"eskimo\",\n  \"esophagus\",\n  \"espionage\",\n  \"espresso\",\n  \"esquire\",\n  \"essay\",\n  \"essence\",\n  \"essential\",\n  \"establish\",\n  \"estate\",\n  \"esteemed\",\n  \"estimate\",\n  \"estimator\",\n  \"estranged\",\n  \"estrogen\",\n  \"etching\",\n  \"eternal\",\n  \"eternity\",\n  \"ethanol\",\n  \"ether\",\n  \"ethically\",\n  \"ethics\",\n  \"euphemism\",\n  \"evacuate\",\n  \"evacuee\",\n  \"evade\",\n  \"evaluate\",\n  \"evaluator\",\n  \"evaporate\",\n  \"evasion\",\n  \"evasive\",\n  \"even\",\n  \"everglade\",\n  \"evergreen\",\n  \"everybody\",\n  \"everyday\",\n  \"everyone\",\n  \"evict\",\n  \"evidence\",\n  \"evident\",\n  \"evil\",\n  \"evoke\",\n  \"evolution\",\n  \"evolve\",\n  \"exact\",\n  \"exalted\",\n  \"example\",\n  \"excavate\",\n  \"excavator\",\n  \"exceeding\",\n  \"exception\",\n  \"excess\",\n  \"exchange\",\n  \"excitable\",\n  \"exciting\",\n  \"exclaim\",\n  \"exclude\",\n  \"excluding\",\n  \"exclusion\",\n  \"exclusive\",\n  \"excretion\",\n  \"excretory\",\n  \"excursion\",\n  \"excusable\",\n  \"excusably\",\n  \"excuse\",\n  \"exemplary\",\n  \"exemplify\",\n  \"exemption\",\n  \"exerciser\",\n  \"exert\",\n  \"exes\",\n  \"exfoliate\",\n  \"exhale\",\n  \"exhaust\",\n  \"exhume\",\n  \"exile\",\n  \"existing\",\n  \"exit\",\n  \"exodus\",\n  \"exonerate\",\n  \"exorcism\",\n  \"exorcist\",\n  \"expand\",\n  \"expanse\",\n  \"expansion\",\n  \"expansive\",\n  \"expectant\",\n  \"expedited\",\n  \"expediter\",\n  \"expel\",\n  \"expend\",\n  \"expenses\",\n  \"expensive\",\n  \"expert\",\n  \"expire\",\n  \"expiring\",\n  \"explain\",\n  \"expletive\",\n  \"explicit\",\n  \"explode\",\n  \"exploit\",\n  \"explore\",\n  \"exploring\",\n  \"exponent\",\n  \"exporter\",\n  \"exposable\",\n  \"expose\",\n  \"exposure\",\n  \"express\",\n  \"expulsion\",\n  \"exquisite\",\n  \"extended\",\n  \"extending\",\n  \"extent\",\n  \"extenuate\",\n  \"exterior\",\n  \"external\",\n  \"extinct\",\n  \"extortion\",\n  \"extradite\",\n  \"extras\",\n  \"extrovert\",\n  \"extrude\",\n  \"extruding\",\n  \"exuberant\",\n  \"fable\",\n  \"fabric\",\n  \"fabulous\",\n  \"facebook\",\n  \"facecloth\",\n  \"facedown\",\n  \"faceless\",\n  \"facelift\",\n  \"faceplate\",\n  \"faceted\",\n  \"facial\",\n  \"facility\",\n  \"facing\",\n  \"facsimile\",\n  \"faction\",\n  \"factoid\",\n  \"factor\",\n  \"factsheet\",\n  \"factual\",\n  \"faculty\",\n  \"fade\",\n  \"fading\",\n  \"failing\",\n  \"falcon\",\n  \"fall\",\n  \"false\",\n  \"falsify\",\n  \"fame\",\n  \"familiar\",\n  \"family\",\n  \"famine\",\n  \"famished\",\n  \"fanatic\",\n  \"fancied\",\n  \"fanciness\",\n  \"fancy\",\n  \"fanfare\",\n  \"fang\",\n  \"fanning\",\n  \"fantasize\",\n  \"fantastic\",\n  \"fantasy\",\n  \"fascism\",\n  \"fastball\",\n  \"faster\",\n  \"fasting\",\n  \"fastness\",\n  \"faucet\",\n  \"favorable\",\n  \"favorably\",\n  \"favored\",\n  \"favoring\",\n  \"favorite\",\n  \"fax\",\n  \"feast\",\n  \"federal\",\n  \"fedora\",\n  \"feeble\",\n  \"feed\",\n  \"feel\",\n  \"feisty\",\n  \"feline\",\n  \"felt-tip\",\n  \"feminine\",\n  \"feminism\",\n  \"feminist\",\n  \"feminize\",\n  \"femur\",\n  \"fence\",\n  \"fencing\",\n  \"fender\",\n  \"ferment\",\n  \"fernlike\",\n  \"ferocious\",\n  \"ferocity\",\n  \"ferret\",\n  \"ferris\",\n  \"ferry\",\n  \"fervor\",\n  \"fester\",\n  \"festival\",\n  \"festive\",\n  \"festivity\",\n  \"fetal\",\n  \"fetch\",\n  \"fever\",\n  \"fiber\",\n  \"fiction\",\n  \"fiddle\",\n  \"fiddling\",\n  \"fidelity\",\n  \"fidgeting\",\n  \"fidgety\",\n  \"fifteen\",\n  \"fifth\",\n  \"fiftieth\",\n  \"fifty\",\n  \"figment\",\n  \"figure\",\n  \"figurine\",\n  \"filing\",\n  \"filled\",\n  \"filler\",\n  \"filling\",\n  \"film\",\n  \"filter\",\n  \"filth\",\n  \"filtrate\",\n  \"finale\",\n  \"finalist\",\n  \"finalize\",\n  \"finally\",\n  \"finance\",\n  \"financial\",\n  \"finch\",\n  \"fineness\",\n  \"finer\",\n  \"finicky\",\n  \"finished\",\n  \"finisher\",\n  \"finishing\",\n  \"finite\",\n  \"finless\",\n  \"finlike\",\n  \"fiscally\",\n  \"fit\",\n  \"five\",\n  \"flaccid\",\n  \"flagman\",\n  \"flagpole\",\n  \"flagship\",\n  \"flagstick\",\n  \"flagstone\",\n  \"flail\",\n  \"flakily\",\n  \"flaky\",\n  \"flame\",\n  \"flammable\",\n  \"flanked\",\n  \"flanking\",\n  \"flannels\",\n  \"flap\",\n  \"flaring\",\n  \"flashback\",\n  \"flashbulb\",\n  \"flashcard\",\n  \"flashily\",\n  \"flashing\",\n  \"flashy\",\n  \"flask\",\n  \"flatbed\",\n  \"flatfoot\",\n  \"flatly\",\n  \"flatness\",\n  \"flatten\",\n  \"flattered\",\n  \"flatterer\",\n  \"flattery\",\n  \"flattop\",\n  \"flatware\",\n  \"flatworm\",\n  \"flavored\",\n  \"flavorful\",\n  \"flavoring\",\n  \"flaxseed\",\n  \"fled\",\n  \"fleshed\",\n  \"fleshy\",\n  \"flick\",\n  \"flier\",\n  \"flight\",\n  \"flinch\",\n  \"fling\",\n  \"flint\",\n  \"flip\",\n  \"flirt\",\n  \"float\",\n  \"flock\",\n  \"flogging\",\n  \"flop\",\n  \"floral\",\n  \"florist\",\n  \"floss\",\n  \"flounder\",\n  \"flyable\",\n  \"flyaway\",\n  \"flyer\",\n  \"flying\",\n  \"flyover\",\n  \"flypaper\",\n  \"foam\",\n  \"foe\",\n  \"fog\",\n  \"foil\",\n  \"folic\",\n  \"folk\",\n  \"follicle\",\n  \"follow\",\n  \"fondling\",\n  \"fondly\",\n  \"fondness\",\n  \"fondue\",\n  \"font\",\n  \"food\",\n  \"fool\",\n  \"footage\",\n  \"football\",\n  \"footbath\",\n  \"footboard\",\n  \"footer\",\n  \"footgear\",\n  \"foothill\",\n  \"foothold\",\n  \"footing\",\n  \"footless\",\n  \"footman\",\n  \"footnote\",\n  \"footpad\",\n  \"footpath\",\n  \"footprint\",\n  \"footrest\",\n  \"footsie\",\n  \"footsore\",\n  \"footwear\",\n  \"footwork\",\n  \"fossil\",\n  \"foster\",\n  \"founder\",\n  \"founding\",\n  \"fountain\",\n  \"fox\",\n  \"foyer\",\n  \"fraction\",\n  \"fracture\",\n  \"fragile\",\n  \"fragility\",\n  \"fragment\",\n  \"fragrance\",\n  \"fragrant\",\n  \"frail\",\n  \"frame\",\n  \"framing\",\n  \"frantic\",\n  \"fraternal\",\n  \"frayed\",\n  \"fraying\",\n  \"frays\",\n  \"freckled\",\n  \"freckles\",\n  \"freebase\",\n  \"freebee\",\n  \"freebie\",\n  \"freedom\",\n  \"freefall\",\n  \"freehand\",\n  \"freeing\",\n  \"freeload\",\n  \"freely\",\n  \"freemason\",\n  \"freeness\",\n  \"freestyle\",\n  \"freeware\",\n  \"freeway\",\n  \"freewill\",\n  \"freezable\",\n  \"freezing\",\n  \"freight\",\n  \"french\",\n  \"frenzied\",\n  \"frenzy\",\n  \"frequency\",\n  \"frequent\",\n  \"fresh\",\n  \"fretful\",\n  \"fretted\",\n  \"friction\",\n  \"friday\",\n  \"fridge\",\n  \"fried\",\n  \"friend\",\n  \"frighten\",\n  \"frightful\",\n  \"frigidity\",\n  \"frigidly\",\n  \"frill\",\n  \"fringe\",\n  \"frisbee\",\n  \"frisk\",\n  \"fritter\",\n  \"frivolous\",\n  \"frolic\",\n  \"from\",\n  \"front\",\n  \"frostbite\",\n  \"frosted\",\n  \"frostily\",\n  \"frosting\",\n  \"frostlike\",\n  \"frosty\",\n  \"froth\",\n  \"frown\",\n  \"frozen\",\n  \"fructose\",\n  \"frugality\",\n  \"frugally\",\n  \"fruit\",\n  \"frustrate\",\n  \"frying\",\n  \"gab\",\n  \"gaffe\",\n  \"gag\",\n  \"gainfully\",\n  \"gaining\",\n  \"gains\",\n  \"gala\",\n  \"gallantly\",\n  \"galleria\",\n  \"gallery\",\n  \"galley\",\n  \"gallon\",\n  \"gallows\",\n  \"gallstone\",\n  \"galore\",\n  \"galvanize\",\n  \"gambling\",\n  \"game\",\n  \"gaming\",\n  \"gamma\",\n  \"gander\",\n  \"gangly\",\n  \"gangrene\",\n  \"gangway\",\n  \"gap\",\n  \"garage\",\n  \"garbage\",\n  \"garden\",\n  \"gargle\",\n  \"garland\",\n  \"garlic\",\n  \"garment\",\n  \"garnet\",\n  \"garnish\",\n  \"garter\",\n  \"gas\",\n  \"gatherer\",\n  \"gathering\",\n  \"gating\",\n  \"gauging\",\n  \"gauntlet\",\n  \"gauze\",\n  \"gave\",\n  \"gawk\",\n  \"gazing\",\n  \"gear\",\n  \"gecko\",\n  \"geek\",\n  \"geiger\",\n  \"gem\",\n  \"gender\",\n  \"generic\",\n  \"generous\",\n  \"genetics\",\n  \"genre\",\n  \"gentile\",\n  \"gentleman\",\n  \"gently\",\n  \"gents\",\n  \"geography\",\n  \"geologic\",\n  \"geologist\",\n  \"geology\",\n  \"geometric\",\n  \"geometry\",\n  \"geranium\",\n  \"gerbil\",\n  \"geriatric\",\n  \"germicide\",\n  \"germinate\",\n  \"germless\",\n  \"germproof\",\n  \"gestate\",\n  \"gestation\",\n  \"gesture\",\n  \"getaway\",\n  \"getting\",\n  \"getup\",\n  \"giant\",\n  \"gibberish\",\n  \"giblet\",\n  \"giddily\",\n  \"giddiness\",\n  \"giddy\",\n  \"gift\",\n  \"gigabyte\",\n  \"gigahertz\",\n  \"gigantic\",\n  \"giggle\",\n  \"giggling\",\n  \"giggly\",\n  \"gigolo\",\n  \"gilled\",\n  \"gills\",\n  \"gimmick\",\n  \"girdle\",\n  \"giveaway\",\n  \"given\",\n  \"giver\",\n  \"giving\",\n  \"gizmo\",\n  \"gizzard\",\n  \"glacial\",\n  \"glacier\",\n  \"glade\",\n  \"gladiator\",\n  \"gladly\",\n  \"glamorous\",\n  \"glamour\",\n  \"glance\",\n  \"glancing\",\n  \"glandular\",\n  \"glare\",\n  \"glaring\",\n  \"glass\",\n  \"glaucoma\",\n  \"glazing\",\n  \"gleaming\",\n  \"gleeful\",\n  \"glider\",\n  \"gliding\",\n  \"glimmer\",\n  \"glimpse\",\n  \"glisten\",\n  \"glitch\",\n  \"glitter\",\n  \"glitzy\",\n  \"gloater\",\n  \"gloating\",\n  \"gloomily\",\n  \"gloomy\",\n  \"glorified\",\n  \"glorifier\",\n  \"glorify\",\n  \"glorious\",\n  \"glory\",\n  \"gloss\",\n  \"glove\",\n  \"glowing\",\n  \"glowworm\",\n  \"glucose\",\n  \"glue\",\n  \"gluten\",\n  \"glutinous\",\n  \"glutton\",\n  \"gnarly\",\n  \"gnat\",\n  \"goal\",\n  \"goatskin\",\n  \"goes\",\n  \"goggles\",\n  \"going\",\n  \"goldfish\",\n  \"goldmine\",\n  \"goldsmith\",\n  \"golf\",\n  \"goliath\",\n  \"gonad\",\n  \"gondola\",\n  \"gone\",\n  \"gong\",\n  \"good\",\n  \"gooey\",\n  \"goofball\",\n  \"goofiness\",\n  \"goofy\",\n  \"google\",\n  \"goon\",\n  \"gopher\",\n  \"gore\",\n  \"gorged\",\n  \"gorgeous\",\n  \"gory\",\n  \"gosling\",\n  \"gossip\",\n  \"gothic\",\n  \"gotten\",\n  \"gout\",\n  \"gown\",\n  \"grab\",\n  \"graceful\",\n  \"graceless\",\n  \"gracious\",\n  \"gradation\",\n  \"graded\",\n  \"grader\",\n  \"gradient\",\n  \"grading\",\n  \"gradually\",\n  \"graduate\",\n  \"graffiti\",\n  \"grafted\",\n  \"grafting\",\n  \"grain\",\n  \"granddad\",\n  \"grandkid\",\n  \"grandly\",\n  \"grandma\",\n  \"grandpa\",\n  \"grandson\",\n  \"granite\",\n  \"granny\",\n  \"granola\",\n  \"grant\",\n  \"granular\",\n  \"grape\",\n  \"graph\",\n  \"grapple\",\n  \"grappling\",\n  \"grasp\",\n  \"grass\",\n  \"gratified\",\n  \"gratify\",\n  \"grating\",\n  \"gratitude\",\n  \"gratuity\",\n  \"gravel\",\n  \"graveness\",\n  \"graves\",\n  \"graveyard\",\n  \"gravitate\",\n  \"gravity\",\n  \"gravy\",\n  \"gray\",\n  \"grazing\",\n  \"greasily\",\n  \"greedily\",\n  \"greedless\",\n  \"greedy\",\n  \"green\",\n  \"greeter\",\n  \"greeting\",\n  \"grew\",\n  \"greyhound\",\n  \"grid\",\n  \"grief\",\n  \"grievance\",\n  \"grieving\",\n  \"grievous\",\n  \"grill\",\n  \"grimace\",\n  \"grimacing\",\n  \"grime\",\n  \"griminess\",\n  \"grimy\",\n  \"grinch\",\n  \"grinning\",\n  \"grip\",\n  \"gristle\",\n  \"grit\",\n  \"groggily\",\n  \"groggy\",\n  \"groin\",\n  \"groom\",\n  \"groove\",\n  \"grooving\",\n  \"groovy\",\n  \"grope\",\n  \"ground\",\n  \"grouped\",\n  \"grout\",\n  \"grove\",\n  \"grower\",\n  \"growing\",\n  \"growl\",\n  \"grub\",\n  \"grudge\",\n  \"grudging\",\n  \"grueling\",\n  \"gruffly\",\n  \"grumble\",\n  \"grumbling\",\n  \"grumbly\",\n  \"grumpily\",\n  \"grunge\",\n  \"grunt\",\n  \"guacamole\",\n  \"guidable\",\n  \"guidance\",\n  \"guide\",\n  \"guiding\",\n  \"guileless\",\n  \"guise\",\n  \"gulf\",\n  \"gullible\",\n  \"gully\",\n  \"gulp\",\n  \"gumball\",\n  \"gumdrop\",\n  \"gumminess\",\n  \"gumming\",\n  \"gummy\",\n  \"gurgle\",\n  \"gurgling\",\n  \"guru\",\n  \"gush\",\n  \"gusto\",\n  \"gusty\",\n  \"gutless\",\n  \"guts\",\n  \"gutter\",\n  \"guy\",\n  \"guzzler\",\n  \"gyration\",\n  \"habitable\",\n  \"habitant\",\n  \"habitat\",\n  \"habitual\",\n  \"hacked\",\n  \"hacker\",\n  \"hacking\",\n  \"hacksaw\",\n  \"had\",\n  \"haggler\",\n  \"haiku\",\n  \"half\",\n  \"halogen\",\n  \"halt\",\n  \"halved\",\n  \"halves\",\n  \"hamburger\",\n  \"hamlet\",\n  \"hammock\",\n  \"hamper\",\n  \"hamster\",\n  \"hamstring\",\n  \"handbag\",\n  \"handball\",\n  \"handbook\",\n  \"handbrake\",\n  \"handcart\",\n  \"handclap\",\n  \"handclasp\",\n  \"handcraft\",\n  \"handcuff\",\n  \"handed\",\n  \"handful\",\n  \"handgrip\",\n  \"handgun\",\n  \"handheld\",\n  \"handiness\",\n  \"handiwork\",\n  \"handlebar\",\n  \"handled\",\n  \"handler\",\n  \"handling\",\n  \"handmade\",\n  \"handoff\",\n  \"handpick\",\n  \"handprint\",\n  \"handrail\",\n  \"handsaw\",\n  \"handset\",\n  \"handsfree\",\n  \"handshake\",\n  \"handstand\",\n  \"handwash\",\n  \"handwork\",\n  \"handwoven\",\n  \"handwrite\",\n  \"handyman\",\n  \"hangnail\",\n  \"hangout\",\n  \"hangover\",\n  \"hangup\",\n  \"hankering\",\n  \"hankie\",\n  \"hanky\",\n  \"haphazard\",\n  \"happening\",\n  \"happier\",\n  \"happiest\",\n  \"happily\",\n  \"happiness\",\n  \"happy\",\n  \"harbor\",\n  \"hardcopy\",\n  \"hardcore\",\n  \"hardcover\",\n  \"harddisk\",\n  \"hardened\",\n  \"hardener\",\n  \"hardening\",\n  \"hardhat\",\n  \"hardhead\",\n  \"hardiness\",\n  \"hardly\",\n  \"hardness\",\n  \"hardship\",\n  \"hardware\",\n  \"hardwired\",\n  \"hardwood\",\n  \"hardy\",\n  \"harmful\",\n  \"harmless\",\n  \"harmonica\",\n  \"harmonics\",\n  \"harmonize\",\n  \"harmony\",\n  \"harness\",\n  \"harpist\",\n  \"harsh\",\n  \"harvest\",\n  \"hash\",\n  \"hassle\",\n  \"haste\",\n  \"hastily\",\n  \"hastiness\",\n  \"hasty\",\n  \"hatbox\",\n  \"hatchback\",\n  \"hatchery\",\n  \"hatchet\",\n  \"hatching\",\n  \"hatchling\",\n  \"hate\",\n  \"hatless\",\n  \"hatred\",\n  \"haunt\",\n  \"haven\",\n  \"hazard\",\n  \"hazelnut\",\n  \"hazily\",\n  \"haziness\",\n  \"hazing\",\n  \"hazy\",\n  \"headache\",\n  \"headband\",\n  \"headboard\",\n  \"headcount\",\n  \"headdress\",\n  \"headed\",\n  \"header\",\n  \"headfirst\",\n  \"headgear\",\n  \"heading\",\n  \"headlamp\",\n  \"headless\",\n  \"headlock\",\n  \"headphone\",\n  \"headpiece\",\n  \"headrest\",\n  \"headroom\",\n  \"headscarf\",\n  \"headset\",\n  \"headsman\",\n  \"headstand\",\n  \"headstone\",\n  \"headway\",\n  \"headwear\",\n  \"heap\",\n  \"heat\",\n  \"heave\",\n  \"heavily\",\n  \"heaviness\",\n  \"heaving\",\n  \"hedge\",\n  \"hedging\",\n  \"heftiness\",\n  \"hefty\",\n  \"helium\",\n  \"helmet\",\n  \"helper\",\n  \"helpful\",\n  \"helping\",\n  \"helpless\",\n  \"helpline\",\n  \"hemlock\",\n  \"hemstitch\",\n  \"hence\",\n  \"henchman\",\n  \"henna\",\n  \"herald\",\n  \"herbal\",\n  \"herbicide\",\n  \"herbs\",\n  \"heritage\",\n  \"hermit\",\n  \"heroics\",\n  \"heroism\",\n  \"herring\",\n  \"herself\",\n  \"hertz\",\n  \"hesitancy\",\n  \"hesitant\",\n  \"hesitate\",\n  \"hexagon\",\n  \"hexagram\",\n  \"hubcap\",\n  \"huddle\",\n  \"huddling\",\n  \"huff\",\n  \"hug\",\n  \"hula\",\n  \"hulk\",\n  \"hull\",\n  \"human\",\n  \"humble\",\n  \"humbling\",\n  \"humbly\",\n  \"humid\",\n  \"humiliate\",\n  \"humility\",\n  \"humming\",\n  \"hummus\",\n  \"humongous\",\n  \"humorist\",\n  \"humorless\",\n  \"humorous\",\n  \"humpback\",\n  \"humped\",\n  \"humvee\",\n  \"hunchback\",\n  \"hundredth\",\n  \"hunger\",\n  \"hungrily\",\n  \"hungry\",\n  \"hunk\",\n  \"hunter\",\n  \"hunting\",\n  \"huntress\",\n  \"huntsman\",\n  \"hurdle\",\n  \"hurled\",\n  \"hurler\",\n  \"hurling\",\n  \"hurray\",\n  \"hurricane\",\n  \"hurried\",\n  \"hurry\",\n  \"hurt\",\n  \"husband\",\n  \"hush\",\n  \"husked\",\n  \"huskiness\",\n  \"hut\",\n  \"hybrid\",\n  \"hydrant\",\n  \"hydrated\",\n  \"hydration\",\n  \"hydrogen\",\n  \"hydroxide\",\n  \"hyperlink\",\n  \"hypertext\",\n  \"hyphen\",\n  \"hypnoses\",\n  \"hypnosis\",\n  \"hypnotic\",\n  \"hypnotism\",\n  \"hypnotist\",\n  \"hypnotize\",\n  \"hypocrisy\",\n  \"hypocrite\",\n  \"ibuprofen\",\n  \"ice\",\n  \"iciness\",\n  \"icing\",\n  \"icky\",\n  \"icon\",\n  \"icy\",\n  \"idealism\",\n  \"idealist\",\n  \"idealize\",\n  \"ideally\",\n  \"idealness\",\n  \"identical\",\n  \"identify\",\n  \"identity\",\n  \"ideology\",\n  \"idiocy\",\n  \"idiom\",\n  \"idly\",\n  \"igloo\",\n  \"ignition\",\n  \"ignore\",\n  \"iguana\",\n  \"illicitly\",\n  \"illusion\",\n  \"illusive\",\n  \"image\",\n  \"imaginary\",\n  \"imagines\",\n  \"imaging\",\n  \"imbecile\",\n  \"imitate\",\n  \"imitation\",\n  \"immature\",\n  \"immerse\",\n  \"immersion\",\n  \"imminent\",\n  \"immobile\",\n  \"immodest\",\n  \"immorally\",\n  \"immortal\",\n  \"immovable\",\n  \"immovably\",\n  \"immunity\",\n  \"immunize\",\n  \"impaired\",\n  \"impale\",\n  \"impart\",\n  \"impatient\",\n  \"impeach\",\n  \"impeding\",\n  \"impending\",\n  \"imperfect\",\n  \"imperial\",\n  \"impish\",\n  \"implant\",\n  \"implement\",\n  \"implicate\",\n  \"implicit\",\n  \"implode\",\n  \"implosion\",\n  \"implosive\",\n  \"imply\",\n  \"impolite\",\n  \"important\",\n  \"importer\",\n  \"impose\",\n  \"imposing\",\n  \"impotence\",\n  \"impotency\",\n  \"impotent\",\n  \"impound\",\n  \"imprecise\",\n  \"imprint\",\n  \"imprison\",\n  \"impromptu\",\n  \"improper\",\n  \"improve\",\n  \"improving\",\n  \"improvise\",\n  \"imprudent\",\n  \"impulse\",\n  \"impulsive\",\n  \"impure\",\n  \"impurity\",\n  \"iodine\",\n  \"iodize\",\n  \"ion\",\n  \"ipad\",\n  \"iphone\",\n  \"ipod\",\n  \"irate\",\n  \"irk\",\n  \"iron\",\n  \"irregular\",\n  \"irrigate\",\n  \"irritable\",\n  \"irritably\",\n  \"irritant\",\n  \"irritate\",\n  \"islamic\",\n  \"islamist\",\n  \"isolated\",\n  \"isolating\",\n  \"isolation\",\n  \"isotope\",\n  \"issue\",\n  \"issuing\",\n  \"italicize\",\n  \"italics\",\n  \"item\",\n  \"itinerary\",\n  \"itunes\",\n  \"ivory\",\n  \"ivy\",\n  \"jab\",\n  \"jackal\",\n  \"jacket\",\n  \"jackknife\",\n  \"jackpot\",\n  \"jailbird\",\n  \"jailbreak\",\n  \"jailer\",\n  \"jailhouse\",\n  \"jalapeno\",\n  \"jam\",\n  \"janitor\",\n  \"january\",\n  \"jargon\",\n  \"jarring\",\n  \"jasmine\",\n  \"jaundice\",\n  \"jaunt\",\n  \"java\",\n  \"jawed\",\n  \"jawless\",\n  \"jawline\",\n  \"jaws\",\n  \"jaybird\",\n  \"jaywalker\",\n  \"jazz\",\n  \"jeep\",\n  \"jeeringly\",\n  \"jellied\",\n  \"jelly\",\n  \"jersey\",\n  \"jester\",\n  \"jet\",\n  \"jiffy\",\n  \"jigsaw\",\n  \"jimmy\",\n  \"jingle\",\n  \"jingling\",\n  \"jinx\",\n  \"jitters\",\n  \"jittery\",\n  \"job\",\n  \"jockey\",\n  \"jockstrap\",\n  \"jogger\",\n  \"jogging\",\n  \"john\",\n  \"joining\",\n  \"jokester\",\n  \"jokingly\",\n  \"jolliness\",\n  \"jolly\",\n  \"jolt\",\n  \"jot\",\n  \"jovial\",\n  \"joyfully\",\n  \"joylessly\",\n  \"joyous\",\n  \"joyride\",\n  \"joystick\",\n  \"jubilance\",\n  \"jubilant\",\n  \"judge\",\n  \"judgingly\",\n  \"judicial\",\n  \"judiciary\",\n  \"judo\",\n  \"juggle\",\n  \"juggling\",\n  \"jugular\",\n  \"juice\",\n  \"juiciness\",\n  \"juicy\",\n  \"jujitsu\",\n  \"jukebox\",\n  \"july\",\n  \"jumble\",\n  \"jumbo\",\n  \"jump\",\n  \"junction\",\n  \"juncture\",\n  \"june\",\n  \"junior\",\n  \"juniper\",\n  \"junkie\",\n  \"junkman\",\n  \"junkyard\",\n  \"jurist\",\n  \"juror\",\n  \"jury\",\n  \"justice\",\n  \"justifier\",\n  \"justify\",\n  \"justly\",\n  \"justness\",\n  \"juvenile\",\n  \"kabob\",\n  \"kangaroo\",\n  \"karaoke\",\n  \"karate\",\n  \"karma\",\n  \"kebab\",\n  \"keenly\",\n  \"keenness\",\n  \"keep\",\n  \"keg\",\n  \"kelp\",\n  \"kennel\",\n  \"kept\",\n  \"kerchief\",\n  \"kerosene\",\n  \"kettle\",\n  \"kick\",\n  \"kiln\",\n  \"kilobyte\",\n  \"kilogram\",\n  \"kilometer\",\n  \"kilowatt\",\n  \"kilt\",\n  \"kimono\",\n  \"kindle\",\n  \"kindling\",\n  \"kindly\",\n  \"kindness\",\n  \"kindred\",\n  \"kinetic\",\n  \"kinfolk\",\n  \"king\",\n  \"kinship\",\n  \"kinsman\",\n  \"kinswoman\",\n  \"kissable\",\n  \"kisser\",\n  \"kissing\",\n  \"kitchen\",\n  \"kite\",\n  \"kitten\",\n  \"kitty\",\n  \"kiwi\",\n  \"kleenex\",\n  \"knapsack\",\n  \"knee\",\n  \"knelt\",\n  \"knickers\",\n  \"knoll\",\n  \"koala\",\n  \"kooky\",\n  \"kosher\",\n  \"krypton\",\n  \"kudos\",\n  \"kung\",\n  \"labored\",\n  \"laborer\",\n  \"laboring\",\n  \"laborious\",\n  \"labrador\",\n  \"ladder\",\n  \"ladies\",\n  \"ladle\",\n  \"ladybug\",\n  \"ladylike\",\n  \"lagged\",\n  \"lagging\",\n  \"lagoon\",\n  \"lair\",\n  \"lake\",\n  \"lance\",\n  \"landed\",\n  \"landfall\",\n  \"landfill\",\n  \"landing\",\n  \"landlady\",\n  \"landless\",\n  \"landline\",\n  \"landlord\",\n  \"landmark\",\n  \"landmass\",\n  \"landmine\",\n  \"landowner\",\n  \"landscape\",\n  \"landside\",\n  \"landslide\",\n  \"language\",\n  \"lankiness\",\n  \"lanky\",\n  \"lantern\",\n  \"lapdog\",\n  \"lapel\",\n  \"lapped\",\n  \"lapping\",\n  \"laptop\",\n  \"lard\",\n  \"large\",\n  \"lark\",\n  \"lash\",\n  \"lasso\",\n  \"last\",\n  \"latch\",\n  \"late\",\n  \"lather\",\n  \"latitude\",\n  \"latrine\",\n  \"latter\",\n  \"latticed\",\n  \"launch\",\n  \"launder\",\n  \"laundry\",\n  \"laurel\",\n  \"lavender\",\n  \"lavish\",\n  \"laxative\",\n  \"lazily\",\n  \"laziness\",\n  \"lazy\",\n  \"lecturer\",\n  \"left\",\n  \"legacy\",\n  \"legal\",\n  \"legend\",\n  \"legged\",\n  \"leggings\",\n  \"legible\",\n  \"legibly\",\n  \"legislate\",\n  \"lego\",\n  \"legroom\",\n  \"legume\",\n  \"legwarmer\",\n  \"legwork\",\n  \"lemon\",\n  \"lend\",\n  \"length\",\n  \"lens\",\n  \"lent\",\n  \"leotard\",\n  \"lesser\",\n  \"letdown\",\n  \"lethargic\",\n  \"lethargy\",\n  \"letter\",\n  \"lettuce\",\n  \"level\",\n  \"leverage\",\n  \"levers\",\n  \"levitate\",\n  \"levitator\",\n  \"liability\",\n  \"liable\",\n  \"liberty\",\n  \"librarian\",\n  \"library\",\n  \"licking\",\n  \"licorice\",\n  \"lid\",\n  \"life\",\n  \"lifter\",\n  \"lifting\",\n  \"liftoff\",\n  \"ligament\",\n  \"likely\",\n  \"likeness\",\n  \"likewise\",\n  \"liking\",\n  \"lilac\",\n  \"lilly\",\n  \"lily\",\n  \"limb\",\n  \"limeade\",\n  \"limelight\",\n  \"limes\",\n  \"limit\",\n  \"limping\",\n  \"limpness\",\n  \"line\",\n  \"lingo\",\n  \"linguini\",\n  \"linguist\",\n  \"lining\",\n  \"linked\",\n  \"linoleum\",\n  \"linseed\",\n  \"lint\",\n  \"lion\",\n  \"lip\",\n  \"liquefy\",\n  \"liqueur\",\n  \"liquid\",\n  \"lisp\",\n  \"list\",\n  \"litigate\",\n  \"litigator\",\n  \"litmus\",\n  \"litter\",\n  \"little\",\n  \"livable\",\n  \"lived\",\n  \"lively\",\n  \"liver\",\n  \"livestock\",\n  \"lividly\",\n  \"living\",\n  \"lizard\",\n  \"lubricant\",\n  \"lubricate\",\n  \"lucid\",\n  \"luckily\",\n  \"luckiness\",\n  \"luckless\",\n  \"lucrative\",\n  \"ludicrous\",\n  \"lugged\",\n  \"lukewarm\",\n  \"lullaby\",\n  \"lumber\",\n  \"luminance\",\n  \"luminous\",\n  \"lumpiness\",\n  \"lumping\",\n  \"lumpish\",\n  \"lunacy\",\n  \"lunar\",\n  \"lunchbox\",\n  \"luncheon\",\n  \"lunchroom\",\n  \"lunchtime\",\n  \"lung\",\n  \"lurch\",\n  \"lure\",\n  \"luridness\",\n  \"lurk\",\n  \"lushly\",\n  \"lushness\",\n  \"luster\",\n  \"lustfully\",\n  \"lustily\",\n  \"lustiness\",\n  \"lustrous\",\n  \"lusty\",\n  \"luxurious\",\n  \"luxury\",\n  \"lying\",\n  \"lyrically\",\n  \"lyricism\",\n  \"lyricist\",\n  \"lyrics\",\n  \"macarena\",\n  \"macaroni\",\n  \"macaw\",\n  \"mace\",\n  \"machine\",\n  \"machinist\",\n  \"magazine\",\n  \"magenta\",\n  \"maggot\",\n  \"magical\",\n  \"magician\",\n  \"magma\",\n  \"magnesium\",\n  \"magnetic\",\n  \"magnetism\",\n  \"magnetize\",\n  \"magnifier\",\n  \"magnify\",\n  \"magnitude\",\n  \"magnolia\",\n  \"mahogany\",\n  \"maimed\",\n  \"majestic\",\n  \"majesty\",\n  \"majorette\",\n  \"majority\",\n  \"makeover\",\n  \"maker\",\n  \"makeshift\",\n  \"making\",\n  \"malformed\",\n  \"malt\",\n  \"mama\",\n  \"mammal\",\n  \"mammary\",\n  \"mammogram\",\n  \"manager\",\n  \"managing\",\n  \"manatee\",\n  \"mandarin\",\n  \"mandate\",\n  \"mandatory\",\n  \"mandolin\",\n  \"manger\",\n  \"mangle\",\n  \"mango\",\n  \"mangy\",\n  \"manhandle\",\n  \"manhole\",\n  \"manhood\",\n  \"manhunt\",\n  \"manicotti\",\n  \"manicure\",\n  \"manifesto\",\n  \"manila\",\n  \"mankind\",\n  \"manlike\",\n  \"manliness\",\n  \"manly\",\n  \"manmade\",\n  \"manned\",\n  \"mannish\",\n  \"manor\",\n  \"manpower\",\n  \"mantis\",\n  \"mantra\",\n  \"manual\",\n  \"many\",\n  \"map\",\n  \"marathon\",\n  \"marauding\",\n  \"marbled\",\n  \"marbles\",\n  \"marbling\",\n  \"march\",\n  \"mardi\",\n  \"margarine\",\n  \"margarita\",\n  \"margin\",\n  \"marigold\",\n  \"marina\",\n  \"marine\",\n  \"marital\",\n  \"maritime\",\n  \"marlin\",\n  \"marmalade\",\n  \"maroon\",\n  \"married\",\n  \"marrow\",\n  \"marry\",\n  \"marshland\",\n  \"marshy\",\n  \"marsupial\",\n  \"marvelous\",\n  \"marxism\",\n  \"mascot\",\n  \"masculine\",\n  \"mashed\",\n  \"mashing\",\n  \"massager\",\n  \"masses\",\n  \"massive\",\n  \"mastiff\",\n  \"matador\",\n  \"matchbook\",\n  \"matchbox\",\n  \"matcher\",\n  \"matching\",\n  \"matchless\",\n  \"material\",\n  \"maternal\",\n  \"maternity\",\n  \"math\",\n  \"mating\",\n  \"matriarch\",\n  \"matrimony\",\n  \"matrix\",\n  \"matron\",\n  \"matted\",\n  \"matter\",\n  \"maturely\",\n  \"maturing\",\n  \"maturity\",\n  \"mauve\",\n  \"maverick\",\n  \"maximize\",\n  \"maximum\",\n  \"maybe\",\n  \"mayday\",\n  \"mayflower\",\n  \"moaner\",\n  \"moaning\",\n  \"mobile\",\n  \"mobility\",\n  \"mobilize\",\n  \"mobster\",\n  \"mocha\",\n  \"mocker\",\n  \"mockup\",\n  \"modified\",\n  \"modify\",\n  \"modular\",\n  \"modulator\",\n  \"module\",\n  \"moisten\",\n  \"moistness\",\n  \"moisture\",\n  \"molar\",\n  \"molasses\",\n  \"mold\",\n  \"molecular\",\n  \"molecule\",\n  \"molehill\",\n  \"mollusk\",\n  \"mom\",\n  \"monastery\",\n  \"monday\",\n  \"monetary\",\n  \"monetize\",\n  \"moneybags\",\n  \"moneyless\",\n  \"moneywise\",\n  \"mongoose\",\n  \"mongrel\",\n  \"monitor\",\n  \"monkhood\",\n  \"monogamy\",\n  \"monogram\",\n  \"monologue\",\n  \"monopoly\",\n  \"monorail\",\n  \"monotone\",\n  \"monotype\",\n  \"monoxide\",\n  \"monsieur\",\n  \"monsoon\",\n  \"monstrous\",\n  \"monthly\",\n  \"monument\",\n  \"moocher\",\n  \"moodiness\",\n  \"moody\",\n  \"mooing\",\n  \"moonbeam\",\n  \"mooned\",\n  \"moonlight\",\n  \"moonlike\",\n  \"moonlit\",\n  \"moonrise\",\n  \"moonscape\",\n  \"moonshine\",\n  \"moonstone\",\n  \"moonwalk\",\n  \"mop\",\n  \"morale\",\n  \"morality\",\n  \"morally\",\n  \"morbidity\",\n  \"morbidly\",\n  \"morphine\",\n  \"morphing\",\n  \"morse\",\n  \"mortality\",\n  \"mortally\",\n  \"mortician\",\n  \"mortified\",\n  \"mortify\",\n  \"mortuary\",\n  \"mosaic\",\n  \"mossy\",\n  \"most\",\n  \"mothball\",\n  \"mothproof\",\n  \"motion\",\n  \"motivate\",\n  \"motivator\",\n  \"motive\",\n  \"motocross\",\n  \"motor\",\n  \"motto\",\n  \"mountable\",\n  \"mountain\",\n  \"mounted\",\n  \"mounting\",\n  \"mourner\",\n  \"mournful\",\n  \"mouse\",\n  \"mousiness\",\n  \"moustache\",\n  \"mousy\",\n  \"mouth\",\n  \"movable\",\n  \"move\",\n  \"movie\",\n  \"moving\",\n  \"mower\",\n  \"mowing\",\n  \"much\",\n  \"muck\",\n  \"mud\",\n  \"mug\",\n  \"mulberry\",\n  \"mulch\",\n  \"mule\",\n  \"mulled\",\n  \"mullets\",\n  \"multiple\",\n  \"multiply\",\n  \"multitask\",\n  \"multitude\",\n  \"mumble\",\n  \"mumbling\",\n  \"mumbo\",\n  \"mummified\",\n  \"mummify\",\n  \"mummy\",\n  \"mumps\",\n  \"munchkin\",\n  \"mundane\",\n  \"municipal\",\n  \"muppet\",\n  \"mural\",\n  \"murkiness\",\n  \"murky\",\n  \"murmuring\",\n  \"muscular\",\n  \"museum\",\n  \"mushily\",\n  \"mushiness\",\n  \"mushroom\",\n  \"mushy\",\n  \"music\",\n  \"musket\",\n  \"muskiness\",\n  \"musky\",\n  \"mustang\",\n  \"mustard\",\n  \"muster\",\n  \"mustiness\",\n  \"musty\",\n  \"mutable\",\n  \"mutate\",\n  \"mutation\",\n  \"mute\",\n  \"mutilated\",\n  \"mutilator\",\n  \"mutiny\",\n  \"mutt\",\n  \"mutual\",\n  \"muzzle\",\n  \"myself\",\n  \"myspace\",\n  \"mystified\",\n  \"mystify\",\n  \"myth\",\n  \"nacho\",\n  \"nag\",\n  \"nail\",\n  \"name\",\n  \"naming\",\n  \"nanny\",\n  \"nanometer\",\n  \"nape\",\n  \"napkin\",\n  \"napped\",\n  \"napping\",\n  \"nappy\",\n  \"narrow\",\n  \"nastily\",\n  \"nastiness\",\n  \"national\",\n  \"native\",\n  \"nativity\",\n  \"natural\",\n  \"nature\",\n  \"naturist\",\n  \"nautical\",\n  \"navigate\",\n  \"navigator\",\n  \"navy\",\n  \"nearby\",\n  \"nearest\",\n  \"nearly\",\n  \"nearness\",\n  \"neatly\",\n  \"neatness\",\n  \"nebula\",\n  \"nebulizer\",\n  \"nectar\",\n  \"negate\",\n  \"negation\",\n  \"negative\",\n  \"neglector\",\n  \"negligee\",\n  \"negligent\",\n  \"negotiate\",\n  \"nemeses\",\n  \"nemesis\",\n  \"neon\",\n  \"nephew\",\n  \"nerd\",\n  \"nervous\",\n  \"nervy\",\n  \"nest\",\n  \"net\",\n  \"neurology\",\n  \"neuron\",\n  \"neurosis\",\n  \"neurotic\",\n  \"neuter\",\n  \"neutron\",\n  \"never\",\n  \"next\",\n  \"nibble\",\n  \"nickname\",\n  \"nicotine\",\n  \"niece\",\n  \"nifty\",\n  \"nimble\",\n  \"nimbly\",\n  \"nineteen\",\n  \"ninetieth\",\n  \"ninja\",\n  \"nintendo\",\n  \"ninth\",\n  \"nuclear\",\n  \"nuclei\",\n  \"nucleus\",\n  \"nugget\",\n  \"nullify\",\n  \"number\",\n  \"numbing\",\n  \"numbly\",\n  \"numbness\",\n  \"numeral\",\n  \"numerate\",\n  \"numerator\",\n  \"numeric\",\n  \"numerous\",\n  \"nuptials\",\n  \"nursery\",\n  \"nursing\",\n  \"nurture\",\n  \"nutcase\",\n  \"nutlike\",\n  \"nutmeg\",\n  \"nutrient\",\n  \"nutshell\",\n  \"nuttiness\",\n  \"nutty\",\n  \"nuzzle\",\n  \"nylon\",\n  \"oaf\",\n  \"oak\",\n  \"oasis\",\n  \"oat\",\n  \"obedience\",\n  \"obedient\",\n  \"obituary\",\n  \"object\",\n  \"obligate\",\n  \"obliged\",\n  \"oblivion\",\n  \"oblivious\",\n  \"oblong\",\n  \"obnoxious\",\n  \"oboe\",\n  \"obscure\",\n  \"obscurity\",\n  \"observant\",\n  \"observer\",\n  \"observing\",\n  \"obsessed\",\n  \"obsession\",\n  \"obsessive\",\n  \"obsolete\",\n  \"obstacle\",\n  \"obstinate\",\n  \"obstruct\",\n  \"obtain\",\n  \"obtrusive\",\n  \"obtuse\",\n  \"obvious\",\n  \"occultist\",\n  \"occupancy\",\n  \"occupant\",\n  \"occupier\",\n  \"occupy\",\n  \"ocean\",\n  \"ocelot\",\n  \"octagon\",\n  \"octane\",\n  \"october\",\n  \"octopus\",\n  \"ogle\",\n  \"oil\",\n  \"oink\",\n  \"ointment\",\n  \"okay\",\n  \"old\",\n  \"olive\",\n  \"olympics\",\n  \"omega\",\n  \"omen\",\n  \"ominous\",\n  \"omission\",\n  \"omit\",\n  \"omnivore\",\n  \"onboard\",\n  \"oncoming\",\n  \"ongoing\",\n  \"onion\",\n  \"online\",\n  \"onlooker\",\n  \"only\",\n  \"onscreen\",\n  \"onset\",\n  \"onshore\",\n  \"onslaught\",\n  \"onstage\",\n  \"onto\",\n  \"onward\",\n  \"onyx\",\n  \"oops\",\n  \"ooze\",\n  \"oozy\",\n  \"opacity\",\n  \"opal\",\n  \"open\",\n  \"operable\",\n  \"operate\",\n  \"operating\",\n  \"operation\",\n  \"operative\",\n  \"operator\",\n  \"opium\",\n  \"opossum\",\n  \"opponent\",\n  \"oppose\",\n  \"opposing\",\n  \"opposite\",\n  \"oppressed\",\n  \"oppressor\",\n  \"opt\",\n  \"opulently\",\n  \"osmosis\",\n  \"other\",\n  \"otter\",\n  \"ouch\",\n  \"ought\",\n  \"ounce\",\n  \"outage\",\n  \"outback\",\n  \"outbid\",\n  \"outboard\",\n  \"outbound\",\n  \"outbreak\",\n  \"outburst\",\n  \"outcast\",\n  \"outclass\",\n  \"outcome\",\n  \"outdated\",\n  \"outdoors\",\n  \"outer\",\n  \"outfield\",\n  \"outfit\",\n  \"outflank\",\n  \"outgoing\",\n  \"outgrow\",\n  \"outhouse\",\n  \"outing\",\n  \"outlast\",\n  \"outlet\",\n  \"outline\",\n  \"outlook\",\n  \"outlying\",\n  \"outmatch\",\n  \"outmost\",\n  \"outnumber\",\n  \"outplayed\",\n  \"outpost\",\n  \"outpour\",\n  \"output\",\n  \"outrage\",\n  \"outrank\",\n  \"outreach\",\n  \"outright\",\n  \"outscore\",\n  \"outsell\",\n  \"outshine\",\n  \"outshoot\",\n  \"outsider\",\n  \"outskirts\",\n  \"outsmart\",\n  \"outsource\",\n  \"outspoken\",\n  \"outtakes\",\n  \"outthink\",\n  \"outward\",\n  \"outweigh\",\n  \"outwit\",\n  \"oval\",\n  \"ovary\",\n  \"oven\",\n  \"overact\",\n  \"overall\",\n  \"overarch\",\n  \"overbid\",\n  \"overbill\",\n  \"overbite\",\n  \"overblown\",\n  \"overboard\",\n  \"overbook\",\n  \"overbuilt\",\n  \"overcast\",\n  \"overcoat\",\n  \"overcome\",\n  \"overcook\",\n  \"overcrowd\",\n  \"overdraft\",\n  \"overdrawn\",\n  \"overdress\",\n  \"overdrive\",\n  \"overdue\",\n  \"overeager\",\n  \"overeater\",\n  \"overexert\",\n  \"overfed\",\n  \"overfeed\",\n  \"overfill\",\n  \"overflow\",\n  \"overfull\",\n  \"overgrown\",\n  \"overhand\",\n  \"overhang\",\n  \"overhaul\",\n  \"overhead\",\n  \"overhear\",\n  \"overheat\",\n  \"overhung\",\n  \"overjoyed\",\n  \"overkill\",\n  \"overlabor\",\n  \"overlaid\",\n  \"overlap\",\n  \"overlay\",\n  \"overload\",\n  \"overlook\",\n  \"overlord\",\n  \"overlying\",\n  \"overnight\",\n  \"overpass\",\n  \"overpay\",\n  \"overplant\",\n  \"overplay\",\n  \"overpower\",\n  \"overprice\",\n  \"overrate\",\n  \"overreach\",\n  \"overreact\",\n  \"override\",\n  \"overripe\",\n  \"overrule\",\n  \"overrun\",\n  \"overshoot\",\n  \"overshot\",\n  \"oversight\",\n  \"oversized\",\n  \"oversleep\",\n  \"oversold\",\n  \"overspend\",\n  \"overstate\",\n  \"overstay\",\n  \"overstep\",\n  \"overstock\",\n  \"overstuff\",\n  \"oversweet\",\n  \"overtake\",\n  \"overthrow\",\n  \"overtime\",\n  \"overtly\",\n  \"overtone\",\n  \"overture\",\n  \"overturn\",\n  \"overuse\",\n  \"overvalue\",\n  \"overview\",\n  \"overwrite\",\n  \"owl\",\n  \"oxford\",\n  \"oxidant\",\n  \"oxidation\",\n  \"oxidize\",\n  \"oxidizing\",\n  \"oxygen\",\n  \"oxymoron\",\n  \"oyster\",\n  \"ozone\",\n  \"paced\",\n  \"pacemaker\",\n  \"pacific\",\n  \"pacifier\",\n  \"pacifism\",\n  \"pacifist\",\n  \"pacify\",\n  \"padded\",\n  \"padding\",\n  \"paddle\",\n  \"paddling\",\n  \"padlock\",\n  \"pagan\",\n  \"pager\",\n  \"paging\",\n  \"pajamas\",\n  \"palace\",\n  \"palatable\",\n  \"palm\",\n  \"palpable\",\n  \"palpitate\",\n  \"paltry\",\n  \"pampered\",\n  \"pamperer\",\n  \"pampers\",\n  \"pamphlet\",\n  \"panama\",\n  \"pancake\",\n  \"pancreas\",\n  \"panda\",\n  \"pandemic\",\n  \"pang\",\n  \"panhandle\",\n  \"panic\",\n  \"panning\",\n  \"panorama\",\n  \"panoramic\",\n  \"panther\",\n  \"pantomime\",\n  \"pantry\",\n  \"pants\",\n  \"pantyhose\",\n  \"paparazzi\",\n  \"papaya\",\n  \"paper\",\n  \"paprika\",\n  \"papyrus\",\n  \"parabola\",\n  \"parachute\",\n  \"parade\",\n  \"paradox\",\n  \"paragraph\",\n  \"parakeet\",\n  \"paralegal\",\n  \"paralyses\",\n  \"paralysis\",\n  \"paralyze\",\n  \"paramedic\",\n  \"parameter\",\n  \"paramount\",\n  \"parasail\",\n  \"parasite\",\n  \"parasitic\",\n  \"parcel\",\n  \"parched\",\n  \"parchment\",\n  \"pardon\",\n  \"parish\",\n  \"parka\",\n  \"parking\",\n  \"parkway\",\n  \"parlor\",\n  \"parmesan\",\n  \"parole\",\n  \"parrot\",\n  \"parsley\",\n  \"parsnip\",\n  \"partake\",\n  \"parted\",\n  \"parting\",\n  \"partition\",\n  \"partly\",\n  \"partner\",\n  \"partridge\",\n  \"party\",\n  \"passable\",\n  \"passably\",\n  \"passage\",\n  \"passcode\",\n  \"passenger\",\n  \"passerby\",\n  \"passing\",\n  \"passion\",\n  \"passive\",\n  \"passivism\",\n  \"passover\",\n  \"passport\",\n  \"password\",\n  \"pasta\",\n  \"pasted\",\n  \"pastel\",\n  \"pastime\",\n  \"pastor\",\n  \"pastrami\",\n  \"pasture\",\n  \"pasty\",\n  \"patchwork\",\n  \"patchy\",\n  \"paternal\",\n  \"paternity\",\n  \"path\",\n  \"patience\",\n  \"patient\",\n  \"patio\",\n  \"patriarch\",\n  \"patriot\",\n  \"patrol\",\n  \"patronage\",\n  \"patronize\",\n  \"pauper\",\n  \"pavement\",\n  \"paver\",\n  \"pavestone\",\n  \"pavilion\",\n  \"paving\",\n  \"pawing\",\n  \"payable\",\n  \"payback\",\n  \"paycheck\",\n  \"payday\",\n  \"payee\",\n  \"payer\",\n  \"paying\",\n  \"payment\",\n  \"payphone\",\n  \"payroll\",\n  \"pebble\",\n  \"pebbly\",\n  \"pecan\",\n  \"pectin\",\n  \"peculiar\",\n  \"peddling\",\n  \"pediatric\",\n  \"pedicure\",\n  \"pedigree\",\n  \"pedometer\",\n  \"pegboard\",\n  \"pelican\",\n  \"pellet\",\n  \"pelt\",\n  \"pelvis\",\n  \"penalize\",\n  \"penalty\",\n  \"pencil\",\n  \"pendant\",\n  \"pending\",\n  \"penholder\",\n  \"penknife\",\n  \"pennant\",\n  \"penniless\",\n  \"penny\",\n  \"penpal\",\n  \"pension\",\n  \"pentagon\",\n  \"pentagram\",\n  \"pep\",\n  \"perceive\",\n  \"percent\",\n  \"perch\",\n  \"percolate\",\n  \"perennial\",\n  \"perfected\",\n  \"perfectly\",\n  \"perfume\",\n  \"periscope\",\n  \"perish\",\n  \"perjurer\",\n  \"perjury\",\n  \"perkiness\",\n  \"perky\",\n  \"perm\",\n  \"peroxide\",\n  \"perpetual\",\n  \"perplexed\",\n  \"persecute\",\n  \"persevere\",\n  \"persuaded\",\n  \"persuader\",\n  \"pesky\",\n  \"peso\",\n  \"pessimism\",\n  \"pessimist\",\n  \"pester\",\n  \"pesticide\",\n  \"petal\",\n  \"petite\",\n  \"petition\",\n  \"petri\",\n  \"petroleum\",\n  \"petted\",\n  \"petticoat\",\n  \"pettiness\",\n  \"petty\",\n  \"petunia\",\n  \"phantom\",\n  \"phobia\",\n  \"phoenix\",\n  \"phonebook\",\n  \"phoney\",\n  \"phonics\",\n  \"phoniness\",\n  \"phony\",\n  \"phosphate\",\n  \"photo\",\n  \"phrase\",\n  \"phrasing\",\n  \"placard\",\n  \"placate\",\n  \"placidly\",\n  \"plank\",\n  \"planner\",\n  \"plant\",\n  \"plasma\",\n  \"plaster\",\n  \"plastic\",\n  \"plated\",\n  \"platform\",\n  \"plating\",\n  \"platinum\",\n  \"platonic\",\n  \"platter\",\n  \"platypus\",\n  \"plausible\",\n  \"plausibly\",\n  \"playable\",\n  \"playback\",\n  \"player\",\n  \"playful\",\n  \"playgroup\",\n  \"playhouse\",\n  \"playing\",\n  \"playlist\",\n  \"playmaker\",\n  \"playmate\",\n  \"playoff\",\n  \"playpen\",\n  \"playroom\",\n  \"playset\",\n  \"plaything\",\n  \"playtime\",\n  \"plaza\",\n  \"pleading\",\n  \"pleat\",\n  \"pledge\",\n  \"plentiful\",\n  \"plenty\",\n  \"plethora\",\n  \"plexiglas\",\n  \"pliable\",\n  \"plod\",\n  \"plop\",\n  \"plot\",\n  \"plow\",\n  \"ploy\",\n  \"pluck\",\n  \"plug\",\n  \"plunder\",\n  \"plunging\",\n  \"plural\",\n  \"plus\",\n  \"plutonium\",\n  \"plywood\",\n  \"poach\",\n  \"pod\",\n  \"poem\",\n  \"poet\",\n  \"pogo\",\n  \"pointed\",\n  \"pointer\",\n  \"pointing\",\n  \"pointless\",\n  \"pointy\",\n  \"poise\",\n  \"poison\",\n  \"poker\",\n  \"poking\",\n  \"polar\",\n  \"police\",\n  \"policy\",\n  \"polio\",\n  \"polish\",\n  \"politely\",\n  \"polka\",\n  \"polo\",\n  \"polyester\",\n  \"polygon\",\n  \"polygraph\",\n  \"polymer\",\n  \"poncho\",\n  \"pond\",\n  \"pony\",\n  \"popcorn\",\n  \"pope\",\n  \"poplar\",\n  \"popper\",\n  \"poppy\",\n  \"popsicle\",\n  \"populace\",\n  \"popular\",\n  \"populate\",\n  \"porcupine\",\n  \"pork\",\n  \"porous\",\n  \"porridge\",\n  \"portable\",\n  \"portal\",\n  \"portfolio\",\n  \"porthole\",\n  \"portion\",\n  \"portly\",\n  \"portside\",\n  \"poser\",\n  \"posh\",\n  \"posing\",\n  \"possible\",\n  \"possibly\",\n  \"possum\",\n  \"postage\",\n  \"postal\",\n  \"postbox\",\n  \"postcard\",\n  \"posted\",\n  \"poster\",\n  \"posting\",\n  \"postnasal\",\n  \"posture\",\n  \"postwar\",\n  \"pouch\",\n  \"pounce\",\n  \"pouncing\",\n  \"pound\",\n  \"pouring\",\n  \"pout\",\n  \"powdered\",\n  \"powdering\",\n  \"powdery\",\n  \"power\",\n  \"powwow\",\n  \"pox\",\n  \"praising\",\n  \"prance\",\n  \"prancing\",\n  \"pranker\",\n  \"prankish\",\n  \"prankster\",\n  \"prayer\",\n  \"praying\",\n  \"preacher\",\n  \"preaching\",\n  \"preachy\",\n  \"preamble\",\n  \"precinct\",\n  \"precise\",\n  \"precision\",\n  \"precook\",\n  \"precut\",\n  \"predator\",\n  \"predefine\",\n  \"predict\",\n  \"preface\",\n  \"prefix\",\n  \"preflight\",\n  \"preformed\",\n  \"pregame\",\n  \"pregnancy\",\n  \"pregnant\",\n  \"preheated\",\n  \"prelaunch\",\n  \"prelaw\",\n  \"prelude\",\n  \"premiere\",\n  \"premises\",\n  \"premium\",\n  \"prenatal\",\n  \"preoccupy\",\n  \"preorder\",\n  \"prepaid\",\n  \"prepay\",\n  \"preplan\",\n  \"preppy\",\n  \"preschool\",\n  \"prescribe\",\n  \"preseason\",\n  \"preset\",\n  \"preshow\",\n  \"president\",\n  \"presoak\",\n  \"press\",\n  \"presume\",\n  \"presuming\",\n  \"preteen\",\n  \"pretended\",\n  \"pretender\",\n  \"pretense\",\n  \"pretext\",\n  \"pretty\",\n  \"pretzel\",\n  \"prevail\",\n  \"prevalent\",\n  \"prevent\",\n  \"preview\",\n  \"previous\",\n  \"prewar\",\n  \"prewashed\",\n  \"prideful\",\n  \"pried\",\n  \"primal\",\n  \"primarily\",\n  \"primary\",\n  \"primate\",\n  \"primer\",\n  \"primp\",\n  \"princess\",\n  \"print\",\n  \"prior\",\n  \"prism\",\n  \"prison\",\n  \"prissy\",\n  \"pristine\",\n  \"privacy\",\n  \"private\",\n  \"privatize\",\n  \"prize\",\n  \"proactive\",\n  \"probable\",\n  \"probably\",\n  \"probation\",\n  \"probe\",\n  \"probing\",\n  \"probiotic\",\n  \"problem\",\n  \"procedure\",\n  \"process\",\n  \"proclaim\",\n  \"procreate\",\n  \"procurer\",\n  \"prodigal\",\n  \"prodigy\",\n  \"produce\",\n  \"product\",\n  \"profane\",\n  \"profanity\",\n  \"professed\",\n  \"professor\",\n  \"profile\",\n  \"profound\",\n  \"profusely\",\n  \"progeny\",\n  \"prognosis\",\n  \"program\",\n  \"progress\",\n  \"projector\",\n  \"prologue\",\n  \"prolonged\",\n  \"promenade\",\n  \"prominent\",\n  \"promoter\",\n  \"promotion\",\n  \"prompter\",\n  \"promptly\",\n  \"prone\",\n  \"prong\",\n  \"pronounce\",\n  \"pronto\",\n  \"proofing\",\n  \"proofread\",\n  \"proofs\",\n  \"propeller\",\n  \"properly\",\n  \"property\",\n  \"proponent\",\n  \"proposal\",\n  \"propose\",\n  \"props\",\n  \"prorate\",\n  \"protector\",\n  \"protegee\",\n  \"proton\",\n  \"prototype\",\n  \"protozoan\",\n  \"protract\",\n  \"protrude\",\n  \"proud\",\n  \"provable\",\n  \"proved\",\n  \"proven\",\n  \"provided\",\n  \"provider\",\n  \"providing\",\n  \"province\",\n  \"proving\",\n  \"provoke\",\n  \"provoking\",\n  \"provolone\",\n  \"prowess\",\n  \"prowler\",\n  \"prowling\",\n  \"proximity\",\n  \"proxy\",\n  \"prozac\",\n  \"prude\",\n  \"prudishly\",\n  \"prune\",\n  \"pruning\",\n  \"pry\",\n  \"psychic\",\n  \"public\",\n  \"publisher\",\n  \"pucker\",\n  \"pueblo\",\n  \"pug\",\n  \"pull\",\n  \"pulmonary\",\n  \"pulp\",\n  \"pulsate\",\n  \"pulse\",\n  \"pulverize\",\n  \"puma\",\n  \"pumice\",\n  \"pummel\",\n  \"punch\",\n  \"punctual\",\n  \"punctuate\",\n  \"punctured\",\n  \"pungent\",\n  \"punisher\",\n  \"punk\",\n  \"pupil\",\n  \"puppet\",\n  \"puppy\",\n  \"purchase\",\n  \"pureblood\",\n  \"purebred\",\n  \"purely\",\n  \"pureness\",\n  \"purgatory\",\n  \"purge\",\n  \"purging\",\n  \"purifier\",\n  \"purify\",\n  \"purist\",\n  \"puritan\",\n  \"purity\",\n  \"purple\",\n  \"purplish\",\n  \"purposely\",\n  \"purr\",\n  \"purse\",\n  \"pursuable\",\n  \"pursuant\",\n  \"pursuit\",\n  \"purveyor\",\n  \"pushcart\",\n  \"pushchair\",\n  \"pusher\",\n  \"pushiness\",\n  \"pushing\",\n  \"pushover\",\n  \"pushpin\",\n  \"pushup\",\n  \"pushy\",\n  \"putdown\",\n  \"putt\",\n  \"puzzle\",\n  \"puzzling\",\n  \"pyramid\",\n  \"pyromania\",\n  \"python\",\n  \"quack\",\n  \"quadrant\",\n  \"quail\",\n  \"quaintly\",\n  \"quake\",\n  \"quaking\",\n  \"qualified\",\n  \"qualifier\",\n  \"qualify\",\n  \"quality\",\n  \"qualm\",\n  \"quantum\",\n  \"quarrel\",\n  \"quarry\",\n  \"quartered\",\n  \"quarterly\",\n  \"quarters\",\n  \"quartet\",\n  \"quench\",\n  \"query\",\n  \"quicken\",\n  \"quickly\",\n  \"quickness\",\n  \"quicksand\",\n  \"quickstep\",\n  \"quiet\",\n  \"quill\",\n  \"quilt\",\n  \"quintet\",\n  \"quintuple\",\n  \"quirk\",\n  \"quit\",\n  \"quiver\",\n  \"quizzical\",\n  \"quotable\",\n  \"quotation\",\n  \"quote\",\n  \"rabid\",\n  \"race\",\n  \"racing\",\n  \"racism\",\n  \"rack\",\n  \"racoon\",\n  \"radar\",\n  \"radial\",\n  \"radiance\",\n  \"radiantly\",\n  \"radiated\",\n  \"radiation\",\n  \"radiator\",\n  \"radio\",\n  \"radish\",\n  \"raffle\",\n  \"raft\",\n  \"rage\",\n  \"ragged\",\n  \"raging\",\n  \"ragweed\",\n  \"raider\",\n  \"railcar\",\n  \"railing\",\n  \"railroad\",\n  \"railway\",\n  \"raisin\",\n  \"rake\",\n  \"raking\",\n  \"rally\",\n  \"ramble\",\n  \"rambling\",\n  \"ramp\",\n  \"ramrod\",\n  \"ranch\",\n  \"rancidity\",\n  \"random\",\n  \"ranged\",\n  \"ranger\",\n  \"ranging\",\n  \"ranked\",\n  \"ranking\",\n  \"ransack\",\n  \"ranting\",\n  \"rants\",\n  \"rare\",\n  \"rarity\",\n  \"rascal\",\n  \"rash\",\n  \"rasping\",\n  \"ravage\",\n  \"raven\",\n  \"ravine\",\n  \"raving\",\n  \"ravioli\",\n  \"ravishing\",\n  \"reabsorb\",\n  \"reach\",\n  \"reacquire\",\n  \"reaction\",\n  \"reactive\",\n  \"reactor\",\n  \"reaffirm\",\n  \"ream\",\n  \"reanalyze\",\n  \"reappear\",\n  \"reapply\",\n  \"reappoint\",\n  \"reapprove\",\n  \"rearrange\",\n  \"rearview\",\n  \"reason\",\n  \"reassign\",\n  \"reassure\",\n  \"reattach\",\n  \"reawake\",\n  \"rebalance\",\n  \"rebate\",\n  \"rebel\",\n  \"rebirth\",\n  \"reboot\",\n  \"reborn\",\n  \"rebound\",\n  \"rebuff\",\n  \"rebuild\",\n  \"rebuilt\",\n  \"reburial\",\n  \"rebuttal\",\n  \"recall\",\n  \"recant\",\n  \"recapture\",\n  \"recast\",\n  \"recede\",\n  \"recent\",\n  \"recess\",\n  \"recharger\",\n  \"recipient\",\n  \"recital\",\n  \"recite\",\n  \"reckless\",\n  \"reclaim\",\n  \"recliner\",\n  \"reclining\",\n  \"recluse\",\n  \"reclusive\",\n  \"recognize\",\n  \"recoil\",\n  \"recollect\",\n  \"recolor\",\n  \"reconcile\",\n  \"reconfirm\",\n  \"reconvene\",\n  \"recopy\",\n  \"record\",\n  \"recount\",\n  \"recoup\",\n  \"recovery\",\n  \"recreate\",\n  \"rectal\",\n  \"rectangle\",\n  \"rectified\",\n  \"rectify\",\n  \"recycled\",\n  \"recycler\",\n  \"recycling\",\n  \"reemerge\",\n  \"reenact\",\n  \"reenter\",\n  \"reentry\",\n  \"reexamine\",\n  \"referable\",\n  \"referee\",\n  \"reference\",\n  \"refill\",\n  \"refinance\",\n  \"refined\",\n  \"refinery\",\n  \"refining\",\n  \"refinish\",\n  \"reflected\",\n  \"reflector\",\n  \"reflex\",\n  \"reflux\",\n  \"refocus\",\n  \"refold\",\n  \"reforest\",\n  \"reformat\",\n  \"reformed\",\n  \"reformer\",\n  \"reformist\",\n  \"refract\",\n  \"refrain\",\n  \"refreeze\",\n  \"refresh\",\n  \"refried\",\n  \"refueling\",\n  \"refund\",\n  \"refurbish\",\n  \"refurnish\",\n  \"refusal\",\n  \"refuse\",\n  \"refusing\",\n  \"refutable\",\n  \"refute\",\n  \"regain\",\n  \"regalia\",\n  \"regally\",\n  \"reggae\",\n  \"regime\",\n  \"region\",\n  \"register\",\n  \"registrar\",\n  \"registry\",\n  \"regress\",\n  \"regretful\",\n  \"regroup\",\n  \"regular\",\n  \"regulate\",\n  \"regulator\",\n  \"rehab\",\n  \"reheat\",\n  \"rehire\",\n  \"rehydrate\",\n  \"reimburse\",\n  \"reissue\",\n  \"reiterate\",\n  \"rejoice\",\n  \"rejoicing\",\n  \"rejoin\",\n  \"rekindle\",\n  \"relapse\",\n  \"relapsing\",\n  \"relatable\",\n  \"related\",\n  \"relation\",\n  \"relative\",\n  \"relax\",\n  \"relay\",\n  \"relearn\",\n  \"release\",\n  \"relenting\",\n  \"reliable\",\n  \"reliably\",\n  \"reliance\",\n  \"reliant\",\n  \"relic\",\n  \"relieve\",\n  \"relieving\",\n  \"relight\",\n  \"relish\",\n  \"relive\",\n  \"reload\",\n  \"relocate\",\n  \"relock\",\n  \"reluctant\",\n  \"rely\",\n  \"remake\",\n  \"remark\",\n  \"remarry\",\n  \"rematch\",\n  \"remedial\",\n  \"remedy\",\n  \"remember\",\n  \"reminder\",\n  \"remindful\",\n  \"remission\",\n  \"remix\",\n  \"remnant\",\n  \"remodeler\",\n  \"remold\",\n  \"remorse\",\n  \"remote\",\n  \"removable\",\n  \"removal\",\n  \"removed\",\n  \"remover\",\n  \"removing\",\n  \"rename\",\n  \"renderer\",\n  \"rendering\",\n  \"rendition\",\n  \"renegade\",\n  \"renewable\",\n  \"renewably\",\n  \"renewal\",\n  \"renewed\",\n  \"renounce\",\n  \"renovate\",\n  \"renovator\",\n  \"rentable\",\n  \"rental\",\n  \"rented\",\n  \"renter\",\n  \"reoccupy\",\n  \"reoccur\",\n  \"reopen\",\n  \"reorder\",\n  \"repackage\",\n  \"repacking\",\n  \"repaint\",\n  \"repair\",\n  \"repave\",\n  \"repaying\",\n  \"repayment\",\n  \"repeal\",\n  \"repeated\",\n  \"repeater\",\n  \"repent\",\n  \"rephrase\",\n  \"replace\",\n  \"replay\",\n  \"replica\",\n  \"reply\",\n  \"reporter\",\n  \"repose\",\n  \"repossess\",\n  \"repost\",\n  \"repressed\",\n  \"reprimand\",\n  \"reprint\",\n  \"reprise\",\n  \"reproach\",\n  \"reprocess\",\n  \"reproduce\",\n  \"reprogram\",\n  \"reps\",\n  \"reptile\",\n  \"reptilian\",\n  \"repugnant\",\n  \"repulsion\",\n  \"repulsive\",\n  \"repurpose\",\n  \"reputable\",\n  \"reputably\",\n  \"request\",\n  \"require\",\n  \"requisite\",\n  \"reroute\",\n  \"rerun\",\n  \"resale\",\n  \"resample\",\n  \"rescuer\",\n  \"reseal\",\n  \"research\",\n  \"reselect\",\n  \"reseller\",\n  \"resemble\",\n  \"resend\",\n  \"resent\",\n  \"reset\",\n  \"reshape\",\n  \"reshoot\",\n  \"reshuffle\",\n  \"residence\",\n  \"residency\",\n  \"resident\",\n  \"residual\",\n  \"residue\",\n  \"resigned\",\n  \"resilient\",\n  \"resistant\",\n  \"resisting\",\n  \"resize\",\n  \"resolute\",\n  \"resolved\",\n  \"resonant\",\n  \"resonate\",\n  \"resort\",\n  \"resource\",\n  \"respect\",\n  \"resubmit\",\n  \"result\",\n  \"resume\",\n  \"resupply\",\n  \"resurface\",\n  \"resurrect\",\n  \"retail\",\n  \"retainer\",\n  \"retaining\",\n  \"retake\",\n  \"retaliate\",\n  \"retention\",\n  \"rethink\",\n  \"retinal\",\n  \"retired\",\n  \"retiree\",\n  \"retiring\",\n  \"retold\",\n  \"retool\",\n  \"retorted\",\n  \"retouch\",\n  \"retrace\",\n  \"retract\",\n  \"retrain\",\n  \"retread\",\n  \"retreat\",\n  \"retrial\",\n  \"retrieval\",\n  \"retriever\",\n  \"retry\",\n  \"return\",\n  \"retying\",\n  \"retype\",\n  \"reunion\",\n  \"reunite\",\n  \"reusable\",\n  \"reuse\",\n  \"reveal\",\n  \"reveler\",\n  \"revenge\",\n  \"revenue\",\n  \"reverb\",\n  \"revered\",\n  \"reverence\",\n  \"reverend\",\n  \"reversal\",\n  \"reverse\",\n  \"reversing\",\n  \"reversion\",\n  \"revert\",\n  \"revisable\",\n  \"revise\",\n  \"revision\",\n  \"revisit\",\n  \"revivable\",\n  \"revival\",\n  \"reviver\",\n  \"reviving\",\n  \"revocable\",\n  \"revoke\",\n  \"revolt\",\n  \"revolver\",\n  \"revolving\",\n  \"reward\",\n  \"rewash\",\n  \"rewind\",\n  \"rewire\",\n  \"reword\",\n  \"rework\",\n  \"rewrap\",\n  \"rewrite\",\n  \"rhyme\",\n  \"ribbon\",\n  \"ribcage\",\n  \"rice\",\n  \"riches\",\n  \"richly\",\n  \"richness\",\n  \"rickety\",\n  \"ricotta\",\n  \"riddance\",\n  \"ridden\",\n  \"ride\",\n  \"riding\",\n  \"rifling\",\n  \"rift\",\n  \"rigging\",\n  \"rigid\",\n  \"rigor\",\n  \"rimless\",\n  \"rimmed\",\n  \"rind\",\n  \"rink\",\n  \"rinse\",\n  \"rinsing\",\n  \"riot\",\n  \"ripcord\",\n  \"ripeness\",\n  \"ripening\",\n  \"ripping\",\n  \"ripple\",\n  \"rippling\",\n  \"riptide\",\n  \"rise\",\n  \"rising\",\n  \"risk\",\n  \"risotto\",\n  \"ritalin\",\n  \"ritzy\",\n  \"rival\",\n  \"riverbank\",\n  \"riverbed\",\n  \"riverboat\",\n  \"riverside\",\n  \"riveter\",\n  \"riveting\",\n  \"roamer\",\n  \"roaming\",\n  \"roast\",\n  \"robbing\",\n  \"robe\",\n  \"robin\",\n  \"robotics\",\n  \"robust\",\n  \"rockband\",\n  \"rocker\",\n  \"rocket\",\n  \"rockfish\",\n  \"rockiness\",\n  \"rocking\",\n  \"rocklike\",\n  \"rockslide\",\n  \"rockstar\",\n  \"rocky\",\n  \"rogue\",\n  \"roman\",\n  \"romp\",\n  \"rope\",\n  \"roping\",\n  \"roster\",\n  \"rosy\",\n  \"rotten\",\n  \"rotting\",\n  \"rotunda\",\n  \"roulette\",\n  \"rounding\",\n  \"roundish\",\n  \"roundness\",\n  \"roundup\",\n  \"roundworm\",\n  \"routine\",\n  \"routing\",\n  \"rover\",\n  \"roving\",\n  \"royal\",\n  \"rubbed\",\n  \"rubber\",\n  \"rubbing\",\n  \"rubble\",\n  \"rubdown\",\n  \"ruby\",\n  \"ruckus\",\n  \"rudder\",\n  \"rug\",\n  \"ruined\",\n  \"rule\",\n  \"rumble\",\n  \"rumbling\",\n  \"rummage\",\n  \"rumor\",\n  \"runaround\",\n  \"rundown\",\n  \"runner\",\n  \"running\",\n  \"runny\",\n  \"runt\",\n  \"runway\",\n  \"rupture\",\n  \"rural\",\n  \"ruse\",\n  \"rush\",\n  \"rust\",\n  \"rut\",\n  \"sabbath\",\n  \"sabotage\",\n  \"sacrament\",\n  \"sacred\",\n  \"sacrifice\",\n  \"sadden\",\n  \"saddlebag\",\n  \"saddled\",\n  \"saddling\",\n  \"sadly\",\n  \"sadness\",\n  \"safari\",\n  \"safeguard\",\n  \"safehouse\",\n  \"safely\",\n  \"safeness\",\n  \"saffron\",\n  \"saga\",\n  \"sage\",\n  \"sagging\",\n  \"saggy\",\n  \"said\",\n  \"saint\",\n  \"sake\",\n  \"salad\",\n  \"salami\",\n  \"salaried\",\n  \"salary\",\n  \"saline\",\n  \"salon\",\n  \"saloon\",\n  \"salsa\",\n  \"salt\",\n  \"salutary\",\n  \"salute\",\n  \"salvage\",\n  \"salvaging\",\n  \"salvation\",\n  \"same\",\n  \"sample\",\n  \"sampling\",\n  \"sanction\",\n  \"sanctity\",\n  \"sanctuary\",\n  \"sandal\",\n  \"sandbag\",\n  \"sandbank\",\n  \"sandbar\",\n  \"sandblast\",\n  \"sandbox\",\n  \"sanded\",\n  \"sandfish\",\n  \"sanding\",\n  \"sandlot\",\n  \"sandpaper\",\n  \"sandpit\",\n  \"sandstone\",\n  \"sandstorm\",\n  \"sandworm\",\n  \"sandy\",\n  \"sanitary\",\n  \"sanitizer\",\n  \"sank\",\n  \"santa\",\n  \"sapling\",\n  \"sappiness\",\n  \"sappy\",\n  \"sarcasm\",\n  \"sarcastic\",\n  \"sardine\",\n  \"sash\",\n  \"sasquatch\",\n  \"sassy\",\n  \"satchel\",\n  \"satiable\",\n  \"satin\",\n  \"satirical\",\n  \"satisfied\",\n  \"satisfy\",\n  \"saturate\",\n  \"saturday\",\n  \"sauciness\",\n  \"saucy\",\n  \"sauna\",\n  \"savage\",\n  \"savanna\",\n  \"saved\",\n  \"savings\",\n  \"savior\",\n  \"savor\",\n  \"saxophone\",\n  \"say\",\n  \"scabbed\",\n  \"scabby\",\n  \"scalded\",\n  \"scalding\",\n  \"scale\",\n  \"scaling\",\n  \"scallion\",\n  \"scallop\",\n  \"scalping\",\n  \"scam\",\n  \"scandal\",\n  \"scanner\",\n  \"scanning\",\n  \"scant\",\n  \"scapegoat\",\n  \"scarce\",\n  \"scarcity\",\n  \"scarecrow\",\n  \"scared\",\n  \"scarf\",\n  \"scarily\",\n  \"scariness\",\n  \"scarring\",\n  \"scary\",\n  \"scavenger\",\n  \"scenic\",\n  \"schedule\",\n  \"schematic\",\n  \"scheme\",\n  \"scheming\",\n  \"schilling\",\n  \"schnapps\",\n  \"scholar\",\n  \"science\",\n  \"scientist\",\n  \"scion\",\n  \"scoff\",\n  \"scolding\",\n  \"scone\",\n  \"scoop\",\n  \"scooter\",\n  \"scope\",\n  \"scorch\",\n  \"scorebook\",\n  \"scorecard\",\n  \"scored\",\n  \"scoreless\",\n  \"scorer\",\n  \"scoring\",\n  \"scorn\",\n  \"scorpion\",\n  \"scotch\",\n  \"scoundrel\",\n  \"scoured\",\n  \"scouring\",\n  \"scouting\",\n  \"scouts\",\n  \"scowling\",\n  \"scrabble\",\n  \"scraggly\",\n  \"scrambled\",\n  \"scrambler\",\n  \"scrap\",\n  \"scratch\",\n  \"scrawny\",\n  \"screen\",\n  \"scribble\",\n  \"scribe\",\n  \"scribing\",\n  \"scrimmage\",\n  \"script\",\n  \"scroll\",\n  \"scrooge\",\n  \"scrounger\",\n  \"scrubbed\",\n  \"scrubber\",\n  \"scruffy\",\n  \"scrunch\",\n  \"scrutiny\",\n  \"scuba\",\n  \"scuff\",\n  \"sculptor\",\n  \"sculpture\",\n  \"scurvy\",\n  \"scuttle\",\n  \"secluded\",\n  \"secluding\",\n  \"seclusion\",\n  \"second\",\n  \"secrecy\",\n  \"secret\",\n  \"sectional\",\n  \"sector\",\n  \"secular\",\n  \"securely\",\n  \"security\",\n  \"sedan\",\n  \"sedate\",\n  \"sedation\",\n  \"sedative\",\n  \"sediment\",\n  \"seduce\",\n  \"seducing\",\n  \"segment\",\n  \"seismic\",\n  \"seizing\",\n  \"seldom\",\n  \"selected\",\n  \"selection\",\n  \"selective\",\n  \"selector\",\n  \"self\",\n  \"seltzer\",\n  \"semantic\",\n  \"semester\",\n  \"semicolon\",\n  \"semifinal\",\n  \"seminar\",\n  \"semisoft\",\n  \"semisweet\",\n  \"senate\",\n  \"senator\",\n  \"send\",\n  \"senior\",\n  \"senorita\",\n  \"sensation\",\n  \"sensitive\",\n  \"sensitize\",\n  \"sensually\",\n  \"sensuous\",\n  \"sepia\",\n  \"september\",\n  \"septic\",\n  \"septum\",\n  \"sequel\",\n  \"sequence\",\n  \"sequester\",\n  \"series\",\n  \"sermon\",\n  \"serotonin\",\n  \"serpent\",\n  \"serrated\",\n  \"serve\",\n  \"service\",\n  \"serving\",\n  \"sesame\",\n  \"sessions\",\n  \"setback\",\n  \"setting\",\n  \"settle\",\n  \"settling\",\n  \"setup\",\n  \"sevenfold\",\n  \"seventeen\",\n  \"seventh\",\n  \"seventy\",\n  \"severity\",\n  \"shabby\",\n  \"shack\",\n  \"shaded\",\n  \"shadily\",\n  \"shadiness\",\n  \"shading\",\n  \"shadow\",\n  \"shady\",\n  \"shaft\",\n  \"shakable\",\n  \"shakily\",\n  \"shakiness\",\n  \"shaking\",\n  \"shaky\",\n  \"shale\",\n  \"shallot\",\n  \"shallow\",\n  \"shame\",\n  \"shampoo\",\n  \"shamrock\",\n  \"shank\",\n  \"shanty\",\n  \"shape\",\n  \"shaping\",\n  \"share\",\n  \"sharpener\",\n  \"sharper\",\n  \"sharpie\",\n  \"sharply\",\n  \"sharpness\",\n  \"shawl\",\n  \"sheath\",\n  \"shed\",\n  \"sheep\",\n  \"sheet\",\n  \"shelf\",\n  \"shell\",\n  \"shelter\",\n  \"shelve\",\n  \"shelving\",\n  \"sherry\",\n  \"shield\",\n  \"shifter\",\n  \"shifting\",\n  \"shiftless\",\n  \"shifty\",\n  \"shimmer\",\n  \"shimmy\",\n  \"shindig\",\n  \"shine\",\n  \"shingle\",\n  \"shininess\",\n  \"shining\",\n  \"shiny\",\n  \"ship\",\n  \"shirt\",\n  \"shivering\",\n  \"shock\",\n  \"shone\",\n  \"shoplift\",\n  \"shopper\",\n  \"shopping\",\n  \"shoptalk\",\n  \"shore\",\n  \"shortage\",\n  \"shortcake\",\n  \"shortcut\",\n  \"shorten\",\n  \"shorter\",\n  \"shorthand\",\n  \"shortlist\",\n  \"shortly\",\n  \"shortness\",\n  \"shorts\",\n  \"shortwave\",\n  \"shorty\",\n  \"shout\",\n  \"shove\",\n  \"showbiz\",\n  \"showcase\",\n  \"showdown\",\n  \"shower\",\n  \"showgirl\",\n  \"showing\",\n  \"showman\",\n  \"shown\",\n  \"showoff\",\n  \"showpiece\",\n  \"showplace\",\n  \"showroom\",\n  \"showy\",\n  \"shrank\",\n  \"shrapnel\",\n  \"shredder\",\n  \"shredding\",\n  \"shrewdly\",\n  \"shriek\",\n  \"shrill\",\n  \"shrimp\",\n  \"shrine\",\n  \"shrink\",\n  \"shrivel\",\n  \"shrouded\",\n  \"shrubbery\",\n  \"shrubs\",\n  \"shrug\",\n  \"shrunk\",\n  \"shucking\",\n  \"shudder\",\n  \"shuffle\",\n  \"shuffling\",\n  \"shun\",\n  \"shush\",\n  \"shut\",\n  \"shy\",\n  \"siamese\",\n  \"siberian\",\n  \"sibling\",\n  \"siding\",\n  \"sierra\",\n  \"siesta\",\n  \"sift\",\n  \"sighing\",\n  \"silenced\",\n  \"silencer\",\n  \"silent\",\n  \"silica\",\n  \"silicon\",\n  \"silk\",\n  \"silliness\",\n  \"silly\",\n  \"silo\",\n  \"silt\",\n  \"silver\",\n  \"similarly\",\n  \"simile\",\n  \"simmering\",\n  \"simple\",\n  \"simplify\",\n  \"simply\",\n  \"sincere\",\n  \"sincerity\",\n  \"singer\",\n  \"singing\",\n  \"single\",\n  \"singular\",\n  \"sinister\",\n  \"sinless\",\n  \"sinner\",\n  \"sinuous\",\n  \"sip\",\n  \"siren\",\n  \"sister\",\n  \"sitcom\",\n  \"sitter\",\n  \"sitting\",\n  \"situated\",\n  \"situation\",\n  \"sixfold\",\n  \"sixteen\",\n  \"sixth\",\n  \"sixties\",\n  \"sixtieth\",\n  \"sixtyfold\",\n  \"sizable\",\n  \"sizably\",\n  \"size\",\n  \"sizing\",\n  \"sizzle\",\n  \"sizzling\",\n  \"skater\",\n  \"skating\",\n  \"skedaddle\",\n  \"skeletal\",\n  \"skeleton\",\n  \"skeptic\",\n  \"sketch\",\n  \"skewed\",\n  \"skewer\",\n  \"skid\",\n  \"skied\",\n  \"skier\",\n  \"skies\",\n  \"skiing\",\n  \"skilled\",\n  \"skillet\",\n  \"skillful\",\n  \"skimmed\",\n  \"skimmer\",\n  \"skimming\",\n  \"skimpily\",\n  \"skincare\",\n  \"skinhead\",\n  \"skinless\",\n  \"skinning\",\n  \"skinny\",\n  \"skintight\",\n  \"skipper\",\n  \"skipping\",\n  \"skirmish\",\n  \"skirt\",\n  \"skittle\",\n  \"skydiver\",\n  \"skylight\",\n  \"skyline\",\n  \"skype\",\n  \"skyrocket\",\n  \"skyward\",\n  \"slab\",\n  \"slacked\",\n  \"slacker\",\n  \"slacking\",\n  \"slackness\",\n  \"slacks\",\n  \"slain\",\n  \"slam\",\n  \"slander\",\n  \"slang\",\n  \"slapping\",\n  \"slapstick\",\n  \"slashed\",\n  \"slashing\",\n  \"slate\",\n  \"slather\",\n  \"slaw\",\n  \"sled\",\n  \"sleek\",\n  \"sleep\",\n  \"sleet\",\n  \"sleeve\",\n  \"slept\",\n  \"sliceable\",\n  \"sliced\",\n  \"slicer\",\n  \"slicing\",\n  \"slick\",\n  \"slider\",\n  \"slideshow\",\n  \"sliding\",\n  \"slighted\",\n  \"slighting\",\n  \"slightly\",\n  \"slimness\",\n  \"slimy\",\n  \"slinging\",\n  \"slingshot\",\n  \"slinky\",\n  \"slip\",\n  \"slit\",\n  \"sliver\",\n  \"slobbery\",\n  \"slogan\",\n  \"sloped\",\n  \"sloping\",\n  \"sloppily\",\n  \"sloppy\",\n  \"slot\",\n  \"slouching\",\n  \"slouchy\",\n  \"sludge\",\n  \"slug\",\n  \"slum\",\n  \"slurp\",\n  \"slush\",\n  \"sly\",\n  \"small\",\n  \"smartly\",\n  \"smartness\",\n  \"smasher\",\n  \"smashing\",\n  \"smashup\",\n  \"smell\",\n  \"smelting\",\n  \"smile\",\n  \"smilingly\",\n  \"smirk\",\n  \"smite\",\n  \"smith\",\n  \"smitten\",\n  \"smock\",\n  \"smog\",\n  \"smoked\",\n  \"smokeless\",\n  \"smokiness\",\n  \"smoking\",\n  \"smoky\",\n  \"smolder\",\n  \"smooth\",\n  \"smother\",\n  \"smudge\",\n  \"smudgy\",\n  \"smuggler\",\n  \"smuggling\",\n  \"smugly\",\n  \"smugness\",\n  \"snack\",\n  \"snagged\",\n  \"snaking\",\n  \"snap\",\n  \"snare\",\n  \"snarl\",\n  \"snazzy\",\n  \"sneak\",\n  \"sneer\",\n  \"sneeze\",\n  \"sneezing\",\n  \"snide\",\n  \"sniff\",\n  \"snippet\",\n  \"snipping\",\n  \"snitch\",\n  \"snooper\",\n  \"snooze\",\n  \"snore\",\n  \"snoring\",\n  \"snorkel\",\n  \"snort\",\n  \"snout\",\n  \"snowbird\",\n  \"snowboard\",\n  \"snowbound\",\n  \"snowcap\",\n  \"snowdrift\",\n  \"snowdrop\",\n  \"snowfall\",\n  \"snowfield\",\n  \"snowflake\",\n  \"snowiness\",\n  \"snowless\",\n  \"snowman\",\n  \"snowplow\",\n  \"snowshoe\",\n  \"snowstorm\",\n  \"snowsuit\",\n  \"snowy\",\n  \"snub\",\n  \"snuff\",\n  \"snuggle\",\n  \"snugly\",\n  \"snugness\",\n  \"speak\",\n  \"spearfish\",\n  \"spearhead\",\n  \"spearman\",\n  \"spearmint\",\n  \"species\",\n  \"specimen\",\n  \"specked\",\n  \"speckled\",\n  \"specks\",\n  \"spectacle\",\n  \"spectator\",\n  \"spectrum\",\n  \"speculate\",\n  \"speech\",\n  \"speed\",\n  \"spellbind\",\n  \"speller\",\n  \"spelling\",\n  \"spendable\",\n  \"spender\",\n  \"spending\",\n  \"spent\",\n  \"spew\",\n  \"sphere\",\n  \"spherical\",\n  \"sphinx\",\n  \"spider\",\n  \"spied\",\n  \"spiffy\",\n  \"spill\",\n  \"spilt\",\n  \"spinach\",\n  \"spinal\",\n  \"spindle\",\n  \"spinner\",\n  \"spinning\",\n  \"spinout\",\n  \"spinster\",\n  \"spiny\",\n  \"spiral\",\n  \"spirited\",\n  \"spiritism\",\n  \"spirits\",\n  \"spiritual\",\n  \"splashed\",\n  \"splashing\",\n  \"splashy\",\n  \"splatter\",\n  \"spleen\",\n  \"splendid\",\n  \"splendor\",\n  \"splice\",\n  \"splicing\",\n  \"splinter\",\n  \"splotchy\",\n  \"splurge\",\n  \"spoilage\",\n  \"spoiled\",\n  \"spoiler\",\n  \"spoiling\",\n  \"spoils\",\n  \"spoken\",\n  \"spokesman\",\n  \"sponge\",\n  \"spongy\",\n  \"sponsor\",\n  \"spoof\",\n  \"spookily\",\n  \"spooky\",\n  \"spool\",\n  \"spoon\",\n  \"spore\",\n  \"sporting\",\n  \"sports\",\n  \"sporty\",\n  \"spotless\",\n  \"spotlight\",\n  \"spotted\",\n  \"spotter\",\n  \"spotting\",\n  \"spotty\",\n  \"spousal\",\n  \"spouse\",\n  \"spout\",\n  \"sprain\",\n  \"sprang\",\n  \"sprawl\",\n  \"spray\",\n  \"spree\",\n  \"sprig\",\n  \"spring\",\n  \"sprinkled\",\n  \"sprinkler\",\n  \"sprint\",\n  \"sprite\",\n  \"sprout\",\n  \"spruce\",\n  \"sprung\",\n  \"spry\",\n  \"spud\",\n  \"spur\",\n  \"sputter\",\n  \"spyglass\",\n  \"squabble\",\n  \"squad\",\n  \"squall\",\n  \"squander\",\n  \"squash\",\n  \"squatted\",\n  \"squatter\",\n  \"squatting\",\n  \"squeak\",\n  \"squealer\",\n  \"squealing\",\n  \"squeamish\",\n  \"squeegee\",\n  \"squeeze\",\n  \"squeezing\",\n  \"squid\",\n  \"squiggle\",\n  \"squiggly\",\n  \"squint\",\n  \"squire\",\n  \"squirt\",\n  \"squishier\",\n  \"squishy\",\n  \"stability\",\n  \"stabilize\",\n  \"stable\",\n  \"stack\",\n  \"stadium\",\n  \"staff\",\n  \"stage\",\n  \"staging\",\n  \"stagnant\",\n  \"stagnate\",\n  \"stainable\",\n  \"stained\",\n  \"staining\",\n  \"stainless\",\n  \"stalemate\",\n  \"staleness\",\n  \"stalling\",\n  \"stallion\",\n  \"stamina\",\n  \"stammer\",\n  \"stamp\",\n  \"stand\",\n  \"stank\",\n  \"staple\",\n  \"stapling\",\n  \"starboard\",\n  \"starch\",\n  \"stardom\",\n  \"stardust\",\n  \"starfish\",\n  \"stargazer\",\n  \"staring\",\n  \"stark\",\n  \"starless\",\n  \"starlet\",\n  \"starlight\",\n  \"starlit\",\n  \"starring\",\n  \"starry\",\n  \"starship\",\n  \"starter\",\n  \"starting\",\n  \"startle\",\n  \"startling\",\n  \"startup\",\n  \"starved\",\n  \"starving\",\n  \"stash\",\n  \"state\",\n  \"static\",\n  \"statistic\",\n  \"statue\",\n  \"stature\",\n  \"status\",\n  \"statute\",\n  \"statutory\",\n  \"staunch\",\n  \"stays\",\n  \"steadfast\",\n  \"steadier\",\n  \"steadily\",\n  \"steadying\",\n  \"steam\",\n  \"steed\",\n  \"steep\",\n  \"steerable\",\n  \"steering\",\n  \"steersman\",\n  \"stegosaur\",\n  \"stellar\",\n  \"stem\",\n  \"stench\",\n  \"stencil\",\n  \"step\",\n  \"stereo\",\n  \"sterile\",\n  \"sterility\",\n  \"sterilize\",\n  \"sterling\",\n  \"sternness\",\n  \"sternum\",\n  \"stew\",\n  \"stick\",\n  \"stiffen\",\n  \"stiffly\",\n  \"stiffness\",\n  \"stifle\",\n  \"stifling\",\n  \"stillness\",\n  \"stilt\",\n  \"stimulant\",\n  \"stimulate\",\n  \"stimuli\",\n  \"stimulus\",\n  \"stinger\",\n  \"stingily\",\n  \"stinging\",\n  \"stingray\",\n  \"stingy\",\n  \"stinking\",\n  \"stinky\",\n  \"stipend\",\n  \"stipulate\",\n  \"stir\",\n  \"stitch\",\n  \"stock\",\n  \"stoic\",\n  \"stoke\",\n  \"stole\",\n  \"stomp\",\n  \"stonewall\",\n  \"stoneware\",\n  \"stonework\",\n  \"stoning\",\n  \"stony\",\n  \"stood\",\n  \"stooge\",\n  \"stool\",\n  \"stoop\",\n  \"stoplight\",\n  \"stoppable\",\n  \"stoppage\",\n  \"stopped\",\n  \"stopper\",\n  \"stopping\",\n  \"stopwatch\",\n  \"storable\",\n  \"storage\",\n  \"storeroom\",\n  \"storewide\",\n  \"storm\",\n  \"stout\",\n  \"stove\",\n  \"stowaway\",\n  \"stowing\",\n  \"straddle\",\n  \"straggler\",\n  \"strained\",\n  \"strainer\",\n  \"straining\",\n  \"strangely\",\n  \"stranger\",\n  \"strangle\",\n  \"strategic\",\n  \"strategy\",\n  \"stratus\",\n  \"straw\",\n  \"stray\",\n  \"streak\",\n  \"stream\",\n  \"street\",\n  \"strength\",\n  \"strenuous\",\n  \"strep\",\n  \"stress\",\n  \"stretch\",\n  \"strewn\",\n  \"stricken\",\n  \"strict\",\n  \"stride\",\n  \"strife\",\n  \"strike\",\n  \"striking\",\n  \"strive\",\n  \"striving\",\n  \"strobe\",\n  \"strode\",\n  \"stroller\",\n  \"strongbox\",\n  \"strongly\",\n  \"strongman\",\n  \"struck\",\n  \"structure\",\n  \"strudel\",\n  \"struggle\",\n  \"strum\",\n  \"strung\",\n  \"strut\",\n  \"stubbed\",\n  \"stubble\",\n  \"stubbly\",\n  \"stubborn\",\n  \"stucco\",\n  \"stuck\",\n  \"student\",\n  \"studied\",\n  \"studio\",\n  \"study\",\n  \"stuffed\",\n  \"stuffing\",\n  \"stuffy\",\n  \"stumble\",\n  \"stumbling\",\n  \"stump\",\n  \"stung\",\n  \"stunned\",\n  \"stunner\",\n  \"stunning\",\n  \"stunt\",\n  \"stupor\",\n  \"sturdily\",\n  \"sturdy\",\n  \"styling\",\n  \"stylishly\",\n  \"stylist\",\n  \"stylized\",\n  \"stylus\",\n  \"suave\",\n  \"subarctic\",\n  \"subatomic\",\n  \"subdivide\",\n  \"subdued\",\n  \"subduing\",\n  \"subfloor\",\n  \"subgroup\",\n  \"subheader\",\n  \"subject\",\n  \"sublease\",\n  \"sublet\",\n  \"sublevel\",\n  \"sublime\",\n  \"submarine\",\n  \"submerge\",\n  \"submersed\",\n  \"submitter\",\n  \"subpanel\",\n  \"subpar\",\n  \"subplot\",\n  \"subprime\",\n  \"subscribe\",\n  \"subscript\",\n  \"subsector\",\n  \"subside\",\n  \"subsiding\",\n  \"subsidize\",\n  \"subsidy\",\n  \"subsoil\",\n  \"subsonic\",\n  \"substance\",\n  \"subsystem\",\n  \"subtext\",\n  \"subtitle\",\n  \"subtly\",\n  \"subtotal\",\n  \"subtract\",\n  \"subtype\",\n  \"suburb\",\n  \"subway\",\n  \"subwoofer\",\n  \"subzero\",\n  \"succulent\",\n  \"such\",\n  \"suction\",\n  \"sudden\",\n  \"sudoku\",\n  \"suds\",\n  \"sufferer\",\n  \"suffering\",\n  \"suffice\",\n  \"suffix\",\n  \"suffocate\",\n  \"suffrage\",\n  \"sugar\",\n  \"suggest\",\n  \"suing\",\n  \"suitable\",\n  \"suitably\",\n  \"suitcase\",\n  \"suitor\",\n  \"sulfate\",\n  \"sulfide\",\n  \"sulfite\",\n  \"sulfur\",\n  \"sulk\",\n  \"sullen\",\n  \"sulphate\",\n  \"sulphuric\",\n  \"sultry\",\n  \"superbowl\",\n  \"superglue\",\n  \"superhero\",\n  \"superior\",\n  \"superjet\",\n  \"superman\",\n  \"supermom\",\n  \"supernova\",\n  \"supervise\",\n  \"supper\",\n  \"supplier\",\n  \"supply\",\n  \"support\",\n  \"supremacy\",\n  \"supreme\",\n  \"surcharge\",\n  \"surely\",\n  \"sureness\",\n  \"surface\",\n  \"surfacing\",\n  \"surfboard\",\n  \"surfer\",\n  \"surgery\",\n  \"surgical\",\n  \"surging\",\n  \"surname\",\n  \"surpass\",\n  \"surplus\",\n  \"surprise\",\n  \"surreal\",\n  \"surrender\",\n  \"surrogate\",\n  \"surround\",\n  \"survey\",\n  \"survival\",\n  \"survive\",\n  \"surviving\",\n  \"survivor\",\n  \"sushi\",\n  \"suspect\",\n  \"suspend\",\n  \"suspense\",\n  \"sustained\",\n  \"sustainer\",\n  \"swab\",\n  \"swaddling\",\n  \"swagger\",\n  \"swampland\",\n  \"swan\",\n  \"swapping\",\n  \"swarm\",\n  \"sway\",\n  \"swear\",\n  \"sweat\",\n  \"sweep\",\n  \"swell\",\n  \"swept\",\n  \"swerve\",\n  \"swifter\",\n  \"swiftly\",\n  \"swiftness\",\n  \"swimmable\",\n  \"swimmer\",\n  \"swimming\",\n  \"swimsuit\",\n  \"swimwear\",\n  \"swinger\",\n  \"swinging\",\n  \"swipe\",\n  \"swirl\",\n  \"switch\",\n  \"swivel\",\n  \"swizzle\",\n  \"swooned\",\n  \"swoop\",\n  \"swoosh\",\n  \"swore\",\n  \"sworn\",\n  \"swung\",\n  \"sycamore\",\n  \"sympathy\",\n  \"symphonic\",\n  \"symphony\",\n  \"symptom\",\n  \"synapse\",\n  \"syndrome\",\n  \"synergy\",\n  \"synopses\",\n  \"synopsis\",\n  \"synthesis\",\n  \"synthetic\",\n  \"syrup\",\n  \"system\",\n  \"t-shirt\",\n  \"tabasco\",\n  \"tabby\",\n  \"tableful\",\n  \"tables\",\n  \"tablet\",\n  \"tableware\",\n  \"tabloid\",\n  \"tackiness\",\n  \"tacking\",\n  \"tackle\",\n  \"tackling\",\n  \"tacky\",\n  \"taco\",\n  \"tactful\",\n  \"tactical\",\n  \"tactics\",\n  \"tactile\",\n  \"tactless\",\n  \"tadpole\",\n  \"taekwondo\",\n  \"tag\",\n  \"tainted\",\n  \"take\",\n  \"taking\",\n  \"talcum\",\n  \"talisman\",\n  \"tall\",\n  \"talon\",\n  \"tamale\",\n  \"tameness\",\n  \"tamer\",\n  \"tamper\",\n  \"tank\",\n  \"tanned\",\n  \"tannery\",\n  \"tanning\",\n  \"tantrum\",\n  \"tapeless\",\n  \"tapered\",\n  \"tapering\",\n  \"tapestry\",\n  \"tapioca\",\n  \"tapping\",\n  \"taps\",\n  \"tarantula\",\n  \"target\",\n  \"tarmac\",\n  \"tarnish\",\n  \"tarot\",\n  \"tartar\",\n  \"tartly\",\n  \"tartness\",\n  \"task\",\n  \"tassel\",\n  \"taste\",\n  \"tastiness\",\n  \"tasting\",\n  \"tasty\",\n  \"tattered\",\n  \"tattle\",\n  \"tattling\",\n  \"tattoo\",\n  \"taunt\",\n  \"tavern\",\n  \"thank\",\n  \"that\",\n  \"thaw\",\n  \"theater\",\n  \"theatrics\",\n  \"thee\",\n  \"theft\",\n  \"theme\",\n  \"theology\",\n  \"theorize\",\n  \"thermal\",\n  \"thermos\",\n  \"thesaurus\",\n  \"these\",\n  \"thesis\",\n  \"thespian\",\n  \"thicken\",\n  \"thicket\",\n  \"thickness\",\n  \"thieving\",\n  \"thievish\",\n  \"thigh\",\n  \"thimble\",\n  \"thing\",\n  \"think\",\n  \"thinly\",\n  \"thinner\",\n  \"thinness\",\n  \"thinning\",\n  \"thirstily\",\n  \"thirsting\",\n  \"thirsty\",\n  \"thirteen\",\n  \"thirty\",\n  \"thong\",\n  \"thorn\",\n  \"those\",\n  \"thousand\",\n  \"thrash\",\n  \"thread\",\n  \"threaten\",\n  \"threefold\",\n  \"thrift\",\n  \"thrill\",\n  \"thrive\",\n  \"thriving\",\n  \"throat\",\n  \"throbbing\",\n  \"throng\",\n  \"throttle\",\n  \"throwaway\",\n  \"throwback\",\n  \"thrower\",\n  \"throwing\",\n  \"thud\",\n  \"thumb\",\n  \"thumping\",\n  \"thursday\",\n  \"thus\",\n  \"thwarting\",\n  \"thyself\",\n  \"tiara\",\n  \"tibia\",\n  \"tidal\",\n  \"tidbit\",\n  \"tidiness\",\n  \"tidings\",\n  \"tidy\",\n  \"tiger\",\n  \"tighten\",\n  \"tightly\",\n  \"tightness\",\n  \"tightrope\",\n  \"tightwad\",\n  \"tigress\",\n  \"tile\",\n  \"tiling\",\n  \"till\",\n  \"tilt\",\n  \"timid\",\n  \"timing\",\n  \"timothy\",\n  \"tinderbox\",\n  \"tinfoil\",\n  \"tingle\",\n  \"tingling\",\n  \"tingly\",\n  \"tinker\",\n  \"tinkling\",\n  \"tinsel\",\n  \"tinsmith\",\n  \"tint\",\n  \"tinwork\",\n  \"tiny\",\n  \"tipoff\",\n  \"tipped\",\n  \"tipper\",\n  \"tipping\",\n  \"tiptoeing\",\n  \"tiptop\",\n  \"tiring\",\n  \"tissue\",\n  \"trace\",\n  \"tracing\",\n  \"track\",\n  \"traction\",\n  \"tractor\",\n  \"trade\",\n  \"trading\",\n  \"tradition\",\n  \"traffic\",\n  \"tragedy\",\n  \"trailing\",\n  \"trailside\",\n  \"train\",\n  \"traitor\",\n  \"trance\",\n  \"tranquil\",\n  \"transfer\",\n  \"transform\",\n  \"translate\",\n  \"transpire\",\n  \"transport\",\n  \"transpose\",\n  \"trapdoor\",\n  \"trapeze\",\n  \"trapezoid\",\n  \"trapped\",\n  \"trapper\",\n  \"trapping\",\n  \"traps\",\n  \"trash\",\n  \"travel\",\n  \"traverse\",\n  \"travesty\",\n  \"tray\",\n  \"treachery\",\n  \"treading\",\n  \"treadmill\",\n  \"treason\",\n  \"treat\",\n  \"treble\",\n  \"tree\",\n  \"trekker\",\n  \"tremble\",\n  \"trembling\",\n  \"tremor\",\n  \"trench\",\n  \"trend\",\n  \"trespass\",\n  \"triage\",\n  \"trial\",\n  \"triangle\",\n  \"tribesman\",\n  \"tribunal\",\n  \"tribune\",\n  \"tributary\",\n  \"tribute\",\n  \"triceps\",\n  \"trickery\",\n  \"trickily\",\n  \"tricking\",\n  \"trickle\",\n  \"trickster\",\n  \"tricky\",\n  \"tricolor\",\n  \"tricycle\",\n  \"trident\",\n  \"tried\",\n  \"trifle\",\n  \"trifocals\",\n  \"trillion\",\n  \"trilogy\",\n  \"trimester\",\n  \"trimmer\",\n  \"trimming\",\n  \"trimness\",\n  \"trinity\",\n  \"trio\",\n  \"tripod\",\n  \"tripping\",\n  \"triumph\",\n  \"trivial\",\n  \"trodden\",\n  \"trolling\",\n  \"trombone\",\n  \"trophy\",\n  \"tropical\",\n  \"tropics\",\n  \"trouble\",\n  \"troubling\",\n  \"trough\",\n  \"trousers\",\n  \"trout\",\n  \"trowel\",\n  \"truce\",\n  \"truck\",\n  \"truffle\",\n  \"trump\",\n  \"trunks\",\n  \"trustable\",\n  \"trustee\",\n  \"trustful\",\n  \"trusting\",\n  \"trustless\",\n  \"truth\",\n  \"try\",\n  \"tubby\",\n  \"tubeless\",\n  \"tubular\",\n  \"tucking\",\n  \"tuesday\",\n  \"tug\",\n  \"tuition\",\n  \"tulip\",\n  \"tumble\",\n  \"tumbling\",\n  \"tummy\",\n  \"turban\",\n  \"turbine\",\n  \"turbofan\",\n  \"turbojet\",\n  \"turbulent\",\n  \"turf\",\n  \"turkey\",\n  \"turmoil\",\n  \"turret\",\n  \"turtle\",\n  \"tusk\",\n  \"tutor\",\n  \"tutu\",\n  \"tux\",\n  \"tweak\",\n  \"tweed\",\n  \"tweet\",\n  \"tweezers\",\n  \"twelve\",\n  \"twentieth\",\n  \"twenty\",\n  \"twerp\",\n  \"twice\",\n  \"twiddle\",\n  \"twiddling\",\n  \"twig\",\n  \"twilight\",\n  \"twine\",\n  \"twins\",\n  \"twirl\",\n  \"twistable\",\n  \"twisted\",\n  \"twister\",\n  \"twisting\",\n  \"twisty\",\n  \"twitch\",\n  \"twitter\",\n  \"tycoon\",\n  \"tying\",\n  \"tyke\",\n  \"udder\",\n  \"ultimate\",\n  \"ultimatum\",\n  \"ultra\",\n  \"umbilical\",\n  \"umbrella\",\n  \"umpire\",\n  \"unabashed\",\n  \"unable\",\n  \"unadorned\",\n  \"unadvised\",\n  \"unafraid\",\n  \"unaired\",\n  \"unaligned\",\n  \"unaltered\",\n  \"unarmored\",\n  \"unashamed\",\n  \"unaudited\",\n  \"unawake\",\n  \"unaware\",\n  \"unbaked\",\n  \"unbalance\",\n  \"unbeaten\",\n  \"unbend\",\n  \"unbent\",\n  \"unbiased\",\n  \"unbitten\",\n  \"unblended\",\n  \"unblessed\",\n  \"unblock\",\n  \"unbolted\",\n  \"unbounded\",\n  \"unboxed\",\n  \"unbraided\",\n  \"unbridle\",\n  \"unbroken\",\n  \"unbuckled\",\n  \"unbundle\",\n  \"unburned\",\n  \"unbutton\",\n  \"uncanny\",\n  \"uncapped\",\n  \"uncaring\",\n  \"uncertain\",\n  \"unchain\",\n  \"unchanged\",\n  \"uncharted\",\n  \"uncheck\",\n  \"uncivil\",\n  \"unclad\",\n  \"unclaimed\",\n  \"unclamped\",\n  \"unclasp\",\n  \"uncle\",\n  \"unclip\",\n  \"uncloak\",\n  \"unclog\",\n  \"unclothed\",\n  \"uncoated\",\n  \"uncoiled\",\n  \"uncolored\",\n  \"uncombed\",\n  \"uncommon\",\n  \"uncooked\",\n  \"uncork\",\n  \"uncorrupt\",\n  \"uncounted\",\n  \"uncouple\",\n  \"uncouth\",\n  \"uncover\",\n  \"uncross\",\n  \"uncrown\",\n  \"uncrushed\",\n  \"uncured\",\n  \"uncurious\",\n  \"uncurled\",\n  \"uncut\",\n  \"undamaged\",\n  \"undated\",\n  \"undaunted\",\n  \"undead\",\n  \"undecided\",\n  \"undefined\",\n  \"underage\",\n  \"underarm\",\n  \"undercoat\",\n  \"undercook\",\n  \"undercut\",\n  \"underdog\",\n  \"underdone\",\n  \"underfed\",\n  \"underfeed\",\n  \"underfoot\",\n  \"undergo\",\n  \"undergrad\",\n  \"underhand\",\n  \"underline\",\n  \"underling\",\n  \"undermine\",\n  \"undermost\",\n  \"underpaid\",\n  \"underpass\",\n  \"underpay\",\n  \"underrate\",\n  \"undertake\",\n  \"undertone\",\n  \"undertook\",\n  \"undertow\",\n  \"underuse\",\n  \"underwear\",\n  \"underwent\",\n  \"underwire\",\n  \"undesired\",\n  \"undiluted\",\n  \"undivided\",\n  \"undocked\",\n  \"undoing\",\n  \"undone\",\n  \"undrafted\",\n  \"undress\",\n  \"undrilled\",\n  \"undusted\",\n  \"undying\",\n  \"unearned\",\n  \"unearth\",\n  \"unease\",\n  \"uneasily\",\n  \"uneasy\",\n  \"uneatable\",\n  \"uneaten\",\n  \"unedited\",\n  \"unelected\",\n  \"unending\",\n  \"unengaged\",\n  \"unenvied\",\n  \"unequal\",\n  \"unethical\",\n  \"uneven\",\n  \"unexpired\",\n  \"unexposed\",\n  \"unfailing\",\n  \"unfair\",\n  \"unfasten\",\n  \"unfazed\",\n  \"unfeeling\",\n  \"unfiled\",\n  \"unfilled\",\n  \"unfitted\",\n  \"unfitting\",\n  \"unfixable\",\n  \"unfixed\",\n  \"unflawed\",\n  \"unfocused\",\n  \"unfold\",\n  \"unfounded\",\n  \"unframed\",\n  \"unfreeze\",\n  \"unfrosted\",\n  \"unfrozen\",\n  \"unfunded\",\n  \"unglazed\",\n  \"ungloved\",\n  \"unglue\",\n  \"ungodly\",\n  \"ungraded\",\n  \"ungreased\",\n  \"unguarded\",\n  \"unguided\",\n  \"unhappily\",\n  \"unhappy\",\n  \"unharmed\",\n  \"unhealthy\",\n  \"unheard\",\n  \"unhearing\",\n  \"unheated\",\n  \"unhelpful\",\n  \"unhidden\",\n  \"unhinge\",\n  \"unhitched\",\n  \"unholy\",\n  \"unhook\",\n  \"unicorn\",\n  \"unicycle\",\n  \"unified\",\n  \"unifier\",\n  \"uniformed\",\n  \"uniformly\",\n  \"unify\",\n  \"unimpeded\",\n  \"uninjured\",\n  \"uninstall\",\n  \"uninsured\",\n  \"uninvited\",\n  \"union\",\n  \"uniquely\",\n  \"unisexual\",\n  \"unison\",\n  \"unissued\",\n  \"unit\",\n  \"universal\",\n  \"universe\",\n  \"unjustly\",\n  \"unkempt\",\n  \"unkind\",\n  \"unknotted\",\n  \"unknowing\",\n  \"unknown\",\n  \"unlaced\",\n  \"unlatch\",\n  \"unlawful\",\n  \"unleaded\",\n  \"unlearned\",\n  \"unleash\",\n  \"unless\",\n  \"unleveled\",\n  \"unlighted\",\n  \"unlikable\",\n  \"unlimited\",\n  \"unlined\",\n  \"unlinked\",\n  \"unlisted\",\n  \"unlit\",\n  \"unlivable\",\n  \"unloaded\",\n  \"unloader\",\n  \"unlocked\",\n  \"unlocking\",\n  \"unlovable\",\n  \"unloved\",\n  \"unlovely\",\n  \"unloving\",\n  \"unluckily\",\n  \"unlucky\",\n  \"unmade\",\n  \"unmanaged\",\n  \"unmanned\",\n  \"unmapped\",\n  \"unmarked\",\n  \"unmasked\",\n  \"unmasking\",\n  \"unmatched\",\n  \"unmindful\",\n  \"unmixable\",\n  \"unmixed\",\n  \"unmolded\",\n  \"unmoral\",\n  \"unmovable\",\n  \"unmoved\",\n  \"unmoving\",\n  \"unnamable\",\n  \"unnamed\",\n  \"unnatural\",\n  \"unneeded\",\n  \"unnerve\",\n  \"unnerving\",\n  \"unnoticed\",\n  \"unopened\",\n  \"unopposed\",\n  \"unpack\",\n  \"unpadded\",\n  \"unpaid\",\n  \"unpainted\",\n  \"unpaired\",\n  \"unpaved\",\n  \"unpeeled\",\n  \"unpicked\",\n  \"unpiloted\",\n  \"unpinned\",\n  \"unplanned\",\n  \"unplanted\",\n  \"unpleased\",\n  \"unpledged\",\n  \"unplowed\",\n  \"unplug\",\n  \"unpopular\",\n  \"unproven\",\n  \"unquote\",\n  \"unranked\",\n  \"unrated\",\n  \"unraveled\",\n  \"unreached\",\n  \"unread\",\n  \"unreal\",\n  \"unreeling\",\n  \"unrefined\",\n  \"unrelated\",\n  \"unrented\",\n  \"unrest\",\n  \"unretired\",\n  \"unrevised\",\n  \"unrigged\",\n  \"unripe\",\n  \"unrivaled\",\n  \"unroasted\",\n  \"unrobed\",\n  \"unroll\",\n  \"unruffled\",\n  \"unruly\",\n  \"unrushed\",\n  \"unsaddle\",\n  \"unsafe\",\n  \"unsaid\",\n  \"unsalted\",\n  \"unsaved\",\n  \"unsavory\",\n  \"unscathed\",\n  \"unscented\",\n  \"unscrew\",\n  \"unsealed\",\n  \"unseated\",\n  \"unsecured\",\n  \"unseeing\",\n  \"unseemly\",\n  \"unseen\",\n  \"unselect\",\n  \"unselfish\",\n  \"unsent\",\n  \"unsettled\",\n  \"unshackle\",\n  \"unshaken\",\n  \"unshaved\",\n  \"unshaven\",\n  \"unsheathe\",\n  \"unshipped\",\n  \"unsightly\",\n  \"unsigned\",\n  \"unskilled\",\n  \"unsliced\",\n  \"unsmooth\",\n  \"unsnap\",\n  \"unsocial\",\n  \"unsoiled\",\n  \"unsold\",\n  \"unsolved\",\n  \"unsorted\",\n  \"unspoiled\",\n  \"unspoken\",\n  \"unstable\",\n  \"unstaffed\",\n  \"unstamped\",\n  \"unsteady\",\n  \"unsterile\",\n  \"unstirred\",\n  \"unstitch\",\n  \"unstopped\",\n  \"unstuck\",\n  \"unstuffed\",\n  \"unstylish\",\n  \"unsubtle\",\n  \"unsubtly\",\n  \"unsuited\",\n  \"unsure\",\n  \"unsworn\",\n  \"untagged\",\n  \"untainted\",\n  \"untaken\",\n  \"untamed\",\n  \"untangled\",\n  \"untapped\",\n  \"untaxed\",\n  \"unthawed\",\n  \"unthread\",\n  \"untidy\",\n  \"untie\",\n  \"until\",\n  \"untimed\",\n  \"untimely\",\n  \"untitled\",\n  \"untoasted\",\n  \"untold\",\n  \"untouched\",\n  \"untracked\",\n  \"untrained\",\n  \"untreated\",\n  \"untried\",\n  \"untrimmed\",\n  \"untrue\",\n  \"untruth\",\n  \"unturned\",\n  \"untwist\",\n  \"untying\",\n  \"unusable\",\n  \"unused\",\n  \"unusual\",\n  \"unvalued\",\n  \"unvaried\",\n  \"unvarying\",\n  \"unveiled\",\n  \"unveiling\",\n  \"unvented\",\n  \"unviable\",\n  \"unvisited\",\n  \"unvocal\",\n  \"unwanted\",\n  \"unwarlike\",\n  \"unwary\",\n  \"unwashed\",\n  \"unwatched\",\n  \"unweave\",\n  \"unwed\",\n  \"unwelcome\",\n  \"unwell\",\n  \"unwieldy\",\n  \"unwilling\",\n  \"unwind\",\n  \"unwired\",\n  \"unwitting\",\n  \"unwomanly\",\n  \"unworldly\",\n  \"unworn\",\n  \"unworried\",\n  \"unworthy\",\n  \"unwound\",\n  \"unwoven\",\n  \"unwrapped\",\n  \"unwritten\",\n  \"unzip\",\n  \"upbeat\",\n  \"upchuck\",\n  \"upcoming\",\n  \"upcountry\",\n  \"update\",\n  \"upfront\",\n  \"upgrade\",\n  \"upheaval\",\n  \"upheld\",\n  \"uphill\",\n  \"uphold\",\n  \"uplifted\",\n  \"uplifting\",\n  \"upload\",\n  \"upon\",\n  \"upper\",\n  \"upright\",\n  \"uprising\",\n  \"upriver\",\n  \"uproar\",\n  \"uproot\",\n  \"upscale\",\n  \"upside\",\n  \"upstage\",\n  \"upstairs\",\n  \"upstart\",\n  \"upstate\",\n  \"upstream\",\n  \"upstroke\",\n  \"upswing\",\n  \"uptake\",\n  \"uptight\",\n  \"uptown\",\n  \"upturned\",\n  \"upward\",\n  \"upwind\",\n  \"uranium\",\n  \"urban\",\n  \"urchin\",\n  \"urethane\",\n  \"urgency\",\n  \"urgent\",\n  \"urging\",\n  \"urologist\",\n  \"urology\",\n  \"usable\",\n  \"usage\",\n  \"useable\",\n  \"used\",\n  \"uselessly\",\n  \"user\",\n  \"usher\",\n  \"usual\",\n  \"utensil\",\n  \"utility\",\n  \"utilize\",\n  \"utmost\",\n  \"utopia\",\n  \"utter\",\n  \"vacancy\",\n  \"vacant\",\n  \"vacate\",\n  \"vacation\",\n  \"vagabond\",\n  \"vagrancy\",\n  \"vagrantly\",\n  \"vaguely\",\n  \"vagueness\",\n  \"valiant\",\n  \"valid\",\n  \"valium\",\n  \"valley\",\n  \"valuables\",\n  \"value\",\n  \"vanilla\",\n  \"vanish\",\n  \"vanity\",\n  \"vanquish\",\n  \"vantage\",\n  \"vaporizer\",\n  \"variable\",\n  \"variably\",\n  \"varied\",\n  \"variety\",\n  \"various\",\n  \"varmint\",\n  \"varnish\",\n  \"varsity\",\n  \"varying\",\n  \"vascular\",\n  \"vaseline\",\n  \"vastly\",\n  \"vastness\",\n  \"veal\",\n  \"vegan\",\n  \"veggie\",\n  \"vehicular\",\n  \"velcro\",\n  \"velocity\",\n  \"velvet\",\n  \"vendetta\",\n  \"vending\",\n  \"vendor\",\n  \"veneering\",\n  \"vengeful\",\n  \"venomous\",\n  \"ventricle\",\n  \"venture\",\n  \"venue\",\n  \"venus\",\n  \"verbalize\",\n  \"verbally\",\n  \"verbose\",\n  \"verdict\",\n  \"verify\",\n  \"verse\",\n  \"version\",\n  \"versus\",\n  \"vertebrae\",\n  \"vertical\",\n  \"vertigo\",\n  \"very\",\n  \"vessel\",\n  \"vest\",\n  \"veteran\",\n  \"veto\",\n  \"vexingly\",\n  \"viability\",\n  \"viable\",\n  \"vibes\",\n  \"vice\",\n  \"vicinity\",\n  \"victory\",\n  \"video\",\n  \"viewable\",\n  \"viewer\",\n  \"viewing\",\n  \"viewless\",\n  \"viewpoint\",\n  \"vigorous\",\n  \"village\",\n  \"villain\",\n  \"vindicate\",\n  \"vineyard\",\n  \"vintage\",\n  \"violate\",\n  \"violation\",\n  \"violator\",\n  \"violet\",\n  \"violin\",\n  \"viper\",\n  \"viral\",\n  \"virtual\",\n  \"virtuous\",\n  \"virus\",\n  \"visa\",\n  \"viscosity\",\n  \"viscous\",\n  \"viselike\",\n  \"visible\",\n  \"visibly\",\n  \"vision\",\n  \"visiting\",\n  \"visitor\",\n  \"visor\",\n  \"vista\",\n  \"vitality\",\n  \"vitalize\",\n  \"vitally\",\n  \"vitamins\",\n  \"vivacious\",\n  \"vividly\",\n  \"vividness\",\n  \"vixen\",\n  \"vocalist\",\n  \"vocalize\",\n  \"vocally\",\n  \"vocation\",\n  \"voice\",\n  \"voicing\",\n  \"void\",\n  \"volatile\",\n  \"volley\",\n  \"voltage\",\n  \"volumes\",\n  \"voter\",\n  \"voting\",\n  \"voucher\",\n  \"vowed\",\n  \"vowel\",\n  \"voyage\",\n  \"wackiness\",\n  \"wad\",\n  \"wafer\",\n  \"waffle\",\n  \"waged\",\n  \"wager\",\n  \"wages\",\n  \"waggle\",\n  \"wagon\",\n  \"wake\",\n  \"waking\",\n  \"walk\",\n  \"walmart\",\n  \"walnut\",\n  \"walrus\",\n  \"waltz\",\n  \"wand\",\n  \"wannabe\",\n  \"wanted\",\n  \"wanting\",\n  \"wasabi\",\n  \"washable\",\n  \"washbasin\",\n  \"washboard\",\n  \"washbowl\",\n  \"washcloth\",\n  \"washday\",\n  \"washed\",\n  \"washer\",\n  \"washhouse\",\n  \"washing\",\n  \"washout\",\n  \"washroom\",\n  \"washstand\",\n  \"washtub\",\n  \"wasp\",\n  \"wasting\",\n  \"watch\",\n  \"water\",\n  \"waviness\",\n  \"waving\",\n  \"wavy\",\n  \"whacking\",\n  \"whacky\",\n  \"wham\",\n  \"wharf\",\n  \"wheat\",\n  \"whenever\",\n  \"whiff\",\n  \"whimsical\",\n  \"whinny\",\n  \"whiny\",\n  \"whisking\",\n  \"whoever\",\n  \"whole\",\n  \"whomever\",\n  \"whoopee\",\n  \"whooping\",\n  \"whoops\",\n  \"why\",\n  \"wick\",\n  \"widely\",\n  \"widen\",\n  \"widget\",\n  \"widow\",\n  \"width\",\n  \"wieldable\",\n  \"wielder\",\n  \"wife\",\n  \"wifi\",\n  \"wikipedia\",\n  \"wildcard\",\n  \"wildcat\",\n  \"wilder\",\n  \"wildfire\",\n  \"wildfowl\",\n  \"wildland\",\n  \"wildlife\",\n  \"wildly\",\n  \"wildness\",\n  \"willed\",\n  \"willfully\",\n  \"willing\",\n  \"willow\",\n  \"willpower\",\n  \"wilt\",\n  \"wimp\",\n  \"wince\",\n  \"wincing\",\n  \"wind\",\n  \"wing\",\n  \"winking\",\n  \"winner\",\n  \"winnings\",\n  \"winter\",\n  \"wipe\",\n  \"wired\",\n  \"wireless\",\n  \"wiring\",\n  \"wiry\",\n  \"wisdom\",\n  \"wise\",\n  \"wish\",\n  \"wisplike\",\n  \"wispy\",\n  \"wistful\",\n  \"wizard\",\n  \"wobble\",\n  \"wobbling\",\n  \"wobbly\",\n  \"wok\",\n  \"wolf\",\n  \"wolverine\",\n  \"womanhood\",\n  \"womankind\",\n  \"womanless\",\n  \"womanlike\",\n  \"womanly\",\n  \"womb\",\n  \"woof\",\n  \"wooing\",\n  \"wool\",\n  \"woozy\",\n  \"word\",\n  \"work\",\n  \"worried\",\n  \"worrier\",\n  \"worrisome\",\n  \"worry\",\n  \"worsening\",\n  \"worshiper\",\n  \"worst\",\n  \"wound\",\n  \"woven\",\n  \"wow\",\n  \"wrangle\",\n  \"wrath\",\n  \"wreath\",\n  \"wreckage\",\n  \"wrecker\",\n  \"wrecking\",\n  \"wrench\",\n  \"wriggle\",\n  \"wriggly\",\n  \"wrinkle\",\n  \"wrinkly\",\n  \"wrist\",\n  \"writing\",\n  \"written\",\n  \"wrongdoer\",\n  \"wronged\",\n  \"wrongful\",\n  \"wrongly\",\n  \"wrongness\",\n  \"wrought\",\n  \"xbox\",\n  \"xerox\",\n  \"yahoo\",\n  \"yam\",\n  \"yanking\",\n  \"yapping\",\n  \"yard\",\n  \"yarn\",\n  \"yeah\",\n  \"yearbook\",\n  \"yearling\",\n  \"yearly\",\n  \"yearning\",\n  \"yeast\",\n  \"yelling\",\n  \"yelp\",\n  \"yen\",\n  \"yesterday\",\n  \"yiddish\",\n  \"yield\",\n  \"yin\",\n  \"yippee\",\n  \"yo-yo\",\n  \"yodel\",\n  \"yoga\",\n  \"yogurt\",\n  \"yonder\",\n  \"yoyo\",\n  \"yummy\",\n  \"zap\",\n  \"zealous\",\n  \"zebra\",\n  \"zen\",\n  \"zeppelin\",\n  \"zero\",\n  \"zestfully\",\n  \"zesty\",\n  \"zigzagged\",\n  \"zipfile\",\n  \"zipping\",\n  \"zippy\",\n  \"zips\",\n  \"zit\",\n  \"zodiac\",\n  \"zombie\",\n  \"zone\",\n  \"zoning\",\n  \"zookeeper\",\n  \"zoologist\",\n  \"zoology\",\n  \"zoom\",\n];\n","export class EncArrayBuffer {\n  constructor(public buffer: ArrayBuffer) {}\n}\n","import { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncryptedObject {\n  iv: ArrayBuffer;\n  data: ArrayBuffer;\n  mac: ArrayBuffer;\n  key: SymmetricCryptoKey;\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EncryptedOrganizationKeyData } from \"../../models/data/encryptedOrganizationKeyData\";\n\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport abstract class BaseEncryptedOrganizationKey {\n  decrypt: (cryptoService: CryptoService) => Promise<SymmetricCryptoKey>;\n\n  static fromData(data: EncryptedOrganizationKeyData) {\n    switch (data.type) {\n      case \"organization\":\n        return new EncryptedOrganizationKey(data.key);\n\n      case \"provider\":\n        return new ProviderEncryptedOrganizationKey(data.key, data.providerId);\n\n      default:\n        return null;\n    }\n  }\n}\n\nexport class EncryptedOrganizationKey implements BaseEncryptedOrganizationKey {\n  constructor(private key: string) {}\n\n  async decrypt(cryptoService: CryptoService) {\n    const decValue = await cryptoService.rsaDecrypt(this.key);\n    return new SymmetricCryptoKey(decValue);\n  }\n\n  toData(): EncryptedOrganizationKeyData {\n    return {\n      type: \"organization\",\n      key: this.key,\n    };\n  }\n}\n\nexport class ProviderEncryptedOrganizationKey implements BaseEncryptedOrganizationKey {\n  constructor(private key: string, private providerId: string) {}\n\n  async decrypt(cryptoService: CryptoService) {\n    const providerKey = await cryptoService.getProviderKey(this.providerId);\n    const decValue = await cryptoService.decryptToBytes(new EncString(this.key), providerKey);\n    return new SymmetricCryptoKey(decValue);\n  }\n\n  toData(): EncryptedOrganizationKeyData {\n    return {\n      type: \"provider\",\n      key: this.key,\n      providerId: this.providerId,\n    };\n  }\n}\n","import * as bigInt from \"big-integer\";\n\nimport { AbstractEncryptService } from \"../abstractions/abstractEncrypt.service\";\nimport { CryptoService as CryptoServiceAbstraction } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EncryptionType } from \"../enums/encryptionType\";\nimport { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encryptedOrganizationKeyData\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { EncryptedObject } from \"../models/domain/encryptedObject\";\nimport { BaseEncryptedOrganizationKey } from \"../models/domain/encryptedOrganizationKey\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { ProfileOrganizationResponse } from \"../models/response/profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"../models/response/profileProviderResponse\";\n\nexport class CryptoService implements CryptoServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private encryptService: AbstractEncryptService,\n    protected platformUtilService: PlatformUtilsService,\n    protected logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  async setKey(key: SymmetricCryptoKey, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(key, { userId: userId });\n    await this.storeKey(key, userId);\n  }\n\n  async setKeyHash(keyHash: string): Promise<void> {\n    await this.stateService.setKeyHash(keyHash);\n  }\n\n  async setEncKey(encKey: string): Promise<void> {\n    if (encKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedCryptoSymmetricKey(null);\n    await this.stateService.setEncryptedCryptoSymmetricKey(encKey);\n  }\n\n  async setEncPrivateKey(encPrivateKey: string): Promise<void> {\n    if (encPrivateKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedPrivateKey(null);\n    await this.stateService.setEncryptedPrivateKey(encPrivateKey);\n  }\n\n  async setOrgKeys(\n    orgs: ProfileOrganizationResponse[] = [],\n    providerOrgs: ProfileProviderOrganizationResponse[] = []\n  ): Promise<void> {\n    const encOrgKeyData: { [orgId: string]: EncryptedOrganizationKeyData } = {};\n\n    orgs.forEach((org) => {\n      encOrgKeyData[org.id] = {\n        type: \"organization\",\n        key: org.key,\n      };\n    });\n\n    providerOrgs.forEach((org) => {\n      encOrgKeyData[org.id] = {\n        type: \"provider\",\n        providerId: org.providerId,\n        key: org.key,\n      };\n    });\n\n    await this.stateService.setDecryptedOrganizationKeys(null);\n    return await this.stateService.setEncryptedOrganizationKeys(encOrgKeyData);\n  }\n\n  async setProviderKeys(providers: ProfileProviderResponse[]): Promise<void> {\n    const providerKeys: any = {};\n    providers.forEach((provider) => {\n      providerKeys[provider.id] = provider.key;\n    });\n\n    await this.stateService.setDecryptedProviderKeys(null);\n    return await this.stateService.setEncryptedProviderKeys(providerKeys);\n  }\n\n  async getKey(keySuffix?: KeySuffixOptions, userId?: string): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getCryptoMasterKey({ userId: userId });\n\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    keySuffix ||= KeySuffixOptions.Auto;\n    const symmetricKey = await this.getKeyFromStorage(keySuffix, userId);\n\n    if (symmetricKey != null) {\n      // TODO: Refactor here so get key doesn't also set key\n      this.setKey(symmetricKey, userId);\n    }\n\n    return symmetricKey;\n  }\n\n  async getKeyFromStorage(\n    keySuffix: KeySuffixOptions,\n    userId?: string\n  ): Promise<SymmetricCryptoKey> {\n    const key = await this.retrieveKeyFromStorage(keySuffix, userId);\n    if (key != null) {\n      const symmetricKey = new SymmetricCryptoKey(Utils.fromB64ToArray(key).buffer);\n\n      if (!(await this.validateKey(symmetricKey))) {\n        this.logService.warning(\"Wrong key, throwing away stored key\");\n        await this.clearSecretKeyStore(userId);\n        return null;\n      }\n\n      return symmetricKey;\n    }\n    return null;\n  }\n\n  async getKeyHash(): Promise<string> {\n    return await this.stateService.getKeyHash();\n  }\n\n  async compareAndUpdateKeyHash(masterPassword: string, key: SymmetricCryptoKey): Promise<boolean> {\n    const storedKeyHash = await this.getKeyHash();\n    if (masterPassword != null && storedKeyHash != null) {\n      const localKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.LocalAuthorization\n      );\n      if (localKeyHash != null && storedKeyHash === localKeyHash) {\n        return true;\n      }\n\n      // TODO: remove serverKeyHash check in 1-2 releases after everyone's keyHash has been updated\n      const serverKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.ServerAuthorization\n      );\n      if (serverKeyHash != null && storedKeyHash === serverKeyHash) {\n        await this.setKeyHash(localKeyHash);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  @sequentialize(() => \"getEncKey\")\n  getEncKey(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    return this.getEncKeyHelper(key);\n  }\n\n  async getPublicKey(): Promise<ArrayBuffer> {\n    const inMemoryPublicKey = await this.stateService.getPublicKey();\n    if (inMemoryPublicKey != null) {\n      return inMemoryPublicKey;\n    }\n\n    const privateKey = await this.getPrivateKey();\n    if (privateKey == null) {\n      return null;\n    }\n\n    const publicKey = await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    await this.stateService.setPublicKey(publicKey);\n    return publicKey;\n  }\n\n  async getPrivateKey(): Promise<ArrayBuffer> {\n    const decryptedPrivateKey = await this.stateService.getDecryptedPrivateKey();\n    if (decryptedPrivateKey != null) {\n      return decryptedPrivateKey;\n    }\n\n    const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n    if (encPrivateKey == null) {\n      return null;\n    }\n\n    const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), null);\n    await this.stateService.setDecryptedPrivateKey(privateKey);\n    return privateKey;\n  }\n\n  async getFingerprint(userId: string, publicKey?: ArrayBuffer): Promise<string[]> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey === null) {\n      throw new Error(\"No public key available.\");\n    }\n    const keyFingerprint = await this.cryptoFunctionService.hash(publicKey, \"sha256\");\n    const userFingerprint = await this.cryptoFunctionService.hkdfExpand(\n      keyFingerprint,\n      userId,\n      32,\n      \"sha256\"\n    );\n    return this.hashPhrase(userFingerprint);\n  }\n\n  @sequentialize(() => \"getOrgKeys\")\n  async getOrgKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const result: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedOrganizationKeys = await this.stateService.getDecryptedOrganizationKeys();\n    if (decryptedOrganizationKeys != null && decryptedOrganizationKeys.size > 0) {\n      return decryptedOrganizationKeys;\n    }\n\n    const encOrgKeyData = await this.stateService.getEncryptedOrganizationKeys();\n    if (encOrgKeyData == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId of Object.keys(encOrgKeyData)) {\n      if (result.has(orgId)) {\n        continue;\n      }\n\n      const encOrgKey = BaseEncryptedOrganizationKey.fromData(encOrgKeyData[orgId]);\n      const decOrgKey = await encOrgKey.decrypt(this);\n      result.set(orgId, decOrgKey);\n\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedOrganizationKeys(result);\n    }\n\n    return result;\n  }\n\n  async getOrgKey(orgId: string): Promise<SymmetricCryptoKey> {\n    if (orgId == null) {\n      return null;\n    }\n\n    const orgKeys = await this.getOrgKeys();\n    if (orgKeys == null || !orgKeys.has(orgId)) {\n      return null;\n    }\n\n    return orgKeys.get(orgId);\n  }\n\n  @sequentialize(() => \"getProviderKeys\")\n  async getProviderKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const providerKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedProviderKeys = await this.stateService.getDecryptedProviderKeys();\n    if (decryptedProviderKeys != null && decryptedProviderKeys.size > 0) {\n      return decryptedProviderKeys;\n    }\n\n    const encProviderKeys = await this.stateService.getEncryptedProviderKeys();\n    if (encProviderKeys == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId in encProviderKeys) {\n      // eslint-disable-next-line\n      if (!encProviderKeys.hasOwnProperty(orgId)) {\n        continue;\n      }\n\n      const decValue = await this.rsaDecrypt(encProviderKeys[orgId]);\n      providerKeys.set(orgId, new SymmetricCryptoKey(decValue));\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedProviderKeys(providerKeys);\n    }\n\n    return providerKeys;\n  }\n\n  async getProviderKey(providerId: string): Promise<SymmetricCryptoKey> {\n    if (providerId == null) {\n      return null;\n    }\n\n    const providerKeys = await this.getProviderKeys();\n    if (providerKeys == null || !providerKeys.has(providerId)) {\n      return null;\n    }\n\n    return providerKeys.get(providerId);\n  }\n\n  async hasKey(): Promise<boolean> {\n    return (\n      (await this.hasKeyInMemory()) ||\n      (await this.hasKeyStored(KeySuffixOptions.Auto)) ||\n      (await this.hasKeyStored(KeySuffixOptions.Biometric))\n    );\n  }\n\n  async hasKeyInMemory(userId?: string): Promise<boolean> {\n    return (await this.stateService.getCryptoMasterKey({ userId: userId })) != null;\n  }\n\n  async hasKeyStored(keySuffix: KeySuffixOptions, userId?: string): Promise<boolean> {\n    switch (keySuffix) {\n      case KeySuffixOptions.Auto:\n        return (await this.stateService.getCryptoMasterKeyAuto({ userId: userId })) != null;\n      case KeySuffixOptions.Biometric:\n        return (await this.stateService.hasCryptoMasterKeyBiometric({ userId: userId })) === true;\n      default:\n        return false;\n    }\n  }\n\n  async hasEncKey(): Promise<boolean> {\n    return (await this.stateService.getEncryptedCryptoSymmetricKey()) != null;\n  }\n\n  async clearKey(clearSecretStorage = true, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(null, { userId: userId });\n    await this.stateService.setLegacyEtmKey(null, { userId: userId });\n    if (clearSecretStorage) {\n      await this.clearSecretKeyStore(userId);\n    }\n  }\n\n  async clearStoredKey(keySuffix: KeySuffixOptions) {\n    keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.setCryptoMasterKeyAuto(null)\n      : await this.stateService.setCryptoMasterKeyBiometric(null);\n  }\n\n  async clearKeyHash(userId?: string): Promise<any> {\n    return await this.stateService.setKeyHash(null, { userId: userId });\n  }\n\n  async clearEncKey(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCryptoSymmetricKey(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedCryptoSymmetricKey(null, { userId: userId });\n    }\n  }\n\n  async clearKeyPair(memoryOnly?: boolean, userId?: string): Promise<any> {\n    const keysToClear: Promise<void>[] = [\n      this.stateService.setDecryptedPrivateKey(null, { userId: userId }),\n      this.stateService.setPublicKey(null, { userId: userId }),\n    ];\n    if (!memoryOnly) {\n      keysToClear.push(this.stateService.setEncryptedPrivateKey(null, { userId: userId }));\n    }\n    return Promise.all(keysToClear);\n  }\n\n  async clearOrgKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedOrganizationKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedOrganizationKeys(null, { userId: userId });\n    }\n  }\n\n  async clearProviderKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedProviderKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedProviderKeys(null, { userId: userId });\n    }\n  }\n\n  async clearPinProtectedKey(userId?: string): Promise<any> {\n    return await this.stateService.setEncryptedPinProtected(null, { userId: userId });\n  }\n\n  async clearKeys(userId?: string): Promise<any> {\n    await this.clearKey(true, userId);\n    await this.clearKeyHash(userId);\n    await this.clearOrgKeys(false, userId);\n    await this.clearProviderKeys(false, userId);\n    await this.clearEncKey(false, userId);\n    await this.clearKeyPair(false, userId);\n    await this.clearPinProtectedKey(userId);\n  }\n\n  async toggleKey(): Promise<any> {\n    const key = await this.getKey();\n\n    await this.setKey(key);\n  }\n\n  async makeKey(\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    let key: ArrayBuffer = null;\n    if (kdf == null || kdf === KdfType.PBKDF2_SHA256) {\n      if (kdfIterations == null) {\n        kdfIterations = 5000;\n      } else if (kdfIterations < 5000) {\n        throw new Error(\"PBKDF2 iteration minimum is 5000.\");\n      }\n      key = await this.cryptoFunctionService.pbkdf2(password, salt, \"sha256\", kdfIterations);\n    } else {\n      throw new Error(\"Unknown Kdf.\");\n    }\n    return new SymmetricCryptoKey(key);\n  }\n\n  async makeKeyFromPin(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    protectedKeyCs: EncString = null\n  ): Promise<SymmetricCryptoKey> {\n    if (protectedKeyCs == null) {\n      const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n      if (pinProtectedKey == null) {\n        throw new Error(\"No PIN protected key found.\");\n      }\n      protectedKeyCs = new EncString(pinProtectedKey);\n    }\n    const pinKey = await this.makePinKey(pin, salt, kdf, kdfIterations);\n    const decKey = await this.decryptToBytes(protectedKeyCs, pinKey);\n    return new SymmetricCryptoKey(decKey);\n  }\n\n  async makeShareKey(): Promise<[EncString, SymmetricCryptoKey]> {\n    const shareKey = await this.cryptoFunctionService.randomBytes(64);\n    const publicKey = await this.getPublicKey();\n    const encShareKey = await this.rsaEncrypt(shareKey, publicKey);\n    return [encShareKey, new SymmetricCryptoKey(shareKey)];\n  }\n\n  async makeKeyPair(key?: SymmetricCryptoKey): Promise<[string, EncString]> {\n    const keyPair = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n    const publicB64 = Utils.fromBufferToB64(keyPair[0]);\n    const privateEnc = await this.encrypt(keyPair[1], key);\n    return [publicB64, privateEnc];\n  }\n\n  async makePinKey(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    const pinKey = await this.makeKey(pin, salt, kdf, kdfIterations);\n    return await this.stretchKey(pinKey);\n  }\n\n  async makeSendKey(keyMaterial: ArrayBuffer): Promise<SymmetricCryptoKey> {\n    const sendKey = await this.cryptoFunctionService.hkdf(\n      keyMaterial,\n      \"bitwarden-send\",\n      \"send\",\n      64,\n      \"sha256\"\n    );\n    return new SymmetricCryptoKey(sendKey);\n  }\n\n  async hashPassword(\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ): Promise<string> {\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (password == null || key == null) {\n      throw new Error(\"Invalid parameters.\");\n    }\n\n    const iterations = hashPurpose === HashPurpose.LocalAuthorization ? 2 : 1;\n    const hash = await this.cryptoFunctionService.pbkdf2(key.key, password, \"sha256\", iterations);\n    return Utils.fromBufferToB64(hash);\n  }\n\n  async makeEncKey(key: SymmetricCryptoKey): Promise<[SymmetricCryptoKey, EncString]> {\n    const theKey = await this.getKeyForEncryption(key);\n    const encKey = await this.cryptoFunctionService.randomBytes(64);\n    return this.buildEncKey(theKey, encKey);\n  }\n\n  async remakeEncKey(\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    if (encKey == null) {\n      encKey = await this.getEncKey();\n    }\n    return this.buildEncKey(key, encKey.key);\n  }\n\n  /**\n   * @deprecated June 22 2022: This method has been moved to encryptService.\n   * All callers should use this service to grab the relevant key and use encryptService for encryption instead.\n   * This method will be removed once all existing code has been refactored to use encryptService.\n   */\n  async encrypt(plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncString> {\n    key = await this.getKeyForEncryption(key);\n\n    return await this.encryptService.encrypt(plainValue, key);\n  }\n\n  async encryptToBytes(plainValue: ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    const encValue = await this.aesEncrypt(plainValue, key);\n    let macLen = 0;\n    if (encValue.mac != null) {\n      macLen = encValue.mac.byteLength;\n    }\n\n    const encBytes = new Uint8Array(1 + encValue.iv.byteLength + macLen + encValue.data.byteLength);\n    encBytes.set([encValue.key.encType]);\n    encBytes.set(new Uint8Array(encValue.iv), 1);\n    if (encValue.mac != null) {\n      encBytes.set(new Uint8Array(encValue.mac), 1 + encValue.iv.byteLength);\n    }\n\n    encBytes.set(new Uint8Array(encValue.data), 1 + encValue.iv.byteLength + macLen);\n    return new EncArrayBuffer(encBytes.buffer);\n  }\n\n  async rsaEncrypt(data: ArrayBuffer, publicKey?: ArrayBuffer): Promise<EncString> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey == null) {\n      throw new Error(\"Public key unavailable.\");\n    }\n\n    const encBytes = await this.cryptoFunctionService.rsaEncrypt(data, publicKey, \"sha1\");\n    return new EncString(EncryptionType.Rsa2048_OaepSha1_B64, Utils.fromBufferToB64(encBytes));\n  }\n\n  async rsaDecrypt(encValue: string, privateKeyValue?: ArrayBuffer): Promise<ArrayBuffer> {\n    const headerPieces = encValue.split(\".\");\n    let encType: EncryptionType = null;\n    let encPieces: string[];\n\n    if (headerPieces.length === 1) {\n      encType = EncryptionType.Rsa2048_OaepSha256_B64;\n      encPieces = [headerPieces[0]];\n    } else if (headerPieces.length === 2) {\n      try {\n        encType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64: // HmacSha256 types are deprecated\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    if (encPieces == null || encPieces.length <= 0) {\n      throw new Error(\"encPieces unavailable.\");\n    }\n\n    const data = Utils.fromB64ToArray(encPieces[0]).buffer;\n    const privateKey = privateKeyValue ?? (await this.getPrivateKey());\n    if (privateKey == null) {\n      throw new Error(\"No private key.\");\n    }\n\n    let alg: \"sha1\" | \"sha256\" = \"sha1\";\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64:\n        alg = \"sha256\";\n        break;\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    return this.cryptoFunctionService.rsaDecrypt(data, privateKey, alg);\n  }\n\n  async decryptToBytes(encString: EncString, key?: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    const iv = Utils.fromB64ToArray(encString.iv).buffer;\n    const data = Utils.fromB64ToArray(encString.data).buffer;\n    const mac = encString.mac ? Utils.fromB64ToArray(encString.mac).buffer : null;\n    const decipher = await this.aesDecryptToBytes(encString.encryptionType, data, iv, mac, key);\n    if (decipher == null) {\n      return null;\n    }\n\n    return decipher;\n  }\n\n  async decryptToUtf8(encString: EncString, key?: SymmetricCryptoKey): Promise<string> {\n    key = await this.getKeyForEncryption(key);\n    key = await this.resolveLegacyKey(encString.encryptionType, key);\n    return await this.encryptService.decryptToUtf8(encString, key);\n  }\n\n  async decryptFromBytes(encBuf: ArrayBuffer, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    if (encBuf == null) {\n      throw new Error(\"no encBuf.\");\n    }\n\n    const encBytes = new Uint8Array(encBuf);\n    const encType = encBytes[0];\n    let ctBytes: Uint8Array = null;\n    let ivBytes: Uint8Array = null;\n    let macBytes: Uint8Array = null;\n\n    switch (encType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64:\n        if (encBytes.length <= 49) {\n          // 1 + 16 + 32 + ctLength\n          return null;\n        }\n\n        ivBytes = encBytes.slice(1, 17);\n        macBytes = encBytes.slice(17, 49);\n        ctBytes = encBytes.slice(49);\n        break;\n      case EncryptionType.AesCbc256_B64:\n        if (encBytes.length <= 17) {\n          // 1 + 16 + ctLength\n          return null;\n        }\n\n        ivBytes = encBytes.slice(1, 17);\n        ctBytes = encBytes.slice(17);\n        break;\n      default:\n        return null;\n    }\n\n    return await this.aesDecryptToBytes(\n      encType,\n      ctBytes.buffer,\n      ivBytes.buffer,\n      macBytes != null ? macBytes.buffer : null,\n      key\n    );\n  }\n\n  // EFForg/OpenWireless\n  // ref https://github.com/EFForg/OpenWireless/blob/master/app/js/diceware.js\n  async randomNumber(min: number, max: number): Promise<number> {\n    let rval = 0;\n    const range = max - min + 1;\n    const bitsNeeded = Math.ceil(Math.log2(range));\n    if (bitsNeeded > 53) {\n      throw new Error(\"We cannot generate numbers larger than 53 bits.\");\n    }\n\n    const bytesNeeded = Math.ceil(bitsNeeded / 8);\n    const mask = Math.pow(2, bitsNeeded) - 1;\n    // 7776 -> (2^13 = 8192) -1 == 8191 or 0x00001111 11111111\n\n    // Fill a byte array with N random numbers\n    const byteArray = new Uint8Array(await this.cryptoFunctionService.randomBytes(bytesNeeded));\n\n    let p = (bytesNeeded - 1) * 8;\n    for (let i = 0; i < bytesNeeded; i++) {\n      rval += byteArray[i] * Math.pow(2, p);\n      p -= 8;\n    }\n\n    // Use & to apply the mask and reduce the number of recursive lookups\n    rval = rval & mask;\n\n    if (rval >= range) {\n      // Integer out of acceptable range\n      return this.randomNumber(min, max);\n    }\n\n    // Return an integer that falls within the range\n    return min + rval;\n  }\n\n  async validateKey(key: SymmetricCryptoKey) {\n    try {\n      const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n      const encKey = await this.getEncKeyHelper(key);\n      if (encPrivateKey == null || encKey == null) {\n        return false;\n      }\n\n      const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), encKey);\n      await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  }\n\n  // Helpers\n  protected async storeKey(key: SymmetricCryptoKey, userId?: string) {\n    if (await this.shouldStoreKey(KeySuffixOptions.Auto, userId)) {\n      await this.stateService.setCryptoMasterKeyAuto(key.keyB64, { userId: userId });\n    } else if (await this.shouldStoreKey(KeySuffixOptions.Biometric, userId)) {\n      await this.stateService.setCryptoMasterKeyBiometric(key.keyB64, { userId: userId });\n    } else {\n      await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n      await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n    }\n  }\n\n  protected async shouldStoreKey(keySuffix: KeySuffixOptions, userId?: string) {\n    let shouldStoreKey = false;\n    if (keySuffix === KeySuffixOptions.Auto) {\n      const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n      shouldStoreKey = vaultTimeout == null;\n    } else if (keySuffix === KeySuffixOptions.Biometric) {\n      const biometricUnlock = await this.stateService.getBiometricUnlock({ userId: userId });\n      shouldStoreKey = biometricUnlock && this.platformUtilService.supportsSecureStorage();\n    }\n    return shouldStoreKey;\n  }\n\n  protected async retrieveKeyFromStorage(keySuffix: KeySuffixOptions, userId?: string) {\n    return keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.getCryptoMasterKeyAuto({ userId: userId })\n      : await this.stateService.getCryptoMasterKeyBiometric({ userId: userId });\n  }\n\n  /**\n   * @deprecated June 22 2022: This method has been moved to encryptService.\n   * All callers should use encryptService instead. This method will be removed once all existing code has been refactored to use encryptService.\n   */\n  private async aesEncrypt(data: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncryptedObject> {\n    const obj = new EncryptedObject();\n    obj.key = await this.getKeyForEncryption(key);\n    obj.iv = await this.cryptoFunctionService.randomBytes(16);\n    obj.data = await this.cryptoFunctionService.aesEncrypt(data, obj.iv, obj.key.encKey);\n\n    if (obj.key.macKey != null) {\n      const macData = new Uint8Array(obj.iv.byteLength + obj.data.byteLength);\n      macData.set(new Uint8Array(obj.iv), 0);\n      macData.set(new Uint8Array(obj.data), obj.iv.byteLength);\n      obj.mac = await this.cryptoFunctionService.hmac(macData.buffer, obj.key.macKey, \"sha256\");\n    }\n\n    return obj;\n  }\n\n  private async aesDecryptToBytes(\n    encType: EncryptionType,\n    data: ArrayBuffer,\n    iv: ArrayBuffer,\n    mac: ArrayBuffer,\n    key: SymmetricCryptoKey\n  ): Promise<ArrayBuffer> {\n    const keyForEnc = await this.getKeyForEncryption(key);\n    const theKey = await this.resolveLegacyKey(encType, keyForEnc);\n\n    if (theKey.macKey != null && mac == null) {\n      return null;\n    }\n\n    if (theKey.encType !== encType) {\n      return null;\n    }\n\n    if (theKey.macKey != null && mac != null) {\n      const macData = new Uint8Array(iv.byteLength + data.byteLength);\n      macData.set(new Uint8Array(iv), 0);\n      macData.set(new Uint8Array(data), iv.byteLength);\n      const computedMac = await this.cryptoFunctionService.hmac(\n        macData.buffer,\n        theKey.macKey,\n        \"sha256\"\n      );\n      if (computedMac === null) {\n        return null;\n      }\n\n      const macsMatch = await this.cryptoFunctionService.compare(mac, computedMac);\n      if (!macsMatch) {\n        this.logService.error(\"mac failed.\");\n        return null;\n      }\n    }\n\n    return await this.cryptoFunctionService.aesDecrypt(data, iv, theKey.encKey);\n  }\n\n  private async getKeyForEncryption(key?: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    if (key != null) {\n      return key;\n    }\n\n    const encKey = await this.getEncKey();\n    if (encKey != null) {\n      return encKey;\n    }\n\n    return await this.getKey();\n  }\n\n  private async resolveLegacyKey(\n    encType: EncryptionType,\n    key: SymmetricCryptoKey\n  ): Promise<SymmetricCryptoKey> {\n    if (\n      encType === EncryptionType.AesCbc128_HmacSha256_B64 &&\n      key.encType === EncryptionType.AesCbc256_B64\n    ) {\n      // Old encrypt-then-mac scheme, make a new key\n      let legacyKey = await this.stateService.getLegacyEtmKey();\n      if (legacyKey == null) {\n        legacyKey = new SymmetricCryptoKey(key.key, EncryptionType.AesCbc128_HmacSha256_B64);\n        await this.stateService.setLegacyEtmKey(legacyKey);\n      }\n      return legacyKey;\n    }\n\n    return key;\n  }\n\n  private async stretchKey(key: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    const newKey = new Uint8Array(64);\n    const encKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"enc\", 32, \"sha256\");\n    const macKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"mac\", 32, \"sha256\");\n    newKey.set(new Uint8Array(encKey));\n    newKey.set(new Uint8Array(macKey), 32);\n    return new SymmetricCryptoKey(newKey.buffer);\n  }\n\n  private async hashPhrase(hash: ArrayBuffer, minimumEntropy = 64) {\n    const entropyPerWord = Math.log(EEFLongWordList.length) / Math.log(2);\n    let numWords = Math.ceil(minimumEntropy / entropyPerWord);\n\n    const hashArr = Array.from(new Uint8Array(hash));\n    const entropyAvailable = hashArr.length * 4;\n    if (numWords * entropyPerWord > entropyAvailable) {\n      throw new Error(\"Output entropy of hash function is too small\");\n    }\n\n    const phrase: string[] = [];\n    let hashNumber = bigInt.fromArray(hashArr, 256);\n    while (numWords--) {\n      const remainder = hashNumber.mod(EEFLongWordList.length);\n      hashNumber = hashNumber.divide(EEFLongWordList.length);\n      phrase.push(EEFLongWordList[remainder as any]);\n    }\n    return phrase;\n  }\n\n  private async buildEncKey(\n    key: SymmetricCryptoKey,\n    encKey: ArrayBuffer\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    let encKeyEnc: EncString = null;\n    if (key.key.byteLength === 32) {\n      const newKey = await this.stretchKey(key);\n      encKeyEnc = await this.encrypt(encKey, newKey);\n    } else if (key.key.byteLength === 64) {\n      encKeyEnc = await this.encrypt(encKey, key);\n    } else {\n      throw new Error(\"Invalid key size.\");\n    }\n    return [new SymmetricCryptoKey(encKey), encKeyEnc];\n  }\n\n  private async clearSecretKeyStore(userId?: string): Promise<void> {\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n  }\n\n  private async getEncKeyHelper(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getDecryptedCryptoSymmetricKey();\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    const encKey = await this.stateService.getEncryptedCryptoSymmetricKey();\n    if (encKey == null) {\n      return null;\n    }\n\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (key == null) {\n      return null;\n    }\n\n    let decEncKey: ArrayBuffer;\n    const encKeyCipher = new EncString(encKey);\n    if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_B64) {\n      decEncKey = await this.decryptToBytes(encKeyCipher, key);\n    } else if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_HmacSha256_B64) {\n      const newKey = await this.stretchKey(key);\n      decEncKey = await this.decryptToBytes(encKeyCipher, newKey);\n    } else {\n      throw new Error(\"Unsupported encKey type.\");\n    }\n    if (decEncKey == null) {\n      return null;\n    }\n    const symmetricCryptoKey = new SymmetricCryptoKey(decEncKey);\n    await this.stateService.setDecryptedCryptoSymmetricKey(symmetricCryptoKey);\n    return symmetricCryptoKey;\n  }\n}\n","import { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { EncryptedObject } from \"@bitwarden/common/models/domain/encryptedObject\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\n\nimport { AbstractEncryptService } from \"../abstractions/abstractEncrypt.service\";\n\nexport class EncryptService implements AbstractEncryptService {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private logService: LogService,\n    private logMacFailures: boolean\n  ) {}\n\n  async encrypt(plainValue: string | ArrayBuffer, key: SymmetricCryptoKey): Promise<EncString> {\n    if (key == null) {\n      throw new Error(\"no encryption key provided.\");\n    }\n\n    if (plainValue == null) {\n      return Promise.resolve(null);\n    }\n\n    let plainBuf: ArrayBuffer;\n    if (typeof plainValue === \"string\") {\n      plainBuf = Utils.fromUtf8ToArray(plainValue).buffer;\n    } else {\n      plainBuf = plainValue;\n    }\n\n    const encObj = await this.aesEncrypt(plainBuf, key);\n    const iv = Utils.fromBufferToB64(encObj.iv);\n    const data = Utils.fromBufferToB64(encObj.data);\n    const mac = encObj.mac != null ? Utils.fromBufferToB64(encObj.mac) : null;\n    return new EncString(encObj.key.encType, data, iv, mac);\n  }\n\n  async decryptToUtf8(encString: EncString, key: SymmetricCryptoKey): Promise<string> {\n    if (key?.macKey != null && encString?.mac == null) {\n      this.logService.error(\"mac required.\");\n      return null;\n    }\n\n    if (key.encType !== encString.encryptionType) {\n      this.logService.error(\"encType unavailable.\");\n      return null;\n    }\n\n    const fastParams = this.cryptoFunctionService.aesDecryptFastParameters(\n      encString.data,\n      encString.iv,\n      encString.mac,\n      key\n    );\n    if (fastParams.macKey != null && fastParams.mac != null) {\n      const computedMac = await this.cryptoFunctionService.hmacFast(\n        fastParams.macData,\n        fastParams.macKey,\n        \"sha256\"\n      );\n      const macsEqual = await this.cryptoFunctionService.compareFast(fastParams.mac, computedMac);\n      if (!macsEqual) {\n        this.logMacFailed(\"mac failed.\");\n        return null;\n      }\n    }\n\n    return this.cryptoFunctionService.aesDecryptFast(fastParams);\n  }\n\n  private async aesEncrypt(data: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncryptedObject> {\n    const obj = new EncryptedObject();\n    obj.key = key;\n    obj.iv = await this.cryptoFunctionService.randomBytes(16);\n    obj.data = await this.cryptoFunctionService.aesEncrypt(data, obj.iv, obj.key.encKey);\n\n    if (obj.key.macKey != null) {\n      const macData = new Uint8Array(obj.iv.byteLength + obj.data.byteLength);\n      macData.set(new Uint8Array(obj.iv), 0);\n      macData.set(new Uint8Array(obj.data), obj.iv.byteLength);\n      obj.mac = await this.cryptoFunctionService.hmac(macData.buffer, obj.key.macKey, \"sha256\");\n    }\n\n    return obj;\n  }\n\n  private logMacFailed(msg: string) {\n    if (this.logMacFailures) {\n      this.logService.error(msg);\n    }\n  }\n}\n","import { Observable, Subject } from \"rxjs\";\n\nimport {\n  EnvironmentService as EnvironmentServiceAbstraction,\n  Urls,\n} from \"../abstractions/environment.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\n\nexport class EnvironmentService implements EnvironmentServiceAbstraction {\n  private readonly urlsSubject = new Subject<Urls>();\n  urls: Observable<Urls> = this.urlsSubject;\n\n  private baseUrl: string;\n  private webVaultUrl: string;\n  private apiUrl: string;\n  private identityUrl: string;\n  private iconsUrl: string;\n  private notificationsUrl: string;\n  private eventsUrl: string;\n  private keyConnectorUrl: string;\n  private scimUrl: string = null;\n\n  constructor(private stateService: StateService) {\n    this.stateService.activeAccount.subscribe(async () => {\n      await this.setUrlsFromStorage();\n    });\n  }\n\n  hasBaseUrl() {\n    return this.baseUrl != null;\n  }\n\n  getNotificationsUrl() {\n    if (this.notificationsUrl != null) {\n      return this.notificationsUrl;\n    }\n\n    if (this.baseUrl != null) {\n      return this.baseUrl + \"/notifications\";\n    }\n\n    return \"https://notifications.bitwarden.com\";\n  }\n\n  getWebVaultUrl() {\n    if (this.webVaultUrl != null) {\n      return this.webVaultUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl;\n    }\n    return \"https://vault.bitwarden.com\";\n  }\n\n  getSendUrl() {\n    return this.getWebVaultUrl() === \"https://vault.bitwarden.com\"\n      ? \"https://send.bitwarden.com/#\"\n      : this.getWebVaultUrl() + \"/#/send/\";\n  }\n\n  getIconsUrl() {\n    if (this.iconsUrl != null) {\n      return this.iconsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/icons\";\n    }\n\n    return \"https://icons.bitwarden.net\";\n  }\n\n  getApiUrl() {\n    if (this.apiUrl != null) {\n      return this.apiUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/api\";\n    }\n\n    return \"https://api.bitwarden.com\";\n  }\n\n  getIdentityUrl() {\n    if (this.identityUrl != null) {\n      return this.identityUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/identity\";\n    }\n\n    return \"https://identity.bitwarden.com\";\n  }\n\n  getEventsUrl() {\n    if (this.eventsUrl != null) {\n      return this.eventsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/events\";\n    }\n\n    return \"https://events.bitwarden.com\";\n  }\n\n  getKeyConnectorUrl() {\n    return this.keyConnectorUrl;\n  }\n\n  getScimUrl() {\n    if (this.scimUrl != null) {\n      return this.scimUrl + \"/v2\";\n    }\n\n    return this.getWebVaultUrl() === \"https://vault.bitwarden.com\"\n      ? \"https://scim.bitwarden.com/v2\"\n      : this.getWebVaultUrl() + \"/scim/v2\";\n  }\n\n  async setUrlsFromStorage(): Promise<void> {\n    const urls: any = await this.stateService.getEnvironmentUrls();\n    const envUrls = new EnvironmentUrls();\n\n    this.baseUrl = envUrls.base = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = envUrls.api = urls.api;\n    this.identityUrl = envUrls.identity = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = envUrls.events = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n    // scimUrl is not saved to storage\n  }\n\n  async setUrls(urls: Urls): Promise<Urls> {\n    urls.base = this.formatUrl(urls.base);\n    urls.webVault = this.formatUrl(urls.webVault);\n    urls.api = this.formatUrl(urls.api);\n    urls.identity = this.formatUrl(urls.identity);\n    urls.icons = this.formatUrl(urls.icons);\n    urls.notifications = this.formatUrl(urls.notifications);\n    urls.events = this.formatUrl(urls.events);\n    urls.keyConnector = this.formatUrl(urls.keyConnector);\n\n    // scimUrl cannot be cleared\n    urls.scim = this.formatUrl(urls.scim) ?? this.scimUrl;\n\n    await this.stateService.setEnvironmentUrls({\n      base: urls.base,\n      api: urls.api,\n      identity: urls.identity,\n      webVault: urls.webVault,\n      icons: urls.icons,\n      notifications: urls.notifications,\n      events: urls.events,\n      keyConnector: urls.keyConnector,\n      // scimUrl is not saved to storage\n    });\n\n    this.baseUrl = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = urls.api;\n    this.identityUrl = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n    this.scimUrl = urls.scim;\n\n    this.urlsSubject.next(urls);\n\n    return urls;\n  }\n\n  getUrls() {\n    return {\n      base: this.baseUrl,\n      webVault: this.webVaultUrl,\n      api: this.apiUrl,\n      identity: this.identityUrl,\n      icons: this.iconsUrl,\n      notifications: this.notificationsUrl,\n      events: this.eventsUrl,\n      keyConnector: this.keyConnectorUrl,\n      scim: this.scimUrl,\n    };\n  }\n\n  private formatUrl(url: string): string {\n    if (url == null || url === \"\") {\n      return null;\n    }\n\n    url = url.replace(/\\/+$/g, \"\");\n    if (!url.startsWith(\"http://\") && !url.startsWith(\"https://\")) {\n      url = \"https://\" + url;\n    }\n\n    return url.trim();\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventData {\n  type: EventType;\n  cipherId: string;\n  date: string;\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventRequest {\n  type: EventType;\n  cipherId: string;\n  date: string;\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { EventService as EventServiceAbstraction } from \"../abstractions/event.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EventType } from \"../enums/eventType\";\nimport { EventData } from \"../models/data/eventData\";\nimport { EventRequest } from \"../models/request/eventRequest\";\n\nexport class EventService implements EventServiceAbstraction {\n  private inited = false;\n\n  constructor(\n    private apiService: ApiService,\n    private cipherService: CipherService,\n    private stateService: StateService,\n    private logService: LogService,\n    private organizationService: OrganizationService\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.uploadEvents();\n      setInterval(() => this.uploadEvents(), 60 * 1000); // check every 60 seconds\n    }\n  }\n\n  async collect(\n    eventType: EventType,\n    cipherId: string = null,\n    uploadImmediately = false\n  ): Promise<any> {\n    const authed = await this.stateService.getIsAuthenticated();\n    if (!authed) {\n      return;\n    }\n    const organizations = await this.organizationService.getAll();\n    if (organizations == null) {\n      return;\n    }\n    const orgIds = new Set<string>(organizations.filter((o) => o.useEvents).map((o) => o.id));\n    if (orgIds.size === 0) {\n      return;\n    }\n    if (cipherId != null) {\n      const cipher = await this.cipherService.get(cipherId);\n      if (cipher == null || cipher.organizationId == null || !orgIds.has(cipher.organizationId)) {\n        return;\n      }\n    }\n    let eventCollection = await this.stateService.getEventCollection();\n    if (eventCollection == null) {\n      eventCollection = [];\n    }\n    const event = new EventData();\n    event.type = eventType;\n    event.cipherId = cipherId;\n    event.date = new Date().toISOString();\n    eventCollection.push(event);\n    await this.stateService.setEventCollection(eventCollection);\n    if (uploadImmediately) {\n      await this.uploadEvents();\n    }\n  }\n\n  async uploadEvents(userId?: string): Promise<any> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n    const eventCollection = await this.stateService.getEventCollection({ userId: userId });\n    if (eventCollection == null || eventCollection.length === 0) {\n      return;\n    }\n    const request = eventCollection.map((e) => {\n      const req = new EventRequest();\n      req.type = e.type;\n      req.cipherId = e.cipherId;\n      req.date = e.date;\n      return req;\n    });\n    try {\n      await this.apiService.postEventsCollect(request);\n      this.clearEvents(userId);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async clearEvents(userId?: string): Promise<any> {\n    await this.stateService.setEventCollection(null, { userId: userId });\n  }\n}\n","import { Card as CardDomain } from \"../domain/card\";\nimport { EncString } from \"../domain/encString\";\nimport { CardView } from \"../view/cardView\";\n\nexport class CardExport {\n  static template(): CardExport {\n    const req = new CardExport();\n    req.cardholderName = \"John Doe\";\n    req.brand = \"visa\";\n    req.number = \"4242424242424242\";\n    req.expMonth = \"04\";\n    req.expYear = \"2023\";\n    req.code = \"123\";\n    return req;\n  }\n\n  static toView(req: CardExport, view = new CardView()) {\n    view.cardholderName = req.cardholderName;\n    view.brand = req.brand;\n    view.number = req.number;\n    view.expMonth = req.expMonth;\n    view.expYear = req.expYear;\n    view.code = req.code;\n    return view;\n  }\n\n  static toDomain(req: CardExport, domain = new CardDomain()) {\n    domain.cardholderName = req.cardholderName != null ? new EncString(req.cardholderName) : null;\n    domain.brand = req.brand != null ? new EncString(req.brand) : null;\n    domain.number = req.number != null ? new EncString(req.number) : null;\n    domain.expMonth = req.expMonth != null ? new EncString(req.expMonth) : null;\n    domain.expYear = req.expYear != null ? new EncString(req.expYear) : null;\n    domain.code = req.code != null ? new EncString(req.code) : null;\n    return domain;\n  }\n\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(o?: CardView | CardDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof CardView) {\n      this.cardholderName = o.cardholderName;\n      this.brand = o.brand;\n      this.number = o.number;\n      this.expMonth = o.expMonth;\n      this.expYear = o.expYear;\n      this.code = o.code;\n    } else {\n      this.cardholderName = o.cardholderName?.encryptedString;\n      this.brand = o.brand?.encryptedString;\n      this.number = o.number?.encryptedString;\n      this.expMonth = o.expMonth?.encryptedString;\n      this.expYear = o.expYear?.encryptedString;\n      this.code = o.code?.encryptedString;\n    }\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { EncString } from \"../domain/encString\";\nimport { Field as FieldDomain } from \"../domain/field\";\nimport { FieldView } from \"../view/fieldView\";\n\nexport class FieldExport {\n  static template(): FieldExport {\n    const req = new FieldExport();\n    req.name = \"Field name\";\n    req.value = \"Some value\";\n    req.type = FieldType.Text;\n    return req;\n  }\n\n  static toView(req: FieldExport, view = new FieldView()) {\n    view.type = req.type;\n    view.value = req.value;\n    view.name = req.name;\n    view.linkedId = req.linkedId;\n    return view;\n  }\n\n  static toDomain(req: FieldExport, domain = new FieldDomain()) {\n    domain.type = req.type;\n    domain.value = req.value != null ? new EncString(req.value) : null;\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.linkedId = req.linkedId;\n    return domain;\n  }\n\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(o?: FieldView | FieldDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof FieldView) {\n      this.name = o.name;\n      this.value = o.value;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.value = o.value?.encryptedString;\n    }\n    this.type = o.type;\n    this.linkedId = o.linkedId;\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Identity as IdentityDomain } from \"../domain/identity\";\nimport { IdentityView } from \"../view/identityView\";\n\nexport class IdentityExport {\n  static template(): IdentityExport {\n    const req = new IdentityExport();\n    req.title = \"Mr\";\n    req.firstName = \"John\";\n    req.middleName = \"William\";\n    req.lastName = \"Doe\";\n    req.address1 = \"123 Any St\";\n    req.address2 = \"Apt #123\";\n    req.address3 = null;\n    req.city = \"New York\";\n    req.state = \"NY\";\n    req.postalCode = \"10001\";\n    req.country = \"US\";\n    req.company = \"Acme Inc.\";\n    req.email = \"john@company.com\";\n    req.phone = \"5555551234\";\n    req.ssn = \"000-123-4567\";\n    req.username = \"jdoe\";\n    req.passportNumber = \"US-123456789\";\n    req.licenseNumber = \"D123-12-123-12333\";\n    return req;\n  }\n\n  static toView(req: IdentityExport, view = new IdentityView()) {\n    view.title = req.title;\n    view.firstName = req.firstName;\n    view.middleName = req.middleName;\n    view.lastName = req.lastName;\n    view.address1 = req.address1;\n    view.address2 = req.address2;\n    view.address3 = req.address3;\n    view.city = req.city;\n    view.state = req.state;\n    view.postalCode = req.postalCode;\n    view.country = req.country;\n    view.company = req.company;\n    view.email = req.email;\n    view.phone = req.phone;\n    view.ssn = req.ssn;\n    view.username = req.username;\n    view.passportNumber = req.passportNumber;\n    view.licenseNumber = req.licenseNumber;\n    return view;\n  }\n\n  static toDomain(req: IdentityExport, domain = new IdentityDomain()) {\n    domain.title = req.title != null ? new EncString(req.title) : null;\n    domain.firstName = req.firstName != null ? new EncString(req.firstName) : null;\n    domain.middleName = req.middleName != null ? new EncString(req.middleName) : null;\n    domain.lastName = req.lastName != null ? new EncString(req.lastName) : null;\n    domain.address1 = req.address1 != null ? new EncString(req.address1) : null;\n    domain.address2 = req.address2 != null ? new EncString(req.address2) : null;\n    domain.address3 = req.address3 != null ? new EncString(req.address3) : null;\n    domain.city = req.city != null ? new EncString(req.city) : null;\n    domain.state = req.state != null ? new EncString(req.state) : null;\n    domain.postalCode = req.postalCode != null ? new EncString(req.postalCode) : null;\n    domain.country = req.country != null ? new EncString(req.country) : null;\n    domain.company = req.company != null ? new EncString(req.company) : null;\n    domain.email = req.email != null ? new EncString(req.email) : null;\n    domain.phone = req.phone != null ? new EncString(req.phone) : null;\n    domain.ssn = req.ssn != null ? new EncString(req.ssn) : null;\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.passportNumber = req.passportNumber != null ? new EncString(req.passportNumber) : null;\n    domain.licenseNumber = req.licenseNumber != null ? new EncString(req.licenseNumber) : null;\n    return domain;\n  }\n\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(o?: IdentityView | IdentityDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof IdentityView) {\n      this.title = o.title;\n      this.firstName = o.firstName;\n      this.middleName = o.middleName;\n      this.lastName = o.lastName;\n      this.address1 = o.address1;\n      this.address2 = o.address2;\n      this.address3 = o.address3;\n      this.city = o.city;\n      this.state = o.state;\n      this.postalCode = o.postalCode;\n      this.country = o.country;\n      this.company = o.company;\n      this.email = o.email;\n      this.phone = o.phone;\n      this.ssn = o.ssn;\n      this.username = o.username;\n      this.passportNumber = o.passportNumber;\n      this.licenseNumber = o.licenseNumber;\n    } else {\n      this.title = o.title?.encryptedString;\n      this.firstName = o.firstName?.encryptedString;\n      this.middleName = o.middleName?.encryptedString;\n      this.lastName = o.lastName?.encryptedString;\n      this.address1 = o.address1?.encryptedString;\n      this.address2 = o.address2?.encryptedString;\n      this.address3 = o.address3?.encryptedString;\n      this.city = o.city?.encryptedString;\n      this.state = o.state?.encryptedString;\n      this.postalCode = o.postalCode?.encryptedString;\n      this.country = o.country?.encryptedString;\n      this.company = o.company?.encryptedString;\n      this.email = o.email?.encryptedString;\n      this.phone = o.phone?.encryptedString;\n      this.ssn = o.ssn?.encryptedString;\n      this.username = o.username?.encryptedString;\n      this.passportNumber = o.passportNumber?.encryptedString;\n      this.licenseNumber = o.licenseNumber?.encryptedString;\n    }\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { EncString } from \"../domain/encString\";\nimport { LoginUri as LoginUriDomain } from \"../domain/loginUri\";\nimport { LoginUriView } from \"../view/loginUriView\";\n\nexport class LoginUriExport {\n  static template(): LoginUriExport {\n    const req = new LoginUriExport();\n    req.uri = \"https://google.com\";\n    req.match = null;\n    return req;\n  }\n\n  static toView(req: LoginUriExport, view = new LoginUriView()) {\n    view.uri = req.uri;\n    view.match = req.match;\n    return view;\n  }\n\n  static toDomain(req: LoginUriExport, domain = new LoginUriDomain()) {\n    domain.uri = req.uri != null ? new EncString(req.uri) : null;\n    domain.match = req.match;\n    return domain;\n  }\n\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(o?: LoginUriView | LoginUriDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof LoginUriView) {\n      this.uri = o.uri;\n    } else {\n      this.uri = o.uri?.encryptedString;\n    }\n    this.match = o.match;\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Login as LoginDomain } from \"../domain/login\";\nimport { LoginView } from \"../view/loginView\";\n\nimport { LoginUriExport } from \"./loginUriExport\";\n\nexport class LoginExport {\n  static template(): LoginExport {\n    const req = new LoginExport();\n    req.uris = [];\n    req.username = \"jdoe\";\n    req.password = \"myp@ssword123\";\n    req.totp = \"JBSWY3DPEHPK3PXP\";\n    return req;\n  }\n\n  static toView(req: LoginExport, view = new LoginView()) {\n    if (req.uris != null) {\n      view.uris = req.uris.map((u) => LoginUriExport.toView(u));\n    }\n    view.username = req.username;\n    view.password = req.password;\n    view.totp = req.totp;\n    return view;\n  }\n\n  static toDomain(req: LoginExport, domain = new LoginDomain()) {\n    if (req.uris != null) {\n      domain.uris = req.uris.map((u) => LoginUriExport.toDomain(u));\n    }\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.password = req.password != null ? new EncString(req.password) : null;\n    domain.totp = req.totp != null ? new EncString(req.totp) : null;\n    return domain;\n  }\n\n  uris: LoginUriExport[];\n  username: string;\n  password: string;\n  totp: string;\n\n  constructor(o?: LoginView | LoginDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o.uris != null) {\n      if (o instanceof LoginView) {\n        this.uris = o.uris.map((u) => new LoginUriExport(u));\n      } else {\n        this.uris = o.uris.map((u) => new LoginUriExport(u));\n      }\n    }\n\n    if (o instanceof LoginView) {\n      this.username = o.username;\n      this.password = o.password;\n      this.totp = o.totp;\n    } else {\n      this.username = o.username?.encryptedString;\n      this.password = o.password?.encryptedString;\n      this.totp = o.totp?.encryptedString;\n    }\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNote as SecureNoteDomain } from \"../domain/secureNote\";\nimport { SecureNoteView } from \"../view/secureNoteView\";\n\nexport class SecureNoteExport {\n  static template(): SecureNoteExport {\n    const req = new SecureNoteExport();\n    req.type = SecureNoteType.Generic;\n    return req;\n  }\n\n  static toView(req: SecureNoteExport, view = new SecureNoteView()) {\n    view.type = req.type;\n    return view;\n  }\n\n  static toDomain(req: SecureNoteExport, view = new SecureNoteDomain()) {\n    view.type = req.type;\n    return view;\n  }\n\n  type: SecureNoteType;\n\n  constructor(o?: SecureNoteView | SecureNoteDomain) {\n    if (o == null) {\n      return;\n    }\n\n    this.type = o.type;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { EncString } from \"../domain/encString\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { CardExport } from \"./cardExport\";\nimport { FieldExport } from \"./fieldExport\";\nimport { IdentityExport } from \"./identityExport\";\nimport { LoginExport } from \"./loginExport\";\nimport { SecureNoteExport } from \"./secureNoteExport\";\n\nexport class CipherExport {\n  static template(): CipherExport {\n    const req = new CipherExport();\n    req.organizationId = null;\n    req.collectionIds = null;\n    req.folderId = null;\n    req.type = CipherType.Login;\n    req.name = \"Item name\";\n    req.notes = \"Some notes about this item.\";\n    req.favorite = false;\n    req.fields = [];\n    req.login = null;\n    req.secureNote = null;\n    req.card = null;\n    req.identity = null;\n    req.reprompt = CipherRepromptType.None;\n    return req;\n  }\n\n  static toView(req: CipherExport, view = new CipherView()) {\n    view.type = req.type;\n    view.folderId = req.folderId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    if (view.collectionIds || req.collectionIds) {\n      const set = new Set((view.collectionIds ?? []).concat(req.collectionIds ?? []));\n      view.collectionIds = Array.from(set.values());\n    }\n    view.name = req.name;\n    view.notes = req.notes;\n    view.favorite = req.favorite;\n    view.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      view.fields = req.fields.map((f) => FieldExport.toView(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        view.login = LoginExport.toView(req.login);\n        break;\n      case CipherType.SecureNote:\n        view.secureNote = SecureNoteExport.toView(req.secureNote);\n        break;\n      case CipherType.Card:\n        view.card = CardExport.toView(req.card);\n        break;\n      case CipherType.Identity:\n        view.identity = IdentityExport.toView(req.identity);\n        break;\n    }\n\n    return view;\n  }\n\n  static toDomain(req: CipherExport, domain = new CipherDomain()) {\n    domain.type = req.type;\n    domain.folderId = req.folderId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.notes = req.notes != null ? new EncString(req.notes) : null;\n    domain.favorite = req.favorite;\n    domain.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      domain.fields = req.fields.map((f) => FieldExport.toDomain(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        domain.login = LoginExport.toDomain(req.login);\n        break;\n      case CipherType.SecureNote:\n        domain.secureNote = SecureNoteExport.toDomain(req.secureNote);\n        break;\n      case CipherType.Card:\n        domain.card = CardExport.toDomain(req.card);\n        break;\n      case CipherType.Identity:\n        domain.identity = IdentityExport.toDomain(req.identity);\n        break;\n    }\n\n    return domain;\n  }\n\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  collectionIds: string[];\n  name: string;\n  notes: string;\n  favorite: boolean;\n  fields: FieldExport[];\n  login: LoginExport;\n  secureNote: SecureNoteExport;\n  card: CardExport;\n  identity: IdentityExport;\n  reprompt: CipherRepromptType;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.organizationId = o.organizationId;\n    this.folderId = o.folderId;\n    this.type = o.type;\n    this.reprompt = o.reprompt;\n\n    if (o instanceof CipherView) {\n      this.name = o.name;\n      this.notes = o.notes;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.notes = o.notes?.encryptedString;\n    }\n\n    this.favorite = o.favorite;\n\n    if (o.fields != null) {\n      if (o instanceof CipherView) {\n        this.fields = o.fields.map((f) => new FieldExport(f));\n      } else {\n        this.fields = o.fields.map((f) => new FieldExport(f));\n      }\n    }\n\n    switch (o.type) {\n      case CipherType.Login:\n        this.login = new LoginExport(o.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteExport(o.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardExport(o.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityExport(o.identity);\n        break;\n    }\n  }\n}\n","import { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { CipherExport } from \"./cipherExport\";\n\nexport class CipherWithIdExport extends CipherExport {\n  id: string;\n  collectionIds: string[];\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.id = o.id;\n    super.build(o);\n    this.collectionIds = o.collectionIds;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { EncString } from \"../domain/encString\";\nimport { CollectionView } from \"../view/collectionView\";\n\nexport class CollectionExport {\n  static template(): CollectionExport {\n    const req = new CollectionExport();\n    req.organizationId = \"00000000-0000-0000-0000-000000000000\";\n    req.name = \"Collection name\";\n    req.externalId = null;\n    return req;\n  }\n\n  static toView(req: CollectionExport, view = new CollectionView()) {\n    view.name = req.name;\n    view.externalId = req.externalId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    return view;\n  }\n\n  static toDomain(req: CollectionExport, domain = new CollectionDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.externalId = req.externalId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    return domain;\n  }\n\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.organizationId = o.organizationId;\n    if (o instanceof CollectionView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n    this.externalId = o.externalId;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { CollectionView } from \"../view/collectionView\";\n\nimport { CollectionExport } from \"./collectionExport\";\n\nexport class CollectionWithIdExport extends CollectionExport {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\nimport { EventView } from \"../view/eventView\";\n\nexport class EventExport {\n  message: string;\n  appIcon: string;\n  appName: string;\n  userId: string;\n  userName: string;\n  userEmail: string;\n  date: string;\n  ip: string;\n  type: string;\n  installationId: string;\n\n  constructor(event: EventView) {\n    this.message = event.humanReadableMessage;\n    this.appIcon = event.appIcon;\n    this.appName = event.appName;\n    this.userId = event.userId;\n    this.userName = event.userName;\n    this.userEmail = event.userEmail;\n    this.date = event.date;\n    this.ip = event.ip;\n    this.type = EventType[event.type];\n    this.installationId = event.installationId;\n  }\n}\n","import { FolderData } from \"../data/folderData\";\nimport { FolderView } from \"../view/folderView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\n\nexport class Folder extends Domain {\n  id: string;\n  name: EncString;\n  revisionDate: Date;\n\n  constructor(obj?: FolderData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        name: null,\n      },\n      [\"id\"]\n    );\n\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n  }\n\n  decrypt(): Promise<FolderView> {\n    return this.decryptObj(\n      new FolderView(this),\n      {\n        name: null,\n      },\n      null\n    );\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Folder as FolderDomain } from \"../domain/folder\";\nimport { FolderView } from \"../view/folderView\";\n\nexport class FolderExport {\n  static template(): FolderExport {\n    const req = new FolderExport();\n    req.name = \"Folder name\";\n    return req;\n  }\n\n  static toView(req: FolderExport, view = new FolderView()) {\n    view.name = req.name;\n    return view;\n  }\n\n  static toDomain(req: FolderExport, domain = new FolderDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    return domain;\n  }\n\n  name: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    if (o instanceof FolderView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n  }\n}\n","import { Folder as FolderDomain } from \"../domain/folder\";\nimport { FolderView } from \"../view/folderView\";\n\nimport { FolderExport } from \"./folderExport\";\n\nexport class FolderWithIdExport extends FolderExport {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","export enum FileUploadType {\n  Direct = 0,\n  Azure = 1,\n}\n","import * as papa from \"papaparse\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport {\n  ExportFormat,\n  ExportService as ExportServiceAbstraction,\n} from \"../abstractions/export.service\";\nimport { FolderService } from \"../abstractions/folder/folder.service.abstraction\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { DEFAULT_KDF_ITERATIONS, KdfType } from \"../enums/kdfType\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Collection } from \"../models/domain/collection\";\nimport { Folder } from \"../models/domain/folder\";\nimport { CipherWithIdExport as CipherExport } from \"../models/export/cipherWithIdsExport\";\nimport { CollectionWithIdExport as CollectionExport } from \"../models/export/collectionWithIdExport\";\nimport { EventExport } from \"../models/export/eventExport\";\nimport { FolderWithIdExport as FolderExport } from \"../models/export/folderWithIdExport\";\nimport { CollectionDetailsResponse } from \"../models/response/collectionResponse\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { EventView } from \"../models/view/eventView\";\nimport { FolderView } from \"../models/view/folderView\";\n\nexport class ExportService implements ExportServiceAbstraction {\n  constructor(\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private apiService: ApiService,\n    private cryptoService: CryptoService,\n    private cryptoFunctionService: CryptoFunctionService\n  ) {}\n\n  async getExport(format: ExportFormat = \"csv\", organizationId?: string): Promise<string> {\n    if (organizationId) {\n      return await this.getOrganizationExport(organizationId, format);\n    }\n\n    if (format === \"encrypted_json\") {\n      return this.getEncryptedExport();\n    } else {\n      return this.getDecryptedExport(format);\n    }\n  }\n\n  async getPasswordProtectedExport(password: string, organizationId?: string): Promise<string> {\n    const clearText = organizationId\n      ? await this.getOrganizationExport(organizationId, \"json\")\n      : await this.getExport(\"json\");\n\n    const salt = Utils.fromBufferToB64(await this.cryptoFunctionService.randomBytes(16));\n    const kdfIterations = DEFAULT_KDF_ITERATIONS;\n    const key = await this.cryptoService.makePinKey(\n      password,\n      salt,\n      KdfType.PBKDF2_SHA256,\n      kdfIterations\n    );\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), key);\n    const encText = await this.cryptoService.encrypt(clearText, key);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      passwordProtected: true,\n      salt: salt,\n      kdfIterations: kdfIterations,\n      kdfType: KdfType.PBKDF2_SHA256,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      data: encText.encryptedString,\n    };\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  async getOrganizationExport(\n    organizationId: string,\n    format: ExportFormat = \"csv\"\n  ): Promise<string> {\n    if (format === \"encrypted_json\") {\n      return this.getOrganizationEncryptedExport(organizationId);\n    } else {\n      return this.getOrganizationDecryptedExport(organizationId, format);\n    }\n  }\n\n  async getEventExport(events: EventView[]): Promise<string> {\n    return papa.unparse(events.map((e) => new EventExport(e)));\n  }\n\n  getFileName(prefix: string = null, extension = \"csv\"): string {\n    const now = new Date();\n    const dateString =\n      now.getFullYear() +\n      \"\" +\n      this.padNumber(now.getMonth() + 1, 2) +\n      \"\" +\n      this.padNumber(now.getDate(), 2) +\n      this.padNumber(now.getHours(), 2) +\n      \"\" +\n      this.padNumber(now.getMinutes(), 2) +\n      this.padNumber(now.getSeconds(), 2);\n\n    return \"bitwarden\" + (prefix ? \"_\" + prefix : \"\") + \"_export_\" + dateString + \".\" + extension;\n  }\n\n  private async getDecryptedExport(format: \"json\" | \"csv\"): Promise<string> {\n    let decFolders: FolderView[] = [];\n    let decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      firstValueFrom(this.folderService.folderViews$).then((folders) => {\n        decFolders = folders;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAllDecrypted().then((ciphers) => {\n        decCiphers = ciphers.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const foldersMap = new Map<string, FolderView>();\n      decFolders.forEach((f) => {\n        if (f.id != null) {\n          foldersMap.set(f.id, f);\n        }\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n        if (c.organizationId != null) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.folder =\n          c.folderId != null && foldersMap.has(c.folderId) ? foldersMap.get(c.folderId).name : null;\n        cipher.favorite = c.favorite ? 1 : null;\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        folders: [],\n        items: [],\n      };\n\n      decFolders.forEach((f) => {\n        if (f.id == null) {\n          return;\n        }\n        const folder = new FolderExport();\n        folder.build(f);\n        jsonDoc.folders.push(folder);\n      });\n\n      decCiphers.forEach((c) => {\n        if (c.organizationId != null) {\n          return;\n        }\n        const cipher = new CipherExport();\n        cipher.build(c);\n        cipher.collectionIds = null;\n        jsonDoc.items.push(cipher);\n      });\n\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getEncryptedExport(): Promise<string> {\n    let folders: Folder[] = [];\n    let ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      firstValueFrom(this.folderService.folders$).then((f) => {\n        folders = f;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAll().then((c) => {\n        ciphers = c.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid());\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      folders: [],\n      items: [],\n    };\n\n    folders.forEach((f) => {\n      if (f.id == null) {\n        return;\n      }\n      const folder = new FolderExport();\n      folder.build(f);\n      jsonDoc.folders.push(folder);\n    });\n\n    ciphers.forEach((c) => {\n      if (c.organizationId != null) {\n        return;\n      }\n      const cipher = new CipherExport();\n      cipher.build(c);\n      cipher.collectionIds = null;\n      jsonDoc.items.push(cipher);\n    });\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private async getOrganizationDecryptedExport(\n    organizationId: string,\n    format: \"json\" | \"csv\"\n  ): Promise<string> {\n    const decCollections: CollectionView[] = [];\n    const decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getCollections(organizationId).then((collections) => {\n        const collectionPromises: any = [];\n        if (collections != null && collections.data != null && collections.data.length > 0) {\n          collections.data.forEach((c) => {\n            const collection = new Collection(new CollectionData(c as CollectionDetailsResponse));\n            collectionPromises.push(\n              collection.decrypt().then((decCol) => {\n                decCollections.push(decCol);\n              })\n            );\n          });\n        }\n        return Promise.all(collectionPromises);\n      })\n    );\n\n    promises.push(\n      this.apiService.getCiphersOrganization(organizationId).then((ciphers) => {\n        const cipherPromises: any = [];\n        if (ciphers != null && ciphers.data != null && ciphers.data.length > 0) {\n          ciphers.data\n            .filter((c) => c.deletedDate === null)\n            .forEach((c) => {\n              const cipher = new Cipher(new CipherData(c));\n              cipherPromises.push(\n                cipher.decrypt().then((decCipher) => {\n                  decCiphers.push(decCipher);\n                })\n              );\n            });\n        }\n        return Promise.all(cipherPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const collectionsMap = new Map<string, CollectionView>();\n      decCollections.forEach((c) => {\n        collectionsMap.set(c.id, c);\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.collections = [];\n        if (c.collectionIds != null) {\n          cipher.collections = c.collectionIds\n            .filter((id) => collectionsMap.has(id))\n            .map((id) => collectionsMap.get(id).name);\n        }\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        collections: [],\n        items: [],\n      };\n\n      decCollections.forEach((c) => {\n        const collection = new CollectionExport();\n        collection.build(c);\n        jsonDoc.collections.push(collection);\n      });\n\n      decCiphers.forEach((c) => {\n        const cipher = new CipherExport();\n        cipher.build(c);\n        jsonDoc.items.push(cipher);\n      });\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getOrganizationEncryptedExport(organizationId: string): Promise<string> {\n    const collections: Collection[] = [];\n    const ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getCollections(organizationId).then((c) => {\n        const collectionPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data.forEach((r) => {\n            const collection = new Collection(new CollectionData(r as CollectionDetailsResponse));\n            collections.push(collection);\n          });\n        }\n        return Promise.all(collectionPromises);\n      })\n    );\n\n    promises.push(\n      this.apiService.getCiphersOrganization(organizationId).then((c) => {\n        const cipherPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data\n            .filter((item) => item.deletedDate === null)\n            .forEach((item) => {\n              const cipher = new Cipher(new CipherData(item));\n              ciphers.push(cipher);\n            });\n        }\n        return Promise.all(cipherPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const orgKey = await this.cryptoService.getOrgKey(organizationId);\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), orgKey);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      collections: [],\n      items: [],\n    };\n\n    collections.forEach((c) => {\n      const collection = new CollectionExport();\n      collection.build(c);\n      jsonDoc.collections.push(collection);\n    });\n\n    ciphers.forEach((c) => {\n      const cipher = new CipherExport();\n      cipher.build(c);\n      jsonDoc.items.push(cipher);\n    });\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private padNumber(num: number, width: number, padCharacter = \"0\"): string {\n    const numString = num.toString();\n    return numString.length >= width\n      ? numString\n      : new Array(width - numString.length + 1).join(padCharacter) + numString;\n  }\n\n  private buildCommonCipher(cipher: any, c: CipherView) {\n    cipher.type = null;\n    cipher.name = c.name;\n    cipher.notes = c.notes;\n    cipher.fields = null;\n    cipher.reprompt = c.reprompt;\n    // Login props\n    cipher.login_uri = null;\n    cipher.login_username = null;\n    cipher.login_password = null;\n    cipher.login_totp = null;\n\n    if (c.fields) {\n      c.fields.forEach((f: any) => {\n        if (!cipher.fields) {\n          cipher.fields = \"\";\n        } else {\n          cipher.fields += \"\\n\";\n        }\n\n        cipher.fields += (f.name || \"\") + \": \" + f.value;\n      });\n    }\n\n    switch (c.type) {\n      case CipherType.Login:\n        cipher.type = \"login\";\n        cipher.login_username = c.login.username;\n        cipher.login_password = c.login.password;\n        cipher.login_totp = c.login.totp;\n\n        if (c.login.uris) {\n          cipher.login_uri = [];\n          c.login.uris.forEach((u) => {\n            cipher.login_uri.push(u.uri);\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        cipher.type = \"note\";\n        break;\n      default:\n        return;\n    }\n\n    return cipher;\n  }\n}\n","import { LogService } from \"../abstractions/log.service\";\nimport { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nconst MAX_SINGLE_BLOB_UPLOAD_SIZE = 256 * 1024 * 1024; // 256 MiB\nconst MAX_BLOCKS_PER_BLOB = 50000;\n\nexport class AzureFileUploadService {\n  constructor(private logService: LogService) {}\n\n  async upload(url: string, data: EncArrayBuffer, renewalCallback: () => Promise<string>) {\n    if (data.buffer.byteLength <= MAX_SINGLE_BLOB_UPLOAD_SIZE) {\n      return await this.azureUploadBlob(url, data);\n    } else {\n      return await this.azureUploadBlocks(url, data, renewalCallback);\n    }\n  }\n  private async azureUploadBlob(url: string, data: EncArrayBuffer) {\n    const urlObject = Utils.getUrl(url);\n    const headers = new Headers({\n      \"x-ms-date\": new Date().toUTCString(),\n      \"x-ms-version\": urlObject.searchParams.get(\"sv\"),\n      \"Content-Length\": data.buffer.byteLength.toString(),\n      \"x-ms-blob-type\": \"BlockBlob\",\n    });\n\n    const request = new Request(url, {\n      body: data.buffer,\n      cache: \"no-store\",\n      method: \"PUT\",\n      headers: headers,\n    });\n\n    const blobResponse = await fetch(request);\n\n    if (blobResponse.status !== 201) {\n      throw new Error(`Failed to create Azure blob: ${blobResponse.status}`);\n    }\n  }\n  private async azureUploadBlocks(\n    url: string,\n    data: EncArrayBuffer,\n    renewalCallback: () => Promise<string>\n  ) {\n    const baseUrl = Utils.getUrl(url);\n    const blockSize = this.getMaxBlockSize(baseUrl.searchParams.get(\"sv\"));\n    let blockIndex = 0;\n    const numBlocks = Math.ceil(data.buffer.byteLength / blockSize);\n    const blocksStaged: string[] = [];\n\n    if (numBlocks > MAX_BLOCKS_PER_BLOB) {\n      throw new Error(\n        `Cannot upload file, exceeds maximum size of ${blockSize * MAX_BLOCKS_PER_BLOB}`\n      );\n    }\n\n    // eslint-disable-next-line\n    try {\n      while (blockIndex < numBlocks) {\n        url = await this.renewUrlIfNecessary(url, renewalCallback);\n        const blockUrl = Utils.getUrl(url);\n        const blockId = this.encodedBlockId(blockIndex);\n        blockUrl.searchParams.append(\"comp\", \"block\");\n        blockUrl.searchParams.append(\"blockid\", blockId);\n        const start = blockIndex * blockSize;\n        const blockData = data.buffer.slice(start, start + blockSize);\n        const blockHeaders = new Headers({\n          \"x-ms-date\": new Date().toUTCString(),\n          \"x-ms-version\": blockUrl.searchParams.get(\"sv\"),\n          \"Content-Length\": blockData.byteLength.toString(),\n        });\n\n        const blockRequest = new Request(blockUrl.toString(), {\n          body: blockData,\n          cache: \"no-store\",\n          method: \"PUT\",\n          headers: blockHeaders,\n        });\n\n        const blockResponse = await fetch(blockRequest);\n\n        if (blockResponse.status !== 201) {\n          const message = `Unsuccessful block PUT. Received status ${blockResponse.status}`;\n          this.logService.error(message + \"\\n\" + (await blockResponse.json()));\n          throw new Error(message);\n        }\n\n        blocksStaged.push(blockId);\n        blockIndex++;\n      }\n\n      url = await this.renewUrlIfNecessary(url, renewalCallback);\n      const blockListUrl = Utils.getUrl(url);\n      const blockListXml = this.blockListXml(blocksStaged);\n      blockListUrl.searchParams.append(\"comp\", \"blocklist\");\n      const headers = new Headers({\n        \"x-ms-date\": new Date().toUTCString(),\n        \"x-ms-version\": blockListUrl.searchParams.get(\"sv\"),\n        \"Content-Length\": blockListXml.length.toString(),\n      });\n\n      const request = new Request(blockListUrl.toString(), {\n        body: blockListXml,\n        cache: \"no-store\",\n        method: \"PUT\",\n        headers: headers,\n      });\n\n      const response = await fetch(request);\n\n      if (response.status !== 201) {\n        const message = `Unsuccessful block list PUT. Received status ${response.status}`;\n        this.logService.error(message + \"\\n\" + (await response.json()));\n        throw new Error(message);\n      }\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  private async renewUrlIfNecessary(\n    url: string,\n    renewalCallback: () => Promise<string>\n  ): Promise<string> {\n    const urlObject = Utils.getUrl(url);\n    const expiry = new Date(urlObject.searchParams.get(\"se\") ?? \"\");\n\n    if (isNaN(expiry.getTime())) {\n      expiry.setTime(Date.now() + 3600000);\n    }\n\n    if (expiry.getTime() < Date.now() + 1000) {\n      return await renewalCallback();\n    }\n    return url;\n  }\n\n  private encodedBlockId(blockIndex: number) {\n    // Encoded blockId max size is 64, so pre-encoding max size is 48\n    const utfBlockId = (\n      \"000000000000000000000000000000000000000000000000\" + blockIndex.toString()\n    ).slice(-48);\n    return Utils.fromUtf8ToB64(utfBlockId);\n  }\n\n  private blockListXml(blockIdList: string[]) {\n    let xml = '<?xml version=\"1.0\" encoding=\"utf-8\"?><BlockList>';\n    blockIdList.forEach((blockId) => {\n      xml += `<Latest>${blockId}</Latest>`;\n    });\n    xml += \"</BlockList>\";\n    return xml;\n  }\n\n  private getMaxBlockSize(version: string) {\n    if (Version.compare(version, \"2019-12-12\") >= 0) {\n      return 4000 * 1024 * 1024; // 4000 MiB\n    } else if (Version.compare(version, \"2016-05-31\") >= 0) {\n      return 100 * 1024 * 1024; // 100 MiB\n    } else {\n      return 4 * 1024 * 1024; // 4 MiB\n    }\n  }\n}\n\nclass Version {\n  /**\n   * Compares two Azure Versions against each other\n   * @param a Version to compare\n   * @param b Version to compare\n   * @returns a number less than zero if b is newer than a, 0 if equal,\n   * and greater than zero if a is newer than b\n   */\n  static compare(a: Required<Version> | string, b: Required<Version> | string) {\n    if (typeof a === \"string\") {\n      a = new Version(a);\n    }\n\n    if (typeof b === \"string\") {\n      b = new Version(b);\n    }\n\n    return a.year !== b.year\n      ? a.year - b.year\n      : a.month !== b.month\n      ? a.month - b.month\n      : a.day !== b.day\n      ? a.day - b.day\n      : 0;\n  }\n  year = 0;\n  month = 0;\n  day = 0;\n\n  constructor(version: string) {\n    try {\n      const parts = version.split(\"-\").map((v) => Number.parseInt(v, 10));\n      this.year = parts[0];\n      this.month = parts[1];\n      this.day = parts[2];\n    } catch {\n      // Ignore error\n    }\n  }\n  /**\n   * Compares two Azure Versions against each other\n   * @param compareTo Version to compare against\n   * @returns a number less than zero if compareTo is newer, 0 if equal,\n   * and greater than zero if this is greater than compareTo\n   */\n  compare(compareTo: Required<Version> | string) {\n    return Version.compare(this, compareTo);\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nexport class BitwardenFileUploadService {\n  constructor(private apiService: ApiService) {}\n\n  async upload(\n    encryptedFileName: string,\n    encryptedFileData: EncArrayBuffer,\n    apiCall: (fd: FormData) => Promise<any>\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encryptedFileData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"data\", blob, encryptedFileName);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\n          \"data\",\n          Buffer.from(encryptedFileData.buffer) as any,\n          {\n            filepath: encryptedFileName,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    await apiCall(fd);\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"../abstractions/fileUpload.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { FileUploadType } from \"../enums/fileUploadType\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\n\nimport { AzureFileUploadService } from \"./azureFileUpload.service\";\nimport { BitwardenFileUploadService } from \"./bitwardenFileUpload.service\";\n\nexport class FileUploadService implements FileUploadServiceAbstraction {\n  private azureFileUploadService: AzureFileUploadService;\n  private bitwardenFileUploadService: BitwardenFileUploadService;\n\n  constructor(private logService: LogService, private apiService: ApiService) {\n    this.azureFileUploadService = new AzureFileUploadService(logService);\n    this.bitwardenFileUploadService = new BitwardenFileUploadService(apiService);\n  }\n\n  async uploadSendFile(\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            fileName.encryptedString,\n            encryptedFileData,\n            (fd) =>\n              this.apiService.postSendFile(\n                uploadData.sendResponse.id,\n                uploadData.sendResponse.file.id,\n                fd\n              )\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewSendFileUploadUrl(\n              uploadData.sendResponse.id,\n              uploadData.sendResponse.file.id\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type\");\n      }\n    } catch (e) {\n      await this.apiService.deleteSend(uploadData.sendResponse.id);\n      throw e;\n    }\n  }\n\n  async uploadCipherAttachment(\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    encryptedFileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    const response = admin ? uploadData.cipherMiniResponse : uploadData.cipherResponse;\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            encryptedFileName.encryptedString,\n            encryptedFileData,\n            (fd) => this.apiService.postAttachmentFile(response.id, uploadData.attachmentId, fd)\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewAttachmentUploadUrl(\n              response.id,\n              uploadData.attachmentId\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type.\");\n      }\n    } catch (e) {\n      if (admin) {\n        await this.apiService.deleteCipherAttachmentAdmin(response.id, uploadData.attachmentId);\n      } else {\n        await this.apiService.deleteCipherAttachment(response.id, uploadData.attachmentId);\n      }\n      throw e;\n    }\n  }\n}\n","import { FolderResponse } from \"../response/folderResponse\";\n\nexport class FolderData {\n  id: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: FolderResponse) {\n    this.name = response.name;\n    this.id = response.id;\n    this.revisionDate = response.revisionDate;\n  }\n}\n","import { Folder } from \"../domain/folder\";\n\nexport class FolderRequest {\n  name: string;\n\n  constructor(folder: Folder) {\n    this.name = folder.name ? folder.name.encryptedString : null;\n  }\n}\n","import { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { InternalFolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { FolderData } from \"@bitwarden/common/models/data/folderData\";\nimport { Folder } from \"@bitwarden/common/models/domain/folder\";\nimport { FolderRequest } from \"@bitwarden/common/models/request/folderRequest\";\nimport { FolderResponse } from \"@bitwarden/common/models/response/folderResponse\";\n\nexport class FolderApiService implements FolderApiServiceAbstraction {\n  constructor(private folderService: InternalFolderService, private apiService: ApiService) {}\n\n  async save(folder: Folder): Promise<any> {\n    const request = new FolderRequest(folder);\n\n    let response: FolderResponse;\n    if (folder.id == null) {\n      response = await this.postFolder(request);\n      folder.id = response.id;\n    } else {\n      response = await this.putFolder(folder.id, request);\n    }\n\n    const data = new FolderData(response);\n    await this.folderService.upsert(data);\n  }\n\n  async delete(id: string): Promise<any> {\n    await this.deleteFolder(id);\n    await this.folderService.delete(id);\n  }\n\n  async get(id: string): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"GET\", \"/folders/\" + id, null, true, true);\n    return new FolderResponse(r);\n  }\n\n  private async postFolder(request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"POST\", \"/folders\", request, true, true);\n    return new FolderResponse(r);\n  }\n\n  async putFolder(id: string, request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"PUT\", \"/folders/\" + id, request, true, true);\n    return new FolderResponse(r);\n  }\n\n  private deleteFolder(id: string): Promise<any> {\n    return this.apiService.send(\"DELETE\", \"/folders/\" + id, null, true, false);\n  }\n}\n","export enum OrganizationUserType {\n  Owner = 0,\n  Admin = 1,\n  User = 2,\n  Manager = 3,\n  Custom = 4,\n}\n","import { BehaviorSubject } from \"rxjs\";\n\nimport { CipherService } from \"../../abstractions/cipher.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { InternalFolderService as InternalFolderServiceAbstraction } from \"../../abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"../../abstractions/i18n.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { Utils } from \"../../misc/utils\";\nimport { CipherData } from \"../../models/data/cipherData\";\nimport { FolderData } from \"../../models/data/folderData\";\nimport { Folder } from \"../../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetricCryptoKey\";\nimport { FolderView } from \"../../models/view/folderView\";\n\nexport class FolderService implements InternalFolderServiceAbstraction {\n  private _folders: BehaviorSubject<Folder[]> = new BehaviorSubject([]);\n  private _folderViews: BehaviorSubject<FolderView[]> = new BehaviorSubject([]);\n\n  folders$ = this._folders.asObservable();\n  folderViews$ = this._folderViews.asObservable();\n\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private cipherService: CipherService,\n    private stateService: StateService\n  ) {\n    this.stateService.activeAccountUnlocked.subscribe(async (unlocked) => {\n      if ((Utils.global as any).bitwardenContainerService == null) {\n        return;\n      }\n\n      if (!unlocked) {\n        this._folders.next([]);\n        this._folderViews.next([]);\n        return;\n      }\n\n      const data = await this.stateService.getEncryptedFolders();\n\n      await this.updateObservables(data);\n    });\n  }\n\n  async clearCache(): Promise<void> {\n    this._folderViews.next([]);\n  }\n\n  // TODO: This should be moved to EncryptService or something\n  async encrypt(model: FolderView, key?: SymmetricCryptoKey): Promise<Folder> {\n    const folder = new Folder();\n    folder.id = model.id;\n    folder.name = await this.cryptoService.encrypt(model.name, key);\n    return folder;\n  }\n\n  async get(id: string): Promise<Folder> {\n    const folders = this._folders.getValue();\n\n    return folders.find((folder) => folder.id === id);\n  }\n\n  /**\n   * @deprecated Only use in CLI!\n   */\n  async getAllDecryptedFromState(): Promise<FolderView[]> {\n    const data = await this.stateService.getEncryptedFolders();\n    const folders = Object.values(data || {}).map((f) => new Folder(f));\n\n    return this.decryptFolders(folders);\n  }\n\n  async upsert(folder: FolderData | FolderData[]): Promise<void> {\n    let folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      folders = {};\n    }\n\n    if (folder instanceof FolderData) {\n      const f = folder as FolderData;\n      folders[f.id] = f;\n    } else {\n      (folder as FolderData[]).forEach((f) => {\n        folders[f.id] = f;\n      });\n    }\n\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async replace(folders: { [id: string]: FolderData }): Promise<void> {\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    if (userId == null || userId == (await this.stateService.getUserId())) {\n      this._folders.next([]);\n      this._folderViews.next([]);\n    }\n    await this.stateService.setEncryptedFolders(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (folders[id] == null) {\n        return;\n      }\n      delete folders[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete folders[i];\n      });\n    }\n\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n\n    // Items in a deleted folder are re-assigned to \"No Folder\"\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers != null) {\n      const updates: CipherData[] = [];\n      for (const cId in ciphers) {\n        if (ciphers[cId].folderId === id) {\n          ciphers[cId].folderId = null;\n          updates.push(ciphers[cId]);\n        }\n      }\n      if (updates.length > 0) {\n        this.cipherService.upsert(updates);\n      }\n    }\n  }\n\n  private async updateObservables(foldersMap: { [id: string]: FolderData }) {\n    const folders = Object.values(foldersMap || {}).map((f) => new Folder(f));\n\n    this._folders.next(folders);\n\n    if (await this.cryptoService.hasKey()) {\n      this._folderViews.next(await this.decryptFolders(folders));\n    }\n  }\n\n  private async decryptFolders(folders: Folder[]) {\n    const decryptFolderPromises = folders.map((f) => f.decrypt());\n    const decryptedFolders = await Promise.all(decryptFolderPromises);\n\n    decryptedFolders.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    const noneFolder = new FolderView();\n    noneFolder.name = this.i18nService.t(\"noneFolder\");\n    decryptedFolders.push(noneFolder);\n\n    return decryptedFolders;\n  }\n}\n","import { KdfType } from \"../../../enums/kdfType\";\nimport { KeysRequest } from \"../keysRequest\";\n\nexport class SetKeyConnectorKeyRequest {\n  key: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    key: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.key = key;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","export class KeyConnectorUserKeyRequest {\n  key: string;\n\n  constructor(key: string) {\n    this.key = key;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { OrganizationUserType } from \"../enums/organizationUserType\";\nimport { Utils } from \"../misc/utils\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport class KeyConnectorService implements KeyConnectorServiceAbstraction {\n  constructor(\n    private stateService: StateService,\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private tokenService: TokenService,\n    private logService: LogService,\n    private organizationService: OrganizationService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private logoutCallback: (expired: boolean, userId?: string) => void\n  ) {}\n\n  setUsesKeyConnector(usesKeyConnector: boolean) {\n    return this.stateService.setUsesKeyConnector(usesKeyConnector);\n  }\n\n  async getUsesKeyConnector(): Promise<boolean> {\n    return await this.stateService.getUsesKeyConnector();\n  }\n\n  async userNeedsMigration() {\n    const loggedInUsingSso = await this.tokenService.getIsExternal();\n    const requiredByOrganization = (await this.getManagingOrganization()) != null;\n    const userIsNotUsingKeyConnector = !(await this.getUsesKeyConnector());\n\n    return loggedInUsingSso && requiredByOrganization && userIsNotUsingKeyConnector;\n  }\n\n  async migrateUser() {\n    const organization = await this.getManagingOrganization();\n    const key = await this.cryptoService.getKey();\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(key.encKeyB64);\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(\n        organization.keyConnectorUrl,\n        keyConnectorRequest\n      );\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n\n    await this.apiService.postConvertToKeyConnector();\n  }\n\n  async getAndSetKey(url: string) {\n    try {\n      const userKeyResponse = await this.apiService.getUserKeyFromKeyConnector(url);\n      const keyArr = Utils.fromB64ToArray(userKeyResponse.key);\n      const k = new SymmetricCryptoKey(keyArr);\n      await this.cryptoService.setKey(k);\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n  }\n\n  async getManagingOrganization() {\n    const orgs = await this.organizationService.getAll();\n    return orgs.find(\n      (o) =>\n        o.keyConnectorEnabled &&\n        o.type !== OrganizationUserType.Admin &&\n        o.type !== OrganizationUserType.Owner &&\n        !o.isProviderUser\n    );\n  }\n\n  async convertNewSsoUserToKeyConnector(tokenResponse: IdentityTokenResponse, orgId: string) {\n    const { kdf, kdfIterations, keyConnectorUrl } = tokenResponse;\n    const password = await this.cryptoFunctionService.randomBytes(64);\n\n    const k = await this.cryptoService.makeKey(\n      Utils.fromBufferToB64(password),\n      await this.tokenService.getEmail(),\n      kdf,\n      kdfIterations\n    );\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(k.encKeyB64);\n    await this.cryptoService.setKey(k);\n\n    const encKey = await this.cryptoService.makeEncKey(k);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n\n    const [pubKey, privKey] = await this.cryptoService.makeKeyPair();\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(keyConnectorUrl, keyConnectorRequest);\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n\n    const keys = new KeysRequest(pubKey, privKey.encryptedString);\n    const setPasswordRequest = new SetKeyConnectorKeyRequest(\n      encKey[1].encryptedString,\n      kdf,\n      kdfIterations,\n      orgId,\n      keys\n    );\n    await this.apiService.postSetKeyConnectorKey(setPasswordRequest);\n  }\n\n  async setConvertAccountRequired(status: boolean) {\n    await this.stateService.setConvertAccountToKeyConnector(status);\n  }\n\n  async getConvertAccountRequired(): Promise<boolean> {\n    return await this.stateService.getConvertAccountToKeyConnector();\n  }\n\n  async removeConvertAccountRequired() {\n    await this.stateService.setConvertAccountToKeyConnector(null);\n  }\n\n  async clear() {\n    await this.removeConvertAccountRequired();\n  }\n\n  private handleKeyConnectorError(e: any) {\n    this.logService.error(e);\n    if (this.logoutCallback != null) {\n      this.logoutCallback(false);\n    }\n    throw new Error(\"Key Connector error\");\n  }\n}\n","export enum NotificationType {\n  SyncCipherUpdate = 0,\n  SyncCipherCreate = 1,\n  SyncLoginDelete = 2,\n  SyncFolderDelete = 3,\n  SyncCiphers = 4,\n\n  SyncVault = 5,\n  SyncOrgKeys = 6,\n  SyncFolderCreate = 7,\n  SyncFolderUpdate = 8,\n  SyncCipherDelete = 9,\n  SyncSettings = 10,\n\n  LogOut = 11,\n\n  SyncSendCreate = 12,\n  SyncSendUpdate = 13,\n  SyncSendDelete = 14,\n}\n","import { NotificationType } from \"../../enums/notificationType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class NotificationResponse extends BaseResponse {\n  contextId: string;\n  type: NotificationType;\n  payload: any;\n\n  constructor(response: any) {\n    super(response);\n    this.contextId = this.getResponseProperty(\"ContextId\");\n    this.type = this.getResponseProperty(\"Type\");\n\n    const payload = this.getResponseProperty(\"Payload\");\n    switch (this.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncCipherUpdate:\n      case NotificationType.SyncLoginDelete:\n        this.payload = new SyncCipherNotification(payload);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderDelete:\n      case NotificationType.SyncFolderUpdate:\n        this.payload = new SyncFolderNotification(payload);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncOrgKeys:\n      case NotificationType.SyncSettings:\n      case NotificationType.LogOut:\n        this.payload = new UserNotification(payload);\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n      case NotificationType.SyncSendDelete:\n        this.payload = new SyncSendNotification(payload);\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nexport class SyncCipherNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  organizationId: string;\n  collectionIds: string[];\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class SyncFolderNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class UserNotification extends BaseResponse {\n  userId: string;\n  date: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.date = new Date(this.getResponseProperty(\"Date\"));\n  }\n}\n\nexport class SyncSendNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n","export enum Permissions {\n  AccessEventLogs,\n  AccessImportExport,\n  AccessReports,\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `createNewCollections`, `editAnyCollection`, and\n   * `deleteAnyCollection`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  ManageAllCollections,\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `editAssignedCollections` and\n   * `deleteAssignedCollections`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  ManageAssignedCollections,\n  ManageGroups,\n  ManageOrganization,\n  ManagePolicies,\n  ManageProvider,\n  ManageUsers,\n  ManageUsersPassword,\n  CreateNewCollections,\n  EditAnyCollection,\n  DeleteAnyCollection,\n  EditAssignedCollections,\n  DeleteAssignedCollections,\n  ManageSso,\n  ManageBilling,\n  ManageScim,\n}\n","import * as signalR from \"@microsoft/signalr\";\nimport * as signalRMsgPack from \"@microsoft/signalr-protocol-msgpack\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { AuthService } from \"../abstractions/auth.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"../abstractions/notifications.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SyncService } from \"../abstractions/sync.service\";\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { NotificationType } from \"../enums/notificationType\";\nimport {\n  NotificationResponse,\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notificationResponse\";\n\nexport class NotificationsService implements NotificationsServiceAbstraction {\n  private signalrConnection: signalR.HubConnection;\n  private url: string;\n  private connected = false;\n  private inited = false;\n  private inactive = false;\n  private reconnectTimer: any = null;\n\n  constructor(\n    private syncService: SyncService,\n    private appIdService: AppIdService,\n    private apiService: ApiService,\n    private environmentService: EnvironmentService,\n    private logoutCallback: (expired: boolean) => Promise<void>,\n    private logService: LogService,\n    private stateService: StateService,\n    private authService: AuthService\n  ) {\n    this.environmentService.urls.subscribe(() => {\n      if (!this.inited) {\n        return;\n      }\n\n      this.init();\n    });\n  }\n\n  async init(): Promise<void> {\n    this.inited = false;\n    this.url = this.environmentService.getNotificationsUrl();\n\n    // Set notifications server URL to `https://-` to effectively disable communication\n    // with the notifications server from the client app\n    if (this.url === \"https://-\") {\n      return;\n    }\n\n    if (this.signalrConnection != null) {\n      this.signalrConnection.off(\"ReceiveMessage\");\n      this.signalrConnection.off(\"Heartbeat\");\n      await this.signalrConnection.stop();\n      this.connected = false;\n      this.signalrConnection = null;\n    }\n\n    this.signalrConnection = new signalR.HubConnectionBuilder()\n      .withUrl(this.url + \"/hub\", {\n        accessTokenFactory: () => this.apiService.getActiveBearerToken(),\n        skipNegotiation: true,\n        transport: signalR.HttpTransportType.WebSockets,\n      })\n      .withHubProtocol(new signalRMsgPack.MessagePackHubProtocol() as signalR.IHubProtocol)\n      // .configureLogging(signalR.LogLevel.Trace)\n      .build();\n\n    this.signalrConnection.on(\"ReceiveMessage\", (data: any) =>\n      this.processNotification(new NotificationResponse(data))\n    );\n    // eslint-disable-next-line\n    this.signalrConnection.on(\"Heartbeat\", (data: any) => {\n      /*console.log('Heartbeat!');*/\n    });\n    this.signalrConnection.onclose(() => {\n      this.connected = false;\n      this.reconnect(true);\n    });\n    this.inited = true;\n    if (await this.isAuthedAndUnlocked()) {\n      await this.reconnect(false);\n    }\n  }\n\n  async updateConnection(sync = false): Promise<void> {\n    if (!this.inited) {\n      return;\n    }\n    try {\n      if (await this.isAuthedAndUnlocked()) {\n        await this.reconnect(sync);\n      } else {\n        await this.signalrConnection.stop();\n      }\n    } catch (e) {\n      this.logService.error(e.toString());\n    }\n  }\n\n  async reconnectFromActivity(): Promise<void> {\n    this.inactive = false;\n    if (this.inited && !this.connected) {\n      await this.reconnect(true);\n    }\n  }\n\n  async disconnectFromInactivity(): Promise<void> {\n    this.inactive = true;\n    if (this.inited && this.connected) {\n      await this.signalrConnection.stop();\n    }\n  }\n\n  private async processNotification(notification: NotificationResponse) {\n    const appId = await this.appIdService.getAppId();\n    if (notification == null || notification.contextId === appId) {\n      return;\n    }\n\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    const payloadUserId = notification.payload.userId || notification.payload.UserId;\n    const myUserId = await this.stateService.getUserId();\n    if (isAuthenticated && payloadUserId != null && payloadUserId !== myUserId) {\n      return;\n    }\n\n    switch (notification.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherUpdate:\n        await this.syncService.syncUpsertCipher(\n          notification.payload as SyncCipherNotification,\n          notification.type === NotificationType.SyncCipherUpdate\n        );\n        break;\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncLoginDelete:\n        await this.syncService.syncDeleteCipher(notification.payload as SyncCipherNotification);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderUpdate:\n        await this.syncService.syncUpsertFolder(\n          notification.payload as SyncFolderNotification,\n          notification.type === NotificationType.SyncFolderUpdate\n        );\n        break;\n      case NotificationType.SyncFolderDelete:\n        await this.syncService.syncDeleteFolder(notification.payload as SyncFolderNotification);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncSettings:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(false);\n        }\n        break;\n      case NotificationType.SyncOrgKeys:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(true);\n          // Stop so a reconnect can be made\n          await this.signalrConnection.stop();\n        }\n        break;\n      case NotificationType.LogOut:\n        if (isAuthenticated) {\n          this.logoutCallback(true);\n        }\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n        await this.syncService.syncUpsertSend(\n          notification.payload as SyncSendNotification,\n          notification.type === NotificationType.SyncSendUpdate\n        );\n        break;\n      case NotificationType.SyncSendDelete:\n        await this.syncService.syncDeleteSend(notification.payload as SyncSendNotification);\n        break;\n      default:\n        break;\n    }\n  }\n\n  private async reconnect(sync: boolean) {\n    if (this.reconnectTimer != null) {\n      clearTimeout(this.reconnectTimer);\n      this.reconnectTimer = null;\n    }\n    if (this.connected || !this.inited || this.inactive) {\n      return;\n    }\n    const authedAndUnlocked = await this.isAuthedAndUnlocked();\n    if (!authedAndUnlocked) {\n      return;\n    }\n\n    try {\n      await this.signalrConnection.start();\n      this.connected = true;\n      if (sync) {\n        await this.syncService.fullSync(false);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (!this.connected) {\n      this.reconnectTimer = setTimeout(() => this.reconnect(sync), this.random(120000, 300000));\n    }\n  }\n\n  private async isAuthedAndUnlocked() {\n    const authStatus = await this.authService.getAuthStatus();\n    return authStatus >= AuthenticationStatus.Unlocked;\n  }\n\n  private random(min: number, max: number) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { Permissions } from \"../../enums/permissions\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\nimport { OrganizationData } from \"../data/organizationData\";\n\nexport class Organization {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useScim: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(obj?: OrganizationData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.usePolicies = obj.usePolicies;\n    this.useGroups = obj.useGroups;\n    this.useDirectory = obj.useDirectory;\n    this.useEvents = obj.useEvents;\n    this.useTotp = obj.useTotp;\n    this.use2fa = obj.use2fa;\n    this.useApi = obj.useApi;\n    this.useSso = obj.useSso;\n    this.useKeyConnector = obj.useKeyConnector;\n    this.useScim = obj.useScim;\n    this.useResetPassword = obj.useResetPassword;\n    this.selfHost = obj.selfHost;\n    this.usersGetPremium = obj.usersGetPremium;\n    this.seats = obj.seats;\n    this.maxCollections = obj.maxCollections;\n    this.maxStorageGb = obj.maxStorageGb;\n    this.ssoBound = obj.ssoBound;\n    this.identifier = obj.identifier;\n    this.permissions = obj.permissions;\n    this.resetPasswordEnrolled = obj.resetPasswordEnrolled;\n    this.userId = obj.userId;\n    this.hasPublicAndPrivateKeys = obj.hasPublicAndPrivateKeys;\n    this.providerId = obj.providerId;\n    this.providerName = obj.providerName;\n    this.isProviderUser = obj.isProviderUser;\n    this.familySponsorshipFriendlyName = obj.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = obj.familySponsorshipAvailable;\n    this.planProductType = obj.planProductType;\n    this.keyConnectorEnabled = obj.keyConnectorEnabled;\n    this.keyConnectorUrl = obj.keyConnectorUrl;\n    this.familySponsorshipLastSyncDate = obj.familySponsorshipLastSyncDate;\n    this.familySponsorshipValidUntil = obj.familySponsorshipValidUntil;\n    this.familySponsorshipToDelete = obj.familySponsorshipToDelete;\n  }\n\n  get canAccess() {\n    if (this.type === OrganizationUserType.Owner) {\n      return true;\n    }\n    return this.enabled && this.status === OrganizationUserStatusType.Confirmed;\n  }\n\n  get isManager() {\n    return (\n      this.type === OrganizationUserType.Manager ||\n      this.type === OrganizationUserType.Owner ||\n      this.type === OrganizationUserType.Admin\n    );\n  }\n\n  get isAdmin() {\n    return this.type === OrganizationUserType.Owner || this.type === OrganizationUserType.Admin;\n  }\n\n  get isOwner() {\n    return this.type === OrganizationUserType.Owner || this.isProviderUser;\n  }\n\n  get canAccessEventLogs() {\n    return this.isAdmin || this.permissions.accessEventLogs;\n  }\n\n  get canAccessImportExport() {\n    return this.isAdmin || this.permissions.accessImportExport;\n  }\n\n  get canAccessReports() {\n    return this.isAdmin || this.permissions.accessReports;\n  }\n\n  get canCreateNewCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.createNewCollections ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canEditAnyCollection() {\n    return (\n      this.isAdmin || (this.permissions.editAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canDeleteAnyCollection() {\n    return (\n      this.isAdmin ||\n      (this.permissions.deleteAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canViewAllCollections() {\n    return this.canCreateNewCollections || this.canEditAnyCollection || this.canDeleteAnyCollection;\n  }\n\n  get canEditAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.editAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canDeleteAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.deleteAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canViewAssignedCollections() {\n    return this.canDeleteAssignedCollections || this.canEditAssignedCollections;\n  }\n\n  get canManageGroups() {\n    return this.isAdmin || this.permissions.manageGroups;\n  }\n\n  get canManageSso() {\n    return this.isAdmin || this.permissions.manageSso;\n  }\n\n  get canManageScim() {\n    return this.isAdmin || this.permissions.manageScim;\n  }\n\n  get canManagePolicies() {\n    return this.isAdmin || this.permissions.managePolicies;\n  }\n\n  get canManageUsers() {\n    return this.isAdmin || this.permissions.manageUsers;\n  }\n\n  get canManageUsersPassword() {\n    return this.isAdmin || this.permissions.manageResetPassword;\n  }\n\n  get isExemptFromPolicies() {\n    return this.canManagePolicies;\n  }\n\n  hasAnyPermission(permissions: Permissions[]) {\n    const specifiedPermissions =\n      (permissions.includes(Permissions.AccessEventLogs) && this.canAccessEventLogs) ||\n      (permissions.includes(Permissions.AccessImportExport) && this.canAccessImportExport) ||\n      (permissions.includes(Permissions.AccessReports) && this.canAccessReports) ||\n      (permissions.includes(Permissions.CreateNewCollections) && this.canCreateNewCollections) ||\n      (permissions.includes(Permissions.EditAnyCollection) && this.canEditAnyCollection) ||\n      (permissions.includes(Permissions.DeleteAnyCollection) && this.canDeleteAnyCollection) ||\n      (permissions.includes(Permissions.EditAssignedCollections) &&\n        this.canEditAssignedCollections) ||\n      (permissions.includes(Permissions.DeleteAssignedCollections) &&\n        this.canDeleteAssignedCollections) ||\n      (permissions.includes(Permissions.ManageGroups) && this.canManageGroups) ||\n      (permissions.includes(Permissions.ManageOrganization) && this.isOwner) ||\n      (permissions.includes(Permissions.ManagePolicies) && this.canManagePolicies) ||\n      (permissions.includes(Permissions.ManageUsers) && this.canManageUsers) ||\n      (permissions.includes(Permissions.ManageUsersPassword) && this.canManageUsersPassword) ||\n      (permissions.includes(Permissions.ManageSso) && this.canManageSso) ||\n      (permissions.includes(Permissions.ManageScim) && this.canManageScim) ||\n      (permissions.includes(Permissions.ManageBilling) && this.canManageBilling);\n\n    return specifiedPermissions && (this.enabled || this.isOwner);\n  }\n\n  get canManageBilling() {\n    return this.isOwner && (this.isProviderUser || !this.hasProvider);\n  }\n\n  get hasProvider() {\n    return this.providerId != null || this.providerName != null;\n  }\n}\n","import { OrganizationService as OrganizationServiceAbstraction } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { Organization } from \"../models/domain/organization\";\n\nexport class OrganizationService implements OrganizationServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async get(id: string): Promise<Organization> {\n    const organizations = await this.stateService.getOrganizations();\n    // eslint-disable-next-line\n    if (organizations == null || !organizations.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Organization(organizations[id]);\n  }\n\n  async getByIdentifier(identifier: string): Promise<Organization> {\n    const organizations = await this.getAll();\n    if (organizations == null || organizations.length === 0) {\n      return null;\n    }\n\n    return organizations.find((o) => o.identifier === identifier);\n  }\n\n  async getAll(userId?: string): Promise<Organization[]> {\n    const organizations = await this.stateService.getOrganizations({ userId: userId });\n    const response: Organization[] = [];\n    for (const id in organizations) {\n      // eslint-disable-next-line\n      if (organizations.hasOwnProperty(id) && !organizations[id].isProviderUser) {\n        response.push(new Organization(organizations[id]));\n      }\n    }\n    const sortedResponse = response.sort((a, b) => a.name.localeCompare(b.name));\n    return sortedResponse;\n  }\n\n  async save(organizations: { [id: string]: OrganizationData }) {\n    return await this.stateService.setOrganizations(organizations);\n  }\n\n  async canManageSponsorships(): Promise<boolean> {\n    const orgs = await this.getAll();\n    return orgs.some(\n      (o) => o.familySponsorshipAvailable || o.familySponsorshipFriendlyName !== null\n    );\n  }\n\n  async hasOrganizations(userId?: string): Promise<boolean> {\n    const organizations = await this.getAll(userId);\n    return organizations.length > 0;\n  }\n}\n","export class GeneratedPasswordHistory {\n  password: string;\n  date: number;\n\n  constructor(password: string, date: number) {\n    this.password = password;\n    this.date = date;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class PasswordGeneratorPolicyOptions extends Domain {\n  defaultType = \"\";\n  minLength = 0;\n  useUppercase = false;\n  useLowercase = false;\n  useNumbers = false;\n  numberCount = 0;\n  useSpecial = false;\n  specialCount = 0;\n  minNumberWords = 0;\n  capitalize = false;\n  includeNumber = false;\n\n  inEffect() {\n    return (\n      this.defaultType !== \"\" ||\n      this.minLength > 0 ||\n      this.numberCount > 0 ||\n      this.specialCount > 0 ||\n      this.useUppercase ||\n      this.useLowercase ||\n      this.useNumbers ||\n      this.useSpecial ||\n      this.minNumberWords > 0 ||\n      this.capitalize ||\n      this.includeNumber\n    );\n  }\n}\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"../abstractions/passwordGeneration.service\";\nimport { PolicyService } from \"../abstractions/policy.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { PolicyType } from \"../enums/policyType\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\nimport { EncString } from \"../models/domain/encString\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/passwordGeneratorPolicyOptions\";\nimport { Policy } from \"../models/domain/policy\";\n\nconst DefaultOptions = {\n  length: 14,\n  ambiguous: false,\n  number: true,\n  minNumber: 1,\n  uppercase: true,\n  minUppercase: 0,\n  lowercase: true,\n  minLowercase: 0,\n  special: false,\n  minSpecial: 1,\n  type: \"password\",\n  numWords: 3,\n  wordSeparator: \"-\",\n  capitalize: false,\n  includeNumber: false,\n};\n\nconst MaxPasswordsInHistory = 100;\n\nexport class PasswordGenerationService implements PasswordGenerationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private policyService: PolicyService,\n    private stateService: StateService\n  ) {}\n\n  async generatePassword(options: any): Promise<string> {\n    // overload defaults with given options\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.type === \"passphrase\") {\n      return this.generatePassphrase(options);\n    }\n\n    // sanitize\n    this.sanitizePasswordLength(o, true);\n\n    const minLength: number = o.minUppercase + o.minLowercase + o.minNumber + o.minSpecial;\n    if (o.length < minLength) {\n      o.length = minLength;\n    }\n\n    const positions: string[] = [];\n    if (o.lowercase && o.minLowercase > 0) {\n      for (let i = 0; i < o.minLowercase; i++) {\n        positions.push(\"l\");\n      }\n    }\n    if (o.uppercase && o.minUppercase > 0) {\n      for (let i = 0; i < o.minUppercase; i++) {\n        positions.push(\"u\");\n      }\n    }\n    if (o.number && o.minNumber > 0) {\n      for (let i = 0; i < o.minNumber; i++) {\n        positions.push(\"n\");\n      }\n    }\n    if (o.special && o.minSpecial > 0) {\n      for (let i = 0; i < o.minSpecial; i++) {\n        positions.push(\"s\");\n      }\n    }\n    while (positions.length < o.length) {\n      positions.push(\"a\");\n    }\n\n    // shuffle\n    await this.shuffleArray(positions);\n\n    // build out the char sets\n    let allCharSet = \"\";\n\n    let lowercaseCharSet = \"abcdefghijkmnopqrstuvwxyz\";\n    if (o.ambiguous) {\n      lowercaseCharSet += \"l\";\n    }\n    if (o.lowercase) {\n      allCharSet += lowercaseCharSet;\n    }\n\n    let uppercaseCharSet = \"ABCDEFGHJKLMNPQRSTUVWXYZ\";\n    if (o.ambiguous) {\n      uppercaseCharSet += \"IO\";\n    }\n    if (o.uppercase) {\n      allCharSet += uppercaseCharSet;\n    }\n\n    let numberCharSet = \"23456789\";\n    if (o.ambiguous) {\n      numberCharSet += \"01\";\n    }\n    if (o.number) {\n      allCharSet += numberCharSet;\n    }\n\n    const specialCharSet = \"!@#$%^&*\";\n    if (o.special) {\n      allCharSet += specialCharSet;\n    }\n\n    let password = \"\";\n    for (let i = 0; i < o.length; i++) {\n      let positionChars: string;\n      switch (positions[i]) {\n        case \"l\":\n          positionChars = lowercaseCharSet;\n          break;\n        case \"u\":\n          positionChars = uppercaseCharSet;\n          break;\n        case \"n\":\n          positionChars = numberCharSet;\n          break;\n        case \"s\":\n          positionChars = specialCharSet;\n          break;\n        case \"a\":\n          positionChars = allCharSet;\n          break;\n        default:\n          break;\n      }\n\n      const randomCharIndex = await this.cryptoService.randomNumber(0, positionChars.length - 1);\n      password += positionChars.charAt(randomCharIndex);\n    }\n\n    return password;\n  }\n\n  async generatePassphrase(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.numWords == null || o.numWords <= 2) {\n      o.numWords = DefaultOptions.numWords;\n    }\n    if (o.wordSeparator == null || o.wordSeparator.length === 0 || o.wordSeparator.length > 1) {\n      o.wordSeparator = \" \";\n    }\n    if (o.capitalize == null) {\n      o.capitalize = false;\n    }\n    if (o.includeNumber == null) {\n      o.includeNumber = false;\n    }\n\n    const listLength = EEFLongWordList.length - 1;\n    const wordList = new Array(o.numWords);\n    for (let i = 0; i < o.numWords; i++) {\n      const wordIndex = await this.cryptoService.randomNumber(0, listLength);\n      if (o.capitalize) {\n        wordList[i] = this.capitalize(EEFLongWordList[wordIndex]);\n      } else {\n        wordList[i] = EEFLongWordList[wordIndex];\n      }\n    }\n\n    if (o.includeNumber) {\n      await this.appendRandomNumberToRandomWord(wordList);\n    }\n    return wordList.join(o.wordSeparator);\n  }\n\n  async getOptions(): Promise<[any, PasswordGeneratorPolicyOptions]> {\n    let options = await this.stateService.getPasswordGenerationOptions();\n    if (options == null) {\n      options = Object.assign({}, DefaultOptions);\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setPasswordGenerationOptions(options);\n    const enforcedOptions = await this.enforcePasswordGeneratorPoliciesOnOptions(options);\n    options = enforcedOptions[0];\n    return [options, enforcedOptions[1]];\n  }\n\n  async enforcePasswordGeneratorPoliciesOnOptions(\n    options: any\n  ): Promise<[any, PasswordGeneratorPolicyOptions]> {\n    let enforcedPolicyOptions = await this.getPasswordGeneratorPolicyOptions();\n    if (enforcedPolicyOptions != null) {\n      if (options.length < enforcedPolicyOptions.minLength) {\n        options.length = enforcedPolicyOptions.minLength;\n      }\n\n      if (enforcedPolicyOptions.useUppercase) {\n        options.uppercase = true;\n      }\n\n      if (enforcedPolicyOptions.useLowercase) {\n        options.lowercase = true;\n      }\n\n      if (enforcedPolicyOptions.useNumbers) {\n        options.number = true;\n      }\n\n      if (options.minNumber < enforcedPolicyOptions.numberCount) {\n        options.minNumber = enforcedPolicyOptions.numberCount;\n      }\n\n      if (enforcedPolicyOptions.useSpecial) {\n        options.special = true;\n      }\n\n      if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n        options.minSpecial = enforcedPolicyOptions.specialCount;\n      }\n\n      // Must normalize these fields because the receiving call expects all options to pass the current rules\n      if (options.minSpecial + options.minNumber > options.length) {\n        options.minSpecial = options.length - options.minNumber;\n      }\n\n      if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n        options.numWords = enforcedPolicyOptions.minNumberWords;\n      }\n\n      if (enforcedPolicyOptions.capitalize) {\n        options.capitalize = true;\n      }\n\n      if (enforcedPolicyOptions.includeNumber) {\n        options.includeNumber = true;\n      }\n\n      // Force default type if password/passphrase selected via policy\n      if (\n        enforcedPolicyOptions.defaultType === \"password\" ||\n        enforcedPolicyOptions.defaultType === \"passphrase\"\n      ) {\n        options.type = enforcedPolicyOptions.defaultType;\n      }\n    } else {\n      // UI layer expects an instantiated object to prevent more explicit null checks\n      enforcedPolicyOptions = new PasswordGeneratorPolicyOptions();\n    }\n    return [options, enforcedPolicyOptions];\n  }\n\n  async getPasswordGeneratorPolicyOptions(): Promise<PasswordGeneratorPolicyOptions> {\n    const policies: Policy[] =\n      this.policyService == null\n        ? null\n        : await this.policyService.getAll(PolicyType.PasswordGenerator);\n    let enforcedOptions: PasswordGeneratorPolicyOptions = null;\n\n    if (policies == null || policies.length === 0) {\n      return enforcedOptions;\n    }\n\n    policies.forEach((currentPolicy) => {\n      if (!currentPolicy.enabled || currentPolicy.data == null) {\n        return;\n      }\n\n      if (enforcedOptions == null) {\n        enforcedOptions = new PasswordGeneratorPolicyOptions();\n      }\n\n      // Password wins in multi-org collisions\n      if (currentPolicy.data.defaultType != null && enforcedOptions.defaultType !== \"password\") {\n        enforcedOptions.defaultType = currentPolicy.data.defaultType;\n      }\n\n      if (\n        currentPolicy.data.minLength != null &&\n        currentPolicy.data.minLength > enforcedOptions.minLength\n      ) {\n        enforcedOptions.minLength = currentPolicy.data.minLength;\n      }\n\n      if (currentPolicy.data.useUpper) {\n        enforcedOptions.useUppercase = true;\n      }\n\n      if (currentPolicy.data.useLower) {\n        enforcedOptions.useLowercase = true;\n      }\n\n      if (currentPolicy.data.useNumbers) {\n        enforcedOptions.useNumbers = true;\n      }\n\n      if (\n        currentPolicy.data.minNumbers != null &&\n        currentPolicy.data.minNumbers > enforcedOptions.numberCount\n      ) {\n        enforcedOptions.numberCount = currentPolicy.data.minNumbers;\n      }\n\n      if (currentPolicy.data.useSpecial) {\n        enforcedOptions.useSpecial = true;\n      }\n\n      if (\n        currentPolicy.data.minSpecial != null &&\n        currentPolicy.data.minSpecial > enforcedOptions.specialCount\n      ) {\n        enforcedOptions.specialCount = currentPolicy.data.minSpecial;\n      }\n\n      if (\n        currentPolicy.data.minNumberWords != null &&\n        currentPolicy.data.minNumberWords > enforcedOptions.minNumberWords\n      ) {\n        enforcedOptions.minNumberWords = currentPolicy.data.minNumberWords;\n      }\n\n      if (currentPolicy.data.capitalize) {\n        enforcedOptions.capitalize = true;\n      }\n\n      if (currentPolicy.data.includeNumber) {\n        enforcedOptions.includeNumber = true;\n      }\n    });\n\n    return enforcedOptions;\n  }\n\n  async saveOptions(options: any) {\n    await this.stateService.setPasswordGenerationOptions(options);\n  }\n\n  async getHistory(): Promise<GeneratedPasswordHistory[]> {\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return new Array<GeneratedPasswordHistory>();\n    }\n\n    if ((await this.stateService.getDecryptedPasswordGenerationHistory()) == null) {\n      const encrypted = await this.stateService.getEncryptedPasswordGenerationHistory();\n      const decrypted = await this.decryptHistory(encrypted);\n      await this.stateService.setDecryptedPasswordGenerationHistory(decrypted);\n    }\n\n    const passwordGenerationHistory =\n      await this.stateService.getDecryptedPasswordGenerationHistory();\n    return passwordGenerationHistory != null\n      ? passwordGenerationHistory\n      : new Array<GeneratedPasswordHistory>();\n  }\n\n  async addHistory(password: string): Promise<any> {\n    // Cannot add new history if no key is available\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return;\n    }\n\n    const currentHistory = await this.getHistory();\n\n    // Prevent duplicates\n    if (this.matchesPrevious(password, currentHistory)) {\n      return;\n    }\n\n    currentHistory.unshift(new GeneratedPasswordHistory(password, Date.now()));\n\n    // Remove old items.\n    if (currentHistory.length > MaxPasswordsInHistory) {\n      currentHistory.pop();\n    }\n\n    const newHistory = await this.encryptHistory(currentHistory);\n    await this.stateService.setDecryptedPasswordGenerationHistory(currentHistory);\n    return await this.stateService.setEncryptedPasswordGenerationHistory(newHistory);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setEncryptedPasswordGenerationHistory(null, { userId: userId });\n    await this.stateService.setDecryptedPasswordGenerationHistory(null, { userId: userId });\n  }\n\n  passwordStrength(password: string, userInputs: string[] = null): zxcvbn.ZXCVBNResult {\n    if (password == null || password.length === 0) {\n      return null;\n    }\n    let globalUserInputs = [\"bitwarden\", \"bit\", \"warden\"];\n    if (userInputs != null && userInputs.length > 0) {\n      globalUserInputs = globalUserInputs.concat(userInputs);\n    }\n    // Use a hash set to get rid of any duplicate user inputs\n    const finalUserInputs = Array.from(new Set(globalUserInputs));\n    const result = zxcvbn(password, finalUserInputs);\n    return result;\n  }\n\n  normalizeOptions(options: any, enforcedPolicyOptions: PasswordGeneratorPolicyOptions) {\n    options.minLowercase = 0;\n    options.minUppercase = 0;\n\n    if (!options.length || options.length < 5) {\n      options.length = 5;\n    } else if (options.length > 128) {\n      options.length = 128;\n    }\n\n    if (options.length < enforcedPolicyOptions.minLength) {\n      options.length = enforcedPolicyOptions.minLength;\n    }\n\n    if (!options.minNumber) {\n      options.minNumber = 0;\n    } else if (options.minNumber > options.length) {\n      options.minNumber = options.length;\n    } else if (options.minNumber > 9) {\n      options.minNumber = 9;\n    }\n\n    if (options.minNumber < enforcedPolicyOptions.numberCount) {\n      options.minNumber = enforcedPolicyOptions.numberCount;\n    }\n\n    if (!options.minSpecial) {\n      options.minSpecial = 0;\n    } else if (options.minSpecial > options.length) {\n      options.minSpecial = options.length;\n    } else if (options.minSpecial > 9) {\n      options.minSpecial = 9;\n    }\n\n    if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n      options.minSpecial = enforcedPolicyOptions.specialCount;\n    }\n\n    if (options.minSpecial + options.minNumber > options.length) {\n      options.minSpecial = options.length - options.minNumber;\n    }\n\n    if (options.numWords == null || options.length < 3) {\n      options.numWords = 3;\n    } else if (options.numWords > 20) {\n      options.numWords = 20;\n    }\n\n    if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n      options.numWords = enforcedPolicyOptions.minNumberWords;\n    }\n\n    if (options.wordSeparator != null && options.wordSeparator.length > 1) {\n      options.wordSeparator = options.wordSeparator[0];\n    }\n\n    this.sanitizePasswordLength(options, false);\n  }\n\n  private capitalize(str: string) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  private async appendRandomNumberToRandomWord(wordList: string[]) {\n    if (wordList == null || wordList.length <= 0) {\n      return;\n    }\n    const index = await this.cryptoService.randomNumber(0, wordList.length - 1);\n    const num = await this.cryptoService.randomNumber(0, 9);\n    wordList[index] = wordList[index] + num;\n  }\n\n  private async encryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const encrypted = await this.cryptoService.encrypt(item.password);\n      return new GeneratedPasswordHistory(encrypted.encryptedString, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private async decryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const decrypted = await this.cryptoService.decryptToUtf8(new EncString(item.password));\n      return new GeneratedPasswordHistory(decrypted, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private matchesPrevious(password: string, history: GeneratedPasswordHistory[]): boolean {\n    if (history == null || history.length === 0) {\n      return false;\n    }\n\n    return history[history.length - 1].password === password;\n  }\n\n  // ref: https://stackoverflow.com/a/12646864/1090359\n  private async shuffleArray(array: string[]) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = await this.cryptoService.randomNumber(0, i);\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n\n  private sanitizePasswordLength(options: any, forGeneration: boolean) {\n    let minUppercaseCalc = 0;\n    let minLowercaseCalc = 0;\n    let minNumberCalc: number = options.minNumber;\n    let minSpecialCalc: number = options.minSpecial;\n\n    if (options.uppercase && options.minUppercase <= 0) {\n      minUppercaseCalc = 1;\n    } else if (!options.uppercase) {\n      minUppercaseCalc = 0;\n    }\n\n    if (options.lowercase && options.minLowercase <= 0) {\n      minLowercaseCalc = 1;\n    } else if (!options.lowercase) {\n      minLowercaseCalc = 0;\n    }\n\n    if (options.number && options.minNumber <= 0) {\n      minNumberCalc = 1;\n    } else if (!options.number) {\n      minNumberCalc = 0;\n    }\n\n    if (options.special && options.minSpecial <= 0) {\n      minSpecialCalc = 1;\n    } else if (!options.special) {\n      minSpecialCalc = 0;\n    }\n\n    // This should never happen but is a final safety net\n    if (!options.length || options.length < 1) {\n      options.length = 10;\n    }\n\n    const minLength: number = minUppercaseCalc + minLowercaseCalc + minNumberCalc + minSpecialCalc;\n    // Normalize and Generation both require this modification\n    if (options.length < minLength) {\n      options.length = minLength;\n    }\n\n    // Apply other changes if the options object passed in is for generation\n    if (forGeneration) {\n      options.minUppercase = minUppercaseCalc;\n      options.minLowercase = minLowercaseCalc;\n      options.minNumber = minNumberCalc;\n      options.minSpecial = minSpecialCalc;\n    }\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyResponse } from \"../response/policyResponse\";\n\nexport class PolicyData {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: PolicyResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.type = response.type;\n    this.data = response.data;\n    this.enabled = response.enabled;\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../data/policyData\";\n\nimport Domain from \"./domainBase\";\n\nexport class Policy extends Domain {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(obj?: PolicyData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.organizationId = obj.organizationId;\n    this.type = obj.type;\n    this.data = obj.data;\n    this.enabled = obj.enabled;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class ResetPasswordPolicyOptions extends Domain {\n  autoEnrollEnabled = false;\n}\n","export enum ProviderUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n  Deactivated = -1, // Not used, compile-time support only\n}\n","export enum ProviderUserType {\n  ProviderAdmin = 0,\n  ServiceUser = 1,\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { PolicyService as PolicyServiceAbstraction } from \"../abstractions/policy.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { OrganizationUserStatusType } from \"../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../enums/organizationUserType\";\nimport { PolicyType } from \"../enums/policyType\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"../models/domain/masterPasswordPolicyOptions\";\nimport { Organization } from \"../models/domain/organization\";\nimport { Policy } from \"../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../models/domain/resetPasswordPolicyOptions\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\n\nexport class PolicyService implements PolicyServiceAbstraction {\n  policyCache: Policy[];\n\n  constructor(\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private apiService: ApiService\n  ) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setDecryptedPolicies(null);\n  }\n\n  async getAll(type?: PolicyType, userId?: string): Promise<Policy[]> {\n    let response: Policy[] = [];\n    const decryptedPolicies = await this.stateService.getDecryptedPolicies({ userId: userId });\n    if (decryptedPolicies != null) {\n      response = decryptedPolicies;\n    } else {\n      const diskPolicies = await this.stateService.getEncryptedPolicies({ userId: userId });\n      for (const id in diskPolicies) {\n        // eslint-disable-next-line\n        if (diskPolicies.hasOwnProperty(id)) {\n          response.push(new Policy(diskPolicies[id]));\n        }\n      }\n      await this.stateService.setDecryptedPolicies(response, { userId: userId });\n    }\n    if (type != null) {\n      return response.filter((policy) => policy.type === type);\n    } else {\n      return response;\n    }\n  }\n\n  async getPolicyForOrganization(policyType: PolicyType, organizationId: string): Promise<Policy> {\n    const org = await this.organizationService.get(organizationId);\n    if (org?.isProviderUser) {\n      const orgPolicies = await this.apiService.getPolicies(organizationId);\n      const policy = orgPolicies.data.find((p) => p.organizationId === organizationId);\n\n      if (policy == null) {\n        return null;\n      }\n\n      return new Policy(new PolicyData(policy));\n    }\n\n    const policies = await this.getAll(policyType);\n    return policies.find((p) => p.organizationId === organizationId);\n  }\n\n  async replace(policies: { [id: string]: PolicyData }): Promise<any> {\n    await this.stateService.setDecryptedPolicies(null);\n    await this.stateService.setEncryptedPolicies(policies);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setDecryptedPolicies(null, { userId: userId });\n    await this.stateService.setEncryptedPolicies(null, { userId: userId });\n  }\n\n  async getMasterPasswordPoliciesForInvitedUsers(\n    orgId: string\n  ): Promise<MasterPasswordPolicyOptions> {\n    const userId = await this.stateService.getUserId();\n    const response = await this.apiService.getPoliciesByInvitedUser(orgId, userId);\n    const policies = await this.mapPoliciesFromToken(response);\n    return this.getMasterPasswordPolicyOptions(policies);\n  }\n\n  async getMasterPasswordPolicyOptions(policies?: Policy[]): Promise<MasterPasswordPolicyOptions> {\n    let enforcedOptions: MasterPasswordPolicyOptions = null;\n\n    if (policies == null) {\n      policies = await this.getAll(PolicyType.MasterPassword);\n    } else {\n      policies = policies.filter((p) => p.type === PolicyType.MasterPassword);\n    }\n\n    if (policies == null || policies.length === 0) {\n      return enforcedOptions;\n    }\n\n    policies.forEach((currentPolicy) => {\n      if (!currentPolicy.enabled || currentPolicy.data == null) {\n        return;\n      }\n\n      if (enforcedOptions == null) {\n        enforcedOptions = new MasterPasswordPolicyOptions();\n      }\n\n      if (\n        currentPolicy.data.minComplexity != null &&\n        currentPolicy.data.minComplexity > enforcedOptions.minComplexity\n      ) {\n        enforcedOptions.minComplexity = currentPolicy.data.minComplexity;\n      }\n\n      if (\n        currentPolicy.data.minLength != null &&\n        currentPolicy.data.minLength > enforcedOptions.minLength\n      ) {\n        enforcedOptions.minLength = currentPolicy.data.minLength;\n      }\n\n      if (currentPolicy.data.requireUpper) {\n        enforcedOptions.requireUpper = true;\n      }\n\n      if (currentPolicy.data.requireLower) {\n        enforcedOptions.requireLower = true;\n      }\n\n      if (currentPolicy.data.requireNumbers) {\n        enforcedOptions.requireNumbers = true;\n      }\n\n      if (currentPolicy.data.requireSpecial) {\n        enforcedOptions.requireSpecial = true;\n      }\n    });\n\n    return enforcedOptions;\n  }\n\n  evaluateMasterPassword(\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions: MasterPasswordPolicyOptions\n  ): boolean {\n    if (enforcedPolicyOptions == null) {\n      return true;\n    }\n\n    if (\n      enforcedPolicyOptions.minComplexity > 0 &&\n      enforcedPolicyOptions.minComplexity > passwordStrength\n    ) {\n      return false;\n    }\n\n    if (\n      enforcedPolicyOptions.minLength > 0 &&\n      enforcedPolicyOptions.minLength > newPassword.length\n    ) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireUpper && newPassword.toLocaleLowerCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireLower && newPassword.toLocaleUpperCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireNumbers && !/[0-9]/.test(newPassword)) {\n      return false;\n    }\n\n    // eslint-disable-next-line\n    if (enforcedPolicyOptions.requireSpecial && !/[!@#$%\\^&*]/g.test(newPassword)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  getResetPasswordPolicyOptions(\n    policies: Policy[],\n    orgId: string\n  ): [ResetPasswordPolicyOptions, boolean] {\n    const resetPasswordPolicyOptions = new ResetPasswordPolicyOptions();\n\n    if (policies == null || orgId == null) {\n      return [resetPasswordPolicyOptions, false];\n    }\n\n    const policy = policies.find(\n      (p) => p.organizationId === orgId && p.type === PolicyType.ResetPassword && p.enabled\n    );\n    resetPasswordPolicyOptions.autoEnrollEnabled = policy?.data?.autoEnrollEnabled ?? false;\n\n    return [resetPasswordPolicyOptions, policy?.enabled ?? false];\n  }\n\n  mapPoliciesFromToken(policiesResponse: ListResponse<PolicyResponse>): Policy[] {\n    if (policiesResponse == null || policiesResponse.data == null) {\n      return null;\n    }\n\n    const policiesData = policiesResponse.data.map((p) => new PolicyData(p));\n    return policiesData.map((p) => new Policy(p));\n  }\n\n  async policyAppliesToUser(\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) {\n    const policies = await this.getAll(policyType, userId);\n    const organizations = await this.organizationService.getAll(userId);\n    let filteredPolicies;\n\n    if (policyFilter != null) {\n      filteredPolicies = policies.filter((p) => p.enabled && policyFilter(p));\n    } else {\n      filteredPolicies = policies.filter((p) => p.enabled);\n    }\n\n    const policySet = new Set(filteredPolicies.map((p) => p.organizationId));\n\n    return organizations.some(\n      (o) =>\n        o.enabled &&\n        o.status >= OrganizationUserStatusType.Accepted &&\n        o.usePolicies &&\n        !this.isExcemptFromPolicies(o, policyType) &&\n        policySet.has(o.id)\n    );\n  }\n\n  private isExcemptFromPolicies(organization: Organization, policyType: PolicyType) {\n    if (policyType === PolicyType.MaximumVaultTimeout) {\n      return organization.type === OrganizationUserType.Owner;\n    }\n\n    return organization.isExemptFromPolicies;\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProviderData } from \"../data/providerData\";\n\nexport class Provider {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(obj?: ProviderData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.userId = obj.userId;\n    this.useEvents = obj.useEvents;\n  }\n\n  get canAccess() {\n    if (this.isProviderAdmin) {\n      return true;\n    }\n    return this.enabled && this.status === ProviderUserStatusType.Confirmed;\n  }\n\n  get canCreateOrganizations() {\n    return this.enabled && this.isProviderAdmin;\n  }\n\n  get canManageUsers() {\n    return this.isProviderAdmin;\n  }\n\n  get canAccessEventLogs() {\n    return this.isProviderAdmin;\n  }\n\n  get isProviderAdmin() {\n    return this.type === ProviderUserType.ProviderAdmin;\n  }\n}\n","import { ProviderService as ProviderServiceAbstraction } from \"../abstractions/provider.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { Provider } from \"../models/domain/provider\";\n\nexport class ProviderService implements ProviderServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async get(id: string): Promise<Provider> {\n    const providers = await this.stateService.getProviders();\n    // eslint-disable-next-line\n    if (providers == null || !providers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Provider(providers[id]);\n  }\n\n  async getAll(): Promise<Provider[]> {\n    const providers = await this.stateService.getProviders();\n    const response: Provider[] = [];\n    for (const id in providers) {\n      // eslint-disable-next-line\n      if (providers.hasOwnProperty(id)) {\n        response.push(new Provider(providers[id]));\n      }\n    }\n    return response;\n  }\n\n  async save(providers: { [id: string]: ProviderData }) {\n    await this.stateService.setProviders(providers);\n  }\n}\n","import * as lunr from \"lunr\";\n\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService as SearchServiceAbstraction } from \"../abstractions/search.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport class SearchService implements SearchServiceAbstraction {\n  indexedEntityId?: string = null;\n  private indexing = false;\n  private index: lunr.Index = null;\n  private readonly immediateSearchLocales: string[] = [\"zh-CN\", \"zh-TW\", \"ja\", \"ko\", \"vi\"];\n  private readonly defaultSearchableMinLength: number = 2;\n  private searchableMinLength: number = this.defaultSearchableMinLength;\n\n  constructor(\n    private cipherService: CipherService,\n    private logService: LogService,\n    private i18nService: I18nService\n  ) {\n    this.i18nService.locale$.subscribe((locale) => {\n      if (this.immediateSearchLocales.indexOf(locale) !== -1) {\n        this.searchableMinLength = 1;\n      } else {\n        this.searchableMinLength = this.defaultSearchableMinLength;\n      }\n    });\n\n    //register lunr pipeline function\n    lunr.Pipeline.registerFunction(this.normalizeAccentsPipelineFunction, \"normalizeAccents\");\n  }\n\n  clearIndex(): void {\n    this.indexedEntityId = null;\n    this.index = null;\n  }\n\n  isSearchable(query: string): boolean {\n    query = SearchService.normalizeSearchQuery(query);\n    const notSearchable =\n      query == null ||\n      (this.index == null && query.length < this.searchableMinLength) ||\n      (this.index != null && query.length < this.searchableMinLength && query.indexOf(\">\") !== 0);\n    return !notSearchable;\n  }\n\n  async indexCiphers(indexedEntityId?: string, ciphers?: CipherView[]): Promise<void> {\n    if (this.indexing) {\n      return;\n    }\n\n    this.logService.time(\"search indexing\");\n    this.indexing = true;\n    this.indexedEntityId = indexedEntityId;\n    this.index = null;\n    const builder = new lunr.Builder();\n    builder.pipeline.add(this.normalizeAccentsPipelineFunction);\n    builder.ref(\"id\");\n    builder.field(\"shortid\", { boost: 100, extractor: (c: CipherView) => c.id.substr(0, 8) });\n    builder.field(\"name\", {\n      boost: 10,\n    });\n    builder.field(\"subtitle\", {\n      boost: 5,\n      extractor: (c: CipherView) => {\n        if (c.subTitle != null && c.type === CipherType.Card) {\n          return c.subTitle.replace(/\\*/g, \"\");\n        }\n        return c.subTitle;\n      },\n    });\n    builder.field(\"notes\");\n    builder.field(\"login.username\", {\n      extractor: (c: CipherView) =>\n        c.type === CipherType.Login && c.login != null ? c.login.username : null,\n    });\n    builder.field(\"login.uris\", { boost: 2, extractor: (c: CipherView) => this.uriExtractor(c) });\n    builder.field(\"fields\", { extractor: (c: CipherView) => this.fieldExtractor(c, false) });\n    builder.field(\"fields_joined\", { extractor: (c: CipherView) => this.fieldExtractor(c, true) });\n    builder.field(\"attachments\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, false),\n    });\n    builder.field(\"attachments_joined\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, true),\n    });\n    builder.field(\"organizationid\", { extractor: (c: CipherView) => c.organizationId });\n    ciphers = ciphers || (await this.cipherService.getAllDecrypted());\n    ciphers.forEach((c) => builder.add(c));\n    this.index = builder.build();\n\n    this.indexing = false;\n\n    this.logService.timeEnd(\"search indexing\");\n  }\n\n  async searchCiphers(\n    query: string,\n    filter: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[] = null,\n    ciphers: CipherView[] = null\n  ): Promise<CipherView[]> {\n    const results: CipherView[] = [];\n    if (query != null) {\n      query = SearchService.normalizeSearchQuery(query.trim().toLowerCase());\n    }\n    if (query === \"\") {\n      query = null;\n    }\n\n    if (ciphers == null) {\n      ciphers = await this.cipherService.getAllDecrypted();\n    }\n\n    if (filter != null && Array.isArray(filter) && filter.length > 0) {\n      ciphers = ciphers.filter((c) => filter.every((f) => f == null || f(c)));\n    } else if (filter != null) {\n      ciphers = ciphers.filter(filter as (cipher: CipherView) => boolean);\n    }\n\n    if (!this.isSearchable(query)) {\n      return ciphers;\n    }\n\n    if (this.indexing) {\n      await new Promise((r) => setTimeout(r, 250));\n      if (this.indexing) {\n        await new Promise((r) => setTimeout(r, 500));\n      }\n    }\n\n    const index = this.getIndexForSearch();\n    if (index == null) {\n      // Fall back to basic search if index is not available\n      return this.searchCiphersBasic(ciphers, query);\n    }\n\n    const ciphersMap = new Map<string, CipherView>();\n    ciphers.forEach((c) => ciphersMap.set(c.id, c));\n\n    let searchResults: lunr.Index.Result[] = null;\n    const isQueryString = query != null && query.length > 1 && query.indexOf(\">\") === 0;\n    if (isQueryString) {\n      try {\n        searchResults = index.search(query.substr(1).trim());\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      const soWild = lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING;\n      searchResults = index.query((q) => {\n        lunr.tokenizer(query).forEach((token) => {\n          const t = token.toString();\n          q.term(t, { fields: [\"name\"], wildcard: soWild });\n          q.term(t, { fields: [\"subtitle\"], wildcard: soWild });\n          q.term(t, { fields: [\"login.uris\"], wildcard: soWild });\n          q.term(t, {});\n        });\n      });\n    }\n\n    if (searchResults != null) {\n      searchResults.forEach((r) => {\n        if (ciphersMap.has(r.ref)) {\n          results.push(ciphersMap.get(r.ref));\n        }\n      });\n    }\n    return results;\n  }\n\n  searchCiphersBasic(ciphers: CipherView[], query: string, deleted = false) {\n    query = SearchService.normalizeSearchQuery(query.trim().toLowerCase());\n    return ciphers.filter((c) => {\n      if (deleted !== c.isDeleted) {\n        return false;\n      }\n      if (c.name != null && c.name.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (query.length >= 8 && c.id.startsWith(query)) {\n        return true;\n      }\n      if (c.subTitle != null && c.subTitle.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (\n        c.login &&\n        c.login.hasUris &&\n        c.login.uris.some((loginUri) => loginUri.uri.toLowerCase().indexOf(query) > -1)\n      ) {\n        return true;\n      }\n      return false;\n    });\n  }\n\n  searchSends(sends: SendView[], query: string) {\n    query = SearchService.normalizeSearchQuery(query.trim().toLocaleLowerCase());\n    if (query === null) {\n      return sends;\n    }\n    const sendsMatched: SendView[] = [];\n    const lowPriorityMatched: SendView[] = [];\n    sends.forEach((s) => {\n      if (s.name != null && s.name.toLowerCase().indexOf(query) > -1) {\n        sendsMatched.push(s);\n      } else if (\n        query.length >= 8 &&\n        (s.id.startsWith(query) ||\n          s.accessId.toLocaleLowerCase().startsWith(query) ||\n          (s.file?.id != null && s.file.id.startsWith(query)))\n      ) {\n        lowPriorityMatched.push(s);\n      } else if (s.notes != null && s.notes.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      } else if (s.text?.text != null && s.text.text.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      } else if (s.file?.fileName != null && s.file.fileName.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      }\n    });\n    return sendsMatched.concat(lowPriorityMatched);\n  }\n\n  getIndexForSearch(): lunr.Index {\n    return this.index;\n  }\n\n  private fieldExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasFields) {\n      return null;\n    }\n    let fields: string[] = [];\n    c.fields.forEach((f) => {\n      if (f.name != null) {\n        fields.push(f.name);\n      }\n      if (f.type === FieldType.Text && f.value != null) {\n        fields.push(f.value);\n      }\n    });\n    fields = fields.filter((f) => f.trim() !== \"\");\n    if (fields.length === 0) {\n      return null;\n    }\n    return joined ? fields.join(\" \") : fields;\n  }\n\n  private attachmentExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasAttachments) {\n      return null;\n    }\n    let attachments: string[] = [];\n    c.attachments.forEach((a) => {\n      if (a != null && a.fileName != null) {\n        if (joined && a.fileName.indexOf(\".\") > -1) {\n          attachments.push(a.fileName.substr(0, a.fileName.lastIndexOf(\".\")));\n        } else {\n          attachments.push(a.fileName);\n        }\n      }\n    });\n    attachments = attachments.filter((f) => f.trim() !== \"\");\n    if (attachments.length === 0) {\n      return null;\n    }\n    return joined ? attachments.join(\" \") : attachments;\n  }\n\n  private uriExtractor(c: CipherView) {\n    if (c.type !== CipherType.Login || c.login == null || !c.login.hasUris) {\n      return null;\n    }\n    const uris: string[] = [];\n    c.login.uris.forEach((u) => {\n      if (u.uri == null || u.uri === \"\") {\n        return;\n      }\n      if (u.hostname != null) {\n        uris.push(u.hostname);\n        return;\n      }\n      let uri = u.uri;\n      if (u.match !== UriMatchType.RegularExpression) {\n        const protocolIndex = uri.indexOf(\"://\");\n        if (protocolIndex > -1) {\n          uri = uri.substr(protocolIndex + 3);\n        }\n        const queryIndex = uri.search(/\\?|&|#/);\n        if (queryIndex > -1) {\n          uri = uri.substring(0, queryIndex);\n        }\n      }\n      uris.push(uri);\n    });\n    return uris.length > 0 ? uris : null;\n  }\n\n  private normalizeAccentsPipelineFunction(token: lunr.Token): any {\n    const searchableFields = [\"name\", \"login.username\", \"subtitle\", \"notes\"];\n    const fields = (token as any).metadata[\"fields\"];\n    const checkFields = fields.every((i: any) => searchableFields.includes(i));\n\n    if (checkFields) {\n      return SearchService.normalizeSearchQuery(token.toString());\n    }\n\n    return token;\n  }\n\n  // Remove accents/diacritics characters from text. This regex is equivalent to the Diacritic unicode property escape, i.e. it will match all diacritic characters.\n  static normalizeSearchQuery(query: string): string {\n    return query?.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n  }\n}\n","import { SendFileApi } from \"../api/sendFileApi\";\n\nexport class SendFileData {\n  id: string;\n  fileName: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data?: SendFileApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.id = data.id;\n    this.fileName = data.fileName;\n    this.size = data.size;\n    this.sizeName = data.sizeName;\n  }\n}\n","import { SendTextApi } from \"../api/sendTextApi\";\n\nexport class SendTextData {\n  text: string;\n  hidden: boolean;\n\n  constructor(data?: SendTextApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.text = data.text;\n    this.hidden = data.hidden;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendResponse } from \"../response/sendResponse\";\n\nimport { SendFileData } from \"./sendFileData\";\nimport { SendTextData } from \"./sendTextData\";\n\nexport class SendData {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileData;\n  text: SendTextData;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(response?: SendResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.accessId = response.accessId;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.key = response.key;\n    this.maxAccessCount = response.maxAccessCount;\n    this.accessCount = response.accessCount;\n    this.revisionDate = response.revisionDate;\n    this.expirationDate = response.expirationDate;\n    this.deletionDate = response.deletionDate;\n    this.password = response.password;\n    this.disabled = response.disable;\n    this.hideEmail = response.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextData(response.text);\n        break;\n      case SendType.File:\n        this.file = new SendFileData(response.file);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { SendFileData } from \"../data/sendFileData\";\nimport { SendFileView } from \"../view/sendFileView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SendFile extends Domain {\n  id: string;\n  size: string;\n  sizeName: string;\n  fileName: EncString;\n\n  constructor(obj?: SendFileData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        sizeName: null,\n        fileName: null,\n      },\n      [\"id\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(key: SymmetricCryptoKey): Promise<SendFileView> {\n    const view = await this.decryptObj(\n      new SendFileView(this),\n      {\n        fileName: null,\n      },\n      null,\n      key\n    );\n    return view;\n  }\n}\n","import { SendTextData } from \"../data/sendTextData\";\nimport { SendTextView } from \"../view/sendTextView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SendText extends Domain {\n  text: EncString;\n  hidden: boolean;\n\n  constructor(obj?: SendTextData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.hidden = obj.hidden;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        text: null,\n      },\n      []\n    );\n  }\n\n  decrypt(key: SymmetricCryptoKey): Promise<SendTextView> {\n    return this.decryptObj(\n      new SendTextView(this),\n      {\n        text: null,\n      },\n      null,\n      key\n    );\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { SendData } from \"../data/sendData\";\nimport { SendView } from \"../view/sendView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SendFile } from \"./sendFile\";\nimport { SendText } from \"./sendText\";\n\nexport class Send extends Domain {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: EncString;\n  notes: EncString;\n  file: SendFile;\n  text: SendText;\n  key: EncString;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: Date;\n  expirationDate: Date;\n  deletionDate: Date;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(obj?: SendData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        accessId: null,\n        name: null,\n        notes: null,\n        key: null,\n      },\n      [\"id\", \"accessId\"]\n    );\n\n    this.type = obj.type;\n    this.maxAccessCount = obj.maxAccessCount;\n    this.accessCount = obj.accessCount;\n    this.password = obj.password;\n    this.disabled = obj.disabled;\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.deletionDate = obj.deletionDate != null ? new Date(obj.deletionDate) : null;\n    this.expirationDate = obj.expirationDate != null ? new Date(obj.expirationDate) : null;\n    this.hideEmail = obj.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendText(obj.text);\n        break;\n      case SendType.File:\n        this.file = new SendFile(obj.file);\n        break;\n      default:\n        break;\n    }\n  }\n\n  async decrypt(): Promise<SendView> {\n    const model = new SendView(this);\n\n    let cryptoService: CryptoService;\n    const containerService = (Utils.global as any).bitwardenContainerService;\n    if (containerService) {\n      cryptoService = containerService.getCryptoService();\n    } else {\n      throw new Error(\"global bitwardenContainerService not initialized.\");\n    }\n\n    try {\n      model.key = await cryptoService.decryptToBytes(this.key, null);\n      model.cryptoKey = await cryptoService.makeSendKey(model.key);\n    } catch (e) {\n      // TODO: error?\n    }\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      null,\n      model.cryptoKey\n    );\n\n    switch (this.type) {\n      case SendType.File:\n        model.file = await this.file.decrypt(model.cryptoKey);\n        break;\n      case SendType.Text:\n        model.text = await this.text.decrypt(model.cryptoKey);\n        break;\n      default:\n        break;\n    }\n\n    return model;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\nimport { Send } from \"../domain/send\";\n\nexport class SendRequest {\n  type: SendType;\n  fileLength?: number;\n  name: string;\n  notes: string;\n  key: string;\n  maxAccessCount?: number;\n  expirationDate: string;\n  deletionDate: string;\n  text: SendTextApi;\n  file: SendFileApi;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(send: Send, fileLength?: number) {\n    this.type = send.type;\n    this.fileLength = fileLength;\n    this.name = send.name ? send.name.encryptedString : null;\n    this.notes = send.notes ? send.notes.encryptedString : null;\n    this.maxAccessCount = send.maxAccessCount;\n    this.expirationDate = send.expirationDate != null ? send.expirationDate.toISOString() : null;\n    this.deletionDate = send.deletionDate != null ? send.deletionDate.toISOString() : null;\n    this.key = send.key != null ? send.key.encryptedString : null;\n    this.password = send.password;\n    this.disabled = send.disabled;\n    this.hideEmail = send.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextApi();\n        this.text.text = send.text.text != null ? send.text.text.encryptedString : null;\n        this.text.hidden = send.text.hidden;\n        break;\n      case SendType.File:\n        this.file = new SendFileApi();\n        this.file.fileName = send.file.fileName != null ? send.file.fileName.encryptedString : null;\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { SendService as SendServiceAbstraction } from \"../abstractions/send.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SEND_KDF_ITERATIONS } from \"../enums/kdfType\";\nimport { SendType } from \"../enums/sendType\";\nimport { Utils } from \"../misc/utils\";\nimport { SendData } from \"../models/data/sendData\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { Send } from \"../models/domain/send\";\nimport { SendFile } from \"../models/domain/sendFile\";\nimport { SendText } from \"../models/domain/sendText\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport class SendService implements SendServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setDecryptedSends(null);\n  }\n\n  async encrypt(\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ): Promise<[Send, EncArrayBuffer]> {\n    let fileData: EncArrayBuffer = null;\n    const send = new Send();\n    send.id = model.id;\n    send.type = model.type;\n    send.disabled = model.disabled;\n    send.hideEmail = model.hideEmail;\n    send.maxAccessCount = model.maxAccessCount;\n    if (model.key == null) {\n      model.key = await this.cryptoFunctionService.randomBytes(16);\n      model.cryptoKey = await this.cryptoService.makeSendKey(model.key);\n    }\n    if (password != null) {\n      const passwordHash = await this.cryptoFunctionService.pbkdf2(\n        password,\n        model.key,\n        \"sha256\",\n        SEND_KDF_ITERATIONS\n      );\n      send.password = Utils.fromBufferToB64(passwordHash);\n    }\n    send.key = await this.cryptoService.encrypt(model.key, key);\n    send.name = await this.cryptoService.encrypt(model.name, model.cryptoKey);\n    send.notes = await this.cryptoService.encrypt(model.notes, model.cryptoKey);\n    if (send.type === SendType.Text) {\n      send.text = new SendText();\n      send.text.text = await this.cryptoService.encrypt(model.text.text, model.cryptoKey);\n      send.text.hidden = model.text.hidden;\n    } else if (send.type === SendType.File) {\n      send.file = new SendFile();\n      if (file != null) {\n        if (file instanceof ArrayBuffer) {\n          const [name, data] = await this.encryptFileData(\n            model.file.fileName,\n            file,\n            model.cryptoKey\n          );\n          send.file.fileName = name;\n          fileData = data;\n        } else {\n          fileData = await this.parseFile(send, file, model.cryptoKey);\n        }\n      }\n    }\n\n    return [send, fileData];\n  }\n\n  async get(id: string): Promise<Send> {\n    const sends = await this.stateService.getEncryptedSends();\n    // eslint-disable-next-line\n    if (sends == null || !sends.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Send(sends[id]);\n  }\n\n  async getAll(): Promise<Send[]> {\n    const sends = await this.stateService.getEncryptedSends();\n    const response: Send[] = [];\n    for (const id in sends) {\n      // eslint-disable-next-line\n      if (sends.hasOwnProperty(id)) {\n        response.push(new Send(sends[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<SendView[]> {\n    let decSends = await this.stateService.getDecryptedSends();\n    if (decSends != null) {\n      return decSends;\n    }\n\n    decSends = [];\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const promises: Promise<any>[] = [];\n    const sends = await this.getAll();\n    sends.forEach((send) => {\n      promises.push(send.decrypt().then((f) => decSends.push(f)));\n    });\n\n    await Promise.all(promises);\n    decSends.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    await this.stateService.setDecryptedSends(decSends);\n    return decSends;\n  }\n\n  async saveWithServer(sendData: [Send, EncArrayBuffer]): Promise<any> {\n    const request = new SendRequest(sendData[0], sendData[1]?.buffer.byteLength);\n    let response: SendResponse;\n    if (sendData[0].id == null) {\n      if (sendData[0].type === SendType.Text) {\n        response = await this.apiService.postSend(request);\n      } else {\n        try {\n          const uploadDataResponse = await this.apiService.postFileTypeSend(request);\n          response = uploadDataResponse.sendResponse;\n\n          await this.fileUploadService.uploadSendFile(\n            uploadDataResponse,\n            sendData[0].file.fileName,\n            sendData[1]\n          );\n        } catch (e) {\n          if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n            response = await this.legacyServerSendFileUpload(sendData, request);\n          } else if (e instanceof ErrorResponse) {\n            throw new Error((e as ErrorResponse).getSingleMessage());\n          } else {\n            throw e;\n          }\n        }\n      }\n      sendData[0].id = response.id;\n      sendData[0].accessId = response.accessId;\n    } else {\n      response = await this.apiService.putSend(sendData[0].id, request);\n    }\n\n    const data = new SendData(response);\n    await this.upsert(data);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerSendFileUpload(\n    sendData: [Send, EncArrayBuffer],\n    request: SendRequest\n  ): Promise<SendResponse> {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([sendData[1].buffer], { type: \"application/octet-stream\" });\n      fd.append(\"model\", JSON.stringify(request));\n      fd.append(\"data\", blob, sendData[0].file.fileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"model\", JSON.stringify(request));\n        fd.append(\n          \"data\",\n          Buffer.from(sendData[1].buffer) as any,\n          {\n            filepath: sendData[0].file.fileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n    return await this.apiService.postSendFileLegacy(fd);\n  }\n\n  async upsert(send: SendData | SendData[]): Promise<any> {\n    let sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      sends = {};\n    }\n\n    if (send instanceof SendData) {\n      const s = send as SendData;\n      sends[s.id] = s;\n    } else {\n      (send as SendData[]).forEach((s) => {\n        sends[s.id] = s;\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async replace(sends: { [id: string]: SendData }): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(sends);\n  }\n\n  async clear(): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(null);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (sends[id] == null) {\n        return;\n      }\n      delete sends[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete sends[i];\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteSend(id);\n    await this.delete(id);\n  }\n\n  async removePasswordWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putSendRemovePassword(id);\n    const data = new SendData(response);\n    await this.upsert(data);\n  }\n\n  private parseFile(send: Send, file: File, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(file);\n      reader.onload = async (evt) => {\n        try {\n          const [name, data] = await this.encryptFileData(\n            file.name,\n            evt.target.result as ArrayBuffer,\n            key\n          );\n          send.file.fileName = name;\n          resolve(data);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  private async encryptFileData(\n    fileName: string,\n    data: ArrayBuffer,\n    key: SymmetricCryptoKey\n  ): Promise<[EncString, EncArrayBuffer]> {\n    const encFileName = await this.cryptoService.encrypt(fileName, key);\n    const encFileData = await this.cryptoService.encryptToBytes(data, key);\n    return [encFileName, encFileData];\n  }\n}\n","import { SettingsService as SettingsServiceAbstraction } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nconst Keys = {\n  settingsPrefix: \"settings_\",\n  equivalentDomains: \"equivalentDomains\",\n};\n\nexport class SettingsService implements SettingsServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setSettings(null);\n  }\n\n  getEquivalentDomains(): Promise<any> {\n    return this.getSettingsKey(Keys.equivalentDomains);\n  }\n\n  async setEquivalentDomains(equivalentDomains: string[][]): Promise<void> {\n    await this.setSettingsKey(Keys.equivalentDomains, equivalentDomains);\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setSettings(null, { userId: userId });\n  }\n\n  // Helpers\n\n  private async getSettings(): Promise<any> {\n    const settings = await this.stateService.getSettings();\n    if (settings == null) {\n      // eslint-disable-next-line\n      const userId = await this.stateService.getUserId();\n    }\n    return settings;\n  }\n\n  private async getSettingsKey(key: string): Promise<any> {\n    const settings = await this.getSettings();\n    if (settings != null && settings[key]) {\n      return settings[key];\n    }\n    return null;\n  }\n\n  private async setSettingsKey(key: string, value: any): Promise<void> {\n    let settings = await this.getSettings();\n    if (!settings) {\n      settings = {};\n    }\n\n    settings[key] = value;\n    await this.stateService.setSettings(settings);\n  }\n}\n","export enum StorageLocation {\n  Both = \"both\",\n  Disk = \"disk\",\n  Memory = \"memory\",\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProfileProviderResponse } from \"../response/profileProviderResponse\";\n\nexport class ProviderData {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: ProfileProviderResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.userId = response.userId;\n    this.useEvents = response.useEvents;\n  }\n}\n","import { Account } from \"./account\";\nimport { GlobalState } from \"./globalState\";\n\nexport class State<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  accounts: { [userId: string]: TAccount } = {};\n  globals: TGlobalState;\n  activeUserId: string;\n  authenticatedAccounts: string[] = [];\n  accountActivity: { [userId: string]: number } = {};\n\n  constructor(globals: TGlobalState) {\n    this.globals = globals;\n  }\n}\n","import { BehaviorSubject } from \"rxjs\";\n\nimport { LogService } from \"../abstractions/log.service\";\nimport { StateService as StateServiceAbstraction } from \"../abstractions/state.service\";\nimport { StateMigrationService } from \"../abstractions/stateMigration.service\";\nimport { AbstractStorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StorageLocation } from \"../enums/storageLocation\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encryptedOrganizationKeyData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { Account, AccountData, AccountSettings } from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/encString\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { GlobalState } from \"../models/domain/globalState\";\nimport { Policy } from \"../models/domain/policy\";\nimport { State } from \"../models/domain/state\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { WindowState } from \"../models/domain/windowState\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { SendView } from \"../models/view/sendView\";\n\nconst keys = {\n  state: \"state\",\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nexport class StateService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> implements StateServiceAbstraction<TAccount>\n{\n  accounts = new BehaviorSubject<{ [userId: string]: TAccount }>({});\n  activeAccount = new BehaviorSubject<string>(null);\n  activeAccountUnlocked = new BehaviorSubject<boolean>(false);\n\n  private hasBeenInited = false;\n  private isRecoveredSession = false;\n\n  private accountDiskCache = new Map<string, TAccount>();\n\n  constructor(\n    protected storageService: AbstractStorageService,\n    protected secureStorageService: AbstractStorageService,\n    protected memoryStorageService: AbstractStorageService,\n    protected logService: LogService,\n    protected stateMigrationService: StateMigrationService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>,\n    protected useAccountCache: boolean = true\n  ) {\n    // If the account gets changed, verify the new account is unlocked\n    this.activeAccount.subscribe(async (userId) => {\n      if (userId == null && this.activeAccountUnlocked.getValue() == false) {\n        return;\n      } else if (userId == null) {\n        this.activeAccountUnlocked.next(false);\n      }\n\n      // FIXME: This should be refactored into AuthService or a similar service,\n      //  as checking for the existance of the crypto key is a low level\n      //  implementation detail.\n      this.activeAccountUnlocked.next((await this.getCryptoMasterKey()) != null);\n    });\n  }\n\n  async init(): Promise<void> {\n    if (this.hasBeenInited) {\n      return;\n    }\n\n    if (await this.stateMigrationService.needsMigration()) {\n      await this.stateMigrationService.migrate();\n    }\n\n    await this.state().then(async (state) => {\n      if (state == null) {\n        await this.setState(new State<TGlobalState, TAccount>(this.createGlobals()));\n      } else {\n        this.isRecoveredSession = true;\n      }\n    });\n    await this.initAccountState();\n    this.hasBeenInited = true;\n  }\n\n  async initAccountState() {\n    if (this.isRecoveredSession) {\n      return;\n    }\n\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts =\n        (await this.storageService.get<string[]>(keys.authenticatedAccounts)) ?? [];\n      for (const i in state.authenticatedAccounts) {\n        if (i != null) {\n          await this.syncAccountFromDisk(state.authenticatedAccounts[i]);\n        }\n      }\n      const storedActiveUser = await this.storageService.get<string>(keys.activeUserId);\n      if (storedActiveUser != null) {\n        state.activeUserId = storedActiveUser;\n      }\n      await this.pushAccounts();\n      this.activeAccount.next(state.activeUserId);\n\n      return state;\n    });\n  }\n\n  async syncAccountFromDisk(userId: string) {\n    if (userId == null) {\n      return;\n    }\n    await this.updateState(async (state) => {\n      state.accounts[userId] = this.createAccount();\n      const diskAccount = await this.getAccountFromDisk({ userId: userId });\n      state.accounts[userId].profile = diskAccount.profile;\n      return state;\n    });\n  }\n\n  async addAccount(account: TAccount) {\n    account = await this.setAccountEnvironmentUrls(account);\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts.push(account.profile.userId);\n      await this.storageService.save(keys.authenticatedAccounts, state.authenticatedAccounts);\n      state.accounts[account.profile.userId] = account;\n      return state;\n    });\n    await this.scaffoldNewAccountStorage(account);\n    await this.setLastActive(new Date().getTime(), { userId: account.profile.userId });\n    await this.setActiveUser(account.profile.userId);\n    this.activeAccount.next(account.profile.userId);\n  }\n\n  async setActiveUser(userId: string): Promise<void> {\n    this.clearDecryptedDataForActiveUser();\n    await this.updateState(async (state) => {\n      state.activeUserId = userId;\n      await this.storageService.save(keys.activeUserId, userId);\n      this.activeAccount.next(state.activeUserId);\n      return state;\n    });\n\n    await this.pushAccounts();\n  }\n\n  async clean(options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    await this.deAuthenticateAccount(options.userId);\n    if (options.userId === (await this.state())?.activeUserId) {\n      await this.dynamicallySetActiveUser();\n    }\n\n    await this.removeAccountFromDisk(options?.userId);\n    this.removeAccountFromMemory(options?.userId);\n    await this.pushAccounts();\n  }\n\n  async getAccessToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.accessToken;\n  }\n\n  async setAccessToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.accessToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAddEditCipherInfo(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.addEditCipherInfo;\n  }\n\n  async setAddEditCipherInfo(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.addEditCipherInfo = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getAlwaysShowDock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.alwaysShowDock ?? false\n    );\n  }\n\n  async setAlwaysShowDock(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.alwaysShowDock = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getApiKeyClientId(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.profile?.apiKeyClientId;\n  }\n\n  async setApiKeyClientId(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.profile.apiKeyClientId = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getApiKeyClientSecret(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.keys?.apiKeyClientSecret;\n  }\n\n  async setApiKeyClientSecret(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.keys.apiKeyClientSecret = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAutoConfirmFingerPrints(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoConfirmFingerPrints ?? false\n    );\n  }\n\n  async setAutoConfirmFingerprints(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoConfirmFingerPrints = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getAutoFillOnPageLoadDefault(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoFillOnPageLoadDefault ?? true\n    );\n  }\n\n  async setAutoFillOnPageLoadDefault(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoFillOnPageLoadDefault = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricAwaitingAcceptance(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricAwaitingAcceptance ?? false\n    );\n  }\n\n  async setBiometricAwaitingAcceptance(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricAwaitingAcceptance = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricFingerprintValidated(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricFingerprintValidated ?? false\n    );\n  }\n\n  async setBiometricFingerprintValidated(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricFingerprintValidated = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricLocked(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions())))\n        ?.settings?.biometricLocked ?? false\n    );\n  }\n\n  async setBiometricLocked(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.settings.biometricLocked = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getBiometricText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.biometricText;\n  }\n\n  async setBiometricText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricUnlock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.biometricUnlock ?? false\n    );\n  }\n\n  async setBiometricUnlock(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.biometricUnlock = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getCanAccessPremium(options?: StorageOptions): Promise<boolean> {\n    if (!(await this.getIsAuthenticated(options))) {\n      return false;\n    }\n\n    return (\n      (await this.getHasPremiumPersonally(options)) ||\n      (await this.getHasPremiumFromOrganization(options))\n    );\n  }\n\n  async getHasPremiumPersonally(options?: StorageOptions): Promise<boolean> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    return account?.profile?.hasPremiumPersonally;\n  }\n\n  async setHasPremiumPersonally(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.hasPremiumPersonally = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getHasPremiumFromOrganization(options?: StorageOptions): Promise<boolean> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n\n    if (account.profile?.hasPremiumFromOrganization) {\n      return true;\n    }\n\n    // TODO: older server versions won't send the hasPremiumFromOrganization flag, so we're keeping the old logic\n    // for backwards compatibility. It can be removed after everyone has upgraded.\n    const organizations = await this.getOrganizations(options);\n    if (organizations == null) {\n      return false;\n    }\n\n    for (const id of Object.keys(organizations)) {\n      const o = organizations[id];\n      if (o.enabled && o.usersGetPremium && !o.isProviderUser) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  async setHasPremiumFromOrganization(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.hasPremiumFromOrganization = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getClearClipboard(options?: StorageOptions): Promise<number> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.clearClipboard ?? null\n    );\n  }\n\n  async setClearClipboard(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.clearClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getCollapsedGroupings(options?: StorageOptions): Promise<string[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.collapsedGroupings;\n  }\n\n  async setCollapsedGroupings(value: string[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.collapsedGroupings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getConvertAccountToKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.convertAccountToKeyConnector;\n  }\n\n  async setConvertAccountToKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.convertAccountToKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototype(SymmetricCryptoKey, SymmetricCryptoKey.initFromJson)\n  async getCryptoMasterKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys?.cryptoMasterKey;\n  }\n\n  async setCryptoMasterKey(value: SymmetricCryptoKey, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.cryptoMasterKey = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n\n    if (options.userId == this.activeAccount.getValue()) {\n      const nextValue = value != null;\n\n      // Avoid emitting if we are already unlocked\n      if (this.activeAccountUnlocked.getValue() != nextValue) {\n        this.activeAccountUnlocked.next(nextValue);\n      }\n    }\n  }\n\n  async getCryptoMasterKeyAuto(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options.userId}${partialKeys.autoKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyAuto(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.autoKey, value, options);\n  }\n\n  async getCryptoMasterKeyB64(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options?.userId}${partialKeys.masterKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyB64(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.masterKey, value, options);\n  }\n\n  async getCryptoMasterKeyBiometric(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async hasCryptoMasterKeyBiometric(options?: StorageOptions): Promise<boolean> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return false;\n    }\n    return await this.secureStorageService.has(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyBiometric(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.biometricKey, value, options);\n  }\n\n  async getDecodedToken(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.tokens?.decodedToken;\n  }\n\n  async setDecodedToken(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.tokens.decodedToken = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(CipherView)\n  async getDecryptedCiphers(options?: StorageOptions): Promise<CipherView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.ciphers?.decrypted;\n  }\n\n  async setDecryptedCiphers(value: CipherView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.ciphers.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(CollectionView)\n  async getDecryptedCollections(options?: StorageOptions): Promise<CollectionView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.collections?.decrypted;\n  }\n\n  async setDecryptedCollections(value: CollectionView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.collections.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototype(SymmetricCryptoKey, SymmetricCryptoKey.initFromJson)\n  async getDecryptedCryptoSymmetricKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys?.cryptoSymmetricKey?.decrypted;\n  }\n\n  async setDecryptedCryptoSymmetricKey(\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.cryptoSymmetricKey.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForMap(SymmetricCryptoKey, SymmetricCryptoKey.initFromJson)\n  async getDecryptedOrganizationKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    return account?.keys?.organizationKeys?.decrypted;\n  }\n\n  async setDecryptedOrganizationKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.organizationKeys.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(GeneratedPasswordHistory)\n  async getDecryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.passwordGenerationHistory?.decrypted;\n  }\n\n  async setDecryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.passwordGenerationHistory.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototype(EncString)\n  async getDecryptedPinProtected(options?: StorageOptions): Promise<EncString> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.settings?.pinProtected?.decrypted;\n  }\n\n  async setDecryptedPinProtected(value: EncString, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.settings.pinProtected.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(Policy)\n  async getDecryptedPolicies(options?: StorageOptions): Promise<Policy[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.policies?.decrypted;\n  }\n\n  async setDecryptedPolicies(value: Policy[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.policies.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedPrivateKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    const privateKey = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys?.privateKey;\n    let result = privateKey?.decrypted;\n    if (result == null && privateKey?.decryptedSerialized != null) {\n      result = Utils.fromByteStringToArray(privateKey.decryptedSerialized);\n    }\n    return result;\n  }\n\n  async setDecryptedPrivateKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.privateKey.decrypted = value;\n    account.keys.privateKey.decryptedSerialized =\n      value == null ? null : Utils.fromBufferToByteString(value);\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForMap(SymmetricCryptoKey, SymmetricCryptoKey.initFromJson)\n  async getDecryptedProviderKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys?.providerKeys?.decrypted;\n  }\n\n  async setDecryptedProviderKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.providerKeys.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(SendView)\n  async getDecryptedSends(options?: StorageOptions): Promise<SendView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.sends?.decrypted;\n  }\n\n  async setDecryptedSends(value: SendView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.sends.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDefaultUriMatch(options?: StorageOptions): Promise<UriMatchType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.defaultUriMatch;\n  }\n\n  async setDefaultUriMatch(value: UriMatchType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.defaultUriMatch = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAddLoginNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAddLoginNotification ?? false\n    );\n  }\n\n  async setDisableAddLoginNotification(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAddLoginNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoBiometricsPrompt(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoBiometricsPrompt ?? false\n    );\n  }\n\n  async setDisableAutoBiometricsPrompt(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoBiometricsPrompt = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoTotpCopy(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoTotpCopy ?? false\n    );\n  }\n\n  async setDisableAutoTotpCopy(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoTotpCopy = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableBadgeCounter(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableBadgeCounter ?? false\n    );\n  }\n\n  async setDisableBadgeCounter(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableBadgeCounter = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableChangedPasswordNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableChangedPasswordNotification ?? false\n    );\n  }\n\n  async setDisableChangedPasswordNotification(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableChangedPasswordNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableContextMenuItem(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableContextMenuItem ?? false\n    );\n  }\n\n  async setDisableContextMenuItem(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableContextMenuItem = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableFavicon(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getGlobals(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.disableFavicon ?? false\n    );\n  }\n\n  async setDisableFavicon(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.disableFavicon = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getDisableGa(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableGa ?? false\n    );\n  }\n\n  async setDisableGa(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableGa = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowCardsCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowCardsCurrentTab ?? false\n    );\n  }\n\n  async setDontShowCardsCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowCardsCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowIdentitiesCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowIdentitiesCurrentTab ?? false\n    );\n  }\n\n  async setDontShowIdentitiesCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowIdentitiesCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEmail(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.profile?.email;\n  }\n\n  async setEmail(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.email = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getEmailVerified(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.profile.emailVerified ?? false\n    );\n  }\n\n  async setEmailVerified(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.emailVerified = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAlwaysOnTop(options?: StorageOptions): Promise<boolean> {\n    const accountPreference = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.enableAlwaysOnTop;\n    const globalPreference = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.enableAlwaysOnTop;\n    return accountPreference ?? globalPreference ?? false;\n  }\n\n  async setEnableAlwaysOnTop(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAlwaysOnTop = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableAlwaysOnTop = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAutoFillOnPageLoad(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.enableAutoFillOnPageLoad ?? false\n    );\n  }\n\n  async setEnableAutoFillOnPageLoad(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAutoFillOnPageLoad = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBiometric(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBiometrics ?? false\n    );\n  }\n\n  async setEnableBiometric(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegration(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegration ?? false\n    );\n  }\n\n  async setEnableBrowserIntegration(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegration = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegrationFingerprint(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegrationFingerprint ?? false\n    );\n  }\n\n  async setEnableBrowserIntegrationFingerprint(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegrationFingerprint = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableCloseToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableCloseToTray ?? false\n    );\n  }\n\n  async setEnableCloseToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableCloseToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableFullWidth(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.enableFullWidth ?? false\n    );\n  }\n\n  async setEnableFullWidth(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.enableFullWidth = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnableGravitars(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.enableGravitars ?? false\n    );\n  }\n\n  async setEnableGravitars(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.enableGravitars = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnableMinimizeToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableMinimizeToTray ?? false\n    );\n  }\n\n  async setEnableMinimizeToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableMinimizeToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableStartToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableStartToTray ?? false\n    );\n  }\n\n  async setEnableStartToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableStartToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableTray ?? false\n    );\n  }\n\n  async setEnableTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(CipherData)\n  async getEncryptedCiphers(options?: StorageOptions): Promise<{ [id: string]: CipherData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.ciphers?.encrypted;\n  }\n\n  async setEncryptedCiphers(\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.ciphers.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(CollectionData)\n  async getEncryptedCollections(\n    options?: StorageOptions\n  ): Promise<{ [id: string]: CollectionData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.collections?.encrypted;\n  }\n\n  async setEncryptedCollections(\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.collections.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedCryptoSymmetricKey(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys.cryptoSymmetricKey.encrypted;\n  }\n\n  async setEncryptedCryptoSymmetricKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.cryptoSymmetricKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(FolderData)\n  async getEncryptedFolders(options?: StorageOptions): Promise<{ [id: string]: FolderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.folders?.encrypted;\n  }\n\n  async setEncryptedFolders(\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.folders.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedOrganizationKeys(\n    options?: StorageOptions\n  ): Promise<{ [orgId: string]: EncryptedOrganizationKeyData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.organizationKeys.encrypted;\n  }\n\n  async setEncryptedOrganizationKeys(\n    value: { [orgId: string]: EncryptedOrganizationKeyData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.organizationKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(GeneratedPasswordHistory)\n  async getEncryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.passwordGenerationHistory?.encrypted;\n  }\n\n  async setEncryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.passwordGenerationHistory.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPinProtected(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.pinProtected?.encrypted;\n  }\n\n  async setEncryptedPinProtected(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.pinProtected.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(PolicyData)\n  async getEncryptedPolicies(options?: StorageOptions): Promise<{ [id: string]: PolicyData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.policies?.encrypted;\n  }\n\n  async setEncryptedPolicies(\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.policies.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPrivateKey(options?: StorageOptions): Promise<string> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    return account?.keys?.privateKey?.encrypted;\n  }\n\n  async setEncryptedPrivateKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.privateKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedProviderKeys(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.providerKeys?.encrypted;\n  }\n\n  async setEncryptedProviderKeys(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.providerKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(SendData)\n  async getEncryptedSends(options?: StorageOptions): Promise<{ [id: string]: SendData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.sends.encrypted;\n  }\n\n  async setEncryptedSends(\n    value: { [id: string]: SendData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.sends.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEntityId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityId;\n  }\n\n  async setEntityId(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityId = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEntityType(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityType;\n  }\n\n  async setEntityType(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  @withPrototype(EnvironmentUrls)\n  async getEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    if ((await this.state())?.activeUserId == null) {\n      return await this.getGlobalEnvironmentUrls(options);\n    }\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getAccount(options))?.settings?.environmentUrls ?? new EnvironmentUrls();\n  }\n\n  async setEnvironmentUrls(value: EnvironmentUrls, options?: StorageOptions): Promise<void> {\n    // Global values are set on each change and the current global settings are passed to any newly authed accounts.\n    // This is to allow setting environement values before an account is active, while still allowing individual accounts to have their own environments.\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.environmentUrls = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEquivalentDomains(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.equivalentDomains;\n  }\n\n  async setEquivalentDomains(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.equivalentDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(EventData)\n  async getEventCollection(options?: StorageOptions): Promise<EventData[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.eventCollection;\n  }\n\n  async setEventCollection(value: EventData[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.eventCollection = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEverBeenUnlocked(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions())))\n        ?.profile?.everBeenUnlocked ?? false\n    );\n  }\n\n  async setEverBeenUnlocked(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.everBeenUnlocked = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getForcePasswordReset(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions())))\n        ?.profile?.forcePasswordReset ?? false\n    );\n  }\n\n  async setForcePasswordReset(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.forcePasswordReset = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getInstalledVersion(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.installedVersion;\n  }\n\n  async setInstalledVersion(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.installedVersion = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getIsAuthenticated(options?: StorageOptions): Promise<boolean> {\n    return (await this.getAccessToken(options)) != null && (await this.getUserId(options)) != null;\n  }\n\n  async getKdfIterations(options?: StorageOptions): Promise<number> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfIterations;\n  }\n\n  async setKdfIterations(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfIterations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKdfType(options?: StorageOptions): Promise<KdfType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfType;\n  }\n\n  async setKdfType(value: KdfType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKeyHash(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.keyHash;\n  }\n\n  async setKeyHash(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.keyHash = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getLastActive(options?: StorageOptions): Promise<number> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n\n    const accountActivity = await this.storageService.get<{ [userId: string]: number }>(\n      keys.accountActivity,\n      options\n    );\n\n    if (accountActivity == null || Object.keys(accountActivity).length < 1) {\n      return null;\n    }\n\n    return accountActivity[options.userId];\n  }\n\n  async setLastActive(value: number, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    if (options.userId == null) {\n      return;\n    }\n    const accountActivity =\n      (await this.storageService.get<{ [userId: string]: number }>(\n        keys.accountActivity,\n        options\n      )) ?? {};\n    accountActivity[options.userId] = value;\n    await this.storageService.save(keys.accountActivity, accountActivity, options);\n  }\n\n  async getLastSync(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.profile?.lastSync;\n  }\n\n  async setLastSync(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.profile.lastSync = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  @withPrototype(SymmetricCryptoKey, SymmetricCryptoKey.initFromJson)\n  async getLegacyEtmKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.legacyEtmKey;\n  }\n\n  async setLegacyEtmKey(value: SymmetricCryptoKey, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.legacyEtmKey = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getLocalData(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.data?.localData;\n  }\n  async setLocalData(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.data.localData = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getLocale(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.locale;\n  }\n\n  async setLocale(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.locale = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getMainWindowSize(options?: StorageOptions): Promise<number> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.mainWindowSize;\n  }\n\n  async setMainWindowSize(value: number, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    globals.mainWindowSize = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getMinimizeOnCopyToClipboard(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.minimizeOnCopyToClipboard ?? false\n    );\n  }\n\n  async setMinimizeOnCopyToClipboard(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.minimizeOnCopyToClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNeverDomains(options?: StorageOptions): Promise<{ [id: string]: any }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.neverDomains;\n  }\n\n  async setNeverDomains(value: { [id: string]: any }, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.neverDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometrics(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.noAutoPromptBiometrics ?? false\n    );\n  }\n\n  async setNoAutoPromptBiometrics(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometricsText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.noAutoPromptBiometricsText;\n  }\n\n  async setNoAutoPromptBiometricsText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometricsText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOpenAtLogin(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.openAtLogin ?? false\n    );\n  }\n\n  async setOpenAtLogin(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.openAtLogin = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOrganizationInvitation(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.organizationInvitation;\n  }\n\n  async setOrganizationInvitation(value: any, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    globals.organizationInvitation = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getOrganizations(options?: StorageOptions): Promise<{ [id: string]: OrganizationData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.organizations;\n  }\n\n  async setOrganizations(\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.organizations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPasswordGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.passwordGenerationOptions;\n  }\n\n  async setPasswordGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.passwordGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getUsernameGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.usernameGenerationOptions;\n  }\n\n  async setUsernameGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.usernameGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getGeneratorOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.generatorOptions;\n  }\n\n  async setGeneratorOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.generatorOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getProtectedPin(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.protectedPin;\n  }\n\n  async setProtectedPin(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.protectedPin = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(ProviderData)\n  async getProviders(options?: StorageOptions): Promise<{ [id: string]: ProviderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.providers;\n  }\n\n  async setProviders(\n    value: { [id: string]: ProviderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.providers = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPublicKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    const keys = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys;\n    let result = keys?.publicKey;\n    if (result == null && keys?.publicKeySerialized != null) {\n      result = Utils.fromByteStringToArray(keys.publicKeySerialized);\n    }\n    return result;\n  }\n\n  async setPublicKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.publicKey = value;\n    account.keys.publicKeySerialized = value == null ? null : Utils.fromBufferToByteString(value);\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getRefreshToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.refreshToken;\n  }\n\n  async setRefreshToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.refreshToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getRememberedEmail(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.rememberedEmail;\n  }\n\n  async setRememberedEmail(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.rememberedEmail = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSecurityStamp(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.tokens?.securityStamp;\n  }\n\n  async setSecurityStamp(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.tokens.securityStamp = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getSettings(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.settings?.settings;\n  }\n\n  async setSettings(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.settings.settings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getSsoCodeVerifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoCodeVerifier;\n  }\n\n  async setSsoCodeVerifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoCodeVerifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getSsoOrgIdentifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.ssoOrganizationIdentifier;\n  }\n\n  async setSsoOrganizationIdentifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.ssoOrganizationIdentifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSsoState(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoState;\n  }\n\n  async setSsoState(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoState = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getTheme(options?: StorageOptions): Promise<ThemeType> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.theme;\n  }\n\n  async setTheme(value: ThemeType, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.theme = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getTwoFactorToken(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.twoFactorToken;\n  }\n\n  async setTwoFactorToken(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.twoFactorToken = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getUserId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.userId;\n  }\n\n  async getUsesKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.usesKeyConnector;\n  }\n\n  async setUsesKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.usesKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getVaultTimeout(options?: StorageOptions): Promise<number> {\n    const accountVaultTimeout = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeout;\n    return accountVaultTimeout;\n  }\n\n  async setVaultTimeout(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeout = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getVaultTimeoutAction(options?: StorageOptions): Promise<string> {\n    const accountVaultTimeoutAction = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeoutAction;\n    const globalVaultTimeoutAction = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.vaultTimeoutAction;\n    return accountVaultTimeoutAction ?? globalVaultTimeoutAction;\n  }\n\n  async setVaultTimeoutAction(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeoutAction = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getStateVersion(): Promise<number> {\n    return (await this.getGlobals(await this.defaultOnDiskLocalOptions())).stateVersion ?? 1;\n  }\n\n  async setStateVersion(value: number): Promise<void> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    globals.stateVersion = value;\n    await this.saveGlobals(globals, await this.defaultOnDiskOptions());\n  }\n\n  async getWindow(): Promise<WindowState> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    return globals?.window != null && Object.keys(globals.window).length > 0\n      ? globals.window\n      : new WindowState();\n  }\n\n  async setWindow(value: WindowState, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.window = value;\n    return await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  protected async getGlobals(options: StorageOptions): Promise<TGlobalState> {\n    let globals: TGlobalState;\n    if (this.useMemory(options.storageLocation)) {\n      globals = await this.getGlobalsFromMemory();\n    }\n\n    if (this.useDisk && globals == null) {\n      globals = await this.getGlobalsFromDisk(options);\n    }\n\n    return globals ?? this.createGlobals();\n  }\n\n  protected async saveGlobals(globals: TGlobalState, options: StorageOptions) {\n    return this.useMemory(options.storageLocation)\n      ? this.saveGlobalsToMemory(globals)\n      : await this.saveGlobalsToDisk(globals, options);\n  }\n\n  protected async getGlobalsFromMemory(): Promise<TGlobalState> {\n    return (await this.state()).globals;\n  }\n\n  protected async getGlobalsFromDisk(options: StorageOptions): Promise<TGlobalState> {\n    return await this.storageService.get<TGlobalState>(keys.global, options);\n  }\n\n  protected async saveGlobalsToMemory(globals: TGlobalState): Promise<void> {\n    await this.updateState(async (state) => {\n      state.globals = globals;\n      return state;\n    });\n  }\n\n  protected async saveGlobalsToDisk(globals: TGlobalState, options: StorageOptions): Promise<void> {\n    if (options.useSecureStorage) {\n      await this.secureStorageService.save(keys.global, globals, options);\n    } else {\n      await this.storageService.save(keys.global, globals, options);\n    }\n  }\n\n  protected async getAccount(options: StorageOptions): Promise<TAccount> {\n    try {\n      let account: TAccount;\n      if (this.useMemory(options.storageLocation)) {\n        account = await this.getAccountFromMemory(options);\n      }\n\n      if (this.useDisk(options.storageLocation) && account == null) {\n        account = await this.getAccountFromDisk(options);\n      }\n\n      return account;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async getAccountFromMemory(options: StorageOptions): Promise<TAccount> {\n    return await this.state().then(async (state) => {\n      if (state.accounts == null) {\n        return null;\n      }\n      return state.accounts[await this.getUserIdFromMemory(options)];\n    });\n  }\n\n  protected async getUserIdFromMemory(options: StorageOptions): Promise<string> {\n    return await this.state().then((state) => {\n      return options?.userId != null\n        ? state.accounts[options.userId]?.profile?.userId\n        : state.activeUserId;\n    });\n  }\n\n  protected async getAccountFromDisk(options: StorageOptions): Promise<TAccount> {\n    if (options?.userId == null && (await this.state())?.activeUserId == null) {\n      return null;\n    }\n\n    if (this.useAccountCache) {\n      const cachedAccount = this.accountDiskCache.get(options.userId);\n      if (cachedAccount != null) {\n        return cachedAccount;\n      }\n    }\n\n    const account = options?.useSecureStorage\n      ? (await this.secureStorageService.get<TAccount>(options.userId, options)) ??\n        (await this.storageService.get<TAccount>(\n          options.userId,\n          this.reconcileOptions(options, { htmlStorageLocation: HtmlStorageLocation.Local })\n        ))\n      : await this.storageService.get<TAccount>(options.userId, options);\n\n    if (this.useAccountCache) {\n      this.accountDiskCache.set(options.userId, account);\n    }\n    return account;\n  }\n\n  protected useMemory(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Memory || storageLocation === StorageLocation.Both;\n  }\n\n  protected useDisk(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Disk || storageLocation === StorageLocation.Both;\n  }\n\n  protected async saveAccount(\n    account: TAccount,\n    options: StorageOptions = {\n      storageLocation: StorageLocation.Both,\n      useSecureStorage: false,\n    }\n  ) {\n    return this.useMemory(options.storageLocation)\n      ? await this.saveAccountToMemory(account)\n      : await this.saveAccountToDisk(account, options);\n  }\n\n  protected async saveAccountToDisk(account: TAccount, options: StorageOptions): Promise<void> {\n    const storageLocation = options.useSecureStorage\n      ? this.secureStorageService\n      : this.storageService;\n\n    await storageLocation.save(`${options.userId}`, account, options);\n\n    if (this.useAccountCache) {\n      this.accountDiskCache.delete(options.userId);\n    }\n  }\n\n  protected async saveAccountToMemory(account: TAccount): Promise<void> {\n    if (this.getAccountFromMemory({ userId: account.profile.userId }) !== null) {\n      await this.updateState((state) => {\n        return new Promise((resolve) => {\n          state.accounts[account.profile.userId] = account;\n          resolve(state);\n        });\n      });\n    }\n    await this.pushAccounts();\n  }\n\n  protected async scaffoldNewAccountStorage(account: TAccount): Promise<void> {\n    // We don't want to manipulate the referenced in memory account\n    const deepClone = JSON.parse(JSON.stringify(account));\n    await this.scaffoldNewAccountLocalStorage(deepClone);\n    await this.scaffoldNewAccountSessionStorage(deepClone);\n    await this.scaffoldNewAccountMemoryStorage(deepClone);\n  }\n\n  // TODO: There is a tech debt item for splitting up these methods - only Web uses multiple storage locations in its storageService.\n  // For now these methods exist with some redundancy to facilitate this special web requirement.\n  protected async scaffoldNewAccountLocalStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n    // EnvironmentUrls are set before authenticating and should override whatever is stored from any previous session\n    const environmentUrls = account.settings.environmentUrls;\n    if (storedAccount?.settings != null) {\n      account.settings = storedAccount.settings;\n    } else if (await this.storageService.has(keys.tempAccountSettings)) {\n      account.settings = await this.storageService.get<AccountSettings>(keys.tempAccountSettings);\n      await this.storageService.remove(keys.tempAccountSettings);\n    }\n    account.settings.environmentUrls = environmentUrls;\n    if (account.settings.vaultTimeoutAction === \"logOut\" && account.settings.vaultTimeout != null) {\n      account.tokens.accessToken = null;\n      account.tokens.refreshToken = null;\n      account.profile.apiKeyClientId = null;\n      account.keys.apiKeyClientSecret = null;\n    }\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountMemoryStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountSessionStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n  }\n  //\n\n  protected async pushAccounts(): Promise<void> {\n    await this.pruneInMemoryAccounts();\n    await this.state().then((state) => {\n      if (state.accounts == null || Object.keys(state.accounts).length < 1) {\n        this.accounts.next(null);\n        return;\n      }\n\n      this.accounts.next(state.accounts);\n    });\n  }\n\n  protected reconcileOptions(\n    requestedOptions: StorageOptions,\n    defaultOptions: StorageOptions\n  ): StorageOptions {\n    if (requestedOptions == null) {\n      return defaultOptions;\n    }\n    requestedOptions.userId = requestedOptions?.userId ?? defaultOptions.userId;\n    requestedOptions.storageLocation =\n      requestedOptions?.storageLocation ?? defaultOptions.storageLocation;\n    requestedOptions.useSecureStorage =\n      requestedOptions?.useSecureStorage ?? defaultOptions.useSecureStorage;\n    requestedOptions.htmlStorageLocation =\n      requestedOptions?.htmlStorageLocation ?? defaultOptions.htmlStorageLocation;\n    requestedOptions.keySuffix = requestedOptions?.keySuffix ?? defaultOptions.keySuffix;\n    return requestedOptions;\n  }\n\n  protected async defaultInMemoryOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Memory,\n      userId: (await this.state()).activeUserId,\n    };\n  }\n\n  protected async defaultOnDiskOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Session,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskLocalOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Local,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskMemoryOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Memory,\n      userId: (await this.state())?.activeUserId ?? (await this.getUserId()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultSecureStorageOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      useSecureStorage: true,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n    };\n  }\n\n  protected async getActiveUserIdFromStorage(): Promise<string> {\n    return await this.storageService.get<string>(keys.activeUserId);\n  }\n\n  protected async removeAccountFromLocalStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  protected async removeAccountFromSessionStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n  }\n\n  protected async removeAccountFromSecureStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    await this.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.setCryptoMasterKeyBiometric(null, { userId: userId });\n    await this.setCryptoMasterKeyB64(null, { userId: userId });\n  }\n\n  protected async removeAccountFromMemory(userId: string = null): Promise<void> {\n    await this.updateState(async (state) => {\n      userId = userId ?? state.activeUserId;\n      delete state.accounts[userId];\n\n      if (this.useAccountCache) {\n        this.accountDiskCache.delete(userId);\n      }\n\n      return state;\n    });\n  }\n\n  protected async pruneInMemoryAccounts() {\n    // We preserve settings for logged out accounts, but we don't want to consider them when thinking about active account state\n    for (const userId in (await this.state())?.accounts) {\n      if (!(await this.getIsAuthenticated({ userId: userId }))) {\n        await this.removeAccountFromMemory(userId);\n      }\n    }\n  }\n\n  // settings persist even on reset, and are not effected by this method\n  protected resetAccount(account: TAccount) {\n    const persistentAccountInformation = { settings: account.settings };\n    return Object.assign(this.createAccount(), persistentAccountInformation);\n  }\n\n  protected async setAccountEnvironmentUrls(account: TAccount): Promise<TAccount> {\n    account.settings.environmentUrls = await this.getGlobalEnvironmentUrls();\n    return account;\n  }\n\n  protected async getGlobalEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getGlobals(options)).environmentUrls ?? new EnvironmentUrls();\n  }\n\n  protected async clearDecryptedDataForActiveUser(): Promise<void> {\n    await this.updateState(async (state) => {\n      const userId = state?.activeUserId;\n      if (userId != null && state?.accounts[userId]?.data != null) {\n        state.accounts[userId].data = new AccountData();\n      }\n\n      return state;\n    });\n  }\n\n  protected createAccount(init: Partial<TAccount> = null): TAccount {\n    return this.stateFactory.createAccount(init);\n  }\n\n  protected createGlobals(init: Partial<TGlobalState> = null): TGlobalState {\n    return this.stateFactory.createGlobal(init);\n  }\n\n  protected async deAuthenticateAccount(userId: string): Promise<void> {\n    await this.setAccessToken(null, { userId: userId });\n    await this.setLastActive(null, { userId: userId });\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts = state.authenticatedAccounts.filter((id) => id !== userId);\n\n      await this.storageService.save(keys.authenticatedAccounts, state.authenticatedAccounts);\n\n      return state;\n    });\n  }\n\n  protected async removeAccountFromDisk(userId: string) {\n    await this.removeAccountFromSessionStorage(userId);\n    await this.removeAccountFromLocalStorage(userId);\n    await this.removeAccountFromSecureStorage(userId);\n  }\n\n  protected async dynamicallySetActiveUser() {\n    const accounts = (await this.state())?.accounts;\n    if (accounts == null || Object.keys(accounts).length < 1) {\n      await this.setActiveUser(null);\n      return;\n    }\n    for (const userId in accounts) {\n      if (userId == null) {\n        continue;\n      }\n      if (await this.getIsAuthenticated({ userId: userId })) {\n        await this.setActiveUser(userId);\n        break;\n      }\n      await this.setActiveUser(null);\n    }\n  }\n\n  private async getTimeoutBasedStorageOptions(options?: StorageOptions): Promise<StorageOptions> {\n    const timeoutAction = await this.getVaultTimeoutAction({ userId: options?.userId });\n    const timeout = await this.getVaultTimeout({ userId: options?.userId });\n    const defaultOptions =\n      timeoutAction === \"logOut\" && timeout != null\n        ? await this.defaultInMemoryOptions()\n        : await this.defaultOnDiskOptions();\n    return this.reconcileOptions(options, defaultOptions);\n  }\n\n  private async saveSecureStorageKey(key: string, value: string, options?: StorageOptions) {\n    return value == null\n      ? await this.secureStorageService.remove(`${options.userId}${key}`, options)\n      : await this.secureStorageService.save(`${options.userId}${key}`, value, options);\n  }\n\n  protected state(): Promise<State<TGlobalState, TAccount>> {\n    return this.memoryStorageService.get<State<TGlobalState, TAccount>>(keys.state);\n  }\n\n  private async setState(state: State<TGlobalState, TAccount>): Promise<void> {\n    await this.memoryStorageService.save(keys.state, state);\n  }\n\n  protected async updateState(\n    stateUpdater: (state: State<TGlobalState, TAccount>) => Promise<State<TGlobalState, TAccount>>\n  ) {\n    await this.state().then(async (state) => {\n      const updatedState = await stateUpdater(state);\n      if (updatedState == null) {\n        throw new Error(\"Attempted to update state to null value\");\n      }\n\n      await this.setState(updatedState);\n    });\n  }\n}\n\nexport function withPrototype<T>(\n  constructor: new (...args: any[]) => T,\n  converter: (input: T) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<T> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<T> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          return result == null ||\n            result.constructor.name === constructor.prototype.constructor.name\n            ? converter(result as T)\n            : converter(\n                Object.create(constructor.prototype, Object.getOwnPropertyDescriptors(result)) as T\n              );\n        });\n      },\n    };\n  };\n}\n\nfunction withPrototypeForArrayMembers<T>(\n  memberConstructor: new (...args: any[]) => T,\n  memberConverter: (input: T) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<T[]> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<any[]> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          if (result == null) {\n            return null;\n          } else if (!(result instanceof Array)) {\n            throw new Error(\n              `Attempted to retrieve non array type from state as an array for method ${String(\n                propertyKey\n              )}`\n            );\n          } else {\n            return result.map((r) => {\n              return r == null ||\n                r.constructor.name === memberConstructor.prototype.constructor.name\n                ? memberConverter(r)\n                : memberConverter(\n                    Object.create(memberConstructor.prototype, Object.getOwnPropertyDescriptors(r))\n                  );\n            });\n          }\n        });\n      },\n    };\n  };\n}\n\nfunction withPrototypeForObjectValues<T>(\n  valuesConstructor: new (...args: any[]) => T,\n  valuesConverter: (input: T) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<{ [key: string]: T }> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<{ [key: string]: T }> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          if (result == null) {\n            return null;\n          } else {\n            for (const [key, val] of Object.entries(result)) {\n              result[key] =\n                val == null || val.constructor.name === valuesConstructor.prototype.constructor.name\n                  ? valuesConverter(val)\n                  : valuesConverter(\n                      Object.create(\n                        valuesConstructor.prototype,\n                        Object.getOwnPropertyDescriptors(val)\n                      )\n                    );\n            }\n\n            return result as { [key: string]: T };\n          }\n        });\n      },\n    };\n  };\n}\n\nfunction withPrototypeForMap<T>(\n  valuesConstructor: new (...args: any[]) => T,\n  valuesConverter: (input: T) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<Map<string, T>> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<any> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          if (result == null) {\n            return null;\n          } else if (result instanceof Map) {\n            return result;\n          } else {\n            for (const key in Object.keys(result)) {\n              result[key] =\n                result[key] == null ||\n                result[key].constructor.name === valuesConstructor.prototype.constructor.name\n                  ? valuesConverter(result[key])\n                  : valuesConverter(\n                      Object.create(\n                        valuesConstructor.prototype,\n                        Object.getOwnPropertyDescriptors(result[key])\n                      )\n                    );\n            }\n            return new Map<string, T>(Object.entries(result));\n          }\n        });\n      },\n    };\n  };\n}\n","import { StateService } from \"../abstractions/state.service\";\nimport { TokenService as TokenServiceAbstraction } from \"../abstractions/token.service\";\nimport { Utils } from \"../misc/utils\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport class TokenService implements TokenServiceAbstraction {\n  static decodeToken(token: string): Promise<any> {\n    if (token == null) {\n      throw new Error(\"Token not provided.\");\n    }\n\n    const parts = token.split(\".\");\n    if (parts.length !== 3) {\n      throw new Error(\"JWT must have 3 parts\");\n    }\n\n    const decoded = Utils.fromUrlB64ToUtf8(parts[1]);\n    if (decoded == null) {\n      throw new Error(\"Cannot decode the token\");\n    }\n\n    const decodedToken = JSON.parse(decoded);\n    return decodedToken;\n  }\n\n  constructor(private stateService: StateService) {}\n\n  async setTokens(\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ): Promise<any> {\n    await this.setToken(accessToken);\n    await this.setRefreshToken(refreshToken);\n    if (clientIdClientSecret != null) {\n      await this.setClientId(clientIdClientSecret[0]);\n      await this.setClientSecret(clientIdClientSecret[1]);\n    }\n  }\n\n  async setClientId(clientId: string): Promise<any> {\n    return await this.stateService.setApiKeyClientId(clientId);\n  }\n\n  async getClientId(): Promise<string> {\n    return await this.stateService.getApiKeyClientId();\n  }\n\n  async setClientSecret(clientSecret: string): Promise<any> {\n    return await this.stateService.setApiKeyClientSecret(clientSecret);\n  }\n\n  async getClientSecret(): Promise<string> {\n    return await this.stateService.getApiKeyClientSecret();\n  }\n\n  async setToken(token: string): Promise<void> {\n    await this.stateService.setAccessToken(token);\n  }\n\n  async getToken(): Promise<string> {\n    return await this.stateService.getAccessToken();\n  }\n\n  async setRefreshToken(refreshToken: string): Promise<any> {\n    return await this.stateService.setRefreshToken(refreshToken);\n  }\n\n  async getRefreshToken(): Promise<string> {\n    return await this.stateService.getRefreshToken();\n  }\n\n  async setTwoFactorToken(tokenResponse: IdentityTokenResponse): Promise<any> {\n    return await this.stateService.setTwoFactorToken(tokenResponse.twoFactorToken);\n  }\n\n  async getTwoFactorToken(): Promise<string> {\n    return await this.stateService.getTwoFactorToken();\n  }\n\n  async clearTwoFactorToken(): Promise<any> {\n    return await this.stateService.setTwoFactorToken(null);\n  }\n\n  async clearToken(userId?: string): Promise<any> {\n    await this.stateService.setAccessToken(null, { userId: userId });\n    await this.stateService.setRefreshToken(null, { userId: userId });\n    await this.stateService.setApiKeyClientId(null, { userId: userId });\n    await this.stateService.setApiKeyClientSecret(null, { userId: userId });\n  }\n\n  // jwthelper methods\n  // ref https://github.com/auth0/angular-jwt/blob/master/src/angularJwt/services/jwt.js\n\n  async decodeToken(token?: string): Promise<any> {\n    const storedToken = await this.stateService.getDecodedToken();\n    if (token === null && storedToken != null) {\n      return storedToken;\n    }\n\n    token = token ?? (await this.stateService.getAccessToken());\n\n    if (token == null) {\n      throw new Error(\"Token not found.\");\n    }\n\n    return TokenService.decodeToken(token);\n  }\n\n  async getTokenExpirationDate(): Promise<Date> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.exp === \"undefined\") {\n      return null;\n    }\n\n    const d = new Date(0); // The 0 here is the key, which sets the date to the epoch\n    d.setUTCSeconds(decoded.exp);\n    return d;\n  }\n\n  async tokenSecondsRemaining(offsetSeconds = 0): Promise<number> {\n    const d = await this.getTokenExpirationDate();\n    if (d == null) {\n      return 0;\n    }\n\n    const msRemaining = d.valueOf() - (new Date().valueOf() + offsetSeconds * 1000);\n    return Math.round(msRemaining / 1000);\n  }\n\n  async tokenNeedsRefresh(minutes = 5): Promise<boolean> {\n    const sRemaining = await this.tokenSecondsRemaining();\n    return sRemaining < 60 * minutes;\n  }\n\n  async getUserId(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.sub === \"undefined\") {\n      throw new Error(\"No user id found\");\n    }\n\n    return decoded.sub as string;\n  }\n\n  async getEmail(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email === \"undefined\") {\n      throw new Error(\"No email found\");\n    }\n\n    return decoded.email as string;\n  }\n\n  async getEmailVerified(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email_verified === \"undefined\") {\n      throw new Error(\"No email verification found\");\n    }\n\n    return decoded.email_verified as boolean;\n  }\n\n  async getName(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.name === \"undefined\") {\n      return null;\n    }\n\n    return decoded.name as string;\n  }\n\n  async getIssuer(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.iss === \"undefined\") {\n      throw new Error(\"No issuer found\");\n    }\n\n    return decoded.iss as string;\n  }\n\n  async getIsExternal(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n\n    return Array.isArray(decoded.amr) && decoded.amr.includes(\"external\");\n  }\n}\n","import { AbstractStorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StateVersion } from \"../enums/stateVersion\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { Account, AccountSettings } from \"../models/domain/account\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { GlobalState } from \"../models/domain/globalState\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\n\nimport { TokenService } from \"./token.service\";\n\n// Originally (before January 2022) storage was handled as a flat key/value pair store.\n// With the move to a typed object for state storage these keys should no longer be in use anywhere outside of this migration.\nconst v1Keys: { [key: string]: string } = {\n  accessToken: \"accessToken\",\n  alwaysShowDock: \"alwaysShowDock\",\n  autoConfirmFingerprints: \"autoConfirmFingerprints\",\n  autoFillOnPageLoadDefault: \"autoFillOnPageLoadDefault\",\n  biometricAwaitingAcceptance: \"biometricAwaitingAcceptance\",\n  biometricFingerprintValidated: \"biometricFingerprintValidated\",\n  biometricText: \"biometricText\",\n  biometricUnlock: \"biometric\",\n  clearClipboard: \"clearClipboardKey\",\n  clientId: \"apikey_clientId\",\n  clientSecret: \"apikey_clientSecret\",\n  collapsedGroupings: \"collapsedGroupings\",\n  convertAccountToKeyConnector: \"convertAccountToKeyConnector\",\n  defaultUriMatch: \"defaultUriMatch\",\n  disableAddLoginNotification: \"disableAddLoginNotification\",\n  disableAutoBiometricsPrompt: \"noAutoPromptBiometrics\",\n  disableAutoTotpCopy: \"disableAutoTotpCopy\",\n  disableBadgeCounter: \"disableBadgeCounter\",\n  disableChangedPasswordNotification: \"disableChangedPasswordNotification\",\n  disableContextMenuItem: \"disableContextMenuItem\",\n  disableFavicon: \"disableFavicon\",\n  disableGa: \"disableGa\",\n  dontShowCardsCurrentTab: \"dontShowCardsCurrentTab\",\n  dontShowIdentitiesCurrentTab: \"dontShowIdentitiesCurrentTab\",\n  emailVerified: \"emailVerified\",\n  enableAlwaysOnTop: \"enableAlwaysOnTopKey\",\n  enableAutoFillOnPageLoad: \"enableAutoFillOnPageLoad\",\n  enableBiometric: \"enabledBiometric\",\n  enableBrowserIntegration: \"enableBrowserIntegration\",\n  enableBrowserIntegrationFingerprint: \"enableBrowserIntegrationFingerprint\",\n  enableCloseToTray: \"enableCloseToTray\",\n  enableFullWidth: \"enableFullWidth\",\n  enableGravatars: \"enableGravatars\",\n  enableMinimizeToTray: \"enableMinimizeToTray\",\n  enableStartToTray: \"enableStartToTrayKey\",\n  enableTray: \"enableTray\",\n  encKey: \"encKey\", // Generated Symmetric Key\n  encOrgKeys: \"encOrgKeys\",\n  encPrivate: \"encPrivateKey\",\n  encProviderKeys: \"encProviderKeys\",\n  entityId: \"entityId\",\n  entityType: \"entityType\",\n  environmentUrls: \"environmentUrls\",\n  equivalentDomains: \"equivalentDomains\",\n  eventCollection: \"eventCollection\",\n  forcePasswordReset: \"forcePasswordReset\",\n  history: \"generatedPasswordHistory\",\n  installedVersion: \"installedVersion\",\n  kdf: \"kdf\",\n  kdfIterations: \"kdfIterations\",\n  key: \"key\", // Master Key\n  keyHash: \"keyHash\",\n  lastActive: \"lastActive\",\n  localData: \"sitesLocalData\",\n  locale: \"locale\",\n  mainWindowSize: \"mainWindowSize\",\n  minimizeOnCopyToClipboard: \"minimizeOnCopyToClipboardKey\",\n  neverDomains: \"neverDomains\",\n  noAutoPromptBiometricsText: \"noAutoPromptBiometricsText\",\n  openAtLogin: \"openAtLogin\",\n  passwordGenerationOptions: \"passwordGenerationOptions\",\n  pinProtected: \"pinProtectedKey\",\n  protectedPin: \"protectedPin\",\n  refreshToken: \"refreshToken\",\n  ssoCodeVerifier: \"ssoCodeVerifier\",\n  ssoIdentifier: \"ssoOrgIdentifier\",\n  ssoState: \"ssoState\",\n  stamp: \"securityStamp\",\n  theme: \"theme\",\n  userEmail: \"userEmail\",\n  userId: \"userId\",\n  usesConnector: \"usesKeyConnector\",\n  vaultTimeoutAction: \"vaultTimeoutAction\",\n  vaultTimeout: \"lockOption\",\n  rememberedEmail: \"rememberedEmail\",\n};\n\nconst v1KeyPrefixes: { [key: string]: string } = {\n  ciphers: \"ciphers_\",\n  collections: \"collections_\",\n  folders: \"folders_\",\n  lastSync: \"lastSync_\",\n  policies: \"policies_\",\n  twoFactorToken: \"twoFactorToken_\",\n  organizations: \"organizations_\",\n  providers: \"providers_\",\n  sends: \"sends_\",\n  settings: \"settings_\",\n};\n\nconst keys = {\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nexport class StateMigrationService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  constructor(\n    protected storageService: AbstractStorageService,\n    protected secureStorageService: AbstractStorageService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>\n  ) {}\n\n  async needsMigration(): Promise<boolean> {\n    const currentStateVersion = await this.getCurrentStateVersion();\n    return currentStateVersion == null || currentStateVersion < StateVersion.Latest;\n  }\n\n  async migrate(): Promise<void> {\n    let currentStateVersion = await this.getCurrentStateVersion();\n    while (currentStateVersion < StateVersion.Latest) {\n      switch (currentStateVersion) {\n        case StateVersion.One:\n          await this.migrateStateFrom1To2();\n          break;\n        case StateVersion.Two:\n          await this.migrateStateFrom2To3();\n          break;\n        case StateVersion.Three:\n          await this.migrateStateFrom3To4();\n          break;\n        case StateVersion.Four: {\n          const authenticatedAccounts = await this.getAuthenticatedAccounts();\n          for (const account of authenticatedAccounts) {\n            const migratedAccount = await this.migrateAccountFrom4To5(account);\n            await this.set(account.profile.userId, migratedAccount);\n          }\n          await this.setCurrentStateVersion(StateVersion.Five);\n          break;\n        }\n      }\n\n      currentStateVersion += 1;\n    }\n  }\n\n  protected async migrateStateFrom1To2(): Promise<void> {\n    const clearV1Keys = async (clearingUserId?: string) => {\n      for (const key in v1Keys) {\n        if (key == null) {\n          continue;\n        }\n        await this.set(v1Keys[key], null);\n      }\n      if (clearingUserId != null) {\n        for (const keyPrefix in v1KeyPrefixes) {\n          if (keyPrefix == null) {\n            continue;\n          }\n          await this.set(v1KeyPrefixes[keyPrefix] + userId, null);\n        }\n      }\n    };\n\n    // Some processes, like biometrics, may have already defined a value before migrations are run.\n    // We don't want to null out those values if they don't exist in the old storage scheme (like for new installs)\n    // So, the OOO for migration is that we:\n    // 1. Check for an existing storage value from the old storage structure OR\n    // 2. Check for a value already set by processes that run before migration OR\n    // 3. Assign the default value\n    const globals =\n      (await this.get<GlobalState>(keys.global)) ?? this.stateFactory.createGlobal(null);\n    globals.stateVersion = StateVersion.Two;\n    globals.environmentUrls =\n      (await this.get<EnvironmentUrls>(v1Keys.environmentUrls)) ?? globals.environmentUrls;\n    globals.locale = (await this.get<string>(v1Keys.locale)) ?? globals.locale;\n    globals.noAutoPromptBiometrics =\n      (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n      globals.noAutoPromptBiometrics;\n    globals.noAutoPromptBiometricsText =\n      (await this.get<string>(v1Keys.noAutoPromptBiometricsText)) ??\n      globals.noAutoPromptBiometricsText;\n    globals.ssoCodeVerifier =\n      (await this.get<string>(v1Keys.ssoCodeVerifier)) ?? globals.ssoCodeVerifier;\n    globals.ssoOrganizationIdentifier =\n      (await this.get<string>(v1Keys.ssoIdentifier)) ?? globals.ssoOrganizationIdentifier;\n    globals.ssoState = (await this.get<any>(v1Keys.ssoState)) ?? globals.ssoState;\n    globals.rememberedEmail =\n      (await this.get<string>(v1Keys.rememberedEmail)) ?? globals.rememberedEmail;\n    globals.theme = (await this.get<ThemeType>(v1Keys.theme)) ?? globals.theme;\n    globals.vaultTimeout = (await this.get<number>(v1Keys.vaultTimeout)) ?? globals.vaultTimeout;\n    globals.vaultTimeoutAction =\n      (await this.get<string>(v1Keys.vaultTimeoutAction)) ?? globals.vaultTimeoutAction;\n    globals.window = (await this.get<any>(v1Keys.mainWindowSize)) ?? globals.window;\n    globals.enableTray = (await this.get<boolean>(v1Keys.enableTray)) ?? globals.enableTray;\n    globals.enableMinimizeToTray =\n      (await this.get<boolean>(v1Keys.enableMinimizeToTray)) ?? globals.enableMinimizeToTray;\n    globals.enableCloseToTray =\n      (await this.get<boolean>(v1Keys.enableCloseToTray)) ?? globals.enableCloseToTray;\n    globals.enableStartToTray =\n      (await this.get<boolean>(v1Keys.enableStartToTray)) ?? globals.enableStartToTray;\n    globals.openAtLogin = (await this.get<boolean>(v1Keys.openAtLogin)) ?? globals.openAtLogin;\n    globals.alwaysShowDock =\n      (await this.get<boolean>(v1Keys.alwaysShowDock)) ?? globals.alwaysShowDock;\n    globals.enableBrowserIntegration =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegration)) ??\n      globals.enableBrowserIntegration;\n    globals.enableBrowserIntegrationFingerprint =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegrationFingerprint)) ??\n      globals.enableBrowserIntegrationFingerprint;\n\n    const userId =\n      (await this.get<string>(v1Keys.userId)) ?? (await this.get<string>(v1Keys.entityId));\n\n    const defaultAccount = this.stateFactory.createAccount(null);\n    const accountSettings: AccountSettings = {\n      autoConfirmFingerPrints:\n        (await this.get<boolean>(v1Keys.autoConfirmFingerprints)) ??\n        defaultAccount.settings.autoConfirmFingerPrints,\n      autoFillOnPageLoadDefault:\n        (await this.get<boolean>(v1Keys.autoFillOnPageLoadDefault)) ??\n        defaultAccount.settings.autoFillOnPageLoadDefault,\n      biometricLocked: null,\n      biometricUnlock:\n        (await this.get<boolean>(v1Keys.biometricUnlock)) ??\n        defaultAccount.settings.biometricUnlock,\n      clearClipboard:\n        (await this.get<number>(v1Keys.clearClipboard)) ?? defaultAccount.settings.clearClipboard,\n      defaultUriMatch:\n        (await this.get<any>(v1Keys.defaultUriMatch)) ?? defaultAccount.settings.defaultUriMatch,\n      disableAddLoginNotification:\n        (await this.get<boolean>(v1Keys.disableAddLoginNotification)) ??\n        defaultAccount.settings.disableAddLoginNotification,\n      disableAutoBiometricsPrompt:\n        (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n        defaultAccount.settings.disableAutoBiometricsPrompt,\n      disableAutoTotpCopy:\n        (await this.get<boolean>(v1Keys.disableAutoTotpCopy)) ??\n        defaultAccount.settings.disableAutoTotpCopy,\n      disableBadgeCounter:\n        (await this.get<boolean>(v1Keys.disableBadgeCounter)) ??\n        defaultAccount.settings.disableBadgeCounter,\n      disableChangedPasswordNotification:\n        (await this.get<boolean>(v1Keys.disableChangedPasswordNotification)) ??\n        defaultAccount.settings.disableChangedPasswordNotification,\n      disableContextMenuItem:\n        (await this.get<boolean>(v1Keys.disableContextMenuItem)) ??\n        defaultAccount.settings.disableContextMenuItem,\n      disableGa: (await this.get<boolean>(v1Keys.disableGa)) ?? defaultAccount.settings.disableGa,\n      dontShowCardsCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowCardsCurrentTab)) ??\n        defaultAccount.settings.dontShowCardsCurrentTab,\n      dontShowIdentitiesCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowIdentitiesCurrentTab)) ??\n        defaultAccount.settings.dontShowIdentitiesCurrentTab,\n      enableAlwaysOnTop:\n        (await this.get<boolean>(v1Keys.enableAlwaysOnTop)) ??\n        defaultAccount.settings.enableAlwaysOnTop,\n      enableAutoFillOnPageLoad:\n        (await this.get<boolean>(v1Keys.enableAutoFillOnPageLoad)) ??\n        defaultAccount.settings.enableAutoFillOnPageLoad,\n      enableBiometric:\n        (await this.get<boolean>(v1Keys.enableBiometric)) ??\n        defaultAccount.settings.enableBiometric,\n      enableFullWidth:\n        (await this.get<boolean>(v1Keys.enableFullWidth)) ??\n        defaultAccount.settings.enableFullWidth,\n      enableGravitars:\n        (await this.get<boolean>(v1Keys.enableGravatars)) ??\n        defaultAccount.settings.enableGravitars,\n      environmentUrls: globals.environmentUrls ?? defaultAccount.settings.environmentUrls,\n      equivalentDomains:\n        (await this.get<any>(v1Keys.equivalentDomains)) ??\n        defaultAccount.settings.equivalentDomains,\n      minimizeOnCopyToClipboard:\n        (await this.get<boolean>(v1Keys.minimizeOnCopyToClipboard)) ??\n        defaultAccount.settings.minimizeOnCopyToClipboard,\n      neverDomains:\n        (await this.get<any>(v1Keys.neverDomains)) ?? defaultAccount.settings.neverDomains,\n      passwordGenerationOptions:\n        (await this.get<any>(v1Keys.passwordGenerationOptions)) ??\n        defaultAccount.settings.passwordGenerationOptions,\n      pinProtected: {\n        decrypted: null,\n        encrypted: await this.get<string>(v1Keys.pinProtected),\n      },\n      protectedPin: await this.get<string>(v1Keys.protectedPin),\n      settings: userId == null ? null : await this.get<any>(v1KeyPrefixes.settings + userId),\n      vaultTimeout:\n        (await this.get<number>(v1Keys.vaultTimeout)) ?? defaultAccount.settings.vaultTimeout,\n      vaultTimeoutAction:\n        (await this.get<string>(v1Keys.vaultTimeoutAction)) ??\n        defaultAccount.settings.vaultTimeoutAction,\n    };\n\n    // (userId == null) = no logged in user (so no known userId) and we need to temporarily store account specific settings in state to migrate on first auth\n    // (userId != null) = we have a currently authed user (so known userId) with encrypted data and other key settings we can move, no need to temporarily store account settings\n    if (userId == null) {\n      await this.set(keys.tempAccountSettings, accountSettings);\n      await this.set(keys.global, globals);\n      await this.set(keys.authenticatedAccounts, []);\n      await this.set(keys.activeUserId, null);\n      await clearV1Keys();\n      return;\n    }\n\n    globals.twoFactorToken = await this.get<string>(v1KeyPrefixes.twoFactorToken + userId);\n    await this.set(keys.global, globals);\n    await this.set(userId, {\n      data: {\n        addEditCipherInfo: null,\n        ciphers: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CipherData }>(v1KeyPrefixes.ciphers + userId),\n        },\n        collapsedGroupings: null,\n        collections: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CollectionData }>(\n            v1KeyPrefixes.collections + userId\n          ),\n        },\n        eventCollection: await this.get<EventData[]>(v1Keys.eventCollection),\n        folders: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: FolderData }>(v1KeyPrefixes.folders + userId),\n        },\n        localData: null,\n        organizations: await this.get<{ [id: string]: OrganizationData }>(\n          v1KeyPrefixes.organizations + userId\n        ),\n        passwordGenerationHistory: {\n          decrypted: null,\n          encrypted: await this.get<GeneratedPasswordHistory[]>(v1Keys.history),\n        },\n        policies: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: PolicyData }>(v1KeyPrefixes.policies + userId),\n        },\n        providers: await this.get<{ [id: string]: ProviderData }>(v1KeyPrefixes.providers + userId),\n        sends: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: SendData }>(v1KeyPrefixes.sends + userId),\n        },\n      },\n      keys: {\n        apiKeyClientSecret: await this.get<string>(v1Keys.clientSecret),\n        cryptoMasterKey: null,\n        cryptoMasterKeyAuto: null,\n        cryptoMasterKeyB64: null,\n        cryptoMasterKeyBiometric: null,\n        cryptoSymmetricKey: {\n          encrypted: await this.get<string>(v1Keys.encKey),\n          decrypted: null,\n        },\n        legacyEtmKey: null,\n        organizationKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encOrgKeys),\n        },\n        privateKey: {\n          decrypted: null,\n          encrypted: await this.get<string>(v1Keys.encPrivate),\n        },\n        providerKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encProviderKeys),\n        },\n        publicKey: null,\n      },\n      profile: {\n        apiKeyClientId: await this.get<string>(v1Keys.clientId),\n        authenticationStatus: null,\n        convertAccountToKeyConnector: await this.get<boolean>(v1Keys.convertAccountToKeyConnector),\n        email: await this.get<string>(v1Keys.userEmail),\n        emailVerified: await this.get<boolean>(v1Keys.emailVerified),\n        entityId: null,\n        entityType: null,\n        everBeenUnlocked: null,\n        forcePasswordReset: null,\n        hasPremiumPersonally: null,\n        kdfIterations: await this.get<number>(v1Keys.kdfIterations),\n        kdfType: await this.get<KdfType>(v1Keys.kdf),\n        keyHash: await this.get<string>(v1Keys.keyHash),\n        lastSync: null,\n        userId: userId,\n        usesKeyConnector: null,\n      },\n      settings: accountSettings,\n      tokens: {\n        accessToken: await this.get<string>(v1Keys.accessToken),\n        decodedToken: null,\n        refreshToken: await this.get<string>(v1Keys.refreshToken),\n        securityStamp: null,\n      },\n    });\n\n    await this.set(keys.authenticatedAccounts, [userId]);\n    await this.set(keys.activeUserId, userId);\n\n    const accountActivity: { [userId: string]: number } = {\n      [userId]: await this.get<number>(v1Keys.lastActive),\n    };\n    accountActivity[userId] = await this.get<number>(v1Keys.lastActive);\n    await this.set(keys.accountActivity, accountActivity);\n\n    await clearV1Keys(userId);\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"biometric\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.biometricKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"biometric\" }),\n        { keySuffix: \"biometric\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"biometric\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"auto\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.autoKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"auto\" }),\n        { keySuffix: \"auto\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"auto\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key)) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.masterKey}`,\n        await this.secureStorageService.get(v1Keys.key)\n      );\n      await this.secureStorageService.remove(v1Keys.key);\n    }\n  }\n\n  protected async migrateStateFrom2To3(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (\n          account?.profile?.hasPremiumPersonally === null &&\n          account.tokens?.accessToken != null\n        ) {\n          const decodedToken = await TokenService.decodeToken(account.tokens.accessToken);\n          account.profile.hasPremiumPersonally = decodedToken.premium;\n          await this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Three;\n    await this.set(keys.global, globals);\n  }\n\n  protected async migrateStateFrom3To4(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (account?.profile?.everBeenUnlocked != null) {\n          delete account.profile.everBeenUnlocked;\n          return this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Four;\n    await this.set(keys.global, globals);\n  }\n\n  protected async migrateAccountFrom4To5(account: TAccount): Promise<TAccount> {\n    const encryptedOrgKeys = account.keys?.organizationKeys?.encrypted;\n    if (encryptedOrgKeys != null) {\n      for (const [orgId, encKey] of Object.entries(encryptedOrgKeys)) {\n        encryptedOrgKeys[orgId] = {\n          type: \"organization\",\n          key: encKey as unknown as string, // Account v4 does not reflect the current account model so we have to cast\n        };\n      }\n    }\n\n    return account;\n  }\n\n  protected get options(): StorageOptions {\n    return { htmlStorageLocation: HtmlStorageLocation.Local };\n  }\n\n  protected get<T>(key: string): Promise<T> {\n    return this.storageService.get<T>(key, this.options);\n  }\n\n  protected set(key: string, value: any): Promise<any> {\n    if (value == null) {\n      return this.storageService.remove(key, this.options);\n    }\n    return this.storageService.save(key, value, this.options);\n  }\n\n  protected async getGlobals(): Promise<TGlobalState> {\n    return await this.get<TGlobalState>(keys.global);\n  }\n\n  protected async getCurrentStateVersion(): Promise<StateVersion> {\n    return (await this.getGlobals())?.stateVersion ?? StateVersion.One;\n  }\n\n  protected async setCurrentStateVersion(newVersion: StateVersion): Promise<void> {\n    const globals = await this.getGlobals();\n    globals.stateVersion = newVersion;\n    await this.set(keys.global, globals);\n  }\n\n  protected async getAuthenticatedAccounts(): Promise<TAccount[]> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    return Promise.all(authenticatedUserIds.map((id) => this.get<TAccount>(id)));\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\nimport { ProfileOrganizationResponse } from \"../response/profileOrganizationResponse\";\n\nexport class OrganizationData {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useScim: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(response: ProfileOrganizationResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.usePolicies = response.usePolicies;\n    this.useGroups = response.useGroups;\n    this.useDirectory = response.useDirectory;\n    this.useEvents = response.useEvents;\n    this.useTotp = response.useTotp;\n    this.use2fa = response.use2fa;\n    this.useApi = response.useApi;\n    this.useSso = response.useSso;\n    this.useKeyConnector = response.useKeyConnector;\n    this.useScim = response.useScim;\n    this.useResetPassword = response.useResetPassword;\n    this.selfHost = response.selfHost;\n    this.usersGetPremium = response.usersGetPremium;\n    this.seats = response.seats;\n    this.maxCollections = response.maxCollections;\n    this.maxStorageGb = response.maxStorageGb;\n    this.ssoBound = response.ssoBound;\n    this.identifier = response.identifier;\n    this.permissions = response.permissions;\n    this.resetPasswordEnrolled = response.resetPasswordEnrolled;\n    this.userId = response.userId;\n    this.hasPublicAndPrivateKeys = response.hasPublicAndPrivateKeys;\n    this.providerId = response.providerId;\n    this.providerName = response.providerName;\n    this.familySponsorshipFriendlyName = response.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = response.familySponsorshipAvailable;\n    this.planProductType = response.planProductType;\n    this.keyConnectorEnabled = response.keyConnectorEnabled;\n    this.keyConnectorUrl = response.keyConnectorUrl;\n    this.familySponsorshipLastSyncDate = response.familySponsorshipLastSyncDate;\n    this.familySponsorshipValidUntil = response.familySponsorshipValidUntil;\n    this.familySponsorshipToDelete = response.familySponsorshipToDelete;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CollectionService } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FolderApiServiceAbstraction } from \"../abstractions/folder/folder-api.service.abstraction\";\nimport { InternalFolderService } from \"../abstractions/folder/folder.service.abstraction\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { PolicyService } from \"../abstractions/policy.service\";\nimport { ProviderService } from \"../abstractions/provider.service\";\nimport { SendService } from \"../abstractions/send.service\";\nimport { SettingsService } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SyncService as SyncServiceAbstraction } from \"../abstractions/sync.service\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport { CollectionDetailsResponse } from \"../models/response/collectionResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport { FolderResponse } from \"../models/response/folderResponse\";\nimport {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notificationResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\n\nexport class SyncService implements SyncServiceAbstraction {\n  syncInProgress = false;\n\n  constructor(\n    private apiService: ApiService,\n    private settingsService: SettingsService,\n    private folderService: InternalFolderService,\n    private cipherService: CipherService,\n    private cryptoService: CryptoService,\n    private collectionService: CollectionService,\n    private messagingService: MessagingService,\n    private policyService: PolicyService,\n    private sendService: SendService,\n    private logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private providerService: ProviderService,\n    private folderApiService: FolderApiServiceAbstraction,\n    private logoutCallback: (expired: boolean) => Promise<void>\n  ) {}\n\n  async getLastSync(): Promise<Date> {\n    if ((await this.stateService.getUserId()) == null) {\n      return null;\n    }\n\n    const lastSync = await this.stateService.getLastSync();\n    if (lastSync) {\n      return new Date(lastSync);\n    }\n\n    return null;\n  }\n\n  async setLastSync(date: Date, userId?: string): Promise<any> {\n    await this.stateService.setLastSync(date.toJSON(), { userId: userId });\n  }\n\n  @sequentialize(() => \"fullSync\")\n  async fullSync(forceSync: boolean, allowThrowOnError = false): Promise<boolean> {\n    this.syncStarted();\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    if (!isAuthenticated) {\n      return this.syncCompleted(false);\n    }\n\n    const now = new Date();\n    let needsSync = false;\n    try {\n      needsSync = await this.needsSyncing(forceSync);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      }\n    }\n\n    if (!needsSync) {\n      await this.setLastSync(now);\n      return this.syncCompleted(false);\n    }\n\n    try {\n      await this.apiService.refreshIdentityToken();\n      const response = await this.apiService.getSync();\n\n      await this.syncProfile(response.profile);\n      await this.syncFolders(response.folders);\n      await this.syncCollections(response.collections);\n      await this.syncCiphers(response.ciphers);\n      await this.syncSends(response.sends);\n      await this.syncSettings(response.domains);\n      await this.syncPolicies(response.policies);\n\n      await this.setLastSync(now);\n      return this.syncCompleted(true);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      } else {\n        return this.syncCompleted(false);\n      }\n    }\n  }\n\n  async syncUpsertFolder(notification: SyncFolderNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localFolder = await this.folderService.get(notification.id);\n        if (\n          (!isEdit && localFolder == null) ||\n          (isEdit && localFolder != null && localFolder.revisionDate < notification.revisionDate)\n        ) {\n          const remoteFolder = await this.folderApiService.get(notification.id);\n          if (remoteFolder != null) {\n            await this.folderService.upsert(new FolderData(remoteFolder));\n            this.messagingService.send(\"syncedUpsertedFolder\", { folderId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteFolder(notification: SyncFolderNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.folderService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedFolder\", { folderId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertCipher(notification: SyncCipherNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        let shouldUpdate = true;\n        const localCipher = await this.cipherService.get(notification.id);\n        if (localCipher != null && localCipher.revisionDate >= notification.revisionDate) {\n          shouldUpdate = false;\n        }\n\n        let checkCollections = false;\n        if (shouldUpdate) {\n          if (isEdit) {\n            shouldUpdate = localCipher != null;\n            checkCollections = true;\n          } else {\n            if (notification.collectionIds == null || notification.organizationId == null) {\n              shouldUpdate = localCipher == null;\n            } else {\n              shouldUpdate = false;\n              checkCollections = true;\n            }\n          }\n        }\n\n        if (\n          !shouldUpdate &&\n          checkCollections &&\n          notification.organizationId != null &&\n          notification.collectionIds != null &&\n          notification.collectionIds.length > 0\n        ) {\n          const collections = await this.collectionService.getAll();\n          if (collections != null) {\n            for (let i = 0; i < collections.length; i++) {\n              if (notification.collectionIds.indexOf(collections[i].id) > -1) {\n                shouldUpdate = true;\n                break;\n              }\n            }\n          }\n        }\n\n        if (shouldUpdate) {\n          const remoteCipher = await this.apiService.getFullCipherDetails(notification.id);\n          if (remoteCipher != null) {\n            await this.cipherService.upsert(new CipherData(remoteCipher));\n            this.messagingService.send(\"syncedUpsertedCipher\", { cipherId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        if (e != null && e.statusCode === 404 && isEdit) {\n          await this.cipherService.delete(notification.id);\n          this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n          return this.syncCompleted(true);\n        }\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteCipher(notification: SyncCipherNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.cipherService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n      return this.syncCompleted(true);\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertSend(notification: SyncSendNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localSend = await this.sendService.get(notification.id);\n        if (\n          (!isEdit && localSend == null) ||\n          (isEdit && localSend != null && localSend.revisionDate < notification.revisionDate)\n        ) {\n          const remoteSend = await this.apiService.getSend(notification.id);\n          if (remoteSend != null) {\n            await this.sendService.upsert(new SendData(remoteSend));\n            this.messagingService.send(\"syncedUpsertedSend\", { sendId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteSend(notification: SyncSendNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.sendService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedSend\", { sendId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  // Helpers\n\n  private syncStarted() {\n    this.syncInProgress = true;\n    this.messagingService.send(\"syncStarted\");\n  }\n\n  private syncCompleted(successfully: boolean): boolean {\n    this.syncInProgress = false;\n    this.messagingService.send(\"syncCompleted\", { successfully: successfully });\n    return successfully;\n  }\n\n  private async needsSyncing(forceSync: boolean) {\n    if (forceSync) {\n      return true;\n    }\n\n    const lastSync = await this.getLastSync();\n    if (lastSync == null || lastSync.getTime() === 0) {\n      return true;\n    }\n\n    const response = await this.apiService.getAccountRevisionDate();\n    if (new Date(response) <= lastSync) {\n      return false;\n    }\n    return true;\n  }\n\n  private async syncProfile(response: ProfileResponse) {\n    const stamp = await this.stateService.getSecurityStamp();\n    if (stamp != null && stamp !== response.securityStamp) {\n      if (this.logoutCallback != null) {\n        await this.logoutCallback(true);\n      }\n\n      throw new Error(\"Stamp has changed\");\n    }\n\n    await this.cryptoService.setEncKey(response.key);\n    await this.cryptoService.setEncPrivateKey(response.privateKey);\n    await this.cryptoService.setProviderKeys(response.providers);\n    await this.cryptoService.setOrgKeys(response.organizations, response.providerOrganizations);\n    await this.stateService.setSecurityStamp(response.securityStamp);\n    await this.stateService.setEmailVerified(response.emailVerified);\n    await this.stateService.setHasPremiumPersonally(response.premiumPersonally);\n    await this.stateService.setHasPremiumFromOrganization(response.premiumFromOrganization);\n    await this.stateService.setForcePasswordReset(response.forcePasswordReset);\n    await this.keyConnectorService.setUsesKeyConnector(response.usesKeyConnector);\n\n    const organizations: { [id: string]: OrganizationData } = {};\n    response.organizations.forEach((o) => {\n      organizations[o.id] = new OrganizationData(o);\n    });\n\n    const providers: { [id: string]: ProviderData } = {};\n    response.providers.forEach((p) => {\n      providers[p.id] = new ProviderData(p);\n    });\n\n    response.providerOrganizations.forEach((o) => {\n      if (organizations[o.id] == null) {\n        organizations[o.id] = new OrganizationData(o);\n        organizations[o.id].isProviderUser = true;\n      }\n    });\n\n    await this.organizationService.save(organizations);\n    await this.providerService.save(providers);\n\n    if (await this.keyConnectorService.userNeedsMigration()) {\n      await this.keyConnectorService.setConvertAccountRequired(true);\n      this.messagingService.send(\"convertAccountToKeyConnector\");\n    } else {\n      this.keyConnectorService.removeConvertAccountRequired();\n    }\n  }\n\n  private async syncFolders(response: FolderResponse[]) {\n    const folders: { [id: string]: FolderData } = {};\n    response.forEach((f) => {\n      folders[f.id] = new FolderData(f);\n    });\n    return await this.folderService.replace(folders);\n  }\n\n  private async syncCollections(response: CollectionDetailsResponse[]) {\n    const collections: { [id: string]: CollectionData } = {};\n    response.forEach((c) => {\n      collections[c.id] = new CollectionData(c);\n    });\n    return await this.collectionService.replace(collections);\n  }\n\n  private async syncCiphers(response: CipherResponse[]) {\n    const ciphers: { [id: string]: CipherData } = {};\n    response.forEach((c) => {\n      ciphers[c.id] = new CipherData(c);\n    });\n    return await this.cipherService.replace(ciphers);\n  }\n\n  private async syncSends(response: SendResponse[]) {\n    const sends: { [id: string]: SendData } = {};\n    response.forEach((s) => {\n      sends[s.id] = new SendData(s);\n    });\n    return await this.sendService.replace(sends);\n  }\n\n  private async syncSettings(response: DomainsResponse) {\n    let eqDomains: string[][] = [];\n    if (response != null && response.equivalentDomains != null) {\n      eqDomains = eqDomains.concat(response.equivalentDomains);\n    }\n\n    if (response != null && response.globalEquivalentDomains != null) {\n      response.globalEquivalentDomains.forEach((global) => {\n        if (global.domains.length > 0) {\n          eqDomains.push(global.domains);\n        }\n      });\n    }\n\n    return this.settingsService.setEquivalentDomains(eqDomains);\n  }\n\n  private async syncPolicies(response: PolicyResponse[]) {\n    const policies: { [id: string]: PolicyData } = {};\n    if (response != null) {\n      response.forEach((p) => {\n        policies[p.id] = new PolicyData(p);\n      });\n    }\n    return await this.policyService.replace(policies);\n  }\n}\n","import { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { TotpService as TotpServiceAbstraction } from \"../abstractions/totp.service\";\nimport { Utils } from \"../misc/utils\";\n\nconst B32Chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\";\nconst SteamChars = \"23456789BCDFGHJKMNPQRTVWXY\";\n\nexport class TotpService implements TotpServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private logService: LogService\n  ) {}\n\n  async getCode(key: string): Promise<string> {\n    if (key == null) {\n      return null;\n    }\n    let period = 30;\n    let alg: \"sha1\" | \"sha256\" | \"sha512\" = \"sha1\";\n    let digits = 6;\n    let keyB32 = key;\n    const isOtpAuth = key.toLowerCase().indexOf(\"otpauth://\") === 0;\n    const isSteamAuth = !isOtpAuth && key.toLowerCase().indexOf(\"steam://\") === 0;\n    if (isOtpAuth) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"digits\") && params.get(\"digits\") != null) {\n        try {\n          const digitParams = parseInt(params.get(\"digits\").trim(), null);\n          if (digitParams > 10) {\n            digits = 10;\n          } else if (digitParams > 0) {\n            digits = digitParams;\n          }\n        } catch {\n          this.logService.error(\"Invalid digits param.\");\n        }\n      }\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          const periodParam = parseInt(params.get(\"period\").trim(), null);\n          if (periodParam > 0) {\n            period = periodParam;\n          }\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n      if (params.has(\"secret\") && params.get(\"secret\") != null) {\n        keyB32 = params.get(\"secret\");\n      }\n      if (params.has(\"algorithm\") && params.get(\"algorithm\") != null) {\n        const algParam = params.get(\"algorithm\").toLowerCase();\n        if (algParam === \"sha1\" || algParam === \"sha256\" || algParam === \"sha512\") {\n          alg = algParam;\n        }\n      }\n    } else if (isSteamAuth) {\n      keyB32 = key.substr(\"steam://\".length);\n      digits = 5;\n    }\n\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const timeHex = this.leftPad(this.decToHex(Math.floor(epoch / period)), 16, \"0\");\n    const timeBytes = Utils.fromHexToArray(timeHex);\n    const keyBytes = this.b32ToBytes(keyB32);\n\n    if (!keyBytes.length || !timeBytes.length) {\n      return null;\n    }\n\n    const hash = await this.sign(keyBytes, timeBytes, alg);\n    if (hash.length === 0) {\n      return null;\n    }\n\n    const offset = hash[hash.length - 1] & 0xf;\n    const binary =\n      ((hash[offset] & 0x7f) << 24) |\n      ((hash[offset + 1] & 0xff) << 16) |\n      ((hash[offset + 2] & 0xff) << 8) |\n      (hash[offset + 3] & 0xff);\n\n    let otp = \"\";\n    if (isSteamAuth) {\n      let fullCode = binary & 0x7fffffff;\n      for (let i = 0; i < digits; i++) {\n        otp += SteamChars[fullCode % SteamChars.length];\n        fullCode = Math.trunc(fullCode / SteamChars.length);\n      }\n    } else {\n      otp = (binary % Math.pow(10, digits)).toString();\n      otp = this.leftPad(otp, digits, \"0\");\n    }\n\n    return otp;\n  }\n\n  getTimeInterval(key: string): number {\n    let period = 30;\n    if (key != null && key.toLowerCase().indexOf(\"otpauth://\") === 0) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          period = parseInt(params.get(\"period\").trim(), null);\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n    }\n    return period;\n  }\n\n  // Helpers\n\n  private leftPad(s: string, l: number, p: string): string {\n    if (l + 1 >= s.length) {\n      s = Array(l + 1 - s.length).join(p) + s;\n    }\n    return s;\n  }\n\n  private decToHex(d: number): string {\n    return (d < 15.5 ? \"0\" : \"\") + Math.round(d).toString(16);\n  }\n\n  private b32ToHex(s: string): string {\n    s = s.toUpperCase();\n    let cleanedInput = \"\";\n\n    for (let i = 0; i < s.length; i++) {\n      if (B32Chars.indexOf(s[i]) < 0) {\n        continue;\n      }\n\n      cleanedInput += s[i];\n    }\n    s = cleanedInput;\n\n    let bits = \"\";\n    let hex = \"\";\n    for (let i = 0; i < s.length; i++) {\n      const byteIndex = B32Chars.indexOf(s.charAt(i));\n      if (byteIndex < 0) {\n        continue;\n      }\n      bits += this.leftPad(byteIndex.toString(2), 5, \"0\");\n    }\n    for (let i = 0; i + 4 <= bits.length; i += 4) {\n      const chunk = bits.substr(i, 4);\n      hex = hex + parseInt(chunk, 2).toString(16);\n    }\n    return hex;\n  }\n\n  private b32ToBytes(s: string): Uint8Array {\n    return Utils.fromHexToArray(this.b32ToHex(s));\n  }\n\n  private async sign(\n    keyBytes: Uint8Array,\n    timeBytes: Uint8Array,\n    alg: \"sha1\" | \"sha256\" | \"sha512\"\n  ) {\n    const signature = await this.cryptoFunctionService.hmac(timeBytes.buffer, keyBytes.buffer, alg);\n    return new Uint8Array(signature);\n  }\n}\n","export class VerifyOTPRequest {\n  OTP: string;\n\n  constructor(OTP: string) {\n    this.OTP = OTP;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"../abstractions/userVerification.service\";\nimport { VerificationType } from \"../enums/verificationType\";\nimport { VerifyOTPRequest } from \"../models/request/account/verifyOTPRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { Verification } from \"../types/verification\";\n\n/**\n * Used for general-purpose user verification throughout the app.\n * Use it to verify the input collected by UserVerificationComponent.\n */\nexport class UserVerificationService implements UserVerificationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private apiService: ApiService\n  ) {}\n\n  /**\n   * Create a new request model to be used for server-side verification\n   * @param verification User-supplied verification data (Master Password or OTP)\n   * @param requestClass The request model to create\n   * @param alreadyHashed Whether the master password is already hashed\n   */\n  async buildRequest<T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) {\n    this.validateInput(verification);\n\n    const request =\n      requestClass != null ? new requestClass() : (new SecretVerificationRequest() as T);\n\n    if (verification.type === VerificationType.OTP) {\n      request.otp = verification.secret;\n    } else {\n      request.masterPasswordHash = alreadyHashed\n        ? verification.secret\n        : await this.cryptoService.hashPassword(verification.secret, null);\n    }\n\n    return request;\n  }\n\n  /**\n   * Used to verify the Master Password client-side, or send the OTP to the server for verification (with no other data)\n   * Generally used for client-side verification only.\n   * @param verification User-supplied verification data (Master Password or OTP)\n   */\n  async verifyUser(verification: Verification): Promise<boolean> {\n    this.validateInput(verification);\n\n    if (verification.type === VerificationType.OTP) {\n      const request = new VerifyOTPRequest(verification.secret);\n      try {\n        await this.apiService.postAccountVerifyOTP(request);\n      } catch (e) {\n        throw new Error(this.i18nService.t(\"invalidVerificationCode\"));\n      }\n    } else {\n      const passwordValid = await this.cryptoService.compareAndUpdateKeyHash(\n        verification.secret,\n        null\n      );\n      if (!passwordValid) {\n        throw new Error(this.i18nService.t(\"invalidMasterPassword\"));\n      }\n    }\n    return true;\n  }\n\n  async requestOTP() {\n    await this.apiService.postAccountRequestOTP();\n  }\n\n  private validateInput(verification: Verification) {\n    if (verification?.secret == null || verification.secret === \"\") {\n      if (verification.type === VerificationType.OTP) {\n        throw new Error(this.i18nService.t(\"verificationCodeRequired\"));\n      } else {\n        throw new Error(this.i18nService.t(\"masterPassRequired\"));\n      }\n    }\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { UsernameGenerationService as BaseUsernameGenerationService } from \"../abstractions/usernameGeneration.service\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\n\nconst DefaultOptions = {\n  type: \"word\",\n  wordCapitalize: true,\n  wordIncludeNumber: true,\n  subaddressType: \"random\",\n  catchallType: \"random\",\n  forwardedService: \"simplelogin\",\n  forwardedAnonAddyDomain: \"anonaddy.me\",\n};\n\nexport class UsernameGenerationService implements BaseUsernameGenerationService {\n  constructor(\n    private cryptoService: CryptoService,\n    private stateService: StateService,\n    private apiService: ApiService\n  ) {}\n\n  generateUsername(options: any): Promise<string> {\n    if (options.type === \"catchall\") {\n      return this.generateCatchall(options);\n    } else if (options.type === \"subaddress\") {\n      return this.generateSubaddress(options);\n    } else if (options.type === \"forwarded\") {\n      return this.generateForwarded(options);\n    } else {\n      return this.generateWord(options);\n    }\n  }\n\n  async generateWord(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.wordCapitalize == null) {\n      o.wordCapitalize = true;\n    }\n    if (o.wordIncludeNumber == null) {\n      o.wordIncludeNumber = true;\n    }\n\n    const wordIndex = await this.cryptoService.randomNumber(0, EEFLongWordList.length - 1);\n    let word = EEFLongWordList[wordIndex];\n    if (o.wordCapitalize) {\n      word = word.charAt(0).toUpperCase() + word.slice(1);\n    }\n    if (o.wordIncludeNumber) {\n      const num = await this.cryptoService.randomNumber(1, 9999);\n      word = word + this.zeroPad(num.toString(), 4);\n    }\n    return word;\n  }\n\n  async generateSubaddress(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    const subaddressEmail = o.subaddressEmail;\n    if (subaddressEmail == null || subaddressEmail.length < 3) {\n      return o.subaddressEmail;\n    }\n    const atIndex = subaddressEmail.indexOf(\"@\");\n    if (atIndex < 1 || atIndex >= subaddressEmail.length - 1) {\n      return subaddressEmail;\n    }\n    if (o.subaddressType == null) {\n      o.subaddressType = \"random\";\n    }\n\n    const emailBeginning = subaddressEmail.substr(0, atIndex);\n    const emailEnding = subaddressEmail.substr(atIndex + 1, subaddressEmail.length);\n\n    let subaddressString = \"\";\n    if (o.subaddressType === \"random\") {\n      subaddressString = await this.randomString(8);\n    } else if (o.subaddressType === \"website-name\") {\n      subaddressString = o.website;\n    }\n    return emailBeginning + \"+\" + subaddressString + \"@\" + emailEnding;\n  }\n\n  async generateCatchall(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.catchallDomain == null || o.catchallDomain === \"\") {\n      return null;\n    }\n    if (o.catchallType == null) {\n      o.catchallType = \"random\";\n    }\n\n    let startString = \"\";\n    if (o.catchallType === \"random\") {\n      startString = await this.randomString(8);\n    } else if (o.catchallType === \"website-name\") {\n      startString = o.website;\n    }\n    return startString + \"@\" + o.catchallDomain;\n  }\n\n  async generateForwarded(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.forwardedService == null) {\n      return null;\n    }\n\n    if (o.forwardedService === \"simplelogin\") {\n      if (o.forwardedSimpleLoginApiKey == null || o.forwardedSimpleLoginApiKey === \"\") {\n        return null;\n      }\n      return this.generateSimpleLoginAlias(o.forwardedSimpleLoginApiKey, o.website);\n    } else if (o.forwardedService === \"anonaddy\") {\n      if (\n        o.forwardedAnonAddyApiToken == null ||\n        o.forwardedAnonAddyApiToken === \"\" ||\n        o.forwardedAnonAddyDomain == null ||\n        o.forwardedAnonAddyDomain == \"\"\n      ) {\n        return null;\n      }\n      return this.generateAnonAddyAlias(\n        o.forwardedAnonAddyApiToken,\n        o.forwardedAnonAddyDomain,\n        o.website\n      );\n    } else if (o.forwardedService === \"firefoxrelay\") {\n      if (o.forwardedFirefoxApiToken == null || o.forwardedFirefoxApiToken === \"\") {\n        return null;\n      }\n      return this.generateFirefoxRelayAlias(o.forwardedFirefoxApiToken, o.website);\n    }\n\n    return null;\n  }\n\n  async getOptions(): Promise<any> {\n    let options = await this.stateService.getUsernameGenerationOptions();\n    if (options == null) {\n      options = Object.assign({}, DefaultOptions);\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setUsernameGenerationOptions(options);\n    return options;\n  }\n\n  async saveOptions(options: any) {\n    await this.stateService.setUsernameGenerationOptions(options);\n  }\n\n  private async randomString(length: number) {\n    let str = \"\";\n    const charSet = \"abcdefghijklmnopqrstuvwxyz1234567890\";\n    for (let i = 0; i < length; i++) {\n      const randomCharIndex = await this.cryptoService.randomNumber(0, charSet.length - 1);\n      str += charSet.charAt(randomCharIndex);\n    }\n    return str;\n  }\n\n  // ref: https://stackoverflow.com/a/10073788\n  private zeroPad(number: string, width: number) {\n    return number.length >= width\n      ? number\n      : new Array(width - number.length + 1).join(\"0\") + number;\n  }\n\n  private async generateSimpleLoginAlias(apiKey: string, website: string): Promise<string> {\n    if (apiKey == null || apiKey === \"\") {\n      throw \"Invalid SimpleLogin API key.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authentication: apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    let url = \"https://app.simplelogin.io/api/alias/random/new\";\n    if (website != null) {\n      url += \"?hostname=\" + website;\n    }\n    requestInit.body = JSON.stringify({\n      note: (website != null ? \"Website: \" + website + \". \" : \"\") + \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await this.apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json.alias;\n    }\n    if (response.status === 401) {\n      throw \"Invalid SimpleLogin API key.\";\n    }\n    try {\n      const json = await response.json();\n      if (json?.error != null) {\n        throw \"SimpleLogin error:\" + json.error;\n      }\n    } catch {\n      // Do nothing...\n    }\n    throw \"Unknown SimpleLogin error occurred.\";\n  }\n\n  private async generateAnonAddyAlias(\n    apiToken: string,\n    domain: string,\n    websiteNote: string\n  ): Promise<string> {\n    if (apiToken == null || apiToken === \"\") {\n      throw \"Invalid AnonAddy API token.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + apiToken,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://app.anonaddy.com/api/v1/aliases\";\n    requestInit.body = JSON.stringify({\n      domain: domain,\n      description:\n        (websiteNote != null ? \"Website: \" + websiteNote + \". \" : \"\") + \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await this.apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json?.data?.email;\n    }\n    if (response.status === 401) {\n      throw \"Invalid AnonAddy API token.\";\n    }\n    throw \"Unknown AnonAddy error occurred.\";\n  }\n\n  private async generateFirefoxRelayAlias(apiToken: string, website: string): Promise<string> {\n    if (apiToken == null || apiToken === \"\") {\n      throw \"Invalid Firefox Relay API token.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Token \" + apiToken,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://relay.firefox.com/api/v1/relayaddresses/\";\n    requestInit.body = JSON.stringify({\n      enabled: true,\n      generated_for: website,\n      description: (website != null ? website + \" - \" : \"\") + \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await this.apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json?.full_address;\n    }\n    if (response.status === 401) {\n      throw \"Invalid Firefox Relay API token.\";\n    }\n    throw \"Unknown Firefox Relay error occurred.\";\n  }\n}\n","import { AuthService } from \"../abstractions/auth.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CollectionService } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FolderService } from \"../abstractions/folder/folder.service.abstraction\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { PolicyService } from \"../abstractions/policy.service\";\nimport { SearchService } from \"../abstractions/search.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"../abstractions/vaultTimeout.service\";\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { PolicyType } from \"../enums/policyType\";\n\nexport class VaultTimeoutService implements VaultTimeoutServiceAbstraction {\n  private inited = false;\n\n  constructor(\n    private cipherService: CipherService,\n    private folderService: FolderService,\n    private collectionService: CollectionService,\n    private cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    private messagingService: MessagingService,\n    private searchService: SearchService,\n    private tokenService: TokenService,\n    private policyService: PolicyService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private authService: AuthService,\n    private lockedCallback: (userId?: string) => Promise<void> = null,\n    private loggedOutCallback: (expired: boolean, userId?: string) => Promise<void> = null\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.startCheck();\n    }\n  }\n\n  startCheck() {\n    this.checkVaultTimeout();\n    setInterval(() => this.checkVaultTimeout(), 10 * 1000); // check every 10 seconds\n  }\n\n  async checkVaultTimeout(): Promise<void> {\n    if (await this.platformUtilsService.isViewOpen()) {\n      return;\n    }\n\n    for (const userId in this.stateService.accounts.getValue()) {\n      if (userId != null && (await this.shouldLock(userId))) {\n        await this.executeTimeoutAction(userId);\n      }\n    }\n  }\n\n  async lock(allowSoftLock = false, userId?: string): Promise<void> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n\n    if (await this.keyConnectorService.getUsesKeyConnector()) {\n      const pinSet = await this.isPinLockSet();\n      const pinLock =\n        (pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) || pinSet[1];\n\n      if (!pinLock && !(await this.isBiometricLockSet())) {\n        await this.logOut(userId);\n      }\n    }\n\n    if (userId == null || userId === (await this.stateService.getUserId())) {\n      this.searchService.clearIndex();\n      await this.folderService.clearCache();\n    }\n\n    await this.stateService.setEverBeenUnlocked(true, { userId: userId });\n    await this.stateService.setBiometricLocked(true, { userId: userId });\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n\n    await this.cryptoService.clearKey(false, userId);\n    await this.cryptoService.clearOrgKeys(true, userId);\n    await this.cryptoService.clearKeyPair(true, userId);\n    await this.cryptoService.clearEncKey(true, userId);\n\n    await this.cipherService.clearCache(userId);\n    await this.collectionService.clearCache(userId);\n\n    this.messagingService.send(\"locked\", { userId: userId });\n\n    if (this.lockedCallback != null) {\n      await this.lockedCallback(userId);\n    }\n  }\n\n  async logOut(userId?: string): Promise<void> {\n    if (this.loggedOutCallback != null) {\n      await this.loggedOutCallback(false, userId);\n    }\n  }\n\n  async setVaultTimeoutOptions(timeout: number, action: string): Promise<void> {\n    await this.stateService.setVaultTimeout(timeout);\n\n    // We swap these tokens from being on disk for lock actions, and in memory for logout actions\n    // Get them here to set them to their new location after changing the timeout action and clearing if needed\n    const token = await this.tokenService.getToken();\n    const refreshToken = await this.tokenService.getRefreshToken();\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n\n    const currentAction = await this.stateService.getVaultTimeoutAction();\n    if ((timeout != null || timeout === 0) && action === \"logOut\" && action !== currentAction) {\n      // if we have a vault timeout and the action is log out, reset tokens\n      await this.tokenService.clearToken();\n    }\n\n    await this.stateService.setVaultTimeoutAction(action);\n\n    await this.tokenService.setToken(token);\n    await this.tokenService.setRefreshToken(refreshToken);\n    await this.tokenService.setClientId(clientId);\n    await this.tokenService.setClientSecret(clientSecret);\n\n    await this.cryptoService.toggleKey();\n  }\n\n  async isPinLockSet(): Promise<[boolean, boolean]> {\n    const protectedPin = await this.stateService.getProtectedPin();\n    const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n    return [protectedPin != null, pinProtectedKey != null];\n  }\n\n  async isBiometricLockSet(): Promise<boolean> {\n    return await this.stateService.getBiometricUnlock();\n  }\n\n  async getVaultTimeout(userId?: string): Promise<number> {\n    const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n\n    if (\n      await this.policyService.policyAppliesToUser(PolicyType.MaximumVaultTimeout, null, userId)\n    ) {\n      const policy = await this.policyService.getAll(PolicyType.MaximumVaultTimeout, userId);\n      // Remove negative values, and ensure it's smaller than maximum allowed value according to policy\n      let timeout = Math.min(vaultTimeout, policy[0].data.minutes);\n\n      if (vaultTimeout == null || timeout < 0) {\n        timeout = policy[0].data.minutes;\n      }\n\n      // We really shouldn't need to set the value here, but multiple services relies on this value being correct.\n      if (vaultTimeout !== timeout) {\n        await this.stateService.setVaultTimeout(timeout, { userId: userId });\n      }\n\n      return timeout;\n    }\n\n    return vaultTimeout;\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setEverBeenUnlocked(false, { userId: userId });\n    await this.stateService.setDecryptedPinProtected(null, { userId: userId });\n    await this.stateService.setProtectedPin(null, { userId: userId });\n  }\n\n  private async shouldLock(userId: string): Promise<boolean> {\n    const authStatus = await this.authService.getAuthStatus(userId);\n    if (\n      authStatus === AuthenticationStatus.Locked ||\n      authStatus === AuthenticationStatus.LoggedOut\n    ) {\n      return false;\n    }\n\n    const vaultTimeout = await this.getVaultTimeout(userId);\n    if (vaultTimeout == null || vaultTimeout < 0) {\n      return false;\n    }\n\n    const lastActive = await this.stateService.getLastActive({ userId: userId });\n    if (lastActive == null) {\n      return false;\n    }\n\n    const vaultTimeoutSeconds = vaultTimeout * 60;\n    const diffSeconds = (new Date().getTime() - lastActive) / 1000;\n    return diffSeconds >= vaultTimeoutSeconds;\n  }\n\n  private async executeTimeoutAction(userId: string): Promise<void> {\n    const timeoutAction = await this.stateService.getVaultTimeoutAction({ userId: userId });\n    timeoutAction === \"logOut\" ? await this.logOut(userId) : await this.lock(true, userId);\n  }\n}\n","export class DecryptParameters<T> {\n  encKey: T;\n  data: T;\n  iv: T;\n  macKey: T;\n  mac: T;\n  macData: T;\n}\n","import * as forge from \"node-forge\";\n\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { Utils } from \"../misc/utils\";\nimport { DecryptParameters } from \"../models/domain/decryptParameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nexport class WebCryptoFunctionService implements CryptoFunctionService {\n  private crypto: Crypto;\n  private subtle: SubtleCrypto;\n\n  constructor(win: Window) {\n    this.crypto = typeof win.crypto !== \"undefined\" ? win.crypto : null;\n    this.subtle =\n      !!this.crypto && typeof win.crypto.subtle !== \"undefined\" ? win.crypto.subtle : null;\n  }\n\n  async pbkdf2(\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ): Promise<ArrayBuffer> {\n    const wcLen = algorithm === \"sha256\" ? 256 : 512;\n    const passwordBuf = this.toBuf(password);\n    const saltBuf = this.toBuf(salt);\n\n    const pbkdf2Params: Pbkdf2Params = {\n      name: \"PBKDF2\",\n      salt: saltBuf,\n      iterations: iterations,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\n      \"raw\",\n      passwordBuf,\n      { name: \"PBKDF2\" } as any,\n      false,\n      [\"deriveBits\"]\n    );\n    return await this.subtle.deriveBits(pbkdf2Params, impKey, wcLen);\n  }\n\n  async hkdf(\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const saltBuf = this.toBuf(salt);\n    const infoBuf = this.toBuf(info);\n\n    const hkdfParams: HkdfParams = {\n      name: \"HKDF\",\n      salt: saltBuf,\n      info: infoBuf,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", ikm, { name: \"HKDF\" } as any, false, [\n      \"deriveBits\",\n    ]);\n    return await this.subtle.deriveBits(hkdfParams as any, impKey, outputByteSize * 8);\n  }\n\n  // ref: https://tools.ietf.org/html/rfc5869\n  async hkdfExpand(\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const hashLen = algorithm === \"sha256\" ? 32 : 64;\n    if (outputByteSize > 255 * hashLen) {\n      throw new Error(\"outputByteSize is too large.\");\n    }\n    const prkArr = new Uint8Array(prk);\n    if (prkArr.length < hashLen) {\n      throw new Error(\"prk is too small.\");\n    }\n    const infoBuf = this.toBuf(info);\n    const infoArr = new Uint8Array(infoBuf);\n    let runningOkmLength = 0;\n    let previousT = new Uint8Array(0);\n    const n = Math.ceil(outputByteSize / hashLen);\n    const okm = new Uint8Array(n * hashLen);\n    for (let i = 0; i < n; i++) {\n      const t = new Uint8Array(previousT.length + infoArr.length + 1);\n      t.set(previousT);\n      t.set(infoArr, previousT.length);\n      t.set([i + 1], t.length - 1);\n      previousT = new Uint8Array(await this.hmac(t.buffer, prk, algorithm));\n      okm.set(previousT, runningOkmLength);\n      runningOkmLength += previousT.length;\n      if (runningOkmLength >= outputByteSize) {\n        break;\n      }\n    }\n    return okm.slice(0, outputByteSize).buffer;\n  }\n\n  async hash(\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ): Promise<ArrayBuffer> {\n    if (algorithm === \"md5\") {\n      const md = algorithm === \"md5\" ? forge.md.md5.create() : forge.md.sha1.create();\n      const valueBytes = this.toByteString(value);\n      md.update(valueBytes, \"raw\");\n      return Utils.fromByteStringToArray(md.digest().data).buffer;\n    }\n\n    const valueBuf = this.toBuf(value);\n    return await this.subtle.digest({ name: this.toWebCryptoAlgorithm(algorithm) }, valueBuf);\n  }\n\n  async hmac(\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", key, signingAlgorithm, false, [\"sign\"]);\n    return await this.subtle.sign(signingAlgorithm, impKey, value);\n  }\n\n  // Safely compare two values in a way that protects against timing attacks (Double HMAC Verification).\n  // ref: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2011/february/double-hmac-verification/\n  // ref: https://paragonie.com/blog/2015/11/preventing-timing-attacks-on-string-comparison-with-double-hmac-strategy\n  async compare(a: ArrayBuffer, b: ArrayBuffer): Promise<boolean> {\n    const macKey = await this.randomBytes(32);\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: \"SHA-256\" },\n    };\n    const impKey = await this.subtle.importKey(\"raw\", macKey, signingAlgorithm, false, [\"sign\"]);\n    const mac1 = await this.subtle.sign(signingAlgorithm, impKey, a);\n    const mac2 = await this.subtle.sign(signingAlgorithm, impKey, b);\n\n    if (mac1.byteLength !== mac2.byteLength) {\n      return false;\n    }\n\n    const arr1 = new Uint8Array(mac1);\n    const arr2 = new Uint8Array(mac2);\n    for (let i = 0; i < arr2.length; i++) {\n      if (arr1[i] !== arr2[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  hmacFast(value: string, key: string, algorithm: \"sha1\" | \"sha256\" | \"sha512\"): Promise<string> {\n    const hmac = forge.hmac.create();\n    hmac.start(algorithm, key);\n    hmac.update(value);\n    const bytes = hmac.digest().getBytes();\n    return Promise.resolve(bytes);\n  }\n\n  async compareFast(a: string, b: string): Promise<boolean> {\n    const rand = await this.randomBytes(32);\n    const bytes = new Uint32Array(rand);\n    const buffer = forge.util.createBuffer();\n    for (let i = 0; i < bytes.length; i++) {\n      buffer.putInt32(bytes[i]);\n    }\n    const macKey = buffer.getBytes();\n\n    const hmac = forge.hmac.create();\n    hmac.start(\"sha256\", macKey);\n    hmac.update(a);\n    const mac1 = hmac.digest().getBytes();\n\n    hmac.start(null, null);\n    hmac.update(b);\n    const mac2 = hmac.digest().getBytes();\n\n    const equals = mac1 === mac2;\n    return equals;\n  }\n\n  async aesEncrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.encrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  aesDecryptFastParameters(\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ): DecryptParameters<string> {\n    const p = new DecryptParameters<string>();\n    if (key.meta != null) {\n      p.encKey = key.meta.encKeyByteString;\n      p.macKey = key.meta.macKeyByteString;\n    }\n\n    if (p.encKey == null) {\n      p.encKey = forge.util.decode64(key.encKeyB64);\n    }\n    p.data = forge.util.decode64(data);\n    p.iv = forge.util.decode64(iv);\n    p.macData = p.iv + p.data;\n    if (p.macKey == null && key.macKeyB64 != null) {\n      p.macKey = forge.util.decode64(key.macKeyB64);\n    }\n    if (mac != null) {\n      p.mac = forge.util.decode64(mac);\n    }\n\n    // cache byte string keys for later\n    if (key.meta == null) {\n      key.meta = {};\n    }\n    if (key.meta.encKeyByteString == null) {\n      key.meta.encKeyByteString = p.encKey;\n    }\n    if (p.macKey != null && key.meta.macKeyByteString == null) {\n      key.meta.macKeyByteString = p.macKey;\n    }\n\n    return p;\n  }\n\n  aesDecryptFast(parameters: DecryptParameters<string>): Promise<string> {\n    const dataBuffer = forge.util.createBuffer(parameters.data);\n    const decipher = forge.cipher.createDecipher(\"AES-CBC\", parameters.encKey);\n    decipher.start({ iv: parameters.iv });\n    decipher.update(dataBuffer);\n    decipher.finish();\n    const val = decipher.output.toString();\n    return Promise.resolve(val);\n  }\n\n  async aesDecrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"decrypt\",\n    ]);\n    return await this.subtle.decrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  async rsaEncrypt(\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"spki\", publicKey, rsaParams, false, [\"encrypt\"]);\n    return await this.subtle.encrypt(rsaParams, impKey, data);\n  }\n\n  async rsaDecrypt(\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, false, [\"decrypt\"]);\n    return await this.subtle.decrypt(rsaParams, impKey, data);\n  }\n\n  async rsaExtractPublicKey(privateKey: ArrayBuffer): Promise<ArrayBuffer> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const impPrivateKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, true, [\n      \"decrypt\",\n    ]);\n    const jwkPrivateKey = await this.subtle.exportKey(\"jwk\", impPrivateKey);\n    const jwkPublicKeyParams = {\n      kty: \"RSA\",\n      e: jwkPrivateKey.e,\n      n: jwkPrivateKey.n,\n      alg: \"RSA-OAEP\",\n      ext: true,\n    };\n    const impPublicKey = await this.subtle.importKey(\"jwk\", jwkPublicKeyParams, rsaParams, true, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.exportKey(\"spki\", impPublicKey);\n  }\n\n  async rsaGenerateKeyPair(length: 1024 | 2048 | 4096): Promise<[ArrayBuffer, ArrayBuffer]> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      modulusLength: length,\n      publicExponent: new Uint8Array([0x01, 0x00, 0x01]), // 65537\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const keyPair = (await this.subtle.generateKey(rsaParams, true, [\n      \"encrypt\",\n      \"decrypt\",\n    ])) as CryptoKeyPair;\n    const publicKey = await this.subtle.exportKey(\"spki\", keyPair.publicKey);\n    const privateKey = await this.subtle.exportKey(\"pkcs8\", keyPair.privateKey);\n    return [publicKey, privateKey];\n  }\n\n  randomBytes(length: number): Promise<ArrayBuffer> {\n    const arr = new Uint8Array(length);\n    this.crypto.getRandomValues(arr);\n    return Promise.resolve(arr.buffer);\n  }\n\n  private toBuf(value: string | ArrayBuffer): ArrayBuffer {\n    let buf: ArrayBuffer;\n    if (typeof value === \"string\") {\n      buf = Utils.fromUtf8ToArray(value).buffer;\n    } else {\n      buf = value;\n    }\n    return buf;\n  }\n\n  private toByteString(value: string | ArrayBuffer): string {\n    let bytes: string;\n    if (typeof value === \"string\") {\n      bytes = forge.util.encodeUtf8(value);\n    } else {\n      bytes = Utils.fromBufferToByteString(value);\n    }\n    return bytes;\n  }\n\n  private toWebCryptoAlgorithm(algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"): string {\n    if (algorithm === \"md5\") {\n      throw new Error(\"MD5 is not supported in WebCrypto.\");\n    }\n    return algorithm === \"sha1\" ? \"SHA-1\" : algorithm === \"sha256\" ? \"SHA-256\" : \"SHA-512\";\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BroadcasterService as BaseBroadcasterService } from \"@bitwarden/common/services/broadcaster.service\";\n\n@Injectable()\nexport class BroadcasterService extends BaseBroadcasterService {}\n","import { BroadcasterService as BroadcasterServiceAbstraction } from \"../abstractions/broadcaster.service\";\n\nexport class BroadcasterService implements BroadcasterServiceAbstraction {\n  subscribers: Map<string, (message: any) => any> = new Map<string, (message: any) => any>();\n\n  send(message: any, id?: string) {\n    if (id != null) {\n      if (this.subscribers.has(id)) {\n        this.subscribers.get(id)(message);\n      }\n      return;\n    }\n\n    this.subscribers.forEach((value) => {\n      value(message);\n    });\n  }\n\n  subscribe(id: string, messageCallback: (message: any) => any) {\n    this.subscribers.set(id, messageCallback);\n  }\n\n  unsubscribe(id: string) {\n    if (this.subscribers.has(id)) {\n      this.subscribers.delete(id);\n    }\n  }\n}\n","import { Directive } from \"@angular/core\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\nimport { ModalRef } from \"./modal/modal.ref\";\n\n/**\n * Used to verify the user's Master Password for the \"Master Password Re-prompt\" feature only.\n * See UserVerificationComponent for any other situation where you need to verify the user's identity.\n */\n@Directive()\nexport class PasswordRepromptComponent {\n  showPassword = false;\n  masterPassword = \"\";\n\n  constructor(\n    private modalRef: ModalRef,\n    private cryptoService: CryptoService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  async submit() {\n    if (!(await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, null))) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidMasterPassword\")\n      );\n      return;\n    }\n\n    this.modalRef.close(true);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\n\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\n\nimport { ModalService } from \"./modal.service\";\n\n/**\n * Used to verify the user's Master Password for the \"Master Password Re-prompt\" feature only.\n * See UserVerificationService for any other situation where you need to verify the user's identity.\n */\n@Injectable()\nexport class PasswordRepromptService implements PasswordRepromptServiceAbstraction {\n  protected component = PasswordRepromptComponent;\n\n  constructor(\n    private modalService: ModalService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  protectedFields() {\n    return [\"TOTP\", \"Password\", \"H_Field\", \"Card Number\", \"Security Code\"];\n  }\n\n  async showPasswordPrompt() {\n    if (!(await this.enabled())) {\n      return true;\n    }\n\n    const ref = this.modalService.open(this.component, { allowMultipleModals: true });\n\n    if (ref == null) {\n      return false;\n    }\n\n    const result = await ref.onClosedPromise();\n    return result === true;\n  }\n\n  async enabled() {\n    return !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n}\n","import { InjectionToken, Injector, LOCALE_ID, NgModule } from \"@angular/core\";\n\nimport { ThemingService } from \"@bitwarden/angular/services/theming/theming.service\";\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { AbstractEncryptService } from \"@bitwarden/common/abstractions/abstractEncrypt.service\";\nimport { ApiService as ApiServiceAbstraction } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService as AppIdServiceAbstraction } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuditService as AuditServiceAbstraction } from \"@bitwarden/common/abstractions/audit.service\";\nimport { AuthService as AuthServiceAbstraction } from \"@bitwarden/common/abstractions/auth.service\";\nimport { BroadcasterService as BroadcasterServiceAbstraction } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService as CipherServiceAbstraction } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService as CollectionServiceAbstraction } from \"@bitwarden/common/abstractions/collection.service\";\nimport { CryptoService as CryptoServiceAbstraction } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService as CryptoFunctionServiceAbstraction } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService as EnvironmentServiceAbstraction } from \"@bitwarden/common/abstractions/environment.service\";\nimport { EventService as EventServiceAbstraction } from \"@bitwarden/common/abstractions/event.service\";\nimport { ExportService as ExportServiceAbstraction } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"@bitwarden/common/abstractions/fileUpload.service\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport {\n  FolderService as FolderServiceAbstraction,\n  InternalFolderService,\n} from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { FormValidationErrorsService as FormValidationErrorsServiceAbstraction } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService as I18nServiceAbstraction } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { OrganizationService as OrganizationServiceAbstraction } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService as PolicyServiceAbstraction } from \"@bitwarden/common/abstractions/policy.service\";\nimport { ProviderService as ProviderServiceAbstraction } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SearchService as SearchServiceAbstraction } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService as SendServiceAbstraction } from \"@bitwarden/common/abstractions/send.service\";\nimport { SettingsService as SettingsServiceAbstraction } from \"@bitwarden/common/abstractions/settings.service\";\nimport { StateService as StateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { StateMigrationService as StateMigrationServiceAbstraction } from \"@bitwarden/common/abstractions/stateMigration.service\";\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { SyncService as SyncServiceAbstraction } from \"@bitwarden/common/abstractions/sync.service\";\nimport { TokenService as TokenServiceAbstraction } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService as TotpServiceAbstraction } from \"@bitwarden/common/abstractions/totp.service\";\nimport { TwoFactorService as TwoFactorServiceAbstraction } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"@bitwarden/common/abstractions/userVerification.service\";\nimport { UsernameGenerationService as UsernameGenerationServiceAbstraction } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"@bitwarden/common/abstractions/vaultTimeout.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { Account } from \"@bitwarden/common/models/domain/account\";\nimport { GlobalState } from \"@bitwarden/common/models/domain/globalState\";\nimport { ApiService } from \"@bitwarden/common/services/api.service\";\nimport { AppIdService } from \"@bitwarden/common/services/appId.service\";\nimport { AuditService } from \"@bitwarden/common/services/audit.service\";\nimport { AuthService } from \"@bitwarden/common/services/auth.service\";\nimport { CipherService } from \"@bitwarden/common/services/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/services/collection.service\";\nimport { ConsoleLogService } from \"@bitwarden/common/services/consoleLog.service\";\nimport { CryptoService } from \"@bitwarden/common/services/crypto.service\";\nimport { EncryptService } from \"@bitwarden/common/services/encrypt.service\";\nimport { EnvironmentService } from \"@bitwarden/common/services/environment.service\";\nimport { EventService } from \"@bitwarden/common/services/event.service\";\nimport { ExportService } from \"@bitwarden/common/services/export.service\";\nimport { FileUploadService } from \"@bitwarden/common/services/fileUpload.service\";\nimport { FolderApiService } from \"@bitwarden/common/services/folder/folder-api.service\";\nimport { FolderService } from \"@bitwarden/common/services/folder/folder.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/services/formValidationErrors.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/services/keyConnector.service\";\nimport { NotificationsService } from \"@bitwarden/common/services/notifications.service\";\nimport { OrganizationService } from \"@bitwarden/common/services/organization.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/services/passwordGeneration.service\";\nimport { PolicyService } from \"@bitwarden/common/services/policy.service\";\nimport { ProviderService } from \"@bitwarden/common/services/provider.service\";\nimport { SearchService } from \"@bitwarden/common/services/search.service\";\nimport { SendService } from \"@bitwarden/common/services/send.service\";\nimport { SettingsService } from \"@bitwarden/common/services/settings.service\";\nimport { StateService } from \"@bitwarden/common/services/state.service\";\nimport { StateMigrationService } from \"@bitwarden/common/services/stateMigration.service\";\nimport { SyncService } from \"@bitwarden/common/services/sync.service\";\nimport { TokenService } from \"@bitwarden/common/services/token.service\";\nimport { TotpService } from \"@bitwarden/common/services/totp.service\";\nimport { TwoFactorService } from \"@bitwarden/common/services/twoFactor.service\";\nimport { UserVerificationService } from \"@bitwarden/common/services/userVerification.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/services/usernameGeneration.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/services/vaultTimeout.service\";\nimport { WebCryptoFunctionService } from \"@bitwarden/common/services/webCryptoFunction.service\";\n\nimport { AuthGuard } from \"../guards/auth.guard\";\nimport { LockGuard } from \"../guards/lock.guard\";\nimport { UnauthGuard } from \"../guards/unauth.guard\";\n\nimport { BroadcasterService } from \"./broadcaster.service\";\nimport { ModalService } from \"./modal.service\";\nimport { PasswordRepromptService } from \"./passwordReprompt.service\";\nimport { ValidationService } from \"./validation.service\";\n\nexport const WINDOW = new InjectionToken<Window>(\"WINDOW\");\nexport const MEMORY_STORAGE = new InjectionToken<AbstractStorageService>(\"MEMORY_STORAGE\");\nexport const SECURE_STORAGE = new InjectionToken<AbstractStorageService>(\"SECURE_STORAGE\");\nexport const STATE_FACTORY = new InjectionToken<StateFactory>(\"STATE_FACTORY\");\nexport const STATE_SERVICE_USE_CACHE = new InjectionToken<boolean>(\"STATE_SERVICE_USE_CACHE\");\nexport const LOGOUT_CALLBACK = new InjectionToken<(expired: boolean, userId?: string) => void>(\n  \"LOGOUT_CALLBACK\"\n);\nexport const LOCKED_CALLBACK = new InjectionToken<() => void>(\"LOCKED_CALLBACK\");\nexport const CLIENT_TYPE = new InjectionToken<boolean>(\"CLIENT_TYPE\");\nexport const LOCALES_DIRECTORY = new InjectionToken<string>(\"LOCALES_DIRECTORY\");\nexport const SYSTEM_LANGUAGE = new InjectionToken<string>(\"SYSTEM_LANGUAGE\");\nexport const LOG_MAC_FAILURES = new InjectionToken<string>(\"LOG_MAC_FAILURES\");\n\n@NgModule({\n  declarations: [],\n  providers: [\n    ValidationService,\n    AuthGuard,\n    UnauthGuard,\n    LockGuard,\n    ModalService,\n    { provide: WINDOW, useValue: window },\n    {\n      provide: LOCALE_ID,\n      useFactory: (i18nService: I18nServiceAbstraction) => i18nService.translationLocale,\n      deps: [I18nServiceAbstraction],\n    },\n    {\n      provide: LOCALES_DIRECTORY,\n      useValue: \"./locales\",\n    },\n    {\n      provide: SYSTEM_LANGUAGE,\n      useFactory: (window: Window) => window.navigator.language,\n      deps: [WINDOW],\n    },\n    {\n      provide: STATE_FACTORY,\n      useValue: new StateFactory(GlobalState, Account),\n    },\n    {\n      provide: STATE_SERVICE_USE_CACHE,\n      useValue: true,\n    },\n    {\n      provide: LOGOUT_CALLBACK,\n      useFactory:\n        (messagingService: MessagingServiceAbstraction) => (expired: boolean, userId?: string) =>\n          messagingService.send(\"logout\", { expired: expired, userId: userId }),\n      deps: [MessagingServiceAbstraction],\n    },\n    {\n      provide: LOCKED_CALLBACK,\n      useValue: null,\n    },\n    {\n      provide: LOG_MAC_FAILURES,\n      useValue: true,\n    },\n    {\n      provide: AppIdServiceAbstraction,\n      useClass: AppIdService,\n      deps: [AbstractStorageService],\n    },\n    {\n      provide: AuditServiceAbstraction,\n      useClass: AuditService,\n      deps: [CryptoFunctionServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: AuthServiceAbstraction,\n      useClass: AuthService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        AppIdServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        LogService,\n        KeyConnectorServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        StateServiceAbstraction,\n        TwoFactorServiceAbstraction,\n        I18nServiceAbstraction,\n      ],\n    },\n    {\n      provide: CipherServiceAbstraction,\n      useFactory: (\n        cryptoService: CryptoServiceAbstraction,\n        settingsService: SettingsServiceAbstraction,\n        apiService: ApiServiceAbstraction,\n        fileUploadService: FileUploadServiceAbstraction,\n        i18nService: I18nServiceAbstraction,\n        injector: Injector,\n        logService: LogService,\n        stateService: StateServiceAbstraction\n      ) =>\n        new CipherService(\n          cryptoService,\n          settingsService,\n          apiService,\n          fileUploadService,\n          i18nService,\n          () => injector.get(SearchServiceAbstraction),\n          logService,\n          stateService\n        ),\n      deps: [\n        CryptoServiceAbstraction,\n        SettingsServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        Injector, // TODO: Get rid of this circular dependency!\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: FolderServiceAbstraction,\n      useClass: FolderService,\n      deps: [\n        CryptoServiceAbstraction,\n        I18nServiceAbstraction,\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: InternalFolderService,\n      useExisting: FolderServiceAbstraction,\n    },\n    {\n      provide: FolderApiServiceAbstraction,\n      useClass: FolderApiService,\n      deps: [FolderServiceAbstraction, ApiServiceAbstraction],\n    },\n    { provide: LogService, useFactory: () => new ConsoleLogService(false) },\n    {\n      provide: CollectionServiceAbstraction,\n      useClass: CollectionService,\n      deps: [CryptoServiceAbstraction, I18nServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: EnvironmentServiceAbstraction,\n      useClass: EnvironmentService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: TotpServiceAbstraction,\n      useClass: TotpService,\n      deps: [CryptoFunctionServiceAbstraction, LogService, StateServiceAbstraction],\n    },\n    { provide: TokenServiceAbstraction, useClass: TokenService, deps: [StateServiceAbstraction] },\n    {\n      provide: CryptoServiceAbstraction,\n      useClass: CryptoService,\n      deps: [\n        CryptoFunctionServiceAbstraction,\n        AbstractEncryptService,\n        PlatformUtilsServiceAbstraction,\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: PasswordGenerationServiceAbstraction,\n      useClass: PasswordGenerationService,\n      deps: [CryptoServiceAbstraction, PolicyServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: UsernameGenerationServiceAbstraction,\n      useClass: UsernameGenerationService,\n      deps: [CryptoServiceAbstraction, StateServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: ApiServiceAbstraction,\n      useClass: ApiService,\n      deps: [\n        TokenServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        AppIdServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: FileUploadServiceAbstraction,\n      useClass: FileUploadService,\n      deps: [LogService, ApiServiceAbstraction],\n    },\n    {\n      provide: SyncServiceAbstraction,\n      useClass: SyncService,\n      deps: [\n        ApiServiceAbstraction,\n        SettingsServiceAbstraction,\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        CryptoServiceAbstraction,\n        CollectionServiceAbstraction,\n        MessagingServiceAbstraction,\n        PolicyServiceAbstraction,\n        SendServiceAbstraction,\n        LogService,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n        OrganizationServiceAbstraction,\n        ProviderServiceAbstraction,\n        FolderApiServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    { provide: BroadcasterServiceAbstraction, useClass: BroadcasterService },\n    {\n      provide: SettingsServiceAbstraction,\n      useClass: SettingsService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: VaultTimeoutServiceAbstraction,\n      useClass: VaultTimeoutService,\n      deps: [\n        CipherServiceAbstraction,\n        FolderServiceAbstraction,\n        CollectionServiceAbstraction,\n        CryptoServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        SearchServiceAbstraction,\n        TokenServiceAbstraction,\n        PolicyServiceAbstraction,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n        AuthServiceAbstraction,\n        LOCKED_CALLBACK,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: StateServiceAbstraction,\n      useClass: StateService,\n      deps: [\n        AbstractStorageService,\n        SECURE_STORAGE,\n        MEMORY_STORAGE,\n        LogService,\n        StateMigrationServiceAbstraction,\n        STATE_FACTORY,\n        STATE_SERVICE_USE_CACHE,\n      ],\n    },\n    {\n      provide: StateMigrationServiceAbstraction,\n      useClass: StateMigrationService,\n      deps: [AbstractStorageService, SECURE_STORAGE, STATE_FACTORY],\n    },\n    {\n      provide: ExportServiceAbstraction,\n      useClass: ExportService,\n      deps: [\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        ApiServiceAbstraction,\n        CryptoServiceAbstraction,\n      ],\n    },\n    {\n      provide: SearchServiceAbstraction,\n      useClass: SearchService,\n      deps: [CipherServiceAbstraction, LogService, I18nServiceAbstraction],\n    },\n    {\n      provide: NotificationsServiceAbstraction,\n      useClass: NotificationsService,\n      deps: [\n        SyncServiceAbstraction,\n        AppIdServiceAbstraction,\n        ApiServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        LOGOUT_CALLBACK,\n        LogService,\n        StateServiceAbstraction,\n        AuthServiceAbstraction,\n      ],\n    },\n    {\n      provide: CryptoFunctionServiceAbstraction,\n      useClass: WebCryptoFunctionService,\n      deps: [WINDOW],\n    },\n    {\n      provide: AbstractEncryptService,\n      useClass: EncryptService,\n      deps: [CryptoFunctionServiceAbstraction, LogService, LOG_MAC_FAILURES],\n    },\n    {\n      provide: EventServiceAbstraction,\n      useClass: EventService,\n      deps: [\n        ApiServiceAbstraction,\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n        LogService,\n        OrganizationServiceAbstraction,\n      ],\n    },\n    {\n      provide: PolicyServiceAbstraction,\n      useClass: PolicyService,\n      deps: [StateServiceAbstraction, OrganizationServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: SendServiceAbstraction,\n      useClass: SendService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: KeyConnectorServiceAbstraction,\n      useClass: KeyConnectorService,\n      deps: [\n        StateServiceAbstraction,\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        LogService,\n        OrganizationServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: UserVerificationServiceAbstraction,\n      useClass: UserVerificationService,\n      deps: [CryptoServiceAbstraction, I18nServiceAbstraction, ApiServiceAbstraction],\n    },\n    { provide: PasswordRepromptServiceAbstraction, useClass: PasswordRepromptService },\n    {\n      provide: OrganizationServiceAbstraction,\n      useClass: OrganizationService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: ProviderServiceAbstraction,\n      useClass: ProviderService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: TwoFactorServiceAbstraction,\n      useClass: TwoFactorService,\n      deps: [I18nServiceAbstraction, PlatformUtilsServiceAbstraction],\n    },\n    {\n      provide: AbstractThemingService,\n      useClass: ThemingService,\n    },\n    {\n      provide: FormValidationErrorsServiceAbstraction,\n      useClass: FormValidationErrorsService,\n    },\n  ],\n})\nexport class JslibServicesModule {}\n","import { FormGroup, ValidationErrors } from \"@angular/forms\";\n\nimport {\n  FormGroupControls,\n  FormValidationErrorsService as FormValidationErrorsAbstraction,\n  AllValidationErrors,\n} from \"../abstractions/formValidationErrors.service\";\n\nexport class FormValidationErrorsService implements FormValidationErrorsAbstraction {\n  getFormValidationErrors(controls: FormGroupControls): AllValidationErrors[] {\n    let errors: AllValidationErrors[] = [];\n    Object.keys(controls).forEach((key) => {\n      const control = controls[key];\n      if (control instanceof FormGroup) {\n        errors = errors.concat(this.getFormValidationErrors(control.controls));\n      }\n\n      const controlErrors: ValidationErrors = controls[key].errors;\n      if (controlErrors !== null) {\n        Object.keys(controlErrors).forEach((keyError) => {\n          errors.push({\n            controlName: key,\n            errorName: keyError,\n          });\n        });\n      }\n    });\n\n    return errors;\n  }\n}\n","import { CryptoService } from \"../abstractions/crypto.service\";\n\nexport class ContainerService {\n  constructor(private cryptoService: CryptoService) {}\n\n  // deprecated, use attachToGlobal instead\n  attachToWindow(win: any) {\n    this.attachToGlobal(win);\n  }\n\n  attachToGlobal(global: any) {\n    if (!global.bitwardenContainerService) {\n      global.bitwardenContainerService = this;\n    }\n  }\n\n  getCryptoService(): CryptoService {\n    return this.cryptoService;\n  }\n}\n","import { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\n\nexport class MemoryStorageService implements AbstractStorageService {\n  private store = new Map<string, any>();\n\n  get<T>(key: string): Promise<T> {\n    if (this.store.has(key)) {\n      const obj = this.store.get(key);\n      return Promise.resolve(obj as T);\n    }\n    return Promise.resolve(null);\n  }\n\n  async has(key: string): Promise<boolean> {\n    return this.get(key) != null;\n  }\n\n  save(key: string, obj: any): Promise<any> {\n    if (obj == null) {\n      return this.remove(key);\n    }\n    this.store.set(key, obj);\n    return Promise.resolve();\n  }\n\n  remove(key: string): Promise<any> {\n    this.store.delete(key);\n    return Promise.resolve();\n  }\n}\n","import { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SystemService as SystemServiceAbstraction } from \"../abstractions/system.service\";\nimport { Utils } from \"../misc/utils\";\n\nexport class SystemService implements SystemServiceAbstraction {\n  private reloadInterval: any = null;\n  private clearClipboardTimeout: any = null;\n  private clearClipboardTimeoutFunction: () => Promise<any> = null;\n\n  constructor(\n    private messagingService: MessagingService,\n    private platformUtilsService: PlatformUtilsService,\n    private reloadCallback: () => Promise<void> = null,\n    private stateService: StateService\n  ) {}\n\n  async startProcessReload(): Promise<void> {\n    if (\n      (await this.stateService.getDecryptedPinProtected()) != null ||\n      (await this.stateService.getBiometricLocked()) ||\n      this.reloadInterval != null\n    ) {\n      return;\n    }\n    this.cancelProcessReload();\n    this.reloadInterval = setInterval(async () => {\n      let doRefresh = false;\n      const lastActive = await this.stateService.getLastActive();\n      if (lastActive != null) {\n        const diffSeconds = new Date().getTime() - lastActive;\n        // Don't refresh if they are still active in the window\n        doRefresh = diffSeconds >= 5000;\n      }\n      const biometricLockedFingerprintValidated =\n        (await this.stateService.getBiometricFingerprintValidated()) &&\n        (await this.stateService.getBiometricLocked());\n      if (doRefresh && !biometricLockedFingerprintValidated) {\n        clearInterval(this.reloadInterval);\n        this.reloadInterval = null;\n        this.messagingService.send(\"reloadProcess\");\n        if (this.reloadCallback != null) {\n          await this.reloadCallback();\n        }\n      }\n    }, 10000);\n  }\n\n  cancelProcessReload(): void {\n    if (this.reloadInterval != null) {\n      clearInterval(this.reloadInterval);\n      this.reloadInterval = null;\n    }\n  }\n\n  async clearClipboard(clipboardValue: string, timeoutMs: number = null): Promise<void> {\n    if (this.clearClipboardTimeout != null) {\n      clearTimeout(this.clearClipboardTimeout);\n      this.clearClipboardTimeout = null;\n    }\n    if (Utils.isNullOrWhitespace(clipboardValue)) {\n      return;\n    }\n    await this.stateService.getClearClipboard().then((clearSeconds) => {\n      if (clearSeconds == null) {\n        return;\n      }\n      if (timeoutMs == null) {\n        timeoutMs = clearSeconds * 1000;\n      }\n      this.clearClipboardTimeoutFunction = async () => {\n        const clipboardValueNow = await this.platformUtilsService.readFromClipboard();\n        if (clipboardValue === clipboardValueNow) {\n          this.platformUtilsService.copyToClipboard(\"\", { clearing: true });\n        }\n      };\n      this.clearClipboardTimeout = setTimeout(async () => {\n        await this.clearPendingClipboard();\n      }, timeoutMs);\n    });\n  }\n\n  async clearPendingClipboard() {\n    if (this.clearClipboardTimeoutFunction != null) {\n      await this.clearClipboardTimeoutFunction();\n      this.clearClipboardTimeoutFunction = null;\n    }\n  }\n}\n","import { BrowserApi } from \"./browserApi\";\n\nexport class SafariApp {\n  static sendMessageToApp(command: string, data: any = null, resolveNow = false): Promise<any> {\n    if (!BrowserApi.isSafariApi) {\n      return Promise.resolve(null);\n    }\n    return new Promise((resolve) => {\n      const now = new Date();\n      const messageId =\n        now.getTime().toString() + \"_\" + Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);\n      (browser as any).runtime.sendNativeMessage(\n        \"com.bitwarden.desktop\",\n        {\n          id: messageId,\n          command: command,\n          data: data,\n          responseData: null,\n        },\n        (response: any) => {\n          resolve(response);\n        }\n      );\n    });\n  }\n}\n","export class BrowserComponentState {\n  scrollY: number;\n  searchText: string;\n}\n","import { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\nimport { BrowserComponentState } from \"./browserComponentState\";\n\nexport class BrowserGroupingsComponentState extends BrowserComponentState {\n  favoriteCiphers: CipherView[];\n  noFolderCiphers: CipherView[];\n  ciphers: CipherView[];\n  collectionCounts: Map<string, number>;\n  folderCounts: Map<string, number>;\n  typeCounts: Map<CipherType, number>;\n  folders: FolderView[];\n  collections: CollectionView[];\n  deletedCount: number;\n}\n","import { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { SendView } from \"@bitwarden/common/models/view/sendView\";\n\nimport { BrowserComponentState } from \"./browserComponentState\";\n\nexport class BrowserSendComponentState extends BrowserComponentState {\n  sends: SendView[];\n  typeCounts: Map<SendType, number>;\n}\n","import {\n  Account as BaseAccount,\n  AccountSettings as BaseAccountSettings,\n} from \"@bitwarden/common/models/domain/account\";\n\nimport { BrowserComponentState } from \"./browserComponentState\";\nimport { BrowserGroupingsComponentState } from \"./browserGroupingsComponentState\";\nimport { BrowserSendComponentState } from \"./browserSendComponentState\";\n\nexport class AccountSettings extends BaseAccountSettings {\n  vaultTimeout = -1; // On Restart\n}\n\nexport class Account extends BaseAccount {\n  settings?: AccountSettings = new AccountSettings();\n  groupings?: BrowserGroupingsComponentState;\n  send?: BrowserSendComponentState;\n  ciphers?: BrowserComponentState;\n  sendType?: BrowserComponentState;\n\n  constructor(init: Partial<Account>) {\n    super(init);\n    Object.assign(this.settings, {\n      ...new AccountSettings(),\n      ...this.settings,\n    });\n    this.groupings = init?.groupings ?? new BrowserGroupingsComponentState();\n    this.send = init?.send ?? new BrowserSendComponentState();\n    this.ciphers = init?.ciphers ?? new BrowserComponentState();\n    this.sendType = init?.sendType ?? new BrowserComponentState();\n  }\n}\n","export default class AutofillScript {\n  script: string[][] = [];\n  documentUUID: any = {};\n  properties: any = {};\n  options: any = {};\n  metadata: any = {};\n  autosubmit: any = null;\n\n  constructor(documentUUID: string) {\n    this.documentUUID = documentUUID;\n  }\n}\n","export class AutoFillConstants {\n  static readonly UsernameFieldNames: string[] = [\n    // English\n    \"username\",\n    \"user name\",\n    \"email\",\n    \"email address\",\n    \"e-mail\",\n    \"e-mail address\",\n    \"userid\",\n    \"user id\",\n    \"customer id\",\n    \"login id\",\n    // German\n    \"benutzername\",\n    \"benutzer name\",\n    \"email adresse\",\n    \"e-mail adresse\",\n    \"benutzerid\",\n    \"benutzer id\",\n  ];\n\n  static readonly PasswordFieldIgnoreList: string[] = [\n    \"onetimepassword\",\n    \"captcha\",\n    \"findanything\",\n    \"forgot\",\n  ];\n\n  static readonly ExcludedAutofillTypes: string[] = [\n    \"radio\",\n    \"checkbox\",\n    \"hidden\",\n    \"file\",\n    \"button\",\n    \"image\",\n    \"reset\",\n    \"search\",\n  ];\n}\n\nexport class CreditCardAutoFillConstants {\n  static readonly CardAttributes: string[] = [\n    \"autoCompleteType\",\n    \"data-stripe\",\n    \"htmlName\",\n    \"htmlID\",\n    \"label-tag\",\n    \"placeholder\",\n    \"label-left\",\n    \"label-top\",\n    \"data-recurly\",\n  ];\n\n  static readonly CardAttributesExtended: string[] = [\n    ...CreditCardAutoFillConstants.CardAttributes,\n    \"label-right\",\n  ];\n\n  static readonly CardHolderFieldNames: string[] = [\n    \"cc-name\",\n    \"card-name\",\n    \"cardholder-name\",\n    \"cardholder\",\n    \"name\",\n    \"nom\",\n  ];\n\n  static readonly CardHolderFieldNameValues: string[] = [\n    \"cc-name\",\n    \"card-name\",\n    \"cardholder-name\",\n    \"cardholder\",\n    \"tbName\",\n  ];\n\n  static readonly CardNumberFieldNames: string[] = [\n    \"cc-number\",\n    \"cc-num\",\n    \"card-number\",\n    \"card-num\",\n    \"number\",\n    \"cc\",\n    \"cc-no\",\n    \"card-no\",\n    \"credit-card\",\n    \"numero-carte\",\n    \"carte\",\n    \"carte-credit\",\n    \"num-carte\",\n    \"cb-num\",\n  ];\n\n  static readonly CardNumberFieldNameValues: string[] = [\n    \"cc-number\",\n    \"cc-num\",\n    \"card-number\",\n    \"card-num\",\n    \"cc-no\",\n    \"card-no\",\n    \"numero-carte\",\n    \"num-carte\",\n    \"cb-num\",\n  ];\n\n  static readonly CardExpiryFieldNames: string[] = [\n    \"cc-exp\",\n    \"card-exp\",\n    \"cc-expiration\",\n    \"card-expiration\",\n    \"cc-ex\",\n    \"card-ex\",\n    \"card-expire\",\n    \"card-expiry\",\n    \"validite\",\n    \"expiration\",\n    \"expiry\",\n    \"mm-yy\",\n    \"mm-yyyy\",\n    \"yy-mm\",\n    \"yyyy-mm\",\n    \"expiration-date\",\n    \"payment-card-expiration\",\n    \"payment-cc-date\",\n  ];\n\n  static readonly CardExpiryFieldNameValues: string[] = [\n    \"mm-yy\",\n    \"mm-yyyy\",\n    \"yy-mm\",\n    \"yyyy-mm\",\n    \"expiration-date\",\n    \"payment-card-expiration\",\n  ];\n\n  static readonly ExpiryMonthFieldNames: string[] = [\n    \"exp-month\",\n    \"cc-exp-month\",\n    \"cc-month\",\n    \"card-month\",\n    \"cc-mo\",\n    \"card-mo\",\n    \"exp-mo\",\n    \"card-exp-mo\",\n    \"cc-exp-mo\",\n    \"card-expiration-month\",\n    \"expiration-month\",\n    \"cc-mm\",\n    \"cc-m\",\n    \"card-mm\",\n    \"card-m\",\n    \"card-exp-mm\",\n    \"cc-exp-mm\",\n    \"exp-mm\",\n    \"exp-m\",\n    \"expire-month\",\n    \"expire-mo\",\n    \"expiry-month\",\n    \"expiry-mo\",\n    \"card-expire-month\",\n    \"card-expire-mo\",\n    \"card-expiry-month\",\n    \"card-expiry-mo\",\n    \"mois-validite\",\n    \"mois-expiration\",\n    \"m-validite\",\n    \"m-expiration\",\n    \"expiry-date-field-month\",\n    \"expiration-date-month\",\n    \"expiration-date-mm\",\n    \"exp-mon\",\n    \"validity-mo\",\n    \"exp-date-mo\",\n    \"cb-date-mois\",\n    \"date-m\",\n  ];\n\n  static readonly ExpiryYearFieldNames: string[] = [\n    \"exp-year\",\n    \"cc-exp-year\",\n    \"cc-year\",\n    \"card-year\",\n    \"cc-yr\",\n    \"card-yr\",\n    \"exp-yr\",\n    \"card-exp-yr\",\n    \"cc-exp-yr\",\n    \"card-expiration-year\",\n    \"expiration-year\",\n    \"cc-yy\",\n    \"cc-y\",\n    \"card-yy\",\n    \"card-y\",\n    \"card-exp-yy\",\n    \"cc-exp-yy\",\n    \"exp-yy\",\n    \"exp-y\",\n    \"cc-yyyy\",\n    \"card-yyyy\",\n    \"card-exp-yyyy\",\n    \"cc-exp-yyyy\",\n    \"expire-year\",\n    \"expire-yr\",\n    \"expiry-year\",\n    \"expiry-yr\",\n    \"card-expire-year\",\n    \"card-expire-yr\",\n    \"card-expiry-year\",\n    \"card-expiry-yr\",\n    \"an-validite\",\n    \"an-expiration\",\n    \"annee-validite\",\n    \"annee-expiration\",\n    \"expiry-date-field-year\",\n    \"expiration-date-year\",\n    \"cb-date-ann\",\n    \"expiration-date-yy\",\n    \"expiration-date-yyyy\",\n    \"validity-year\",\n    \"exp-date-year\",\n    \"date-y\",\n  ];\n\n  static readonly CVVFieldNames: string[] = [\n    \"cvv\",\n    \"cvc\",\n    \"cvv2\",\n    \"cc-csc\",\n    \"cc-cvv\",\n    \"card-csc\",\n    \"card-cvv\",\n    \"cvd\",\n    \"cid\",\n    \"cvc2\",\n    \"cnv\",\n    \"cvn2\",\n    \"cc-code\",\n    \"card-code\",\n    \"code-securite\",\n    \"security-code\",\n    \"crypto\",\n    \"card-verif\",\n    \"verification-code\",\n    \"csc\",\n    \"ccv\",\n  ];\n\n  static readonly CardBrandFieldNames: string[] = [\n    \"cc-type\",\n    \"card-type\",\n    \"card-brand\",\n    \"cc-brand\",\n    \"cb-type\",\n  ];\n\n  // Each index represents a language. These three arrays should all be the same length.\n  // 0: English, 1: Danish, 2: German/Dutch, 3: French/Spanish/Italian, 4: Russian, 5: Portuguese\n  static readonly MonthAbbr = [\"mm\", \"mm\", \"mm\", \"mm\", \"mm\", \"mm\"];\n  static readonly YearAbbrShort = [\"yy\", \"åå\", \"jj\", \"aa\", \"гг\", \"rr\"];\n  static readonly YearAbbrLong = [\"yyyy\", \"åååå\", \"jjjj\", \"aa\", \"гггг\", \"rrrr\"];\n}\n\nexport class IdentityAutoFillConstants {\n  static readonly IdentityAttributes: string[] = [\n    \"autoCompleteType\",\n    \"data-stripe\",\n    \"htmlName\",\n    \"htmlID\",\n    \"label-tag\",\n    \"placeholder\",\n    \"label-left\",\n    \"label-top\",\n    \"data-recurly\",\n  ];\n\n  static readonly FullNameFieldNames: string[] = [\"name\", \"full-name\", \"your-name\"];\n\n  static readonly FullNameFieldNameValues: string[] = [\"full-name\", \"your-name\"];\n\n  static readonly TitleFieldNames: string[] = [\"honorific-prefix\", \"prefix\", \"title\"];\n\n  static readonly FirstnameFieldNames: string[] = [\n    // English\n    \"f-name\",\n    \"first-name\",\n    \"given-name\",\n    \"first-n\",\n    // German\n    \"vorname\",\n  ];\n\n  static readonly MiddlenameFieldNames: string[] = [\n    \"m-name\",\n    \"middle-name\",\n    \"additional-name\",\n    \"middle-initial\",\n    \"middle-n\",\n    \"middle-i\",\n  ];\n\n  static readonly LastnameFieldNames: string[] = [\n    // English\n    \"l-name\",\n    \"last-name\",\n    \"s-name\",\n    \"surname\",\n    \"family-name\",\n    \"family-n\",\n    \"last-n\",\n    // German\n    \"nachname\",\n    \"familienname\",\n  ];\n\n  static readonly EmailFieldNames: string[] = [\"e-mail\", \"email-address\"];\n\n  static readonly AddressFieldNames: string[] = [\n    \"address\",\n    \"street-address\",\n    \"addr\",\n    \"street\",\n    \"mailing-addr\",\n    \"billing-addr\",\n    \"mail-addr\",\n    \"bill-addr\",\n  ];\n\n  static readonly AddressFieldNameValues: string[] = [\n    \"mailing-addr\",\n    \"billing-addr\",\n    \"mail-addr\",\n    \"bill-addr\",\n  ];\n\n  static readonly Address1FieldNames: string[] = [\n    \"address-1\",\n    \"address-line-1\",\n    \"addr-1\",\n    \"street-1\",\n  ];\n\n  static readonly Address2FieldNames: string[] = [\n    \"address-2\",\n    \"address-line-2\",\n    \"addr-2\",\n    \"street-2\",\n  ];\n\n  static readonly Address3FieldNames: string[] = [\n    \"address-3\",\n    \"address-line-3\",\n    \"addr-3\",\n    \"street-3\",\n  ];\n\n  static readonly PostalCodeFieldNames: string[] = [\n    \"postal\",\n    \"zip\",\n    \"zip2\",\n    \"zip-code\",\n    \"postal-code\",\n    \"post-code\",\n    \"address-zip\",\n    \"address-postal\",\n    \"address-code\",\n    \"address-postal-code\",\n    \"address-zip-code\",\n  ];\n\n  static readonly CityFieldNames: string[] = [\n    \"city\",\n    \"town\",\n    \"address-level-2\",\n    \"address-city\",\n    \"address-town\",\n  ];\n\n  static readonly StateFieldNames: string[] = [\n    \"state\",\n    \"province\",\n    \"provence\",\n    \"address-level-1\",\n    \"address-state\",\n    \"address-province\",\n  ];\n\n  static readonly CountryFieldNames: string[] = [\n    \"country\",\n    \"country-code\",\n    \"country-name\",\n    \"address-country\",\n    \"address-country-name\",\n    \"address-country-code\",\n  ];\n\n  static readonly PhoneFieldNames: string[] = [\n    \"phone\",\n    \"mobile\",\n    \"mobile-phone\",\n    \"tel\",\n    \"telephone\",\n    \"phone-number\",\n  ];\n\n  static readonly UserNameFieldNames: string[] = [\"user-name\", \"user-id\", \"screen-name\"];\n\n  static readonly CompanyFieldNames: string[] = [\n    \"company\",\n    \"company-name\",\n    \"organization\",\n    \"organization-name\",\n  ];\n\n  static readonly IsoCountries: { [id: string]: string } = {\n    afghanistan: \"AF\",\n    \"aland islands\": \"AX\",\n    albania: \"AL\",\n    algeria: \"DZ\",\n    \"american samoa\": \"AS\",\n    andorra: \"AD\",\n    angola: \"AO\",\n    anguilla: \"AI\",\n    antarctica: \"AQ\",\n    \"antigua and barbuda\": \"AG\",\n    argentina: \"AR\",\n    armenia: \"AM\",\n    aruba: \"AW\",\n    australia: \"AU\",\n    austria: \"AT\",\n    azerbaijan: \"AZ\",\n    bahamas: \"BS\",\n    bahrain: \"BH\",\n    bangladesh: \"BD\",\n    barbados: \"BB\",\n    belarus: \"BY\",\n    belgium: \"BE\",\n    belize: \"BZ\",\n    benin: \"BJ\",\n    bermuda: \"BM\",\n    bhutan: \"BT\",\n    bolivia: \"BO\",\n    \"bosnia and herzegovina\": \"BA\",\n    botswana: \"BW\",\n    \"bouvet island\": \"BV\",\n    brazil: \"BR\",\n    \"british indian ocean territory\": \"IO\",\n    \"brunei darussalam\": \"BN\",\n    bulgaria: \"BG\",\n    \"burkina faso\": \"BF\",\n    burundi: \"BI\",\n    cambodia: \"KH\",\n    cameroon: \"CM\",\n    canada: \"CA\",\n    \"cape verde\": \"CV\",\n    \"cayman islands\": \"KY\",\n    \"central african republic\": \"CF\",\n    chad: \"TD\",\n    chile: \"CL\",\n    china: \"CN\",\n    \"christmas island\": \"CX\",\n    \"cocos (keeling) islands\": \"CC\",\n    colombia: \"CO\",\n    comoros: \"KM\",\n    congo: \"CG\",\n    \"congo, democratic republic\": \"CD\",\n    \"cook islands\": \"CK\",\n    \"costa rica\": \"CR\",\n    \"cote d'ivoire\": \"CI\",\n    croatia: \"HR\",\n    cuba: \"CU\",\n    cyprus: \"CY\",\n    \"czech republic\": \"CZ\",\n    denmark: \"DK\",\n    djibouti: \"DJ\",\n    dominica: \"DM\",\n    \"dominican republic\": \"DO\",\n    ecuador: \"EC\",\n    egypt: \"EG\",\n    \"el salvador\": \"SV\",\n    \"equatorial guinea\": \"GQ\",\n    eritrea: \"ER\",\n    estonia: \"EE\",\n    ethiopia: \"ET\",\n    \"falkland islands\": \"FK\",\n    \"faroe islands\": \"FO\",\n    fiji: \"FJ\",\n    finland: \"FI\",\n    france: \"FR\",\n    \"french guiana\": \"GF\",\n    \"french polynesia\": \"PF\",\n    \"french southern territories\": \"TF\",\n    gabon: \"GA\",\n    gambia: \"GM\",\n    georgia: \"GE\",\n    germany: \"DE\",\n    ghana: \"GH\",\n    gibraltar: \"GI\",\n    greece: \"GR\",\n    greenland: \"GL\",\n    grenada: \"GD\",\n    guadeloupe: \"GP\",\n    guam: \"GU\",\n    guatemala: \"GT\",\n    guernsey: \"GG\",\n    guinea: \"GN\",\n    \"guinea-bissau\": \"GW\",\n    guyana: \"GY\",\n    haiti: \"HT\",\n    \"heard island & mcdonald islands\": \"HM\",\n    \"holy see (vatican city state)\": \"VA\",\n    honduras: \"HN\",\n    \"hong kong\": \"HK\",\n    hungary: \"HU\",\n    iceland: \"IS\",\n    india: \"IN\",\n    indonesia: \"ID\",\n    \"iran, islamic republic of\": \"IR\",\n    iraq: \"IQ\",\n    ireland: \"IE\",\n    \"isle of man\": \"IM\",\n    israel: \"IL\",\n    italy: \"IT\",\n    jamaica: \"JM\",\n    japan: \"JP\",\n    jersey: \"JE\",\n    jordan: \"JO\",\n    kazakhstan: \"KZ\",\n    kenya: \"KE\",\n    kiribati: \"KI\",\n    \"republic of korea\": \"KR\",\n    \"south korea\": \"KR\",\n    \"democratic people's republic of korea\": \"KP\",\n    \"north korea\": \"KP\",\n    kuwait: \"KW\",\n    kyrgyzstan: \"KG\",\n    \"lao people's democratic republic\": \"LA\",\n    latvia: \"LV\",\n    lebanon: \"LB\",\n    lesotho: \"LS\",\n    liberia: \"LR\",\n    \"libyan arab jamahiriya\": \"LY\",\n    liechtenstein: \"LI\",\n    lithuania: \"LT\",\n    luxembourg: \"LU\",\n    macao: \"MO\",\n    macedonia: \"MK\",\n    madagascar: \"MG\",\n    malawi: \"MW\",\n    malaysia: \"MY\",\n    maldives: \"MV\",\n    mali: \"ML\",\n    malta: \"MT\",\n    \"marshall islands\": \"MH\",\n    martinique: \"MQ\",\n    mauritania: \"MR\",\n    mauritius: \"MU\",\n    mayotte: \"YT\",\n    mexico: \"MX\",\n    \"micronesia, federated states of\": \"FM\",\n    moldova: \"MD\",\n    monaco: \"MC\",\n    mongolia: \"MN\",\n    montenegro: \"ME\",\n    montserrat: \"MS\",\n    morocco: \"MA\",\n    mozambique: \"MZ\",\n    myanmar: \"MM\",\n    namibia: \"NA\",\n    nauru: \"NR\",\n    nepal: \"NP\",\n    netherlands: \"NL\",\n    \"netherlands antilles\": \"AN\",\n    \"new caledonia\": \"NC\",\n    \"new zealand\": \"NZ\",\n    nicaragua: \"NI\",\n    niger: \"NE\",\n    nigeria: \"NG\",\n    niue: \"NU\",\n    \"norfolk island\": \"NF\",\n    \"northern mariana islands\": \"MP\",\n    norway: \"NO\",\n    oman: \"OM\",\n    pakistan: \"PK\",\n    palau: \"PW\",\n    \"palestinian territory, occupied\": \"PS\",\n    panama: \"PA\",\n    \"papua new guinea\": \"PG\",\n    paraguay: \"PY\",\n    peru: \"PE\",\n    philippines: \"PH\",\n    pitcairn: \"PN\",\n    poland: \"PL\",\n    portugal: \"PT\",\n    \"puerto rico\": \"PR\",\n    qatar: \"QA\",\n    reunion: \"RE\",\n    romania: \"RO\",\n    \"russian federation\": \"RU\",\n    rwanda: \"RW\",\n    \"saint barthelemy\": \"BL\",\n    \"saint helena\": \"SH\",\n    \"saint kitts and nevis\": \"KN\",\n    \"saint lucia\": \"LC\",\n    \"saint martin\": \"MF\",\n    \"saint pierre and miquelon\": \"PM\",\n    \"saint vincent and grenadines\": \"VC\",\n    samoa: \"WS\",\n    \"san marino\": \"SM\",\n    \"sao tome and principe\": \"ST\",\n    \"saudi arabia\": \"SA\",\n    senegal: \"SN\",\n    serbia: \"RS\",\n    seychelles: \"SC\",\n    \"sierra leone\": \"SL\",\n    singapore: \"SG\",\n    slovakia: \"SK\",\n    slovenia: \"SI\",\n    \"solomon islands\": \"SB\",\n    somalia: \"SO\",\n    \"south africa\": \"ZA\",\n    \"south georgia and sandwich isl.\": \"GS\",\n    spain: \"ES\",\n    \"sri lanka\": \"LK\",\n    sudan: \"SD\",\n    suriname: \"SR\",\n    \"svalbard and jan mayen\": \"SJ\",\n    swaziland: \"SZ\",\n    sweden: \"SE\",\n    switzerland: \"CH\",\n    \"syrian arab republic\": \"SY\",\n    taiwan: \"TW\",\n    tajikistan: \"TJ\",\n    tanzania: \"TZ\",\n    thailand: \"TH\",\n    \"timor-leste\": \"TL\",\n    togo: \"TG\",\n    tokelau: \"TK\",\n    tonga: \"TO\",\n    \"trinidad and tobago\": \"TT\",\n    tunisia: \"TN\",\n    turkey: \"TR\",\n    turkmenistan: \"TM\",\n    \"turks and caicos islands\": \"TC\",\n    tuvalu: \"TV\",\n    uganda: \"UG\",\n    ukraine: \"UA\",\n    \"united arab emirates\": \"AE\",\n    \"united kingdom\": \"GB\",\n    \"united states\": \"US\",\n    \"united states outlying islands\": \"UM\",\n    uruguay: \"UY\",\n    uzbekistan: \"UZ\",\n    vanuatu: \"VU\",\n    venezuela: \"VE\",\n    vietnam: \"VN\",\n    \"virgin islands, british\": \"VG\",\n    \"virgin islands, u.s.\": \"VI\",\n    \"wallis and futuna\": \"WF\",\n    \"western sahara\": \"EH\",\n    yemen: \"YE\",\n    zambia: \"ZM\",\n    zimbabwe: \"ZW\",\n  };\n\n  static readonly IsoStates: { [id: string]: string } = {\n    alabama: \"AL\",\n    alaska: \"AK\",\n    \"american samoa\": \"AS\",\n    arizona: \"AZ\",\n    arkansas: \"AR\",\n    california: \"CA\",\n    colorado: \"CO\",\n    connecticut: \"CT\",\n    delaware: \"DE\",\n    \"district of columbia\": \"DC\",\n    \"federated states of micronesia\": \"FM\",\n    florida: \"FL\",\n    georgia: \"GA\",\n    guam: \"GU\",\n    hawaii: \"HI\",\n    idaho: \"ID\",\n    illinois: \"IL\",\n    indiana: \"IN\",\n    iowa: \"IA\",\n    kansas: \"KS\",\n    kentucky: \"KY\",\n    louisiana: \"LA\",\n    maine: \"ME\",\n    \"marshall islands\": \"MH\",\n    maryland: \"MD\",\n    massachusetts: \"MA\",\n    michigan: \"MI\",\n    minnesota: \"MN\",\n    mississippi: \"MS\",\n    missouri: \"MO\",\n    montana: \"MT\",\n    nebraska: \"NE\",\n    nevada: \"NV\",\n    \"new hampshire\": \"NH\",\n    \"new jersey\": \"NJ\",\n    \"new mexico\": \"NM\",\n    \"new york\": \"NY\",\n    \"north carolina\": \"NC\",\n    \"north dakota\": \"ND\",\n    \"northern mariana islands\": \"MP\",\n    ohio: \"OH\",\n    oklahoma: \"OK\",\n    oregon: \"OR\",\n    palau: \"PW\",\n    pennsylvania: \"PA\",\n    \"puerto rico\": \"PR\",\n    \"rhode island\": \"RI\",\n    \"south carolina\": \"SC\",\n    \"south dakota\": \"SD\",\n    tennessee: \"TN\",\n    texas: \"TX\",\n    utah: \"UT\",\n    vermont: \"VT\",\n    \"virgin islands\": \"VI\",\n    virginia: \"VA\",\n    washington: \"WA\",\n    \"west virginia\": \"WV\",\n    wisconsin: \"WI\",\n    wyoming: \"WY\",\n  };\n\n  static readonly IsoProvinces: { [id: string]: string } = {\n    alberta: \"AB\",\n    \"british columbia\": \"BC\",\n    manitoba: \"MB\",\n    \"new brunswick\": \"NB\",\n    \"newfoundland and labrador\": \"NL\",\n    \"nova scotia\": \"NS\",\n    ontario: \"ON\",\n    \"prince edward island\": \"PE\",\n    quebec: \"QC\",\n    saskatchewan: \"SK\",\n  };\n}\n","import { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { FieldType } from \"@bitwarden/common/enums/fieldType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { FieldView } from \"@bitwarden/common/models/view/fieldView\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport AutofillField from \"../models/autofillField\";\nimport AutofillPageDetails from \"../models/autofillPageDetails\";\nimport AutofillScript from \"../models/autofillScript\";\nimport { StateService } from \"../services/abstractions/state.service\";\n\nimport { AutofillService as AutofillServiceInterface } from \"./abstractions/autofill.service\";\nimport {\n  AutoFillConstants,\n  CreditCardAutoFillConstants,\n  IdentityAutoFillConstants,\n} from \"./autofillConstants\";\n\nexport default class AutofillService implements AutofillServiceInterface {\n  constructor(\n    private cipherService: CipherService,\n    private stateService: StateService,\n    private totpService: TotpService,\n    private eventService: EventService,\n    private logService: LogService\n  ) {}\n\n  getFormsWithPasswordFields(pageDetails: AutofillPageDetails): any[] {\n    const formData: any[] = [];\n\n    const passwordFields = this.loadPasswordFields(pageDetails, true, true, false, false);\n    if (passwordFields.length === 0) {\n      return formData;\n    }\n\n    for (const formKey in pageDetails.forms) {\n      // eslint-disable-next-line\n      if (!pageDetails.forms.hasOwnProperty(formKey)) {\n        continue;\n      }\n\n      const formPasswordFields = passwordFields.filter((pf) => formKey === pf.form);\n      if (formPasswordFields.length > 0) {\n        let uf = this.findUsernameField(pageDetails, formPasswordFields[0], false, false, false);\n        if (uf == null) {\n          // not able to find any viewable username fields. maybe there are some \"hidden\" ones?\n          uf = this.findUsernameField(pageDetails, formPasswordFields[0], true, true, false);\n        }\n        formData.push({\n          form: pageDetails.forms[formKey],\n          password: formPasswordFields[0],\n          username: uf,\n          passwords: formPasswordFields,\n        });\n      }\n    }\n\n    return formData;\n  }\n\n  async doAutoFill(options: any) {\n    let totpPromise: Promise<string> = null;\n    const tab = await this.getActiveTab();\n    if (!tab || !options.cipher || !options.pageDetails || !options.pageDetails.length) {\n      throw new Error(\"Nothing to auto-fill.\");\n    }\n\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    let didAutofill = false;\n    options.pageDetails.forEach((pd: any) => {\n      // make sure we're still on correct tab\n      if (pd.tab.id !== tab.id || pd.tab.url !== tab.url) {\n        return;\n      }\n\n      const fillScript = this.generateFillScript(pd.details, {\n        skipUsernameOnlyFill: options.skipUsernameOnlyFill || false,\n        onlyEmptyFields: options.onlyEmptyFields || false,\n        onlyVisibleFields: options.onlyVisibleFields || false,\n        fillNewPassword: options.fillNewPassword || false,\n        cipher: options.cipher,\n      });\n\n      if (!fillScript || !fillScript.script || !fillScript.script.length) {\n        return;\n      }\n\n      // Add a small delay between operations\n      fillScript.properties.delay_between_operations = 20;\n\n      didAutofill = true;\n      if (!options.skipLastUsed) {\n        this.cipherService.updateLastUsedDate(options.cipher.id);\n      }\n\n      BrowserApi.tabSendMessage(\n        tab,\n        {\n          command: \"fillForm\",\n          fillScript: fillScript,\n          url: tab.url,\n        },\n        { frameId: pd.frameId }\n      );\n\n      if (\n        options.cipher.type !== CipherType.Login ||\n        totpPromise ||\n        !options.cipher.login.totp ||\n        (!canAccessPremium && !options.cipher.organizationUseTotp)\n      ) {\n        return;\n      }\n\n      totpPromise = this.stateService.getDisableAutoTotpCopy().then((disabled) => {\n        if (!disabled) {\n          return this.totpService.getCode(options.cipher.login.totp);\n        }\n        return null;\n      });\n    });\n\n    if (didAutofill) {\n      this.eventService.collect(EventType.Cipher_ClientAutofilled, options.cipher.id);\n      if (totpPromise != null) {\n        return await totpPromise;\n      } else {\n        return null;\n      }\n    } else {\n      throw new Error(\"Did not auto-fill.\");\n    }\n  }\n\n  async doAutoFillActiveTab(pageDetails: any, fromCommand: boolean) {\n    const tab = await this.getActiveTab();\n    if (!tab || !tab.url) {\n      return;\n    }\n\n    let cipher: CipherView;\n    if (fromCommand) {\n      cipher = await this.cipherService.getNextCipherForUrl(tab.url);\n    } else {\n      const lastLaunchedCipher = await this.cipherService.getLastLaunchedForUrl(tab.url, true);\n      if (\n        lastLaunchedCipher &&\n        Date.now().valueOf() - lastLaunchedCipher.localData?.lastLaunched?.valueOf() < 30000\n      ) {\n        cipher = lastLaunchedCipher;\n      } else {\n        cipher = await this.cipherService.getLastUsedForUrl(tab.url, true);\n      }\n\n      if (cipher == null) {\n        return null;\n      }\n    }\n\n    if (cipher.reprompt !== CipherRepromptType.None) {\n      return;\n    }\n\n    const totpCode = await this.doAutoFill({\n      cipher: cipher,\n      pageDetails: pageDetails,\n      skipLastUsed: !fromCommand,\n      skipUsernameOnlyFill: !fromCommand,\n      onlyEmptyFields: !fromCommand,\n      onlyVisibleFields: !fromCommand,\n      fillNewPassword: fromCommand,\n    });\n\n    // Update last used index as autofill has succeed\n    if (fromCommand) {\n      this.cipherService.updateLastUsedIndexForUrl(tab.url);\n    }\n\n    return totpCode;\n  }\n\n  // Helpers\n\n  private async getActiveTab(): Promise<any> {\n    const tab = await BrowserApi.getTabFromCurrentWindow();\n    if (!tab) {\n      throw new Error(\"No tab found.\");\n    }\n\n    return tab;\n  }\n\n  private generateFillScript(pageDetails: AutofillPageDetails, options: any): AutofillScript {\n    if (!pageDetails || !options.cipher) {\n      return null;\n    }\n\n    let fillScript = new AutofillScript(pageDetails.documentUUID);\n    const filledFields: { [id: string]: AutofillField } = {};\n    const fields = options.cipher.fields;\n\n    if (fields && fields.length) {\n      const fieldNames: string[] = [];\n\n      fields.forEach((f: any) => {\n        if (this.hasValue(f.name)) {\n          fieldNames.push(f.name.toLowerCase());\n        }\n      });\n\n      pageDetails.fields.forEach((field: any) => {\n        // eslint-disable-next-line\n        if (filledFields.hasOwnProperty(field.opid)) {\n          return;\n        }\n\n        if (!field.viewable && field.tagName !== \"span\") {\n          return;\n        }\n\n        const matchingIndex = this.findMatchingFieldIndex(field, fieldNames);\n        if (matchingIndex > -1) {\n          const matchingField: FieldView = fields[matchingIndex];\n          let val;\n          if (matchingField.type === FieldType.Linked) {\n            // Assumption: Linked Field is not being used to autofill a boolean value\n            val = options.cipher.linkedFieldValue(matchingField.linkedId);\n          } else {\n            val = matchingField.value;\n            if (val == null && matchingField.type === FieldType.Boolean) {\n              val = \"false\";\n            }\n          }\n\n          filledFields[field.opid] = field;\n          this.fillByOpid(fillScript, field, val);\n        }\n      });\n    }\n\n    switch (options.cipher.type) {\n      case CipherType.Login:\n        fillScript = this.generateLoginFillScript(fillScript, pageDetails, filledFields, options);\n        break;\n      case CipherType.Card:\n        fillScript = this.generateCardFillScript(fillScript, pageDetails, filledFields, options);\n        break;\n      case CipherType.Identity:\n        fillScript = this.generateIdentityFillScript(\n          fillScript,\n          pageDetails,\n          filledFields,\n          options\n        );\n        break;\n      default:\n        return null;\n    }\n\n    return fillScript;\n  }\n\n  private generateLoginFillScript(\n    fillScript: AutofillScript,\n    pageDetails: any,\n    filledFields: { [id: string]: AutofillField },\n    options: any\n  ): AutofillScript {\n    if (!options.cipher.login) {\n      return null;\n    }\n\n    const passwords: AutofillField[] = [];\n    const usernames: AutofillField[] = [];\n    let pf: AutofillField = null;\n    let username: AutofillField = null;\n    const login = options.cipher.login;\n\n    if (!login.password || login.password === \"\") {\n      // No password for this login. Maybe they just wanted to auto-fill some custom fields?\n      fillScript = this.setFillScriptForFocus(filledFields, fillScript);\n      return fillScript;\n    }\n\n    let passwordFields = this.loadPasswordFields(\n      pageDetails,\n      false,\n      false,\n      options.onlyEmptyFields,\n      options.fillNewPassword\n    );\n    if (!passwordFields.length && !options.onlyVisibleFields) {\n      // not able to find any viewable password fields. maybe there are some \"hidden\" ones?\n      passwordFields = this.loadPasswordFields(\n        pageDetails,\n        true,\n        true,\n        options.onlyEmptyFields,\n        options.fillNewPassword\n      );\n    }\n\n    for (const formKey in pageDetails.forms) {\n      // eslint-disable-next-line\n      if (!pageDetails.forms.hasOwnProperty(formKey)) {\n        continue;\n      }\n\n      const passwordFieldsForForm: AutofillField[] = [];\n      passwordFields.forEach((passField) => {\n        if (formKey === passField.form) {\n          passwordFieldsForForm.push(passField);\n        }\n      });\n\n      passwordFields.forEach((passField) => {\n        pf = passField;\n        passwords.push(pf);\n\n        if (login.username) {\n          username = this.findUsernameField(pageDetails, pf, false, false, false);\n\n          if (!username && !options.onlyVisibleFields) {\n            // not able to find any viewable username fields. maybe there are some \"hidden\" ones?\n            username = this.findUsernameField(pageDetails, pf, true, true, false);\n          }\n\n          if (username) {\n            usernames.push(username);\n          }\n        }\n      });\n    }\n\n    if (passwordFields.length && !passwords.length) {\n      // The page does not have any forms with password fields. Use the first password field on the page and the\n      // input field just before it as the username.\n\n      pf = passwordFields[0];\n      passwords.push(pf);\n\n      if (login.username && pf.elementNumber > 0) {\n        username = this.findUsernameField(pageDetails, pf, false, false, true);\n\n        if (!username && !options.onlyVisibleFields) {\n          // not able to find any viewable username fields. maybe there are some \"hidden\" ones?\n          username = this.findUsernameField(pageDetails, pf, true, true, true);\n        }\n\n        if (username) {\n          usernames.push(username);\n        }\n      }\n    }\n\n    if (!passwordFields.length && !options.skipUsernameOnlyFill) {\n      // No password fields on this page. Let's try to just fuzzy fill the username.\n      pageDetails.fields.forEach((f: any) => {\n        if (\n          f.viewable &&\n          (f.type === \"text\" || f.type === \"email\" || f.type === \"tel\") &&\n          this.fieldIsFuzzyMatch(f, AutoFillConstants.UsernameFieldNames)\n        ) {\n          usernames.push(f);\n        }\n      });\n    }\n\n    usernames.forEach((u) => {\n      // eslint-disable-next-line\n      if (filledFields.hasOwnProperty(u.opid)) {\n        return;\n      }\n\n      filledFields[u.opid] = u;\n      this.fillByOpid(fillScript, u, login.username);\n    });\n\n    passwords.forEach((p) => {\n      // eslint-disable-next-line\n      if (filledFields.hasOwnProperty(p.opid)) {\n        return;\n      }\n\n      filledFields[p.opid] = p;\n      this.fillByOpid(fillScript, p, login.password);\n    });\n\n    fillScript = this.setFillScriptForFocus(filledFields, fillScript);\n    return fillScript;\n  }\n\n  private generateCardFillScript(\n    fillScript: AutofillScript,\n    pageDetails: any,\n    filledFields: { [id: string]: AutofillField },\n    options: any\n  ): AutofillScript {\n    if (!options.cipher.card) {\n      return null;\n    }\n\n    const fillFields: { [id: string]: AutofillField } = {};\n\n    pageDetails.fields.forEach((f: any) => {\n      if (this.forCustomFieldsOnly(f)) {\n        return;\n      }\n\n      if (this.isExcludedType(f.type, AutoFillConstants.ExcludedAutofillTypes)) {\n        return;\n      }\n\n      for (let i = 0; i < CreditCardAutoFillConstants.CardAttributes.length; i++) {\n        const attr = CreditCardAutoFillConstants.CardAttributes[i];\n        // eslint-disable-next-line\n        if (!f.hasOwnProperty(attr) || !f[attr] || !f.viewable) {\n          continue;\n        }\n\n        // ref https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill\n        // ref https://developers.google.com/web/fundamentals/design-and-ux/input/forms/\n        if (\n          !fillFields.cardholderName &&\n          this.isFieldMatch(\n            f[attr],\n            CreditCardAutoFillConstants.CardHolderFieldNames,\n            CreditCardAutoFillConstants.CardHolderFieldNameValues\n          )\n        ) {\n          fillFields.cardholderName = f;\n          break;\n        } else if (\n          !fillFields.number &&\n          this.isFieldMatch(\n            f[attr],\n            CreditCardAutoFillConstants.CardNumberFieldNames,\n            CreditCardAutoFillConstants.CardNumberFieldNameValues\n          )\n        ) {\n          fillFields.number = f;\n          break;\n        } else if (\n          !fillFields.exp &&\n          this.isFieldMatch(\n            f[attr],\n            CreditCardAutoFillConstants.CardExpiryFieldNames,\n            CreditCardAutoFillConstants.CardExpiryFieldNameValues\n          )\n        ) {\n          fillFields.exp = f;\n          break;\n        } else if (\n          !fillFields.expMonth &&\n          this.isFieldMatch(f[attr], CreditCardAutoFillConstants.ExpiryMonthFieldNames)\n        ) {\n          fillFields.expMonth = f;\n          break;\n        } else if (\n          !fillFields.expYear &&\n          this.isFieldMatch(f[attr], CreditCardAutoFillConstants.ExpiryYearFieldNames)\n        ) {\n          fillFields.expYear = f;\n          break;\n        } else if (\n          !fillFields.code &&\n          this.isFieldMatch(f[attr], CreditCardAutoFillConstants.CVVFieldNames)\n        ) {\n          fillFields.code = f;\n          break;\n        } else if (\n          !fillFields.brand &&\n          this.isFieldMatch(f[attr], CreditCardAutoFillConstants.CardBrandFieldNames)\n        ) {\n          fillFields.brand = f;\n          break;\n        }\n      }\n    });\n\n    const card = options.cipher.card;\n    this.makeScriptAction(fillScript, card, fillFields, filledFields, \"cardholderName\");\n    this.makeScriptAction(fillScript, card, fillFields, filledFields, \"number\");\n    this.makeScriptAction(fillScript, card, fillFields, filledFields, \"code\");\n    this.makeScriptAction(fillScript, card, fillFields, filledFields, \"brand\");\n\n    if (fillFields.expMonth && this.hasValue(card.expMonth)) {\n      let expMonth: string = card.expMonth;\n\n      if (fillFields.expMonth.selectInfo && fillFields.expMonth.selectInfo.options) {\n        let index: number = null;\n        const siOptions = fillFields.expMonth.selectInfo.options;\n        if (siOptions.length === 12) {\n          index = parseInt(card.expMonth, null) - 1;\n        } else if (siOptions.length === 13) {\n          if (\n            siOptions[0][0] != null &&\n            siOptions[0][0] !== \"\" &&\n            (siOptions[12][0] == null || siOptions[12][0] === \"\")\n          ) {\n            index = parseInt(card.expMonth, null) - 1;\n          } else {\n            index = parseInt(card.expMonth, null);\n          }\n        }\n\n        if (index != null) {\n          const option = siOptions[index];\n          if (option.length > 1) {\n            expMonth = option[1];\n          }\n        }\n      } else if (\n        (this.fieldAttrsContain(fillFields.expMonth, \"mm\") ||\n          fillFields.expMonth.maxLength === 2) &&\n        expMonth.length === 1\n      ) {\n        expMonth = \"0\" + expMonth;\n      }\n\n      filledFields[fillFields.expMonth.opid] = fillFields.expMonth;\n      this.fillByOpid(fillScript, fillFields.expMonth, expMonth);\n    }\n\n    if (fillFields.expYear && this.hasValue(card.expYear)) {\n      let expYear: string = card.expYear;\n      if (fillFields.expYear.selectInfo && fillFields.expYear.selectInfo.options) {\n        for (let i = 0; i < fillFields.expYear.selectInfo.options.length; i++) {\n          const o: [string, string] = fillFields.expYear.selectInfo.options[i];\n          if (o[0] === card.expYear || o[1] === card.expYear) {\n            expYear = o[1];\n            break;\n          }\n          if (\n            o[1].length === 2 &&\n            card.expYear.length === 4 &&\n            o[1] === card.expYear.substring(2)\n          ) {\n            expYear = o[1];\n            break;\n          }\n          const colonIndex = o[1].indexOf(\":\");\n          if (colonIndex > -1 && o[1].length > colonIndex + 1) {\n            const val = o[1].substring(colonIndex + 2);\n            if (val != null && val.trim() !== \"\" && val === card.expYear) {\n              expYear = o[1];\n              break;\n            }\n          }\n        }\n      } else if (\n        this.fieldAttrsContain(fillFields.expYear, \"yyyy\") ||\n        fillFields.expYear.maxLength === 4\n      ) {\n        if (expYear.length === 2) {\n          expYear = \"20\" + expYear;\n        }\n      } else if (\n        this.fieldAttrsContain(fillFields.expYear, \"yy\") ||\n        fillFields.expYear.maxLength === 2\n      ) {\n        if (expYear.length === 4) {\n          expYear = expYear.substr(2);\n        }\n      }\n\n      filledFields[fillFields.expYear.opid] = fillFields.expYear;\n      this.fillByOpid(fillScript, fillFields.expYear, expYear);\n    }\n\n    if (fillFields.exp && this.hasValue(card.expMonth) && this.hasValue(card.expYear)) {\n      const fullMonth = (\"0\" + card.expMonth).slice(-2);\n\n      let fullYear: string = card.expYear;\n      let partYear: string = null;\n      if (fullYear.length === 2) {\n        partYear = fullYear;\n        fullYear = \"20\" + fullYear;\n      } else if (fullYear.length === 4) {\n        partYear = fullYear.substr(2, 2);\n      }\n\n      let exp: string = null;\n      for (let i = 0; i < CreditCardAutoFillConstants.MonthAbbr.length; i++) {\n        if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] +\n              \"/\" +\n              CreditCardAutoFillConstants.YearAbbrShort[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = fullMonth + \"/\" + partYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] +\n              \"/\" +\n              CreditCardAutoFillConstants.YearAbbrLong[i]\n          )\n        ) {\n          exp = fullMonth + \"/\" + fullYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrShort[i] +\n              \"/\" +\n              CreditCardAutoFillConstants.MonthAbbr[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = partYear + \"/\" + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrLong[i] +\n              \"/\" +\n              CreditCardAutoFillConstants.MonthAbbr[i]\n          )\n        ) {\n          exp = fullYear + \"/\" + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] +\n              \"-\" +\n              CreditCardAutoFillConstants.YearAbbrShort[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = fullMonth + \"-\" + partYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] +\n              \"-\" +\n              CreditCardAutoFillConstants.YearAbbrLong[i]\n          )\n        ) {\n          exp = fullMonth + \"-\" + fullYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrShort[i] +\n              \"-\" +\n              CreditCardAutoFillConstants.MonthAbbr[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = partYear + \"-\" + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrLong[i] +\n              \"-\" +\n              CreditCardAutoFillConstants.MonthAbbr[i]\n          )\n        ) {\n          exp = fullYear + \"-\" + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrShort[i] + CreditCardAutoFillConstants.MonthAbbr[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = partYear + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrLong[i] + CreditCardAutoFillConstants.MonthAbbr[i]\n          )\n        ) {\n          exp = fullYear + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] + CreditCardAutoFillConstants.YearAbbrShort[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = fullMonth + partYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] + CreditCardAutoFillConstants.YearAbbrLong[i]\n          )\n        ) {\n          exp = fullMonth + fullYear;\n        }\n\n        if (exp != null) {\n          break;\n        }\n      }\n\n      if (exp == null) {\n        exp = fullYear + \"-\" + fullMonth;\n      }\n\n      this.makeScriptActionWithValue(fillScript, exp, fillFields.exp, filledFields);\n    }\n\n    return fillScript;\n  }\n\n  private fieldAttrsContain(field: any, containsVal: string) {\n    if (!field) {\n      return false;\n    }\n\n    let doesContain = false;\n    CreditCardAutoFillConstants.CardAttributesExtended.forEach((attr) => {\n      // eslint-disable-next-line\n      if (doesContain || !field.hasOwnProperty(attr) || !field[attr]) {\n        return;\n      }\n\n      let val = field[attr];\n      val = val.replace(/ /g, \"\").toLowerCase();\n      doesContain = val.indexOf(containsVal) > -1;\n    });\n\n    return doesContain;\n  }\n\n  private generateIdentityFillScript(\n    fillScript: AutofillScript,\n    pageDetails: any,\n    filledFields: { [id: string]: AutofillField },\n    options: any\n  ): AutofillScript {\n    if (!options.cipher.identity) {\n      return null;\n    }\n\n    const fillFields: { [id: string]: AutofillField } = {};\n\n    pageDetails.fields.forEach((f: any) => {\n      if (this.forCustomFieldsOnly(f)) {\n        return;\n      }\n\n      if (this.isExcludedType(f.type, AutoFillConstants.ExcludedAutofillTypes)) {\n        return;\n      }\n\n      for (let i = 0; i < IdentityAutoFillConstants.IdentityAttributes.length; i++) {\n        const attr = IdentityAutoFillConstants.IdentityAttributes[i];\n        // eslint-disable-next-line\n        if (!f.hasOwnProperty(attr) || !f[attr] || !f.viewable) {\n          continue;\n        }\n\n        // ref https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill\n        // ref https://developers.google.com/web/fundamentals/design-and-ux/input/forms/\n        if (\n          !fillFields.name &&\n          this.isFieldMatch(\n            f[attr],\n            IdentityAutoFillConstants.FullNameFieldNames,\n            IdentityAutoFillConstants.FullNameFieldNameValues\n          )\n        ) {\n          fillFields.name = f;\n          break;\n        } else if (\n          !fillFields.firstName &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.FirstnameFieldNames)\n        ) {\n          fillFields.firstName = f;\n          break;\n        } else if (\n          !fillFields.middleName &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.MiddlenameFieldNames)\n        ) {\n          fillFields.middleName = f;\n          break;\n        } else if (\n          !fillFields.lastName &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.LastnameFieldNames)\n        ) {\n          fillFields.lastName = f;\n          break;\n        } else if (\n          !fillFields.title &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.TitleFieldNames)\n        ) {\n          fillFields.title = f;\n          break;\n        } else if (\n          !fillFields.email &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.EmailFieldNames)\n        ) {\n          fillFields.email = f;\n          break;\n        } else if (\n          !fillFields.address &&\n          this.isFieldMatch(\n            f[attr],\n            IdentityAutoFillConstants.AddressFieldNames,\n            IdentityAutoFillConstants.AddressFieldNameValues\n          )\n        ) {\n          fillFields.address = f;\n          break;\n        } else if (\n          !fillFields.address1 &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.Address1FieldNames)\n        ) {\n          fillFields.address1 = f;\n          break;\n        } else if (\n          !fillFields.address2 &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.Address2FieldNames)\n        ) {\n          fillFields.address2 = f;\n          break;\n        } else if (\n          !fillFields.address3 &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.Address3FieldNames)\n        ) {\n          fillFields.address3 = f;\n          break;\n        } else if (\n          !fillFields.postalCode &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.PostalCodeFieldNames)\n        ) {\n          fillFields.postalCode = f;\n          break;\n        } else if (\n          !fillFields.city &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.CityFieldNames)\n        ) {\n          fillFields.city = f;\n          break;\n        } else if (\n          !fillFields.state &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.StateFieldNames)\n        ) {\n          fillFields.state = f;\n          break;\n        } else if (\n          !fillFields.country &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.CountryFieldNames)\n        ) {\n          fillFields.country = f;\n          break;\n        } else if (\n          !fillFields.phone &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.PhoneFieldNames)\n        ) {\n          fillFields.phone = f;\n          break;\n        } else if (\n          !fillFields.username &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.UserNameFieldNames)\n        ) {\n          fillFields.username = f;\n          break;\n        } else if (\n          !fillFields.company &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.CompanyFieldNames)\n        ) {\n          fillFields.company = f;\n          break;\n        }\n      }\n    });\n\n    const identity = options.cipher.identity;\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"title\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"firstName\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"middleName\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"lastName\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"address1\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"address2\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"address3\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"city\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"postalCode\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"company\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"email\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"phone\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"username\");\n\n    let filledState = false;\n    if (fillFields.state && identity.state && identity.state.length > 2) {\n      const stateLower = identity.state.toLowerCase();\n      const isoState =\n        IdentityAutoFillConstants.IsoStates[stateLower] ||\n        IdentityAutoFillConstants.IsoProvinces[stateLower];\n      if (isoState) {\n        filledState = true;\n        this.makeScriptActionWithValue(fillScript, isoState, fillFields.state, filledFields);\n      }\n    }\n\n    if (!filledState) {\n      this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"state\");\n    }\n\n    let filledCountry = false;\n    if (fillFields.country && identity.country && identity.country.length > 2) {\n      const countryLower = identity.country.toLowerCase();\n      const isoCountry = IdentityAutoFillConstants.IsoCountries[countryLower];\n      if (isoCountry) {\n        filledCountry = true;\n        this.makeScriptActionWithValue(fillScript, isoCountry, fillFields.country, filledFields);\n      }\n    }\n\n    if (!filledCountry) {\n      this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"country\");\n    }\n\n    if (fillFields.name && (identity.firstName || identity.lastName)) {\n      let fullName = \"\";\n      if (this.hasValue(identity.firstName)) {\n        fullName = identity.firstName;\n      }\n      if (this.hasValue(identity.middleName)) {\n        if (fullName !== \"\") {\n          fullName += \" \";\n        }\n        fullName += identity.middleName;\n      }\n      if (this.hasValue(identity.lastName)) {\n        if (fullName !== \"\") {\n          fullName += \" \";\n        }\n        fullName += identity.lastName;\n      }\n\n      this.makeScriptActionWithValue(fillScript, fullName, fillFields.name, filledFields);\n    }\n\n    if (fillFields.address && this.hasValue(identity.address1)) {\n      let address = \"\";\n      if (this.hasValue(identity.address1)) {\n        address = identity.address1;\n      }\n      if (this.hasValue(identity.address2)) {\n        if (address !== \"\") {\n          address += \", \";\n        }\n        address += identity.address2;\n      }\n      if (this.hasValue(identity.address3)) {\n        if (address !== \"\") {\n          address += \", \";\n        }\n        address += identity.address3;\n      }\n\n      this.makeScriptActionWithValue(fillScript, address, fillFields.address, filledFields);\n    }\n\n    return fillScript;\n  }\n\n  private isExcludedType(type: string, excludedTypes: string[]) {\n    return excludedTypes.indexOf(type) > -1;\n  }\n\n  private isFieldMatch(value: string, options: string[], containsOptions?: string[]): boolean {\n    value = value\n      .trim()\n      .toLowerCase()\n      .replace(/[^a-zA-Z0-9]+/g, \"\");\n    for (let i = 0; i < options.length; i++) {\n      let option = options[i];\n      const checkValueContains = containsOptions == null || containsOptions.indexOf(option) > -1;\n      option = option.toLowerCase().replace(/-/g, \"\");\n      if (value === option || (checkValueContains && value.indexOf(option) > -1)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  private makeScriptAction(\n    fillScript: AutofillScript,\n    cipherData: any,\n    fillFields: { [id: string]: AutofillField },\n    filledFields: { [id: string]: AutofillField },\n    dataProp: string,\n    fieldProp?: string\n  ) {\n    fieldProp = fieldProp || dataProp;\n    this.makeScriptActionWithValue(\n      fillScript,\n      cipherData[dataProp],\n      fillFields[fieldProp],\n      filledFields\n    );\n  }\n\n  private makeScriptActionWithValue(\n    fillScript: AutofillScript,\n    dataValue: any,\n    field: AutofillField,\n    filledFields: { [id: string]: AutofillField }\n  ) {\n    let doFill = false;\n    if (this.hasValue(dataValue) && field) {\n      if (field.type === \"select-one\" && field.selectInfo && field.selectInfo.options) {\n        for (let i = 0; i < field.selectInfo.options.length; i++) {\n          const option = field.selectInfo.options[i];\n          for (let j = 0; j < option.length; j++) {\n            if (this.hasValue(option[j]) && option[j].toLowerCase() === dataValue.toLowerCase()) {\n              doFill = true;\n              if (option.length > 1) {\n                dataValue = option[1];\n              }\n              break;\n            }\n          }\n\n          if (doFill) {\n            break;\n          }\n        }\n      } else {\n        doFill = true;\n      }\n    }\n\n    if (doFill) {\n      filledFields[field.opid] = field;\n      this.fillByOpid(fillScript, field, dataValue);\n    }\n  }\n\n  private loadPasswordFields(\n    pageDetails: AutofillPageDetails,\n    canBeHidden: boolean,\n    canBeReadOnly: boolean,\n    mustBeEmpty: boolean,\n    fillNewPassword: boolean\n  ) {\n    const arr: AutofillField[] = [];\n    pageDetails.fields.forEach((f) => {\n      if (this.forCustomFieldsOnly(f)) {\n        return;\n      }\n\n      const isPassword = f.type === \"password\";\n      const valueIsLikePassword = (value: string) => {\n        if (value == null) {\n          return false;\n        }\n        // Removes all whitespace, _ and - characters\n        // eslint-disable-next-line\n        const cleanedValue = value.toLowerCase().replace(/[\\s_\\-]/g, \"\");\n\n        if (cleanedValue.indexOf(\"password\") < 0) {\n          return false;\n        }\n\n        if (AutoFillConstants.PasswordFieldIgnoreList.some((i) => cleanedValue.indexOf(i) > -1)) {\n          return false;\n        }\n\n        return true;\n      };\n      const isLikePassword = () => {\n        if (f.type !== \"text\") {\n          return false;\n        }\n        if (valueIsLikePassword(f.htmlID)) {\n          return true;\n        }\n        if (valueIsLikePassword(f.htmlName)) {\n          return true;\n        }\n        if (valueIsLikePassword(f.placeholder)) {\n          return true;\n        }\n        return false;\n      };\n      if (\n        !f.disabled &&\n        (canBeReadOnly || !f.readonly) &&\n        (isPassword || isLikePassword()) &&\n        (canBeHidden || f.viewable) &&\n        (!mustBeEmpty || f.value == null || f.value.trim() === \"\") &&\n        (fillNewPassword || f.autoCompleteType !== \"new-password\")\n      ) {\n        arr.push(f);\n      }\n    });\n    return arr;\n  }\n\n  private findUsernameField(\n    pageDetails: AutofillPageDetails,\n    passwordField: AutofillField,\n    canBeHidden: boolean,\n    canBeReadOnly: boolean,\n    withoutForm: boolean\n  ) {\n    let usernameField: AutofillField = null;\n    for (let i = 0; i < pageDetails.fields.length; i++) {\n      const f = pageDetails.fields[i];\n      if (this.forCustomFieldsOnly(f)) {\n        continue;\n      }\n\n      if (f.elementNumber >= passwordField.elementNumber) {\n        break;\n      }\n\n      if (\n        !f.disabled &&\n        (canBeReadOnly || !f.readonly) &&\n        (withoutForm || f.form === passwordField.form) &&\n        (canBeHidden || f.viewable) &&\n        (f.type === \"text\" || f.type === \"email\" || f.type === \"tel\")\n      ) {\n        usernameField = f;\n\n        if (this.findMatchingFieldIndex(f, AutoFillConstants.UsernameFieldNames) > -1) {\n          // We found an exact match. No need to keep looking.\n          break;\n        }\n      }\n    }\n\n    return usernameField;\n  }\n\n  private findMatchingFieldIndex(field: AutofillField, names: string[]): number {\n    for (let i = 0; i < names.length; i++) {\n      if (names[i].indexOf(\"=\") > -1) {\n        if (this.fieldPropertyIsPrefixMatch(field, \"htmlID\", names[i], \"id\")) {\n          return i;\n        }\n        if (this.fieldPropertyIsPrefixMatch(field, \"htmlName\", names[i], \"name\")) {\n          return i;\n        }\n        if (this.fieldPropertyIsPrefixMatch(field, \"label-tag\", names[i], \"label\")) {\n          return i;\n        }\n        if (this.fieldPropertyIsPrefixMatch(field, \"label-aria\", names[i], \"label\")) {\n          return i;\n        }\n        if (this.fieldPropertyIsPrefixMatch(field, \"placeholder\", names[i], \"placeholder\")) {\n          return i;\n        }\n      }\n\n      if (this.fieldPropertyIsMatch(field, \"htmlID\", names[i])) {\n        return i;\n      }\n      if (this.fieldPropertyIsMatch(field, \"htmlName\", names[i])) {\n        return i;\n      }\n      if (this.fieldPropertyIsMatch(field, \"label-tag\", names[i])) {\n        return i;\n      }\n      if (this.fieldPropertyIsMatch(field, \"label-aria\", names[i])) {\n        return i;\n      }\n      if (this.fieldPropertyIsMatch(field, \"placeholder\", names[i])) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  private fieldPropertyIsPrefixMatch(\n    field: any,\n    property: string,\n    name: string,\n    prefix: string,\n    separator = \"=\"\n  ): boolean {\n    if (name.indexOf(prefix + separator) === 0) {\n      const sepIndex = name.indexOf(separator);\n      const val = name.substring(sepIndex + 1);\n      return val != null && this.fieldPropertyIsMatch(field, property, val);\n    }\n    return false;\n  }\n\n  private fieldPropertyIsMatch(field: any, property: string, name: string): boolean {\n    let fieldVal = field[property] as string;\n    if (!this.hasValue(fieldVal)) {\n      return false;\n    }\n\n    fieldVal = fieldVal.trim().replace(/(?:\\r\\n|\\r|\\n)/g, \"\");\n    if (name.startsWith(\"regex=\")) {\n      try {\n        const regexParts = name.split(\"=\", 2);\n        if (regexParts.length === 2) {\n          const regex = new RegExp(regexParts[1], \"i\");\n          return regex.test(fieldVal);\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else if (name.startsWith(\"csv=\")) {\n      const csvParts = name.split(\"=\", 2);\n      if (csvParts.length === 2) {\n        const csvVals = csvParts[1].split(\",\");\n        for (let i = 0; i < csvVals.length; i++) {\n          const val = csvVals[i];\n          if (val != null && val.trim().toLowerCase() === fieldVal.toLowerCase()) {\n            return true;\n          }\n        }\n        return false;\n      }\n    }\n\n    return fieldVal.toLowerCase() === name;\n  }\n\n  private fieldIsFuzzyMatch(field: AutofillField, names: string[]): boolean {\n    if (this.hasValue(field.htmlID) && this.fuzzyMatch(names, field.htmlID)) {\n      return true;\n    }\n    if (this.hasValue(field.htmlName) && this.fuzzyMatch(names, field.htmlName)) {\n      return true;\n    }\n    if (this.hasValue(field[\"label-tag\"]) && this.fuzzyMatch(names, field[\"label-tag\"])) {\n      return true;\n    }\n    if (this.hasValue(field.placeholder) && this.fuzzyMatch(names, field.placeholder)) {\n      return true;\n    }\n    if (this.hasValue(field[\"label-left\"]) && this.fuzzyMatch(names, field[\"label-left\"])) {\n      return true;\n    }\n    if (this.hasValue(field[\"label-top\"]) && this.fuzzyMatch(names, field[\"label-top\"])) {\n      return true;\n    }\n    if (this.hasValue(field[\"label-aria\"]) && this.fuzzyMatch(names, field[\"label-aria\"])) {\n      return true;\n    }\n\n    return false;\n  }\n\n  private fuzzyMatch(options: string[], value: string): boolean {\n    if (options == null || options.length === 0 || value == null || value === \"\") {\n      return false;\n    }\n\n    value = value\n      .replace(/(?:\\r\\n|\\r|\\n)/g, \"\")\n      .trim()\n      .toLowerCase();\n\n    for (let i = 0; i < options.length; i++) {\n      if (value.indexOf(options[i]) > -1) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  private hasValue(str: string): boolean {\n    return str && str !== \"\";\n  }\n\n  private setFillScriptForFocus(\n    filledFields: { [id: string]: AutofillField },\n    fillScript: AutofillScript\n  ): AutofillScript {\n    let lastField: AutofillField = null;\n    let lastPasswordField: AutofillField = null;\n\n    for (const opid in filledFields) {\n      // eslint-disable-next-line\n      if (filledFields.hasOwnProperty(opid) && filledFields[opid].viewable) {\n        lastField = filledFields[opid];\n\n        if (filledFields[opid].type === \"password\") {\n          lastPasswordField = filledFields[opid];\n        }\n      }\n    }\n\n    // Prioritize password field over others.\n    if (lastPasswordField) {\n      fillScript.script.push([\"focus_by_opid\", lastPasswordField.opid]);\n    } else if (lastField) {\n      fillScript.script.push([\"focus_by_opid\", lastField.opid]);\n    }\n\n    return fillScript;\n  }\n\n  private fillByOpid(fillScript: AutofillScript, field: AutofillField, value: string): void {\n    if (field.maxLength && value && value.length > field.maxLength) {\n      value = value.substr(0, value.length);\n    }\n    if (field.tagName !== \"span\") {\n      fillScript.script.push([\"click_on_opid\", field.opid]);\n      fillScript.script.push([\"focus_by_opid\", field.opid]);\n    }\n    fillScript.script.push([\"fill_by_opid\", field.opid, value]);\n  }\n\n  private forCustomFieldsOnly(field: AutofillField): boolean {\n    return field.tagName === \"span\";\n  }\n}\n","import { KeySuffixOptions } from \"@bitwarden/common/enums/keySuffixOptions\";\nimport { CryptoService } from \"@bitwarden/common/services/crypto.service\";\n\nexport class BrowserCryptoService extends CryptoService {\n  protected async retrieveKeyFromStorage(keySuffix: KeySuffixOptions) {\n    if (keySuffix === \"biometric\") {\n      await this.platformUtilService.authenticateBiometric();\n      return (await this.getKey())?.keyB64;\n    }\n\n    return await super.retrieveKeyFromStorage(keySuffix);\n  }\n}\n","export enum ClientType {\n  Web = \"web\",\n  Browser = \"browser\",\n  Desktop = \"desktop\",\n  Mobile = \"mobile\",\n  Cli = \"cli\",\n  DirectoryConnector = \"connector\",\n}\n","import { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\n\nexport default abstract class AbstractChromeStorageService implements AbstractStorageService {\n  protected abstract chromeStorageApi: any;\n\n  async get<T>(key: string): Promise<T> {\n    return new Promise((resolve) => {\n      this.chromeStorageApi.get(key, (obj: any) => {\n        if (obj != null && obj[key] != null) {\n          resolve(obj[key] as T);\n          return;\n        }\n        resolve(null);\n      });\n    });\n  }\n\n  async has(key: string): Promise<boolean> {\n    return (await this.get(key)) != null;\n  }\n\n  async save(key: string, obj: any): Promise<void> {\n    if (obj == null) {\n      // Fix safari not liking null in set\n      return new Promise<void>((resolve) => {\n        this.chromeStorageApi.remove(key, () => {\n          resolve();\n        });\n      });\n    }\n\n    if (obj instanceof Set) {\n      obj = Array.from(obj);\n    }\n\n    const keyedObj = { [key]: obj };\n    return new Promise<void>((resolve) => {\n      this.chromeStorageApi.set(keyedObj, () => {\n        resolve();\n      });\n    });\n  }\n\n  async remove(key: string): Promise<void> {\n    return new Promise<void>((resolve) => {\n      this.chromeStorageApi.remove(key, () => {\n        resolve();\n      });\n    });\n  }\n}\n","import AbstractChromeStorageService from \"./abstractChromeStorageApi.service\";\n\nexport default class BrowserLocalStorageService extends AbstractChromeStorageService {\n  protected chromeStorageApi: any = chrome.storage.local;\n}\n","import { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\n\nexport default class BrowserMessagingService implements MessagingService {\n  send(subscriber: string, arg: any = {}) {\n    const message = Object.assign({}, { command: subscriber }, arg);\n    chrome.runtime.sendMessage(message);\n  }\n}\n","import { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\n\nexport default class BrowserMessagingPrivateModeBackgroundService implements MessagingService {\n  send(subscriber: string, arg: any = {}) {\n    const message = Object.assign({}, { command: subscriber }, arg);\n    (window as any).bitwardenPopupMainMessageListener(message);\n  }\n}\n","import { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ClientType } from \"@bitwarden/common/enums/clientType\";\nimport { DeviceType } from \"@bitwarden/common/enums/deviceType\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { SafariApp } from \"../browser/safariApp\";\nimport { StateService } from \"../services/abstractions/state.service\";\n\nconst DialogPromiseExpiration = 600000; // 10 minutes\n\nexport default class BrowserPlatformUtilsService implements PlatformUtilsService {\n  private showDialogResolves = new Map<number, { resolve: (value: boolean) => void; date: Date }>();\n  private passwordDialogResolves = new Map<\n    number,\n    { tryResolve: (canceled: boolean, password: string) => Promise<boolean>; date: Date }\n  >();\n  private deviceCache: DeviceType = null;\n\n  constructor(\n    private messagingService: MessagingService,\n    private stateService: StateService,\n    private clipboardWriteCallback: (clipboardValue: string, clearMs: number) => void,\n    private biometricCallback: () => Promise<boolean>\n  ) {}\n\n  getDevice(): DeviceType {\n    if (this.deviceCache) {\n      return this.deviceCache;\n    }\n\n    if (\n      navigator.userAgent.indexOf(\" Firefox/\") !== -1 ||\n      navigator.userAgent.indexOf(\" Gecko/\") !== -1\n    ) {\n      this.deviceCache = DeviceType.FirefoxExtension;\n    } else if (\n      (!!(window as any).opr && !!opr.addons) ||\n      !!(window as any).opera ||\n      navigator.userAgent.indexOf(\" OPR/\") >= 0\n    ) {\n      this.deviceCache = DeviceType.OperaExtension;\n    } else if (navigator.userAgent.indexOf(\" Edg/\") !== -1) {\n      this.deviceCache = DeviceType.EdgeExtension;\n    } else if (navigator.userAgent.indexOf(\" Vivaldi/\") !== -1) {\n      this.deviceCache = DeviceType.VivaldiExtension;\n    } else if ((window as any).chrome && navigator.userAgent.indexOf(\" Chrome/\") !== -1) {\n      this.deviceCache = DeviceType.ChromeExtension;\n    } else if (navigator.userAgent.indexOf(\" Safari/\") !== -1) {\n      this.deviceCache = DeviceType.SafariExtension;\n    }\n\n    return this.deviceCache;\n  }\n\n  getDeviceString(): string {\n    const device = DeviceType[this.getDevice()].toLowerCase();\n    return device.replace(\"extension\", \"\");\n  }\n\n  getClientType(): ClientType {\n    return ClientType.Browser;\n  }\n\n  isFirefox(): boolean {\n    return this.getDevice() === DeviceType.FirefoxExtension;\n  }\n\n  isChrome(): boolean {\n    return this.getDevice() === DeviceType.ChromeExtension;\n  }\n\n  isEdge(): boolean {\n    return this.getDevice() === DeviceType.EdgeExtension;\n  }\n\n  isOpera(): boolean {\n    return this.getDevice() === DeviceType.OperaExtension;\n  }\n\n  isVivaldi(): boolean {\n    return this.getDevice() === DeviceType.VivaldiExtension;\n  }\n\n  isSafari(): boolean {\n    return this.getDevice() === DeviceType.SafariExtension;\n  }\n\n  isIE(): boolean {\n    return false;\n  }\n\n  isMacAppStore(): boolean {\n    return false;\n  }\n\n  async isViewOpen(): Promise<boolean> {\n    if (await BrowserApi.isPopupOpen()) {\n      return true;\n    }\n\n    if (this.isSafari()) {\n      return false;\n    }\n\n    const sidebarView = this.sidebarViewName();\n    const sidebarOpen =\n      sidebarView != null && chrome.extension.getViews({ type: sidebarView }).length > 0;\n    if (sidebarOpen) {\n      return true;\n    }\n\n    const tabOpen = chrome.extension.getViews({ type: \"tab\" }).length > 0;\n    return tabOpen;\n  }\n\n  lockTimeout(): number {\n    return null;\n  }\n\n  launchUri(uri: string, options?: any): void {\n    BrowserApi.createNewTab(uri, options && options.extensionPage === true);\n  }\n\n  getApplicationVersion(): Promise<string> {\n    return Promise.resolve(BrowserApi.getApplicationVersion());\n  }\n\n  supportsWebAuthn(win: Window): boolean {\n    return typeof PublicKeyCredential !== \"undefined\";\n  }\n\n  supportsDuo(): boolean {\n    return true;\n  }\n\n  showToast(\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: any\n  ): void {\n    this.messagingService.send(\"showToast\", {\n      text: text,\n      title: title,\n      type: type,\n      options: options,\n    });\n  }\n\n  showDialog(\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml = false\n  ) {\n    const dialogId = Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);\n    this.messagingService.send(\"showDialog\", {\n      text: bodyIsHtml ? null : body,\n      html: bodyIsHtml ? body : null,\n      title: title,\n      confirmText: confirmText,\n      cancelText: cancelText,\n      type: type,\n      dialogId: dialogId,\n    });\n    return new Promise<boolean>((resolve) => {\n      this.showDialogResolves.set(dialogId, { resolve: resolve, date: new Date() });\n    });\n  }\n\n  isDev(): boolean {\n    return process.env.ENV === \"development\";\n  }\n\n  isSelfHost(): boolean {\n    return false;\n  }\n\n  copyToClipboard(text: string, options?: any): void {\n    let win = window;\n    let doc = window.document;\n    if (options && (options.window || options.win)) {\n      win = options.window || options.win;\n      doc = win.document;\n    } else if (options && options.doc) {\n      doc = options.doc;\n    }\n    const clearing = options ? !!options.clearing : false;\n    const clearMs: number = options && options.clearMs ? options.clearMs : null;\n\n    if (this.isSafari()) {\n      SafariApp.sendMessageToApp(\"copyToClipboard\", text).then(() => {\n        if (!clearing && this.clipboardWriteCallback != null) {\n          this.clipboardWriteCallback(text, clearMs);\n        }\n      });\n    } else if (\n      this.isFirefox() &&\n      (win as any).navigator.clipboard &&\n      (win as any).navigator.clipboard.writeText\n    ) {\n      (win as any).navigator.clipboard.writeText(text).then(() => {\n        if (!clearing && this.clipboardWriteCallback != null) {\n          this.clipboardWriteCallback(text, clearMs);\n        }\n      });\n    } else if ((win as any).clipboardData && (win as any).clipboardData.setData) {\n      // IE specific code path to prevent textarea being shown while dialog is visible.\n      (win as any).clipboardData.setData(\"Text\", text);\n      if (!clearing && this.clipboardWriteCallback != null) {\n        this.clipboardWriteCallback(text, clearMs);\n      }\n    } else if (doc.queryCommandSupported && doc.queryCommandSupported(\"copy\")) {\n      if (this.isChrome() && text === \"\") {\n        text = \"\\u0000\";\n      }\n\n      const textarea = doc.createElement(\"textarea\");\n      textarea.textContent = text == null || text === \"\" ? \" \" : text;\n      // Prevent scrolling to bottom of page in MS Edge.\n      textarea.style.position = \"fixed\";\n      doc.body.appendChild(textarea);\n      textarea.select();\n\n      try {\n        // Security exception may be thrown by some browsers.\n        if (doc.execCommand(\"copy\") && !clearing && this.clipboardWriteCallback != null) {\n          this.clipboardWriteCallback(text, clearMs);\n        }\n      } catch (e) {\n        // eslint-disable-next-line\n        console.warn(\"Copy to clipboard failed.\", e);\n      } finally {\n        doc.body.removeChild(textarea);\n      }\n    }\n  }\n\n  async readFromClipboard(options?: any): Promise<string> {\n    let win = window;\n    let doc = window.document;\n    if (options && (options.window || options.win)) {\n      win = options.window || options.win;\n      doc = win.document;\n    } else if (options && options.doc) {\n      doc = options.doc;\n    }\n\n    if (this.isSafari()) {\n      return await SafariApp.sendMessageToApp(\"readFromClipboard\");\n    } else if (\n      this.isFirefox() &&\n      (win as any).navigator.clipboard &&\n      (win as any).navigator.clipboard.readText\n    ) {\n      return await (win as any).navigator.clipboard.readText();\n    } else if (doc.queryCommandSupported && doc.queryCommandSupported(\"paste\")) {\n      const textarea = doc.createElement(\"textarea\");\n      // Prevent scrolling to bottom of page in MS Edge.\n      textarea.style.position = \"fixed\";\n      doc.body.appendChild(textarea);\n      textarea.focus();\n      try {\n        // Security exception may be thrown by some browsers.\n        if (doc.execCommand(\"paste\")) {\n          return textarea.value;\n        }\n      } catch (e) {\n        // eslint-disable-next-line\n        console.warn(\"Read from clipboard failed.\", e);\n      } finally {\n        doc.body.removeChild(textarea);\n      }\n    }\n    return null;\n  }\n\n  resolveDialogPromise(dialogId: number, confirmed: boolean) {\n    if (this.showDialogResolves.has(dialogId)) {\n      const resolveObj = this.showDialogResolves.get(dialogId);\n      resolveObj.resolve(confirmed);\n      this.showDialogResolves.delete(dialogId);\n    }\n\n    // Clean up old promises\n    this.showDialogResolves.forEach((val, key) => {\n      const age = new Date().getTime() - val.date.getTime();\n      if (age > DialogPromiseExpiration) {\n        this.showDialogResolves.delete(key);\n      }\n    });\n  }\n\n  async resolvePasswordDialogPromise(\n    dialogId: number,\n    canceled: boolean,\n    password: string\n  ): Promise<boolean> {\n    let result = false;\n    if (this.passwordDialogResolves.has(dialogId)) {\n      const resolveObj = this.passwordDialogResolves.get(dialogId);\n      if (await resolveObj.tryResolve(canceled, password)) {\n        this.passwordDialogResolves.delete(dialogId);\n        result = true;\n      }\n    }\n\n    // Clean up old promises\n    this.passwordDialogResolves.forEach((val, key) => {\n      const age = new Date().getTime() - val.date.getTime();\n      if (age > DialogPromiseExpiration) {\n        this.passwordDialogResolves.delete(key);\n      }\n    });\n\n    return result;\n  }\n\n  async supportsBiometric() {\n    const platformInfo = await BrowserApi.getPlatformInfo();\n    if (platformInfo.os === \"android\") {\n      return false;\n    }\n\n    if (this.isFirefox()) {\n      return parseInt((await browser.runtime.getBrowserInfo()).version.split(\".\")[0], 10) >= 87;\n    }\n\n    return true;\n  }\n\n  authenticateBiometric() {\n    return this.biometricCallback();\n  }\n\n  sidebarViewName(): string {\n    if ((window as any).chrome.sidebarAction && this.isFirefox()) {\n      return \"sidebar\";\n    } else if (this.isOpera() && typeof opr !== \"undefined\" && opr.sidebarAction) {\n      return \"sidebar_panel\";\n    }\n\n    return null;\n  }\n\n  supportsSecureStorage(): boolean {\n    return false;\n  }\n}\n","import { I18nService as BaseI18nService } from \"@bitwarden/common/services/i18n.service\";\n\nexport default class I18nService extends BaseI18nService {\n  constructor(systemLanguage: string) {\n    super(systemLanguage, null, async (formattedLocale: string) => {\n      // Deprecated\n      const file = await fetch(this.localesDirectory + formattedLocale + \"/messages.json\");\n      return await file.json();\n    });\n\n    // Please leave 'en' where it is, as it's our fallback language in case no translation can be found\n    this.supportedTranslationLocales = [\n      \"en\",\n      \"az\",\n      \"be\",\n      \"bg\",\n      \"bn\",\n      \"bs\",\n      \"ca\",\n      \"cs\",\n      \"da\",\n      \"de\",\n      \"el\",\n      \"en-GB\",\n      \"en-IN\",\n      \"es\",\n      \"et\",\n      \"fa\",\n      \"fi\",\n      \"fil\",\n      \"fr\",\n      \"he\",\n      \"hi\",\n      \"hr\",\n      \"hu\",\n      \"id\",\n      \"it\",\n      \"ja\",\n      \"ka\",\n      \"km\",\n      \"kn\",\n      \"ko\",\n      \"lt\",\n      \"lv\",\n      \"ml\",\n      \"nb\",\n      \"nl\",\n      \"nn\",\n      \"pl\",\n      \"pt-BR\",\n      \"pt-PT\",\n      \"ro\",\n      \"ru\",\n      \"si\",\n      \"sk\",\n      \"sl\",\n      \"sr\",\n      \"sv\",\n      \"th\",\n      \"tr\",\n      \"uk\",\n      \"vi\",\n      \"zh-CN\",\n      \"zh-TW\",\n    ];\n  }\n\n  t(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.translate(id, p1, p2, p3);\n  }\n\n  translate(id: string, p1?: string, p2?: string, p3?: string): string {\n    if (this.localesDirectory == null) {\n      const placeholders: string[] = [];\n      if (p1 != null) {\n        placeholders.push(p1);\n      }\n      if (p2 != null) {\n        placeholders.push(p2);\n      }\n      if (p3 != null) {\n        placeholders.push(p3);\n      }\n\n      if (placeholders.length) {\n        return chrome.i18n.getMessage(id, placeholders);\n      } else {\n        return chrome.i18n.getMessage(id);\n      }\n    }\n\n    return super.translate(id, p1, p2, p3);\n  }\n}\n","import { Observable, ReplaySubject } from \"rxjs\";\n\nimport { I18nService as I18nServiceAbstraction } from \"../abstractions/i18n.service\";\n\nexport class I18nService implements I18nServiceAbstraction {\n  private _locale = new ReplaySubject<string>(1);\n  locale$: Observable<string> = this._locale.asObservable();\n  // First locale is the default (English)\n  supportedTranslationLocales: string[] = [\"en\"];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames = new Map<string, string>([\n    [\"af\", \"Afrikaans\"],\n    [\"az\", \"Azərbaycanca\"],\n    [\"be\", \"Беларуская\"],\n    [\"bg\", \"български\"],\n    [\"bn\", \"বাংলা\"],\n    [\"bs\", \"bosanski jezik\"],\n    [\"ca\", \"català\"],\n    [\"cs\", \"čeština\"],\n    [\"da\", \"dansk\"],\n    [\"de\", \"Deutsch\"],\n    [\"el\", \"Ελληνικά\"],\n    [\"en\", \"English\"],\n    [\"en-GB\", \"English (British)\"],\n    [\"en-IN\", \"English (India)\"],\n    [\"eo\", \"Esperanto\"],\n    [\"es\", \"español\"],\n    [\"et\", \"eesti\"],\n    [\"fa\", \"فارسی\"],\n    [\"fi\", \"suomi\"],\n    [\"fil\", \"Wikang Filipino\"],\n    [\"fr\", \"français\"],\n    [\"he\", \"עברית\"],\n    [\"hi\", \"हिन्दी\"],\n    [\"hr\", \"hrvatski\"],\n    [\"hu\", \"magyar\"],\n    [\"id\", \"Bahasa Indonesia\"],\n    [\"it\", \"italiano\"],\n    [\"ja\", \"日本語\"],\n    [\"ka\", \"ქართული\"],\n    [\"km\", \"ខ្មែរ, ខេមរភាសា, ភាសាខ្មែរ\"],\n    [\"kn\", \"ಕನ್ನಡ\"],\n    [\"ko\", \"한국어\"],\n    [\"lt\", \"lietuvių kalba\"],\n    [\"lv\", \"Latvietis\"],\n    [\"me\", \"црногорски\"],\n    [\"ml\", \"മലയാളം\"],\n    [\"nb\", \"norsk (bokmål)\"],\n    [\"nl\", \"Nederlands\"],\n    [\"nn\", \"Norsk Nynorsk\"],\n    [\"pl\", \"polski\"],\n    [\"pt-BR\", \"português do Brasil\"],\n    [\"pt-PT\", \"português\"],\n    [\"ro\", \"română\"],\n    [\"ru\", \"русский\"],\n    [\"si\", \"සිංහල\"],\n    [\"sk\", \"slovenčina\"],\n    [\"sl\", \"Slovenski jezik, Slovenščina\"],\n    [\"sr\", \"Српски\"],\n    [\"sv\", \"svenska\"],\n    [\"th\", \"ไทย\"],\n    [\"tr\", \"Türkçe\"],\n    [\"uk\", \"українська\"],\n    [\"vi\", \"Tiếng Việt\"],\n    [\"zh-CN\", \"中文（中国大陆）\"],\n    [\"zh-TW\", \"中文（台灣）\"],\n  ]);\n\n  protected inited: boolean;\n  protected defaultMessages: any = {};\n  protected localeMessages: any = {};\n\n  constructor(\n    protected systemLanguage: string,\n    protected localesDirectory: string,\n    protected getLocalesJson: (formattedLocale: string) => Promise<any>\n  ) {\n    this.systemLanguage = systemLanguage.replace(\"_\", \"-\");\n  }\n\n  async init(locale?: string) {\n    if (this.inited) {\n      throw new Error(\"i18n already initialized.\");\n    }\n    if (this.supportedTranslationLocales == null || this.supportedTranslationLocales.length === 0) {\n      throw new Error(\"supportedTranslationLocales not set.\");\n    }\n\n    this.inited = true;\n    this.translationLocale = locale != null ? locale : this.systemLanguage;\n    this._locale.next(this.translationLocale);\n\n    try {\n      this.collator = new Intl.Collator(this.translationLocale, {\n        numeric: true,\n        sensitivity: \"base\",\n      });\n    } catch {\n      this.collator = null;\n    }\n\n    if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n      this.translationLocale = this.translationLocale.slice(0, 2);\n\n      if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n        this.translationLocale = this.supportedTranslationLocales[0];\n      }\n    }\n\n    if (this.localesDirectory != null) {\n      await this.loadMessages(this.translationLocale, this.localeMessages);\n      if (this.translationLocale !== this.supportedTranslationLocales[0]) {\n        await this.loadMessages(this.supportedTranslationLocales[0], this.defaultMessages);\n      }\n    }\n  }\n\n  t(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.translate(id, p1, p2, p3);\n  }\n\n  translate(id: string, p1?: string, p2?: string, p3?: string): string {\n    let result: string;\n    // eslint-disable-next-line\n    if (this.localeMessages.hasOwnProperty(id) && this.localeMessages[id]) {\n      result = this.localeMessages[id];\n      // eslint-disable-next-line\n    } else if (this.defaultMessages.hasOwnProperty(id) && this.defaultMessages[id]) {\n      result = this.defaultMessages[id];\n    } else {\n      result = \"\";\n    }\n\n    if (result !== \"\") {\n      if (p1 != null) {\n        result = result.split(\"__$1__\").join(p1);\n      }\n      if (p2 != null) {\n        result = result.split(\"__$2__\").join(p2);\n      }\n      if (p3 != null) {\n        result = result.split(\"__$3__\").join(p3);\n      }\n    }\n\n    return result;\n  }\n\n  private async loadMessages(locale: string, messagesObj: any): Promise<any> {\n    const formattedLocale = locale.replace(\"-\", \"_\");\n    const locales = await this.getLocalesJson(formattedLocale);\n    for (const prop in locales) {\n      // eslint-disable-next-line\n      if (!locales.hasOwnProperty(prop)) {\n        continue;\n      }\n      messagesObj[prop] = locales[prop].message;\n\n      if (locales[prop].placeholders) {\n        for (const placeProp in locales[prop].placeholders) {\n          if (\n            !locales[prop].placeholders.hasOwnProperty(placeProp) || // eslint-disable-line\n            !locales[prop].placeholders[placeProp].content\n          ) {\n            continue;\n          }\n\n          const replaceToken = \"\\\\$\" + placeProp.toUpperCase() + \"\\\\$\";\n          let replaceContent = locales[prop].placeholders[placeProp].content;\n          if (replaceContent === \"$1\" || replaceContent === \"$2\" || replaceContent === \"$3\") {\n            replaceContent = \"__$\" + replaceContent + \"__\";\n          }\n          messagesObj[prop] = messagesObj[prop].replace(\n            new RegExp(replaceToken, \"g\"),\n            replaceContent\n          );\n        }\n      }\n    }\n  }\n}\n","import { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\n\nimport { AbstractKeyGenerationService } from \"./abstractions/abstractKeyGeneration.service\";\n\nexport class KeyGenerationService implements AbstractKeyGenerationService {\n  constructor(private cryptoFunctionService: CryptoFunctionService) {}\n\n  async makeEphemeralKey(numBytes = 16): Promise<SymmetricCryptoKey> {\n    const keyMaterial = await this.cryptoFunctionService.randomBytes(numBytes);\n    const key = await this.cryptoFunctionService.hkdf(\n      keyMaterial,\n      \"bitwarden-ephemeral\",\n      \"ephemeral\",\n      64,\n      \"sha256\"\n    );\n    return new SymmetricCryptoKey(key);\n  }\n}\n","import AbstractChromeStorageService from \"./abstractChromeStorageApi.service\";\n\nexport default class BrowserMemoryStorageService extends AbstractChromeStorageService {\n  protected chromeStorageApi: any = (chrome.storage as any).session;\n}\n","import { AbstractEncryptService } from \"@bitwarden/common/abstractions/abstractEncrypt.service\";\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\n\nimport { AbstractKeyGenerationService } from \"./abstractions/abstractKeyGeneration.service\";\nimport BrowserLocalStorageService from \"./browserLocalStorage.service\";\nimport BrowserMemoryStorageService from \"./browserMemoryStorage.service\";\n\nconst keys = {\n  encKey: \"localEncryptionKey\",\n  sessionKey: \"session\",\n};\n\nexport class LocalBackedSessionStorageService extends AbstractStorageService {\n  private cache = new Map<string, any>();\n  private localStorage = new BrowserLocalStorageService();\n  private sessionStorage = new BrowserMemoryStorageService();\n\n  constructor(\n    private encryptService: AbstractEncryptService,\n    private keyGenerationService: AbstractKeyGenerationService\n  ) {\n    super();\n  }\n\n  async get<T>(key: string): Promise<T> {\n    if (this.cache.has(key)) {\n      return this.cache.get(key);\n    }\n\n    const session = await this.getLocalSession(await this.getSessionEncKey());\n    if (session == null || !Object.keys(session).includes(key)) {\n      return null;\n    }\n\n    this.cache.set(key, session[key]);\n    return this.cache.get(key);\n  }\n\n  async has(key: string): Promise<boolean> {\n    return (await this.get(key)) != null;\n  }\n\n  async save(key: string, obj: any): Promise<void> {\n    if (obj == null) {\n      this.cache.delete(key);\n    } else {\n      this.cache.set(key, obj);\n    }\n\n    const sessionEncKey = await this.getSessionEncKey();\n    const localSession = (await this.getLocalSession(sessionEncKey)) ?? {};\n    localSession[key] = obj;\n    await this.setLocalSession(localSession, sessionEncKey);\n  }\n\n  async remove(key: string): Promise<void> {\n    await this.save(key, null);\n  }\n\n  async getLocalSession(encKey: SymmetricCryptoKey): Promise<any> {\n    const local = await this.localStorage.get<string>(keys.sessionKey);\n\n    if (local == null) {\n      return null;\n    }\n\n    const sessionJson = await this.encryptService.decryptToUtf8(new EncString(local), encKey);\n    if (sessionJson == null) {\n      // Error with decryption -- session is lost, delete state and key and start over\n      await this.setSessionEncKey(null);\n      await this.localStorage.remove(keys.sessionKey);\n      return null;\n    }\n    return JSON.parse(sessionJson);\n  }\n\n  async setLocalSession(session: any, key: SymmetricCryptoKey) {\n    const jsonSession = JSON.stringify(session);\n    const encSession = await this.encryptService.encrypt(jsonSession, key);\n\n    if (encSession == null) {\n      return await this.localStorage.remove(keys.sessionKey);\n    }\n    await this.localStorage.save(keys.sessionKey, encSession.encryptedString);\n  }\n\n  async getSessionEncKey(): Promise<SymmetricCryptoKey> {\n    let storedKey = (await this.sessionStorage.get(keys.encKey)) as SymmetricCryptoKey;\n    if (storedKey == null || Object.keys(storedKey).length == 0) {\n      storedKey = await this.keyGenerationService.makeEphemeralKey();\n      await this.setSessionEncKey(storedKey);\n    }\n    return SymmetricCryptoKey.initFromJson(\n      Object.create(SymmetricCryptoKey.prototype, Object.getOwnPropertyDescriptors(storedKey))\n    );\n  }\n\n  async setSessionEncKey(input: SymmetricCryptoKey): Promise<void> {\n    if (input == null) {\n      await this.sessionStorage.remove(keys.encKey);\n    } else {\n      await this.sessionStorage.save(keys.encKey, input);\n    }\n  }\n}\n","import { GlobalState } from \"@bitwarden/common/models/domain/globalState\";\nimport { StorageOptions } from \"@bitwarden/common/models/domain/storageOptions\";\nimport {\n  StateService as BaseStateService,\n  withPrototype,\n} from \"@bitwarden/common/services/state.service\";\n\nimport { Account } from \"../models/account\";\nimport { BrowserComponentState } from \"../models/browserComponentState\";\nimport { BrowserGroupingsComponentState } from \"../models/browserGroupingsComponentState\";\nimport { BrowserSendComponentState } from \"../models/browserSendComponentState\";\n\nimport { StateService as StateServiceAbstraction } from \"./abstractions/state.service\";\n\nexport class StateService\n  extends BaseStateService<GlobalState, Account>\n  implements StateServiceAbstraction\n{\n  async addAccount(account: Account) {\n    // Apply browser overrides to default account values\n    account = new Account(account);\n    await super.addAccount(account);\n  }\n\n  async getIsAuthenticated(options?: StorageOptions): Promise<boolean> {\n    // Firefox Private Mode can clash with non-Private Mode because they both read from the same onDiskOptions\n    // Check that there is an account in memory before considering the user authenticated\n    return (\n      (await super.getIsAuthenticated(options)) &&\n      (await this.getAccount(await this.defaultInMemoryOptions())) != null\n    );\n  }\n\n  @withPrototype(BrowserGroupingsComponentState)\n  async getBrowserGroupingComponentState(\n    options?: StorageOptions\n  ): Promise<BrowserGroupingsComponentState> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.groupings;\n  }\n\n  async setBrowserGroupingComponentState(\n    value: BrowserGroupingsComponentState,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.groupings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototype(BrowserComponentState)\n  async getBrowserCipherComponentState(options?: StorageOptions): Promise<BrowserComponentState> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.ciphers;\n  }\n\n  async setBrowserCipherComponentState(\n    value: BrowserComponentState,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.ciphers = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototype(BrowserSendComponentState)\n  async getBrowserSendComponentState(options?: StorageOptions): Promise<BrowserSendComponentState> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.send;\n  }\n\n  async setBrowserSendComponentState(\n    value: BrowserSendComponentState,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.send = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototype(BrowserComponentState)\n  async getBrowserSendTypeComponentState(options?: StorageOptions): Promise<BrowserComponentState> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.sendType;\n  }\n\n  async setBrowserSendTypeComponentState(\n    value: BrowserComponentState,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.sendType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n}\n","import { VaultTimeoutService as BaseVaultTimeoutService } from \"@bitwarden/common/services/vaultTimeout.service\";\n\nimport { SafariApp } from \"../browser/safariApp\";\n\nexport default class VaultTimeoutService extends BaseVaultTimeoutService {\n  startCheck() {\n    this.checkVaultTimeout();\n    if (this.platformUtilsService.isSafari()) {\n      this.checkSafari();\n    } else {\n      setInterval(() => this.checkVaultTimeout(), 10 * 1000); // check every 10 seconds\n    }\n  }\n\n  // This is a work-around to safari adding an arbitary delay to setTimeout and\n  //  setIntervals. It works by calling the native extension which sleeps for 10s,\n  //  efficiently replicating setInterval.\n  async checkSafari() {\n    // eslint-disable-next-line\n    while (true) {\n      try {\n        await SafariApp.sendMessageToApp(\"sleep\");\n        this.checkVaultTimeout();\n      } catch (e) {\n        // eslint-disable-next-line\n        console.log(\"Exception Safari VaultTimeout\", e);\n      }\n    }\n  }\n}\n","import { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\n\nimport MainBackground from \"./main.background\";\nimport LockedVaultPendingNotificationsItem from \"./models/lockedVaultPendingNotificationsItem\";\n\nexport default class CommandsBackground {\n  private isSafari: boolean;\n  private isVivaldi: boolean;\n\n  constructor(\n    private main: MainBackground,\n    private passwordGenerationService: PasswordGenerationService,\n    private platformUtilsService: PlatformUtilsService,\n    private vaultTimeoutService: VaultTimeoutService,\n    private authService: AuthService\n  ) {\n    this.isSafari = this.platformUtilsService.isSafari();\n    this.isVivaldi = this.platformUtilsService.isVivaldi();\n  }\n\n  async init() {\n    BrowserApi.messageListener(\n      \"commands.background\",\n      async (msg: any, sender: chrome.runtime.MessageSender, sendResponse: any) => {\n        if (msg.command === \"unlockCompleted\" && msg.data.target === \"commands.background\") {\n          await this.processCommand(\n            msg.data.commandToRetry.msg.command,\n            msg.data.commandToRetry.sender\n          );\n        }\n\n        if (this.isVivaldi && msg.command === \"keyboardShortcutTriggered\" && msg.shortcut) {\n          await this.processCommand(msg.shortcut, sender);\n        }\n      }\n    );\n\n    if (!this.isVivaldi && chrome && chrome.commands) {\n      chrome.commands.onCommand.addListener(async (command: string) => {\n        await this.processCommand(command);\n      });\n    }\n  }\n\n  private async processCommand(command: string, sender?: chrome.runtime.MessageSender) {\n    switch (command) {\n      case \"generate_password\":\n        await this.generatePasswordToClipboard();\n        break;\n      case \"autofill_login\":\n        await this.autoFillLogin(sender ? sender.tab : null);\n        break;\n      case \"open_popup\":\n        await this.openPopup();\n        break;\n      case \"lock_vault\":\n        await this.vaultTimeoutService.lock(true);\n        break;\n      default:\n        break;\n    }\n  }\n\n  private async generatePasswordToClipboard() {\n    const options = (await this.passwordGenerationService.getOptions())[0];\n    const password = await this.passwordGenerationService.generatePassword(options);\n    this.platformUtilsService.copyToClipboard(password, { window: window });\n    this.passwordGenerationService.addHistory(password);\n  }\n\n  private async autoFillLogin(tab?: chrome.tabs.Tab) {\n    if (!tab) {\n      tab = await BrowserApi.getTabFromCurrentWindowId();\n    }\n\n    if (tab == null) {\n      return;\n    }\n\n    if ((await this.authService.getAuthStatus()) < AuthenticationStatus.Unlocked) {\n      const retryMessage: LockedVaultPendingNotificationsItem = {\n        commandToRetry: {\n          msg: { command: \"autofill_login\" },\n          sender: { tab: tab },\n        },\n        target: \"commands.background\",\n      };\n      await BrowserApi.tabSendMessageData(\n        tab,\n        \"addToLockedVaultPendingNotifications\",\n        retryMessage\n      );\n\n      BrowserApi.tabSendMessageData(tab, \"promptForLogin\");\n      return;\n    }\n\n    await this.main.collectPageDetailsForContentScript(tab, \"autofill_cmd\");\n  }\n\n  private async openPopup() {\n    // Chrome APIs cannot open popup\n    if (!this.isSafari) {\n      return;\n    }\n\n    this.main.openPopup();\n  }\n}\n","import { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\n\nimport MainBackground from \"./main.background\";\nimport LockedVaultPendingNotificationsItem from \"./models/lockedVaultPendingNotificationsItem\";\n\nexport default class ContextMenusBackground {\n  private readonly noopCommandSuffix = \"noop\";\n  private contextMenus: any;\n\n  constructor(\n    private main: MainBackground,\n    private cipherService: CipherService,\n    private passwordGenerationService: PasswordGenerationService,\n    private platformUtilsService: PlatformUtilsService,\n    private authService: AuthService,\n    private eventService: EventService,\n    private totpService: TotpService\n  ) {\n    this.contextMenus = chrome.contextMenus;\n  }\n\n  async init() {\n    if (!this.contextMenus) {\n      return;\n    }\n\n    this.contextMenus.onClicked.addListener(\n      async (info: chrome.contextMenus.OnClickData, tab: chrome.tabs.Tab) => {\n        if (info.menuItemId === \"generate-password\") {\n          await this.generatePasswordToClipboard();\n        } else if (info.menuItemId === \"copy-identifier\") {\n          await this.getClickedElement(tab, info.frameId);\n        } else if (\n          info.parentMenuItemId === \"autofill\" ||\n          info.parentMenuItemId === \"copy-username\" ||\n          info.parentMenuItemId === \"copy-password\" ||\n          info.parentMenuItemId === \"copy-totp\"\n        ) {\n          await this.cipherAction(tab, info);\n        }\n      }\n    );\n\n    BrowserApi.messageListener(\n      \"contextmenus.background\",\n      async (msg: any, sender: chrome.runtime.MessageSender, sendResponse: any) => {\n        if (msg.command === \"unlockCompleted\" && msg.data.target === \"contextmenus.background\") {\n          await this.cipherAction(\n            msg.data.commandToRetry.sender.tab,\n            msg.data.commandToRetry.msg.data\n          );\n        }\n      }\n    );\n  }\n\n  private async generatePasswordToClipboard() {\n    const options = (await this.passwordGenerationService.getOptions())[0];\n    const password = await this.passwordGenerationService.generatePassword(options);\n    this.platformUtilsService.copyToClipboard(password, { window: window });\n    this.passwordGenerationService.addHistory(password);\n  }\n\n  private async getClickedElement(tab: chrome.tabs.Tab, frameId: number) {\n    if (tab == null) {\n      return;\n    }\n\n    BrowserApi.tabSendMessage(tab, { command: \"getClickedElement\" }, { frameId: frameId });\n  }\n\n  private async cipherAction(tab: chrome.tabs.Tab, info: chrome.contextMenus.OnClickData) {\n    const id = info.menuItemId.split(\"_\")[1];\n\n    if ((await this.authService.getAuthStatus()) < AuthenticationStatus.Unlocked) {\n      const retryMessage: LockedVaultPendingNotificationsItem = {\n        commandToRetry: {\n          msg: { command: this.noopCommandSuffix, data: info },\n          sender: { tab: tab },\n        },\n        target: \"contextmenus.background\",\n      };\n      await BrowserApi.tabSendMessageData(\n        tab,\n        \"addToLockedVaultPendingNotifications\",\n        retryMessage\n      );\n\n      BrowserApi.tabSendMessageData(tab, \"promptForLogin\");\n      return;\n    }\n\n    let cipher: CipherView;\n    if (id === this.noopCommandSuffix) {\n      const ciphers = await this.cipherService.getAllDecryptedForUrl(tab.url);\n      cipher = ciphers.find((c) => c.reprompt === CipherRepromptType.None);\n    } else {\n      const ciphers = await this.cipherService.getAllDecrypted();\n      cipher = ciphers.find((c) => c.id === id);\n    }\n\n    if (cipher == null) {\n      return;\n    }\n\n    if (info.parentMenuItemId === \"autofill\") {\n      await this.startAutofillPage(tab, cipher);\n    } else if (info.parentMenuItemId === \"copy-username\") {\n      this.platformUtilsService.copyToClipboard(cipher.login.username, { window: window });\n    } else if (info.parentMenuItemId === \"copy-password\") {\n      this.platformUtilsService.copyToClipboard(cipher.login.password, { window: window });\n      this.eventService.collect(EventType.Cipher_ClientCopiedPassword, cipher.id);\n    } else if (info.parentMenuItemId === \"copy-totp\") {\n      const totpValue = await this.totpService.getCode(cipher.login.totp);\n      this.platformUtilsService.copyToClipboard(totpValue, { window: window });\n    }\n  }\n\n  private async startAutofillPage(tab: chrome.tabs.Tab, cipher: CipherView) {\n    this.main.loginToAutoFill = cipher;\n    if (tab == null) {\n      return;\n    }\n\n    BrowserApi.tabSendMessage(tab, {\n      command: \"collectPageDetails\",\n      tab: tab,\n      sender: \"contextMenu\",\n    });\n  }\n}\n","import { NotificationsService } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout.service\";\n\nimport { StateService } from \"../services/abstractions/state.service\";\n\nconst IdleInterval = 60 * 5; // 5 minutes\n\nexport default class IdleBackground {\n  private idle: any;\n  private idleTimer: number = null;\n  private idleState = \"active\";\n\n  constructor(\n    private vaultTimeoutService: VaultTimeoutService,\n    private stateService: StateService,\n    private notificationsService: NotificationsService\n  ) {\n    this.idle = chrome.idle || (browser != null ? browser.idle : null);\n  }\n\n  async init() {\n    if (!this.idle) {\n      return;\n    }\n\n    const idleHandler = (newState: string) => {\n      if (newState === \"active\") {\n        this.notificationsService.reconnectFromActivity();\n      } else {\n        this.notificationsService.disconnectFromInactivity();\n      }\n    };\n    if (this.idle.onStateChanged && this.idle.setDetectionInterval) {\n      this.idle.setDetectionInterval(IdleInterval);\n      this.idle.onStateChanged.addListener(idleHandler);\n    } else {\n      this.pollIdle(idleHandler);\n    }\n\n    if (this.idle.onStateChanged) {\n      this.idle.onStateChanged.addListener(async (newState: string) => {\n        if (newState === \"locked\") {\n          // If the screen is locked or the screensaver activates\n          const timeout = await this.stateService.getVaultTimeout();\n          if (timeout === -2) {\n            // On System Lock vault timeout option\n            const action = await this.stateService.getVaultTimeoutAction();\n            if (action === \"logOut\") {\n              await this.vaultTimeoutService.logOut();\n            } else {\n              await this.vaultTimeoutService.lock(true);\n            }\n          }\n        }\n      });\n    }\n  }\n\n  private pollIdle(handler: (newState: string) => void) {\n    if (this.idleTimer != null) {\n      window.clearTimeout(this.idleTimer);\n      this.idleTimer = null;\n    }\n    this.idle.queryState(IdleInterval, (state: string) => {\n      if (state !== this.idleState) {\n        this.idleState = state;\n        handler(state);\n      }\n      this.idleTimer = window.setTimeout(() => this.pollIdle(handler), 5000);\n    });\n  }\n}\n","import { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\n\nimport RuntimeBackground from \"./runtime.background\";\n\nconst MessageValidTimeout = 10 * 1000;\nconst EncryptionAlgorithm = \"sha1\";\n\ntype Message = {\n  command: string;\n\n  // Filled in by this service\n  userId?: string;\n  timestamp?: number;\n\n  // Used for sharing secret\n  publicKey?: string;\n};\n\ntype OuterMessage = {\n  message: Message | EncString;\n  appId: string;\n};\n\ntype ReceiveMessage = {\n  timestamp: number;\n  command: string;\n  response?: any;\n\n  // Unlock key\n  keyB64?: string;\n};\n\ntype ReceiveMessageOuter = {\n  command: string;\n  appId: string;\n\n  // Should only have one of these.\n  message?: EncString;\n  sharedSecret?: string;\n};\n\nexport class NativeMessagingBackground {\n  private connected = false;\n  private connecting: boolean;\n  private port: browser.runtime.Port | chrome.runtime.Port;\n\n  private resolver: any = null;\n  private privateKey: ArrayBuffer = null;\n  private publicKey: ArrayBuffer = null;\n  private secureSetupResolve: any = null;\n  private sharedSecret: SymmetricCryptoKey;\n  private appId: string;\n  private validatingFingerprint: boolean;\n\n  constructor(\n    private cryptoService: CryptoService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private runtimeBackground: RuntimeBackground,\n    private i18nService: I18nService,\n    private messagingService: MessagingService,\n    private appIdService: AppIdService,\n    private platformUtilsService: PlatformUtilsService,\n    private stateService: StateService,\n    private logService: LogService,\n    private authService: AuthService\n  ) {\n    this.stateService.setBiometricFingerprintValidated(false);\n\n    if (chrome?.permissions?.onAdded) {\n      // Reload extension to activate nativeMessaging\n      chrome.permissions.onAdded.addListener((permissions) => {\n        BrowserApi.reloadExtension(null);\n      });\n    }\n  }\n\n  async connect() {\n    this.appId = await this.appIdService.getAppId();\n    this.stateService.setBiometricFingerprintValidated(false);\n\n    return new Promise<void>((resolve, reject) => {\n      this.port = BrowserApi.connectNative(\"com.8bit.bitwarden\");\n\n      this.connecting = true;\n\n      const connectedCallback = () => {\n        this.connected = true;\n        this.connecting = false;\n        resolve();\n      };\n\n      // Safari has a bundled native component which is always available, no need to\n      // check if the desktop app is running.\n      if (this.platformUtilsService.isSafari()) {\n        connectedCallback();\n      }\n\n      this.port.onMessage.addListener(async (message: ReceiveMessageOuter) => {\n        switch (message.command) {\n          case \"connected\":\n            connectedCallback();\n            break;\n          case \"disconnected\":\n            if (this.connecting) {\n              reject(\"startDesktop\");\n            }\n            this.connected = false;\n            this.port.disconnect();\n            break;\n          case \"setupEncryption\": {\n            // Ignore since it belongs to another device\n            if (message.appId !== this.appId) {\n              return;\n            }\n\n            const encrypted = Utils.fromB64ToArray(message.sharedSecret);\n            const decrypted = await this.cryptoFunctionService.rsaDecrypt(\n              encrypted.buffer,\n              this.privateKey,\n              EncryptionAlgorithm\n            );\n\n            if (this.validatingFingerprint) {\n              this.validatingFingerprint = false;\n              this.stateService.setBiometricFingerprintValidated(true);\n            }\n            this.sharedSecret = new SymmetricCryptoKey(decrypted);\n            this.secureSetupResolve();\n            break;\n          }\n          case \"invalidateEncryption\":\n            // Ignore since it belongs to another device\n            if (message.appId !== this.appId) {\n              return;\n            }\n\n            this.sharedSecret = null;\n            this.privateKey = null;\n            this.connected = false;\n\n            this.messagingService.send(\"showDialog\", {\n              text: this.i18nService.t(\"nativeMessagingInvalidEncryptionDesc\"),\n              title: this.i18nService.t(\"nativeMessagingInvalidEncryptionTitle\"),\n              confirmText: this.i18nService.t(\"ok\"),\n              type: \"error\",\n            });\n            break;\n          case \"verifyFingerprint\": {\n            if (this.sharedSecret == null) {\n              this.validatingFingerprint = true;\n              this.showFingerprintDialog();\n            }\n            break;\n          }\n          case \"wrongUserId\":\n            this.showWrongUserDialog();\n            break;\n          default:\n            // Ignore since it belongs to another device\n            if (!this.platformUtilsService.isSafari() && message.appId !== this.appId) {\n              return;\n            }\n\n            this.onMessage(message.message);\n        }\n      });\n\n      this.port.onDisconnect.addListener((p: any) => {\n        let error;\n        if (BrowserApi.isWebExtensionsApi) {\n          error = p.error.message;\n        } else {\n          error = chrome.runtime.lastError.message;\n        }\n\n        this.sharedSecret = null;\n        this.privateKey = null;\n        this.connected = false;\n\n        const reason = error != null ? \"desktopIntegrationDisabled\" : null;\n        reject(reason);\n      });\n    });\n  }\n\n  showWrongUserDialog() {\n    this.messagingService.send(\"showDialog\", {\n      text: this.i18nService.t(\"nativeMessagingWrongUserDesc\"),\n      title: this.i18nService.t(\"nativeMessagingWrongUserTitle\"),\n      confirmText: this.i18nService.t(\"ok\"),\n      type: \"error\",\n    });\n  }\n\n  async send(message: Message) {\n    if (!this.connected) {\n      await this.connect();\n    }\n\n    message.userId = await this.stateService.getUserId();\n    message.timestamp = Date.now();\n\n    if (this.platformUtilsService.isSafari()) {\n      this.postMessage(message as any);\n    } else {\n      this.postMessage({ appId: this.appId, message: await this.encryptMessage(message) });\n    }\n  }\n\n  async encryptMessage(message: Message) {\n    if (this.sharedSecret == null) {\n      await this.secureCommunication();\n    }\n\n    return await this.cryptoService.encrypt(JSON.stringify(message), this.sharedSecret);\n  }\n\n  getResponse(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.resolver = resolve;\n    });\n  }\n\n  private postMessage(message: OuterMessage) {\n    // Wrap in try-catch to when the port disconnected without triggering `onDisconnect`.\n    try {\n      this.port.postMessage(message);\n    } catch (e) {\n      this.logService.error(\"NativeMessaging port disconnected, disconnecting.\");\n\n      this.sharedSecret = null;\n      this.privateKey = null;\n      this.connected = false;\n\n      this.messagingService.send(\"showDialog\", {\n        text: this.i18nService.t(\"nativeMessagingInvalidEncryptionDesc\"),\n        title: this.i18nService.t(\"nativeMessagingInvalidEncryptionTitle\"),\n        confirmText: this.i18nService.t(\"ok\"),\n        type: \"error\",\n      });\n    }\n  }\n\n  private async onMessage(rawMessage: ReceiveMessage | EncString) {\n    let message = rawMessage as ReceiveMessage;\n    if (!this.platformUtilsService.isSafari()) {\n      message = JSON.parse(\n        await this.cryptoService.decryptToUtf8(rawMessage as EncString, this.sharedSecret)\n      );\n    }\n\n    if (Math.abs(message.timestamp - Date.now()) > MessageValidTimeout) {\n      this.logService.error(\"NativeMessage is to old, ignoring.\");\n      return;\n    }\n\n    switch (message.command) {\n      case \"biometricUnlock\": {\n        await this.stateService.setBiometricAwaitingAcceptance(null);\n\n        if (message.response === \"not enabled\") {\n          this.messagingService.send(\"showDialog\", {\n            text: this.i18nService.t(\"biometricsNotEnabledDesc\"),\n            title: this.i18nService.t(\"biometricsNotEnabledTitle\"),\n            confirmText: this.i18nService.t(\"ok\"),\n            type: \"error\",\n          });\n          break;\n        } else if (message.response === \"not supported\") {\n          this.messagingService.send(\"showDialog\", {\n            text: this.i18nService.t(\"biometricsNotSupportedDesc\"),\n            title: this.i18nService.t(\"biometricsNotSupportedTitle\"),\n            confirmText: this.i18nService.t(\"ok\"),\n            type: \"error\",\n          });\n          break;\n        }\n\n        const enabled = await this.stateService.getBiometricUnlock();\n        if (enabled === null || enabled === false) {\n          if (message.response === \"unlocked\") {\n            await this.stateService.setBiometricUnlock(true);\n          }\n          break;\n        }\n\n        // Ignore unlock if already unlocked\n        if ((await this.authService.getAuthStatus()) === AuthenticationStatus.Unlocked) {\n          break;\n        }\n\n        if (message.response === \"unlocked\") {\n          await this.cryptoService.setKey(\n            new SymmetricCryptoKey(Utils.fromB64ToArray(message.keyB64).buffer)\n          );\n\n          // Verify key is correct by attempting to decrypt a secret\n          try {\n            await this.cryptoService.getFingerprint(await this.stateService.getUserId());\n          } catch (e) {\n            this.logService.error(\"Unable to verify key: \" + e);\n            await this.cryptoService.clearKey();\n            this.showWrongUserDialog();\n\n            // Exit early\n            if (this.resolver) {\n              this.resolver(message);\n            }\n            return;\n          }\n\n          await this.stateService.setBiometricLocked(false);\n          this.runtimeBackground.processMessage({ command: \"unlocked\" }, null, null);\n        }\n        break;\n      }\n      default:\n        this.logService.error(\"NativeMessage, got unknown command: \" + message.command);\n        break;\n    }\n\n    if (this.resolver) {\n      this.resolver(message);\n    }\n  }\n\n  private async secureCommunication() {\n    const [publicKey, privateKey] = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n    this.publicKey = publicKey;\n    this.privateKey = privateKey;\n\n    this.sendUnencrypted({\n      command: \"setupEncryption\",\n      publicKey: Utils.fromBufferToB64(publicKey),\n      userId: await this.stateService.getUserId(),\n    });\n\n    return new Promise((resolve, reject) => (this.secureSetupResolve = resolve));\n  }\n\n  private async sendUnencrypted(message: Message) {\n    if (!this.connected) {\n      await this.connect();\n    }\n\n    message.timestamp = Date.now();\n\n    this.postMessage({ appId: this.appId, message: message });\n  }\n\n  private async showFingerprintDialog() {\n    const fingerprint = (\n      await this.cryptoService.getFingerprint(await this.stateService.getUserId(), this.publicKey)\n    ).join(\" \");\n\n    this.messagingService.send(\"showDialog\", {\n      html: `${this.i18nService.t(\n        \"desktopIntegrationVerificationText\"\n      )}<br><br><strong>${fingerprint}</strong>`,\n      title: this.i18nService.t(\"desktopSyncVerificationTitle\"),\n      confirmText: this.i18nService.t(\"ok\"),\n      type: \"warning\",\n    });\n  }\n}\n","export enum NotificationQueueMessageType {\n  AddLogin = 0,\n  ChangePassword = 1,\n}\n","import { firstValueFrom } from \"rxjs\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { LoginUriView } from \"@bitwarden/common/models/view/loginUriView\";\nimport { LoginView } from \"@bitwarden/common/models/view/loginView\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { AutofillService } from \"../services/abstractions/autofill.service\";\nimport { StateService } from \"../services/abstractions/state.service\";\n\nimport AddChangePasswordQueueMessage from \"./models/addChangePasswordQueueMessage\";\nimport AddLoginQueueMessage from \"./models/addLoginQueueMessage\";\nimport AddLoginRuntimeMessage from \"./models/addLoginRuntimeMessage\";\nimport ChangePasswordRuntimeMessage from \"./models/changePasswordRuntimeMessage\";\nimport LockedVaultPendingNotificationsItem from \"./models/lockedVaultPendingNotificationsItem\";\nimport { NotificationQueueMessageType } from \"./models/notificationQueueMessageType\";\n\nexport default class NotificationBackground {\n  private notificationQueue: (AddLoginQueueMessage | AddChangePasswordQueueMessage)[] = [];\n\n  constructor(\n    private autofillService: AutofillService,\n    private cipherService: CipherService,\n    private authService: AuthService,\n    private policyService: PolicyService,\n    private folderService: FolderService,\n    private stateService: StateService\n  ) {}\n\n  async init() {\n    if (chrome.runtime == null) {\n      return;\n    }\n\n    BrowserApi.messageListener(\n      \"notification.background\",\n      async (msg: any, sender: chrome.runtime.MessageSender) => {\n        await this.processMessage(msg, sender);\n      }\n    );\n\n    this.cleanupNotificationQueue();\n  }\n\n  async processMessage(msg: any, sender: chrome.runtime.MessageSender) {\n    switch (msg.command) {\n      case \"unlockCompleted\":\n        if (msg.data.target !== \"notification.background\") {\n          return;\n        }\n        await this.processMessage(msg.data.commandToRetry.msg, msg.data.commandToRetry.sender);\n        break;\n      case \"bgGetDataForTab\":\n        await this.getDataForTab(sender.tab, msg.responseCommand);\n        break;\n      case \"bgCloseNotificationBar\":\n        await BrowserApi.tabSendMessageData(sender.tab, \"closeNotificationBar\");\n        break;\n      case \"bgAdjustNotificationBar\":\n        await BrowserApi.tabSendMessageData(sender.tab, \"adjustNotificationBar\", msg.data);\n        break;\n      case \"bgAddLogin\":\n        await this.addLogin(msg.login, sender.tab);\n        break;\n      case \"bgChangedPassword\":\n        await this.changedPassword(msg.data, sender.tab);\n        break;\n      case \"bgAddClose\":\n      case \"bgChangeClose\":\n        this.removeTabFromNotificationQueue(sender.tab);\n        break;\n      case \"bgAddSave\":\n      case \"bgChangeSave\":\n        if ((await this.authService.getAuthStatus()) < AuthenticationStatus.Unlocked) {\n          const retryMessage: LockedVaultPendingNotificationsItem = {\n            commandToRetry: {\n              msg: msg,\n              sender: sender,\n            },\n            target: \"notification.background\",\n          };\n          await BrowserApi.tabSendMessageData(\n            sender.tab,\n            \"addToLockedVaultPendingNotifications\",\n            retryMessage\n          );\n          await BrowserApi.tabSendMessageData(sender.tab, \"promptForLogin\");\n          return;\n        }\n        await this.saveOrUpdateCredentials(sender.tab, msg.folder);\n        break;\n      case \"bgNeverSave\":\n        await this.saveNever(sender.tab);\n        break;\n      case \"collectPageDetailsResponse\":\n        switch (msg.sender) {\n          case \"notificationBar\": {\n            const forms = this.autofillService.getFormsWithPasswordFields(msg.details);\n            await BrowserApi.tabSendMessageData(msg.tab, \"notificationBarPageDetails\", {\n              details: msg.details,\n              forms: forms,\n            });\n            break;\n          }\n          default:\n            break;\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  async checkNotificationQueue(tab: chrome.tabs.Tab = null): Promise<void> {\n    if (this.notificationQueue.length === 0) {\n      return;\n    }\n\n    if (tab != null) {\n      this.doNotificationQueueCheck(tab);\n      return;\n    }\n\n    const currentTab = await BrowserApi.getTabFromCurrentWindow();\n    if (currentTab != null) {\n      this.doNotificationQueueCheck(currentTab);\n    }\n  }\n\n  private cleanupNotificationQueue() {\n    for (let i = this.notificationQueue.length - 1; i >= 0; i--) {\n      if (this.notificationQueue[i].expires < new Date()) {\n        this.notificationQueue.splice(i, 1);\n      }\n    }\n    setTimeout(() => this.cleanupNotificationQueue(), 2 * 60 * 1000); // check every 2 minutes\n  }\n\n  private doNotificationQueueCheck(tab: chrome.tabs.Tab): void {\n    if (tab == null) {\n      return;\n    }\n\n    const tabDomain = Utils.getDomain(tab.url);\n    if (tabDomain == null) {\n      return;\n    }\n\n    for (let i = 0; i < this.notificationQueue.length; i++) {\n      if (\n        this.notificationQueue[i].tabId !== tab.id ||\n        this.notificationQueue[i].domain !== tabDomain\n      ) {\n        continue;\n      }\n\n      if (this.notificationQueue[i].type === NotificationQueueMessageType.AddLogin) {\n        BrowserApi.tabSendMessageData(tab, \"openNotificationBar\", {\n          type: \"add\",\n          typeData: {\n            isVaultLocked: this.notificationQueue[i].wasVaultLocked,\n          },\n        });\n      } else if (this.notificationQueue[i].type === NotificationQueueMessageType.ChangePassword) {\n        BrowserApi.tabSendMessageData(tab, \"openNotificationBar\", {\n          type: \"change\",\n          typeData: {\n            isVaultLocked: this.notificationQueue[i].wasVaultLocked,\n          },\n        });\n      }\n      break;\n    }\n  }\n\n  private removeTabFromNotificationQueue(tab: chrome.tabs.Tab) {\n    for (let i = this.notificationQueue.length - 1; i >= 0; i--) {\n      if (this.notificationQueue[i].tabId === tab.id) {\n        this.notificationQueue.splice(i, 1);\n      }\n    }\n  }\n\n  private async addLogin(loginInfo: AddLoginRuntimeMessage, tab: chrome.tabs.Tab) {\n    const authStatus = await this.authService.getAuthStatus();\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      return;\n    }\n\n    const loginDomain = Utils.getDomain(loginInfo.url);\n    if (loginDomain == null) {\n      return;\n    }\n\n    let normalizedUsername = loginInfo.username;\n    if (normalizedUsername != null) {\n      normalizedUsername = normalizedUsername.toLowerCase();\n    }\n\n    const disabledAddLogin = await this.stateService.getDisableAddLoginNotification();\n    if (authStatus === AuthenticationStatus.Locked) {\n      if (disabledAddLogin) {\n        return;\n      }\n\n      if (!(await this.allowPersonalOwnership())) {\n        return;\n      }\n\n      this.pushAddLoginToQueue(loginDomain, loginInfo, tab, true);\n      return;\n    }\n\n    const ciphers = await this.cipherService.getAllDecryptedForUrl(loginInfo.url);\n    const usernameMatches = ciphers.filter(\n      (c) => c.login.username != null && c.login.username.toLowerCase() === normalizedUsername\n    );\n    if (usernameMatches.length === 0) {\n      if (disabledAddLogin) {\n        return;\n      }\n\n      if (!(await this.allowPersonalOwnership())) {\n        return;\n      }\n\n      this.pushAddLoginToQueue(loginDomain, loginInfo, tab);\n    } else if (\n      usernameMatches.length === 1 &&\n      usernameMatches[0].login.password !== loginInfo.password\n    ) {\n      const disabledChangePassword =\n        await this.stateService.getDisableChangedPasswordNotification();\n      if (disabledChangePassword) {\n        return;\n      }\n      this.pushChangePasswordToQueue(usernameMatches[0].id, loginDomain, loginInfo.password, tab);\n    }\n  }\n\n  private async pushAddLoginToQueue(\n    loginDomain: string,\n    loginInfo: AddLoginRuntimeMessage,\n    tab: chrome.tabs.Tab,\n    isVaultLocked = false\n  ) {\n    // remove any old messages for this tab\n    this.removeTabFromNotificationQueue(tab);\n    const message: AddLoginQueueMessage = {\n      type: NotificationQueueMessageType.AddLogin,\n      username: loginInfo.username,\n      password: loginInfo.password,\n      domain: loginDomain,\n      uri: loginInfo.url,\n      tabId: tab.id,\n      expires: new Date(new Date().getTime() + 5 * 60000), // 5 minutes\n      wasVaultLocked: isVaultLocked,\n    };\n    this.notificationQueue.push(message);\n    await this.checkNotificationQueue(tab);\n  }\n\n  private async changedPassword(changeData: ChangePasswordRuntimeMessage, tab: chrome.tabs.Tab) {\n    const loginDomain = Utils.getDomain(changeData.url);\n    if (loginDomain == null) {\n      return;\n    }\n\n    if ((await this.authService.getAuthStatus()) < AuthenticationStatus.Unlocked) {\n      this.pushChangePasswordToQueue(null, loginDomain, changeData.newPassword, tab, true);\n      return;\n    }\n\n    let id: string = null;\n    const ciphers = await this.cipherService.getAllDecryptedForUrl(changeData.url);\n    if (changeData.currentPassword != null) {\n      const passwordMatches = ciphers.filter(\n        (c) => c.login.password === changeData.currentPassword\n      );\n      if (passwordMatches.length === 1) {\n        id = passwordMatches[0].id;\n      }\n    } else if (ciphers.length === 1) {\n      id = ciphers[0].id;\n    }\n    if (id != null) {\n      this.pushChangePasswordToQueue(id, loginDomain, changeData.newPassword, tab);\n    }\n  }\n\n  private async pushChangePasswordToQueue(\n    cipherId: string,\n    loginDomain: string,\n    newPassword: string,\n    tab: chrome.tabs.Tab,\n    isVaultLocked = false\n  ) {\n    // remove any old messages for this tab\n    this.removeTabFromNotificationQueue(tab);\n    const message: AddChangePasswordQueueMessage = {\n      type: NotificationQueueMessageType.ChangePassword,\n      cipherId: cipherId,\n      newPassword: newPassword,\n      domain: loginDomain,\n      tabId: tab.id,\n      expires: new Date(new Date().getTime() + 5 * 60000), // 5 minutes\n      wasVaultLocked: isVaultLocked,\n    };\n    this.notificationQueue.push(message);\n    await this.checkNotificationQueue(tab);\n  }\n\n  private async saveOrUpdateCredentials(tab: chrome.tabs.Tab, folderId?: string) {\n    for (let i = this.notificationQueue.length - 1; i >= 0; i--) {\n      const queueMessage = this.notificationQueue[i];\n      if (\n        queueMessage.tabId !== tab.id ||\n        (queueMessage.type !== NotificationQueueMessageType.AddLogin &&\n          queueMessage.type !== NotificationQueueMessageType.ChangePassword)\n      ) {\n        continue;\n      }\n\n      const tabDomain = Utils.getDomain(tab.url);\n      if (tabDomain != null && tabDomain !== queueMessage.domain) {\n        continue;\n      }\n\n      this.notificationQueue.splice(i, 1);\n      BrowserApi.tabSendMessageData(tab, \"closeNotificationBar\");\n\n      if (queueMessage.type === NotificationQueueMessageType.ChangePassword) {\n        const changePasswordMessage = queueMessage as AddChangePasswordQueueMessage;\n        const cipher = await this.getDecryptedCipherById(changePasswordMessage.cipherId);\n        if (cipher == null) {\n          return;\n        }\n        await this.updateCipher(cipher, changePasswordMessage.newPassword);\n        return;\n      }\n\n      if (queueMessage.type === NotificationQueueMessageType.AddLogin) {\n        if (!queueMessage.wasVaultLocked) {\n          await this.createNewCipher(queueMessage as AddLoginQueueMessage, folderId);\n          BrowserApi.tabSendMessageData(tab, \"addedCipher\");\n          return;\n        }\n\n        // If the vault was locked, check if a cipher needs updating instead of creating a new one\n        const addLoginMessage = queueMessage as AddLoginQueueMessage;\n        const ciphers = await this.cipherService.getAllDecryptedForUrl(addLoginMessage.uri);\n        const usernameMatches = ciphers.filter(\n          (c) =>\n            c.login.username != null && c.login.username.toLowerCase() === addLoginMessage.username\n        );\n\n        if (usernameMatches.length >= 1) {\n          await this.updateCipher(usernameMatches[0], addLoginMessage.password);\n          return;\n        }\n\n        await this.createNewCipher(addLoginMessage, folderId);\n        BrowserApi.tabSendMessageData(tab, \"addedCipher\");\n      }\n    }\n  }\n\n  private async createNewCipher(queueMessage: AddLoginQueueMessage, folderId: string) {\n    const loginModel = new LoginView();\n    const loginUri = new LoginUriView();\n    loginUri.uri = queueMessage.uri;\n    loginModel.uris = [loginUri];\n    loginModel.username = queueMessage.username;\n    loginModel.password = queueMessage.password;\n    const model = new CipherView();\n    model.name = Utils.getHostname(queueMessage.uri) || queueMessage.domain;\n    model.name = model.name.replace(/^www\\./, \"\");\n    model.type = CipherType.Login;\n    model.login = loginModel;\n\n    if (!Utils.isNullOrWhitespace(folderId)) {\n      const folders = await firstValueFrom(this.folderService.folderViews$);\n      if (folders.some((x) => x.id === folderId)) {\n        model.folderId = folderId;\n      }\n    }\n\n    const cipher = await this.cipherService.encrypt(model);\n    await this.cipherService.saveWithServer(cipher);\n  }\n\n  private async getDecryptedCipherById(cipherId: string) {\n    const cipher = await this.cipherService.get(cipherId);\n    if (cipher != null && cipher.type === CipherType.Login) {\n      return await cipher.decrypt();\n    }\n    return null;\n  }\n\n  private async updateCipher(cipher: CipherView, newPassword: string) {\n    if (cipher != null && cipher.type === CipherType.Login) {\n      cipher.login.password = newPassword;\n      const newCipher = await this.cipherService.encrypt(cipher);\n      await this.cipherService.saveWithServer(newCipher);\n    }\n  }\n\n  private async saveNever(tab: chrome.tabs.Tab) {\n    for (let i = this.notificationQueue.length - 1; i >= 0; i--) {\n      const queueMessage = this.notificationQueue[i];\n      if (\n        queueMessage.tabId !== tab.id ||\n        queueMessage.type !== NotificationQueueMessageType.AddLogin\n      ) {\n        continue;\n      }\n\n      const tabDomain = Utils.getDomain(tab.url);\n      if (tabDomain != null && tabDomain !== queueMessage.domain) {\n        continue;\n      }\n\n      this.notificationQueue.splice(i, 1);\n      BrowserApi.tabSendMessageData(tab, \"closeNotificationBar\");\n\n      const hostname = Utils.getHostname(tab.url);\n      await this.cipherService.saveNeverDomain(hostname);\n    }\n  }\n\n  private async getDataForTab(tab: chrome.tabs.Tab, responseCommand: string) {\n    const responseData: any = {};\n    if (responseCommand === \"notificationBarGetFoldersList\") {\n      responseData.folders = await firstValueFrom(this.folderService.folderViews$);\n    }\n\n    await BrowserApi.tabSendMessageData(tab, responseCommand, responseData);\n  }\n\n  private async allowPersonalOwnership(): Promise<boolean> {\n    return !(await this.policyService.policyAppliesToUser(PolicyType.PersonalOwnership));\n  }\n}\n","import { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { NotificationsService } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { SystemService } from \"@bitwarden/common/abstractions/system.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { AutofillService } from \"../services/abstractions/autofill.service\";\nimport BrowserPlatformUtilsService from \"../services/browserPlatformUtils.service\";\n\nimport MainBackground from \"./main.background\";\nimport LockedVaultPendingNotificationsItem from \"./models/lockedVaultPendingNotificationsItem\";\n\nexport default class RuntimeBackground {\n  private autofillTimeout: any;\n  private pageDetailsToAutoFill: any[] = [];\n  private onInstalledReason: string = null;\n  private lockedVaultPendingNotifications: LockedVaultPendingNotificationsItem[] = [];\n\n  constructor(\n    private main: MainBackground,\n    private autofillService: AutofillService,\n    private platformUtilsService: BrowserPlatformUtilsService,\n    private i18nService: I18nService,\n    private notificationsService: NotificationsService,\n    private systemService: SystemService,\n    private environmentService: EnvironmentService,\n    private messagingService: MessagingService,\n    private logService: LogService\n  ) {\n    // onInstalled listener must be wired up before anything else, so we do it in the ctor\n    chrome.runtime.onInstalled.addListener((details: any) => {\n      this.onInstalledReason = details.reason;\n    });\n  }\n\n  async init() {\n    if (!chrome.runtime) {\n      return;\n    }\n\n    await this.checkOnInstalled();\n    const backgroundMessageListener = async (\n      msg: any,\n      sender: chrome.runtime.MessageSender,\n      sendResponse: any\n    ) => {\n      await this.processMessage(msg, sender, sendResponse);\n    };\n\n    BrowserApi.messageListener(\"runtime.background\", backgroundMessageListener);\n    if (this.main.isPrivateMode) {\n      (window as any).bitwardenBackgroundMessageListener = backgroundMessageListener;\n    }\n  }\n\n  async processMessage(msg: any, sender: any, sendResponse: any) {\n    switch (msg.command) {\n      case \"loggedIn\":\n      case \"unlocked\": {\n        let item: LockedVaultPendingNotificationsItem;\n\n        if (this.lockedVaultPendingNotifications?.length > 0) {\n          await BrowserApi.closeLoginTab();\n\n          item = this.lockedVaultPendingNotifications.pop();\n          if (item.commandToRetry.sender?.tab?.id) {\n            await BrowserApi.focusSpecifiedTab(item.commandToRetry.sender.tab.id);\n          }\n        }\n\n        await this.main.setIcon();\n        await this.main.refreshBadgeAndMenu(false);\n        this.notificationsService.updateConnection(msg.command === \"unlocked\");\n        this.systemService.cancelProcessReload();\n\n        if (item) {\n          await BrowserApi.tabSendMessageData(\n            item.commandToRetry.sender.tab,\n            \"unlockCompleted\",\n            item\n          );\n        }\n        break;\n      }\n      case \"addToLockedVaultPendingNotifications\":\n        this.lockedVaultPendingNotifications.push(msg.data);\n        break;\n      case \"logout\":\n        await this.main.logout(msg.expired, msg.userId);\n        break;\n      case \"syncCompleted\":\n        if (msg.successfully) {\n          setTimeout(async () => await this.main.refreshBadgeAndMenu(), 2000);\n        }\n        break;\n      case \"openPopup\":\n        await this.main.openPopup();\n        break;\n      case \"promptForLogin\":\n        await BrowserApi.createNewTab(\"popup/index.html?uilocation=popout\", true, true);\n        break;\n      case \"showDialogResolve\":\n        this.platformUtilsService.resolveDialogPromise(msg.dialogId, msg.confirmed);\n        break;\n      case \"bgCollectPageDetails\":\n        await this.main.collectPageDetailsForContentScript(sender.tab, msg.sender, sender.frameId);\n        break;\n      case \"bgUpdateContextMenu\":\n      case \"editedCipher\":\n      case \"addedCipher\":\n      case \"deletedCipher\":\n        await this.main.refreshBadgeAndMenu();\n        break;\n      case \"bgReseedStorage\":\n        await this.main.reseedStorage();\n        break;\n      case \"collectPageDetailsResponse\":\n        switch (msg.sender) {\n          case \"autofiller\":\n          case \"autofill_cmd\": {\n            const totpCode = await this.autofillService.doAutoFillActiveTab(\n              [\n                {\n                  frameId: sender.frameId,\n                  tab: msg.tab,\n                  details: msg.details,\n                },\n              ],\n              msg.sender === \"autofill_cmd\"\n            );\n            if (totpCode != null) {\n              this.platformUtilsService.copyToClipboard(totpCode, { window: window });\n            }\n            break;\n          }\n          case \"contextMenu\":\n            clearTimeout(this.autofillTimeout);\n            this.pageDetailsToAutoFill.push({\n              frameId: sender.frameId,\n              tab: msg.tab,\n              details: msg.details,\n            });\n            this.autofillTimeout = setTimeout(async () => await this.autofillPage(), 300);\n            break;\n          default:\n            break;\n        }\n        break;\n      case \"authResult\": {\n        const vaultUrl = this.environmentService.getWebVaultUrl();\n\n        if (msg.referrer == null || Utils.getHostname(vaultUrl) !== msg.referrer) {\n          return;\n        }\n\n        try {\n          BrowserApi.createNewTab(\n            \"popup/index.html?uilocation=popout#/sso?code=\" +\n              encodeURIComponent(msg.code) +\n              \"&state=\" +\n              encodeURIComponent(msg.state)\n          );\n        } catch {\n          this.logService.error(\"Unable to open sso popout tab\");\n        }\n        break;\n      }\n      case \"webAuthnResult\": {\n        const vaultUrl = this.environmentService.getWebVaultUrl();\n\n        if (msg.referrer == null || Utils.getHostname(vaultUrl) !== msg.referrer) {\n          return;\n        }\n\n        const params =\n          `webAuthnResponse=${encodeURIComponent(msg.data)};` +\n          `remember=${encodeURIComponent(msg.remember)}`;\n        BrowserApi.createNewTab(\n          `popup/index.html?uilocation=popout#/2fa;${params}`,\n          undefined,\n          false\n        );\n        break;\n      }\n      case \"reloadPopup\":\n        this.messagingService.send(\"reloadPopup\");\n        break;\n      case \"emailVerificationRequired\":\n        this.messagingService.send(\"showDialog\", {\n          dialogId: \"emailVerificationRequired\",\n          title: this.i18nService.t(\"emailVerificationRequired\"),\n          text: this.i18nService.t(\"emailVerificationRequiredDesc\"),\n          confirmText: this.i18nService.t(\"ok\"),\n          type: \"info\",\n        });\n        break;\n      case \"getClickedElementResponse\":\n        this.platformUtilsService.copyToClipboard(msg.identifier, { window: window });\n        break;\n      default:\n        break;\n    }\n  }\n\n  private async autofillPage() {\n    const totpCode = await this.autofillService.doAutoFill({\n      cipher: this.main.loginToAutoFill,\n      pageDetails: this.pageDetailsToAutoFill,\n      fillNewPassword: true,\n    });\n\n    if (totpCode != null) {\n      this.platformUtilsService.copyToClipboard(totpCode, { window: window });\n    }\n\n    // reset\n    this.main.loginToAutoFill = null;\n    this.pageDetailsToAutoFill = [];\n  }\n\n  private async checkOnInstalled() {\n    setTimeout(async () => {\n      if (this.onInstalledReason != null) {\n        if (this.onInstalledReason === \"install\") {\n          BrowserApi.createNewTab(\"https://bitwarden.com/browser-start/\");\n        }\n\n        this.onInstalledReason = null;\n      }\n    }, 100);\n  }\n}\n","import MainBackground from \"./main.background\";\nimport NotificationBackground from \"./notification.background\";\n\nexport default class TabsBackground {\n  constructor(\n    private main: MainBackground,\n    private notificationBackground: NotificationBackground\n  ) {}\n\n  private focusedWindowId: number;\n\n  async init() {\n    if (!chrome.tabs || !chrome.windows) {\n      return;\n    }\n\n    chrome.windows.onFocusChanged.addListener(async (windowId: number) => {\n      if (windowId === null || windowId < 0) {\n        return;\n      }\n\n      this.focusedWindowId = windowId;\n      this.main.messagingService.send(\"windowChanged\");\n    });\n\n    chrome.tabs.onActivated.addListener(async (activeInfo: chrome.tabs.TabActiveInfo) => {\n      await this.main.refreshBadgeAndMenu();\n      this.main.messagingService.send(\"tabChanged\");\n    });\n\n    chrome.tabs.onReplaced.addListener(async (addedTabId: number, removedTabId: number) => {\n      if (this.main.onReplacedRan) {\n        return;\n      }\n      this.main.onReplacedRan = true;\n\n      await this.notificationBackground.checkNotificationQueue();\n      await this.main.refreshBadgeAndMenu();\n      this.main.messagingService.send(\"tabChanged\");\n    });\n\n    chrome.tabs.onUpdated.addListener(\n      async (tabId: number, changeInfo: chrome.tabs.TabChangeInfo, tab: chrome.tabs.Tab) => {\n        if (this.focusedWindowId > 0 && tab.windowId != this.focusedWindowId) {\n          return;\n        }\n\n        if (!tab.active) {\n          return;\n        }\n\n        if (this.main.onUpdatedRan) {\n          return;\n        }\n        this.main.onUpdatedRan = true;\n\n        await this.notificationBackground.checkNotificationQueue(tab);\n        await this.main.refreshBadgeAndMenu();\n        this.main.messagingService.send(\"tabChanged\");\n      }\n    );\n  }\n}\n","import { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\nimport { UriMatchType } from \"@bitwarden/common/enums/uriMatchType\";\n\nexport default class WebRequestBackground {\n  private pendingAuthRequests: any[] = [];\n  private webRequest: any;\n  private isFirefox: boolean;\n\n  constructor(\n    platformUtilsService: PlatformUtilsService,\n    private cipherService: CipherService,\n    private authService: AuthService\n  ) {\n    this.webRequest = (window as any).chrome.webRequest;\n    this.isFirefox = platformUtilsService.isFirefox();\n  }\n\n  async init() {\n    if (!this.webRequest || !this.webRequest.onAuthRequired) {\n      return;\n    }\n\n    this.webRequest.onAuthRequired.addListener(\n      async (details: any, callback: any) => {\n        if (!details.url || this.pendingAuthRequests.indexOf(details.requestId) !== -1) {\n          if (callback) {\n            callback();\n          }\n          return;\n        }\n\n        this.pendingAuthRequests.push(details.requestId);\n\n        if (this.isFirefox) {\n          // eslint-disable-next-line\n          return new Promise(async (resolve, reject) => {\n            await this.resolveAuthCredentials(details.url, resolve, reject);\n          });\n        } else {\n          await this.resolveAuthCredentials(details.url, callback, callback);\n        }\n      },\n      { urls: [\"http://*/*\", \"https://*/*\"] },\n      [this.isFirefox ? \"blocking\" : \"asyncBlocking\"]\n    );\n\n    this.webRequest.onCompleted.addListener((details: any) => this.completeAuthRequest(details), {\n      urls: [\"http://*/*\"],\n    });\n    this.webRequest.onErrorOccurred.addListener(\n      (details: any) => this.completeAuthRequest(details),\n      {\n        urls: [\"http://*/*\"],\n      }\n    );\n  }\n\n  // eslint-disable-next-line\n  private async resolveAuthCredentials(domain: string, success: Function, error: Function) {\n    if ((await this.authService.getAuthStatus()) < AuthenticationStatus.Unlocked) {\n      error();\n      return;\n    }\n\n    try {\n      const ciphers = await this.cipherService.getAllDecryptedForUrl(\n        domain,\n        null,\n        UriMatchType.Host\n      );\n      if (ciphers == null || ciphers.length !== 1) {\n        error();\n        return;\n      }\n\n      success({\n        authCredentials: {\n          username: ciphers[0].login.username,\n          password: ciphers[0].login.password,\n        },\n      });\n    } catch {\n      error();\n    }\n  }\n\n  private completeAuthRequest(details: any) {\n    const i = this.pendingAuthRequests.indexOf(details.requestId);\n    if (i > -1) {\n      this.pendingAuthRequests.splice(i, 1);\n    }\n  }\n}\n","import { ApiService as ApiServiceAbstraction } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService as AppIdServiceAbstraction } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuditService as AuditServiceAbstraction } from \"@bitwarden/common/abstractions/audit.service\";\nimport { AuthService as AuthServiceAbstraction } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CipherService as CipherServiceAbstraction } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService as CollectionServiceAbstraction } from \"@bitwarden/common/abstractions/collection.service\";\nimport { CryptoService as CryptoServiceAbstraction } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService as CryptoFunctionServiceAbstraction } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService as EnvironmentServiceAbstraction } from \"@bitwarden/common/abstractions/environment.service\";\nimport { EventService as EventServiceAbstraction } from \"@bitwarden/common/abstractions/event.service\";\nimport { ExportService as ExportServiceAbstraction } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"@bitwarden/common/abstractions/fileUpload.service\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { InternalFolderService as InternalFolderServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService as I18nServiceAbstraction } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService as LogServiceAbstraction } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { OrganizationService as OrganizationServiceAbstraction } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService as PolicyServiceAbstraction } from \"@bitwarden/common/abstractions/policy.service\";\nimport { ProviderService as ProviderServiceAbstraction } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SearchService as SearchServiceAbstraction } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService as SendServiceAbstraction } from \"@bitwarden/common/abstractions/send.service\";\nimport { SettingsService as SettingsServiceAbstraction } from \"@bitwarden/common/abstractions/settings.service\";\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { SyncService as SyncServiceAbstraction } from \"@bitwarden/common/abstractions/sync.service\";\nimport { SystemService as SystemServiceAbstraction } from \"@bitwarden/common/abstractions/system.service\";\nimport { TokenService as TokenServiceAbstraction } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService as TotpServiceAbstraction } from \"@bitwarden/common/abstractions/totp.service\";\nimport { TwoFactorService as TwoFactorServiceAbstraction } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"@bitwarden/common/abstractions/userVerification.service\";\nimport { UsernameGenerationService as UsernameGenerationServiceAbstraction } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"@bitwarden/common/abstractions/vaultTimeout.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { GlobalState } from \"@bitwarden/common/models/domain/globalState\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { ApiService } from \"@bitwarden/common/services/api.service\";\nimport { AppIdService } from \"@bitwarden/common/services/appId.service\";\nimport { AuditService } from \"@bitwarden/common/services/audit.service\";\nimport { AuthService } from \"@bitwarden/common/services/auth.service\";\nimport { CipherService } from \"@bitwarden/common/services/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/services/collection.service\";\nimport { ConsoleLogService } from \"@bitwarden/common/services/consoleLog.service\";\nimport { ContainerService } from \"@bitwarden/common/services/container.service\";\nimport { EncryptService } from \"@bitwarden/common/services/encrypt.service\";\nimport { EnvironmentService } from \"@bitwarden/common/services/environment.service\";\nimport { EventService } from \"@bitwarden/common/services/event.service\";\nimport { ExportService } from \"@bitwarden/common/services/export.service\";\nimport { FileUploadService } from \"@bitwarden/common/services/fileUpload.service\";\nimport { FolderApiService } from \"@bitwarden/common/services/folder/folder-api.service\";\nimport { FolderService } from \"@bitwarden/common/services/folder/folder.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/services/keyConnector.service\";\nimport { MemoryStorageService } from \"@bitwarden/common/services/memoryStorage.service\";\nimport { NotificationsService } from \"@bitwarden/common/services/notifications.service\";\nimport { OrganizationService } from \"@bitwarden/common/services/organization.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/services/passwordGeneration.service\";\nimport { PolicyService } from \"@bitwarden/common/services/policy.service\";\nimport { ProviderService } from \"@bitwarden/common/services/provider.service\";\nimport { SearchService } from \"@bitwarden/common/services/search.service\";\nimport { SendService } from \"@bitwarden/common/services/send.service\";\nimport { SettingsService } from \"@bitwarden/common/services/settings.service\";\nimport { StateMigrationService } from \"@bitwarden/common/services/stateMigration.service\";\nimport { SyncService } from \"@bitwarden/common/services/sync.service\";\nimport { SystemService } from \"@bitwarden/common/services/system.service\";\nimport { TokenService } from \"@bitwarden/common/services/token.service\";\nimport { TotpService } from \"@bitwarden/common/services/totp.service\";\nimport { TwoFactorService } from \"@bitwarden/common/services/twoFactor.service\";\nimport { UserVerificationService } from \"@bitwarden/common/services/userVerification.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/services/usernameGeneration.service\";\nimport { WebCryptoFunctionService } from \"@bitwarden/common/services/webCryptoFunction.service\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { SafariApp } from \"../browser/safariApp\";\nimport { Account } from \"../models/account\";\nimport { PopupUtilsService } from \"../popup/services/popup-utils.service\";\nimport { AutofillService as AutofillServiceAbstraction } from \"../services/abstractions/autofill.service\";\nimport { StateService as StateServiceAbstraction } from \"../services/abstractions/state.service\";\nimport AutofillService from \"../services/autofill.service\";\nimport { BrowserCryptoService } from \"../services/browserCrypto.service\";\nimport BrowserLocalStorageService from \"../services/browserLocalStorage.service\";\nimport BrowserMessagingService from \"../services/browserMessaging.service\";\nimport BrowserMessagingPrivateModeBackgroundService from \"../services/browserMessagingPrivateModeBackground.service\";\nimport BrowserPlatformUtilsService from \"../services/browserPlatformUtils.service\";\nimport I18nService from \"../services/i18n.service\";\nimport { KeyGenerationService } from \"../services/keyGeneration.service\";\nimport { LocalBackedSessionStorageService } from \"../services/localBackedSessionStorage.service\";\nimport { StateService } from \"../services/state.service\";\nimport { VaultFilterService } from \"../services/vaultFilter.service\";\nimport VaultTimeoutService from \"../services/vaultTimeout.service\";\n\nimport CommandsBackground from \"./commands.background\";\nimport ContextMenusBackground from \"./contextMenus.background\";\nimport IdleBackground from \"./idle.background\";\nimport IconDetails from \"./models/iconDetails\";\nimport { NativeMessagingBackground } from \"./nativeMessaging.background\";\nimport NotificationBackground from \"./notification.background\";\nimport RuntimeBackground from \"./runtime.background\";\nimport TabsBackground from \"./tabs.background\";\nimport WebRequestBackground from \"./webRequest.background\";\n\nexport default class MainBackground {\n  messagingService: MessagingServiceAbstraction;\n  storageService: AbstractStorageService;\n  secureStorageService: AbstractStorageService;\n  memoryStorageService: AbstractStorageService;\n  i18nService: I18nServiceAbstraction;\n  platformUtilsService: PlatformUtilsServiceAbstraction;\n  logService: LogServiceAbstraction;\n  cryptoService: CryptoServiceAbstraction;\n  cryptoFunctionService: CryptoFunctionServiceAbstraction;\n  tokenService: TokenServiceAbstraction;\n  appIdService: AppIdServiceAbstraction;\n  apiService: ApiServiceAbstraction;\n  environmentService: EnvironmentServiceAbstraction;\n  settingsService: SettingsServiceAbstraction;\n  cipherService: CipherServiceAbstraction;\n  folderService: InternalFolderServiceAbstraction;\n  collectionService: CollectionServiceAbstraction;\n  vaultTimeoutService: VaultTimeoutServiceAbstraction;\n  syncService: SyncServiceAbstraction;\n  passwordGenerationService: PasswordGenerationServiceAbstraction;\n  totpService: TotpServiceAbstraction;\n  autofillService: AutofillServiceAbstraction;\n  containerService: ContainerService;\n  auditService: AuditServiceAbstraction;\n  authService: AuthServiceAbstraction;\n  exportService: ExportServiceAbstraction;\n  searchService: SearchServiceAbstraction;\n  notificationsService: NotificationsServiceAbstraction;\n  stateService: StateServiceAbstraction;\n  stateMigrationService: StateMigrationService;\n  systemService: SystemServiceAbstraction;\n  eventService: EventServiceAbstraction;\n  policyService: PolicyServiceAbstraction;\n  popupUtilsService: PopupUtilsService;\n  sendService: SendServiceAbstraction;\n  fileUploadService: FileUploadServiceAbstraction;\n  organizationService: OrganizationServiceAbstraction;\n  providerService: ProviderServiceAbstraction;\n  keyConnectorService: KeyConnectorServiceAbstraction;\n  userVerificationService: UserVerificationServiceAbstraction;\n  twoFactorService: TwoFactorServiceAbstraction;\n  vaultFilterService: VaultFilterService;\n  usernameGenerationService: UsernameGenerationServiceAbstraction;\n  encryptService: EncryptService;\n  folderApiService: FolderApiServiceAbstraction;\n\n  // Passed to the popup for Safari to workaround issues with theming, downloading, etc.\n  backgroundWindow = window;\n\n  onUpdatedRan: boolean;\n  onReplacedRan: boolean;\n  loginToAutoFill: CipherView = null;\n\n  private commandsBackground: CommandsBackground;\n  private contextMenusBackground: ContextMenusBackground;\n  private idleBackground: IdleBackground;\n  private notificationBackground: NotificationBackground;\n  private runtimeBackground: RuntimeBackground;\n  private tabsBackground: TabsBackground;\n  private webRequestBackground: WebRequestBackground;\n\n  private sidebarAction: any;\n  private buildingContextMenu: boolean;\n  private menuOptionsLoaded: any[] = [];\n  private syncTimeout: any;\n  private isSafari: boolean;\n  private nativeMessagingBackground: NativeMessagingBackground;\n\n  constructor(public isPrivateMode: boolean = false) {\n    // Services\n    const lockedCallback = async (userId?: string) => {\n      if (this.notificationsService != null) {\n        this.notificationsService.updateConnection(false);\n      }\n      await this.setIcon();\n      await this.refreshBadgeAndMenu(true);\n      if (this.systemService != null) {\n        await this.systemService.clearPendingClipboard();\n        await this.reloadProcess();\n      }\n    };\n\n    const logoutCallback = async (expired: boolean, userId?: string) =>\n      await this.logout(expired, userId);\n\n    this.messagingService = isPrivateMode\n      ? new BrowserMessagingPrivateModeBackgroundService()\n      : new BrowserMessagingService();\n    this.logService = new ConsoleLogService(false);\n    this.cryptoFunctionService = new WebCryptoFunctionService(window);\n    this.storageService = new BrowserLocalStorageService();\n    this.secureStorageService = new BrowserLocalStorageService();\n    this.memoryStorageService =\n      chrome.runtime.getManifest().manifest_version == 3\n        ? new LocalBackedSessionStorageService(\n            new EncryptService(this.cryptoFunctionService, this.logService, false),\n            new KeyGenerationService(this.cryptoFunctionService)\n          )\n        : new MemoryStorageService();\n    this.stateMigrationService = new StateMigrationService(\n      this.storageService,\n      this.secureStorageService,\n      new StateFactory(GlobalState, Account)\n    );\n    this.stateService = new StateService(\n      this.storageService,\n      this.secureStorageService,\n      this.memoryStorageService,\n      this.logService,\n      this.stateMigrationService,\n      new StateFactory(GlobalState, Account)\n    );\n    this.platformUtilsService = new BrowserPlatformUtilsService(\n      this.messagingService,\n      this.stateService,\n      (clipboardValue, clearMs) => {\n        if (this.systemService != null) {\n          this.systemService.clearClipboard(clipboardValue, clearMs);\n        }\n      },\n      async () => {\n        if (this.nativeMessagingBackground != null) {\n          const promise = this.nativeMessagingBackground.getResponse();\n\n          try {\n            await this.nativeMessagingBackground.send({ command: \"biometricUnlock\" });\n          } catch (e) {\n            return Promise.reject(e);\n          }\n\n          return promise.then((result) => result.response === \"unlocked\");\n        }\n      }\n    );\n    this.i18nService = new I18nService(BrowserApi.getUILanguage(window));\n    this.encryptService = new EncryptService(this.cryptoFunctionService, this.logService, true);\n    this.cryptoService = new BrowserCryptoService(\n      this.cryptoFunctionService,\n      this.encryptService,\n      this.platformUtilsService,\n      this.logService,\n      this.stateService\n    );\n    this.tokenService = new TokenService(this.stateService);\n    this.appIdService = new AppIdService(this.storageService);\n    this.environmentService = new EnvironmentService(this.stateService);\n    this.apiService = new ApiService(\n      this.tokenService,\n      this.platformUtilsService,\n      this.environmentService,\n      this.appIdService,\n      (expired: boolean) => this.logout(expired)\n    );\n    this.settingsService = new SettingsService(this.stateService);\n    this.fileUploadService = new FileUploadService(this.logService, this.apiService);\n    this.cipherService = new CipherService(\n      this.cryptoService,\n      this.settingsService,\n      this.apiService,\n      this.fileUploadService,\n      this.i18nService,\n      () => this.searchService,\n      this.logService,\n      this.stateService\n    );\n    this.folderService = new FolderService(\n      this.cryptoService,\n      this.i18nService,\n      this.cipherService,\n      this.stateService\n    );\n    this.folderApiService = new FolderApiService(this.folderService, this.apiService);\n    this.collectionService = new CollectionService(\n      this.cryptoService,\n      this.i18nService,\n      this.stateService\n    );\n    this.searchService = new SearchService(this.cipherService, this.logService, this.i18nService);\n    this.sendService = new SendService(\n      this.cryptoService,\n      this.apiService,\n      this.fileUploadService,\n      this.i18nService,\n      this.cryptoFunctionService,\n      this.stateService\n    );\n    this.organizationService = new OrganizationService(this.stateService);\n    this.policyService = new PolicyService(\n      this.stateService,\n      this.organizationService,\n      this.apiService\n    );\n    this.keyConnectorService = new KeyConnectorService(\n      this.stateService,\n      this.cryptoService,\n      this.apiService,\n      this.tokenService,\n      this.logService,\n      this.organizationService,\n      this.cryptoFunctionService,\n      logoutCallback\n    );\n    this.vaultFilterService = new VaultFilterService(\n      this.stateService,\n      this.organizationService,\n      this.folderService,\n      this.cipherService,\n      this.collectionService,\n      this.policyService\n    );\n\n    this.twoFactorService = new TwoFactorService(this.i18nService, this.platformUtilsService);\n\n    // eslint-disable-next-line\n    const that = this;\n    const backgroundMessagingService = new (class extends MessagingServiceAbstraction {\n      // AuthService should send the messages to the background not popup.\n      send = (subscriber: string, arg: any = {}) => {\n        const message = Object.assign({}, { command: subscriber }, arg);\n        that.runtimeBackground.processMessage(message, that, null);\n      };\n    })();\n    this.authService = new AuthService(\n      this.cryptoService,\n      this.apiService,\n      this.tokenService,\n      this.appIdService,\n      this.platformUtilsService,\n      backgroundMessagingService,\n      this.logService,\n      this.keyConnectorService,\n      this.environmentService,\n      this.stateService,\n      this.twoFactorService,\n      this.i18nService\n    );\n\n    this.vaultTimeoutService = new VaultTimeoutService(\n      this.cipherService,\n      this.folderService,\n      this.collectionService,\n      this.cryptoService,\n      this.platformUtilsService,\n      this.messagingService,\n      this.searchService,\n      this.tokenService,\n      this.policyService,\n      this.keyConnectorService,\n      this.stateService,\n      this.authService,\n      lockedCallback,\n      logoutCallback\n    );\n    this.providerService = new ProviderService(this.stateService);\n    this.syncService = new SyncService(\n      this.apiService,\n      this.settingsService,\n      this.folderService,\n      this.cipherService,\n      this.cryptoService,\n      this.collectionService,\n      this.messagingService,\n      this.policyService,\n      this.sendService,\n      this.logService,\n      this.keyConnectorService,\n      this.stateService,\n      this.organizationService,\n      this.providerService,\n      this.folderApiService,\n      logoutCallback\n    );\n    this.eventService = new EventService(\n      this.apiService,\n      this.cipherService,\n      this.stateService,\n      this.logService,\n      this.organizationService\n    );\n    this.passwordGenerationService = new PasswordGenerationService(\n      this.cryptoService,\n      this.policyService,\n      this.stateService\n    );\n    this.totpService = new TotpService(this.cryptoFunctionService, this.logService);\n    this.autofillService = new AutofillService(\n      this.cipherService,\n      this.stateService,\n      this.totpService,\n      this.eventService,\n      this.logService\n    );\n    this.containerService = new ContainerService(this.cryptoService);\n    this.auditService = new AuditService(this.cryptoFunctionService, this.apiService);\n    this.exportService = new ExportService(\n      this.folderService,\n      this.cipherService,\n      this.apiService,\n      this.cryptoService,\n      this.cryptoFunctionService\n    );\n    this.notificationsService = new NotificationsService(\n      this.syncService,\n      this.appIdService,\n      this.apiService,\n      this.environmentService,\n      logoutCallback,\n      this.logService,\n      this.stateService,\n      this.authService\n    );\n    this.popupUtilsService = new PopupUtilsService(isPrivateMode);\n\n    this.userVerificationService = new UserVerificationService(\n      this.cryptoService,\n      this.i18nService,\n      this.apiService\n    );\n\n    const systemUtilsServiceReloadCallback = () => {\n      const forceWindowReload =\n        this.platformUtilsService.isSafari() ||\n        this.platformUtilsService.isFirefox() ||\n        this.platformUtilsService.isOpera();\n      BrowserApi.reloadExtension(forceWindowReload ? window : null);\n      return Promise.resolve();\n    };\n\n    this.systemService = new SystemService(\n      this.messagingService,\n      this.platformUtilsService,\n      systemUtilsServiceReloadCallback,\n      this.stateService\n    );\n\n    // Other fields\n    this.isSafari = this.platformUtilsService.isSafari();\n    this.sidebarAction = this.isSafari\n      ? null\n      : typeof opr !== \"undefined\" && opr.sidebarAction\n      ? opr.sidebarAction\n      : (window as any).chrome.sidebarAction;\n\n    // Background\n    this.runtimeBackground = new RuntimeBackground(\n      this,\n      this.autofillService,\n      this.platformUtilsService as BrowserPlatformUtilsService,\n      this.i18nService,\n      this.notificationsService,\n      this.systemService,\n      this.environmentService,\n      this.messagingService,\n      this.logService\n    );\n    this.nativeMessagingBackground = new NativeMessagingBackground(\n      this.cryptoService,\n      this.cryptoFunctionService,\n      this.runtimeBackground,\n      this.i18nService,\n      this.messagingService,\n      this.appIdService,\n      this.platformUtilsService,\n      this.stateService,\n      this.logService,\n      this.authService\n    );\n    this.commandsBackground = new CommandsBackground(\n      this,\n      this.passwordGenerationService,\n      this.platformUtilsService,\n      this.vaultTimeoutService,\n      this.authService\n    );\n    this.notificationBackground = new NotificationBackground(\n      this.autofillService,\n      this.cipherService,\n      this.authService,\n      this.policyService,\n      this.folderService,\n      this.stateService\n    );\n\n    this.tabsBackground = new TabsBackground(this, this.notificationBackground);\n    this.contextMenusBackground = new ContextMenusBackground(\n      this,\n      this.cipherService,\n      this.passwordGenerationService,\n      this.platformUtilsService,\n      this.authService,\n      this.eventService,\n      this.totpService\n    );\n    this.idleBackground = new IdleBackground(\n      this.vaultTimeoutService,\n      this.stateService,\n      this.notificationsService\n    );\n    this.webRequestBackground = new WebRequestBackground(\n      this.platformUtilsService,\n      this.cipherService,\n      this.authService\n    );\n\n    this.usernameGenerationService = new UsernameGenerationService(\n      this.cryptoService,\n      this.stateService,\n      this.apiService\n    );\n  }\n\n  async bootstrap() {\n    this.containerService.attachToWindow(window);\n\n    await this.stateService.init();\n\n    await (this.vaultTimeoutService as VaultTimeoutService).init(true);\n    await (this.i18nService as I18nService).init();\n    await (this.eventService as EventService).init(true);\n    await this.runtimeBackground.init();\n    await this.notificationBackground.init();\n    await this.commandsBackground.init();\n\n    this.twoFactorService.init();\n\n    await this.tabsBackground.init();\n    await this.contextMenusBackground.init();\n    await this.idleBackground.init();\n    await this.webRequestBackground.init();\n\n    if (this.platformUtilsService.isFirefox() && !this.isPrivateMode) {\n      // Set Private Mode windows to the default icon - they do not share state with the background page\n      const privateWindows = await BrowserApi.getPrivateModeWindows();\n      privateWindows.forEach(async (win) => {\n        await this.actionSetIcon(chrome.browserAction, \"\", win.id);\n        await this.actionSetIcon(this.sidebarAction, \"\", win.id);\n      });\n\n      BrowserApi.onWindowCreated(async (win) => {\n        if (win.incognito) {\n          await this.actionSetIcon(chrome.browserAction, \"\", win.id);\n          await this.actionSetIcon(this.sidebarAction, \"\", win.id);\n        }\n      });\n    }\n\n    return new Promise<void>((resolve) => {\n      setTimeout(async () => {\n        await this.environmentService.setUrlsFromStorage();\n        await this.setIcon();\n        this.fullSync(true);\n        setTimeout(() => this.notificationsService.init(), 2500);\n        resolve();\n      }, 500);\n    });\n  }\n\n  async setIcon() {\n    if ((!chrome.browserAction && !this.sidebarAction) || this.isPrivateMode) {\n      return;\n    }\n\n    const authStatus = await this.authService.getAuthStatus();\n\n    let suffix = \"\";\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      suffix = \"_gray\";\n    } else if (authStatus === AuthenticationStatus.Locked) {\n      suffix = \"_locked\";\n    }\n\n    await this.actionSetIcon(chrome.browserAction, suffix);\n    await this.actionSetIcon(this.sidebarAction, suffix);\n  }\n\n  async refreshBadgeAndMenu(forLocked = false) {\n    if (!chrome.windows || !chrome.contextMenus) {\n      return;\n    }\n\n    const menuDisabled = await this.stateService.getDisableContextMenuItem();\n    if (!menuDisabled) {\n      await this.buildContextMenu();\n    } else {\n      await this.contextMenusRemoveAll();\n    }\n\n    if (forLocked) {\n      await this.loadMenuAndUpdateBadgeForNoAccessState(!menuDisabled);\n      this.onUpdatedRan = this.onReplacedRan = false;\n      return;\n    }\n\n    const tab = await BrowserApi.getTabFromCurrentWindow();\n    if (tab) {\n      await this.contextMenuReady(tab, !menuDisabled);\n    }\n  }\n\n  async logout(expired: boolean, userId?: string) {\n    await this.eventService.uploadEvents(userId);\n\n    await Promise.all([\n      this.eventService.clearEvents(userId),\n      this.syncService.setLastSync(new Date(0), userId),\n      this.cryptoService.clearKeys(userId),\n      this.settingsService.clear(userId),\n      this.cipherService.clear(userId),\n      this.folderService.clear(userId),\n      this.collectionService.clear(userId),\n      this.policyService.clear(userId),\n      this.passwordGenerationService.clear(userId),\n      this.vaultTimeoutService.clear(userId),\n      this.keyConnectorService.clear(),\n      this.vaultFilterService.clear(),\n    ]);\n\n    await this.stateService.clean({ userId: userId });\n\n    if (userId == null || userId === (await this.stateService.getUserId())) {\n      this.searchService.clearIndex();\n      this.messagingService.send(\"doneLoggingOut\", { expired: expired, userId: userId });\n    }\n\n    await this.setIcon();\n    await this.refreshBadgeAndMenu(true);\n    await this.reseedStorage();\n    this.notificationsService.updateConnection(false);\n    await this.systemService.clearPendingClipboard();\n    await this.reloadProcess();\n  }\n\n  async collectPageDetailsForContentScript(tab: any, sender: string, frameId: number = null) {\n    if (tab == null || !tab.id) {\n      return;\n    }\n\n    const options: any = {};\n    if (frameId != null) {\n      options.frameId = frameId;\n    }\n\n    BrowserApi.tabSendMessage(\n      tab,\n      {\n        command: \"collectPageDetails\",\n        tab: tab,\n        sender: sender,\n      },\n      options\n    );\n  }\n\n  async openPopup() {\n    // Chrome APIs cannot open popup\n\n    // TODO: Do we need to open this popup?\n    if (!this.isSafari) {\n      return;\n    }\n    await SafariApp.sendMessageToApp(\"showPopover\", null, true);\n  }\n\n  async reseedStorage() {\n    if (\n      !this.platformUtilsService.isChrome() &&\n      !this.platformUtilsService.isVivaldi() &&\n      !this.platformUtilsService.isOpera()\n    ) {\n      return;\n    }\n\n    const currentVaultTimeout = await this.stateService.getVaultTimeout();\n    if (currentVaultTimeout == null) {\n      return;\n    }\n\n    const getStorage = (): Promise<any> =>\n      new Promise((resolve) => {\n        chrome.storage.local.get(null, (o: any) => resolve(o));\n      });\n\n    const clearStorage = (): Promise<void> =>\n      new Promise((resolve) => {\n        chrome.storage.local.clear(() => resolve());\n      });\n\n    const storage = await getStorage();\n    await clearStorage();\n\n    for (const key in storage) {\n      // eslint-disable-next-line\n      if (!storage.hasOwnProperty(key)) {\n        continue;\n      }\n      await this.storageService.save(key, storage[key]);\n    }\n  }\n\n  private async buildContextMenu() {\n    if (!chrome.contextMenus || this.buildingContextMenu) {\n      return;\n    }\n\n    this.buildingContextMenu = true;\n    await this.contextMenusRemoveAll();\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"root\",\n      contexts: [\"all\"],\n      title: \"Bitwarden\",\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"autofill\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"autoFill\"),\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"copy-username\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"copyUsername\"),\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"copy-password\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"copyPassword\"),\n    });\n\n    if (await this.stateService.getCanAccessPremium()) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"copy-totp\",\n        parentId: \"root\",\n        contexts: [\"all\"],\n        title: this.i18nService.t(\"copyVerificationCode\"),\n      });\n    }\n\n    await this.contextMenusCreate({\n      type: \"separator\",\n      parentId: \"root\",\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"generate-password\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"generatePasswordCopied\"),\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"copy-identifier\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"copyElementIdentifier\"),\n    });\n\n    this.buildingContextMenu = false;\n  }\n\n  private async contextMenuReady(tab: any, contextMenuEnabled: boolean) {\n    await this.loadMenuAndUpdateBadge(tab.url, tab.id, contextMenuEnabled);\n    this.onUpdatedRan = this.onReplacedRan = false;\n  }\n\n  private async loadMenuAndUpdateBadge(url: string, tabId: number, contextMenuEnabled: boolean) {\n    if (!url || (!chrome.browserAction && !this.sidebarAction)) {\n      return;\n    }\n\n    this.actionSetBadgeBackgroundColor(chrome.browserAction);\n    this.actionSetBadgeBackgroundColor(this.sidebarAction);\n\n    this.menuOptionsLoaded = [];\n    const authStatus = await this.authService.getAuthStatus();\n    if (authStatus === AuthenticationStatus.Unlocked) {\n      try {\n        const ciphers = await this.cipherService.getAllDecryptedForUrl(url);\n        ciphers.sort((a, b) => this.cipherService.sortCiphersByLastUsedThenName(a, b));\n\n        if (contextMenuEnabled) {\n          ciphers.forEach((cipher) => {\n            this.loadLoginContextMenuOptions(cipher);\n          });\n        }\n\n        const disableBadgeCounter = await this.stateService.getDisableBadgeCounter();\n        let theText = \"\";\n\n        if (!disableBadgeCounter) {\n          if (ciphers.length > 0 && ciphers.length <= 9) {\n            theText = ciphers.length.toString();\n          } else if (ciphers.length > 0) {\n            theText = \"9+\";\n          }\n        }\n\n        if (contextMenuEnabled && ciphers.length === 0) {\n          await this.loadNoLoginsContextMenuOptions(this.i18nService.t(\"noMatchingLogins\"));\n        }\n\n        this.sidebarActionSetBadgeText(theText, tabId);\n        this.browserActionSetBadgeText(theText, tabId);\n\n        return;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    await this.loadMenuAndUpdateBadgeForNoAccessState(contextMenuEnabled);\n  }\n\n  private async loadMenuAndUpdateBadgeForNoAccessState(contextMenuEnabled: boolean) {\n    if (contextMenuEnabled) {\n      const authed = await this.stateService.getIsAuthenticated();\n      await this.loadNoLoginsContextMenuOptions(\n        this.i18nService.t(authed ? \"unlockVaultMenu\" : \"loginToVaultMenu\")\n      );\n    }\n\n    const tabs = await BrowserApi.getActiveTabs();\n    if (tabs != null) {\n      tabs.forEach((tab) => {\n        if (tab.id != null) {\n          this.browserActionSetBadgeText(\"\", tab.id);\n          this.sidebarActionSetBadgeText(\"\", tab.id);\n        }\n      });\n    }\n  }\n\n  private async loadLoginContextMenuOptions(cipher: any) {\n    if (\n      cipher == null ||\n      cipher.type !== CipherType.Login ||\n      cipher.reprompt !== CipherRepromptType.None\n    ) {\n      return;\n    }\n\n    let title = cipher.name;\n    if (cipher.login.username && cipher.login.username !== \"\") {\n      title += \" (\" + cipher.login.username + \")\";\n    }\n    await this.loadContextMenuOptions(title, cipher.id, cipher);\n  }\n\n  private async loadNoLoginsContextMenuOptions(noLoginsMessage: string) {\n    await this.loadContextMenuOptions(noLoginsMessage, \"noop\", null);\n  }\n\n  private async loadContextMenuOptions(title: string, idSuffix: string, cipher: any) {\n    if (\n      !chrome.contextMenus ||\n      this.menuOptionsLoaded.indexOf(idSuffix) > -1 ||\n      (cipher != null && cipher.type !== CipherType.Login)\n    ) {\n      return;\n    }\n\n    this.menuOptionsLoaded.push(idSuffix);\n\n    if (cipher == null || (cipher.login.password && cipher.login.password !== \"\")) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"autofill_\" + idSuffix,\n        parentId: \"autofill\",\n        contexts: [\"all\"],\n        title: this.sanitizeContextMenuTitle(title),\n      });\n    }\n\n    if (cipher == null || (cipher.login.username && cipher.login.username !== \"\")) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"copy-username_\" + idSuffix,\n        parentId: \"copy-username\",\n        contexts: [\"all\"],\n        title: this.sanitizeContextMenuTitle(title),\n      });\n    }\n\n    if (\n      cipher == null ||\n      (cipher.login.password && cipher.login.password !== \"\" && cipher.viewPassword)\n    ) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"copy-password_\" + idSuffix,\n        parentId: \"copy-password\",\n        contexts: [\"all\"],\n        title: this.sanitizeContextMenuTitle(title),\n      });\n    }\n\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    if (canAccessPremium && (cipher == null || (cipher.login.totp && cipher.login.totp !== \"\"))) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"copy-totp_\" + idSuffix,\n        parentId: \"copy-totp\",\n        contexts: [\"all\"],\n        title: this.sanitizeContextMenuTitle(title),\n      });\n    }\n  }\n\n  private sanitizeContextMenuTitle(title: string): string {\n    return title.replace(/&/g, \"&&\");\n  }\n\n  private async fullSync(override = false) {\n    const syncInternal = 6 * 60 * 60 * 1000; // 6 hours\n    const lastSync = await this.syncService.getLastSync();\n\n    let lastSyncAgo = syncInternal + 1;\n    if (lastSync != null) {\n      lastSyncAgo = new Date().getTime() - lastSync.getTime();\n    }\n\n    if (override || lastSyncAgo >= syncInternal) {\n      await this.syncService.fullSync(override);\n      this.scheduleNextSync();\n    } else {\n      this.scheduleNextSync();\n    }\n  }\n\n  private scheduleNextSync() {\n    if (this.syncTimeout) {\n      clearTimeout(this.syncTimeout);\n    }\n\n    this.syncTimeout = setTimeout(async () => await this.fullSync(), 5 * 60 * 1000); // check every 5 minutes\n  }\n\n  // Browser API Helpers\n\n  private contextMenusRemoveAll() {\n    return new Promise<void>((resolve) => {\n      chrome.contextMenus.removeAll(() => {\n        resolve();\n        if (chrome.runtime.lastError) {\n          return;\n        }\n      });\n    });\n  }\n\n  private contextMenusCreate(options: any) {\n    return new Promise<void>((resolve) => {\n      chrome.contextMenus.create(options, () => {\n        resolve();\n        if (chrome.runtime.lastError) {\n          return;\n        }\n      });\n    });\n  }\n\n  private async actionSetIcon(theAction: any, suffix: string, windowId?: number): Promise<any> {\n    if (!theAction || !theAction.setIcon) {\n      return;\n    }\n\n    const options: IconDetails = {\n      path: {\n        19: \"images/icon19\" + suffix + \".png\",\n        38: \"images/icon38\" + suffix + \".png\",\n      },\n    };\n\n    if (this.platformUtilsService.isFirefox()) {\n      options.windowId = windowId;\n      await theAction.setIcon(options);\n    } else if (this.platformUtilsService.isSafari()) {\n      // Workaround since Safari 14.0.3 returns a pending promise\n      // which doesn't resolve within a reasonable time.\n      theAction.setIcon(options);\n    } else {\n      return new Promise<void>((resolve) => {\n        theAction.setIcon(options, () => resolve());\n      });\n    }\n  }\n\n  private actionSetBadgeBackgroundColor(action: any) {\n    if (action && action.setBadgeBackgroundColor) {\n      action.setBadgeBackgroundColor({ color: \"#294e5f\" });\n    }\n  }\n\n  private browserActionSetBadgeText(text: string, tabId: number) {\n    if (chrome.browserAction && chrome.browserAction.setBadgeText) {\n      chrome.browserAction.setBadgeText({\n        text: text,\n        tabId: tabId,\n      });\n    }\n  }\n\n  private sidebarActionSetBadgeText(text: string, tabId: number) {\n    if (!this.sidebarAction) {\n      return;\n    }\n\n    if (this.sidebarAction.setBadgeText) {\n      this.sidebarAction.setBadgeText({\n        text: text,\n        tabId: tabId,\n      });\n    } else if (this.sidebarAction.setTitle) {\n      let title = \"Bitwarden\";\n      if (text && text !== \"\") {\n        title += \" [\" + text + \"]\";\n      }\n\n      this.sidebarAction.setTitle({\n        title: title,\n        tabId: tabId,\n      });\n    }\n  }\n\n  private async reloadProcess(): Promise<void> {\n    const accounts = this.stateService.accounts.getValue();\n    if (accounts != null) {\n      for (const userId of Object.keys(accounts)) {\n        if ((await this.authService.getAuthStatus(userId)) === AuthenticationStatus.Unlocked) {\n          return;\n        }\n      }\n    }\n    await this.systemService.startProcessReload();\n  }\n}\n","import { FileDownloadRequest } from \"./fileDownloadRequest\";\n\nexport class FileDownloadBuilder {\n  get blobOptions(): any {\n    const options = this._request.blobOptions ?? {};\n    if (options.type == null) {\n      options.type = this.fileType;\n    }\n    return options;\n  }\n\n  get blob(): Blob {\n    if (this.blobOptions != null) {\n      return new Blob([this._request.blobData], this.blobOptions);\n    } else {\n      return new Blob([this._request.blobData]);\n    }\n  }\n\n  get downloadMethod(): \"save\" | \"open\" {\n    if (this._request.downloadMethod != null) {\n      return this._request.downloadMethod;\n    }\n    return this.fileType != \"application/pdf\" ? \"save\" : \"open\";\n  }\n\n  private get fileType() {\n    const fileNameLower = this._request.fileName.toLowerCase();\n    if (fileNameLower.endsWith(\".pdf\")) {\n      return \"application/pdf\";\n    } else if (fileNameLower.endsWith(\".xlsx\")) {\n      return \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n    } else if (fileNameLower.endsWith(\".docx\")) {\n      return \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\";\n    } else if (fileNameLower.endsWith(\".pptx\")) {\n      return \"application/vnd.openxmlformats-officedocument.presentationml.presentation\";\n    } else if (fileNameLower.endsWith(\".csv\")) {\n      return \"text/csv\";\n    } else if (fileNameLower.endsWith(\".png\")) {\n      return \"image/png\";\n    } else if (fileNameLower.endsWith(\".jpg\") || fileNameLower.endsWith(\".jpeg\")) {\n      return \"image/jpeg\";\n    } else if (fileNameLower.endsWith(\".gif\")) {\n      return \"image/gif\";\n    }\n    return null;\n  }\n\n  constructor(private readonly _request: FileDownloadRequest) {}\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { FileDownloadBuilder } from \"@bitwarden/common/abstractions/fileDownload/fileDownloadBuilder\";\nimport { FileDownloadRequest } from \"@bitwarden/common/abstractions/fileDownload/fileDownloadRequest\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { SafariApp } from \"../browser/safariApp\";\n\n@Injectable()\nexport class BrowserFileDownloadService implements FileDownloadService {\n  download(request: FileDownloadRequest): void {\n    const builder = new FileDownloadBuilder(request);\n    if (BrowserApi.isSafariApi) {\n      let data: BlobPart = null;\n      if (builder.blobOptions.type === \"text/plain\" && typeof request.blobData === \"string\") {\n        data = request.blobData;\n      } else {\n        data = Utils.fromBufferToB64(request.blobData as ArrayBuffer);\n      }\n      SafariApp.sendMessageToApp(\n        \"downloadFile\",\n        JSON.stringify({\n          blobData: data,\n          blobOptions: request.blobOptions,\n          fileName: request.fileName,\n        }),\n        true\n      );\n    } else {\n      if (navigator.msSaveOrOpenBlob) {\n        navigator.msSaveBlob(builder.blob, request.fileName);\n      } else {\n        const a = window.document.createElement(\"a\");\n        a.href = URL.createObjectURL(builder.blob);\n        a.download = request.fileName;\n        window.document.body.appendChild(a);\n        a.click();\n        window.document.body.removeChild(a);\n      }\n    }\n  }\n}\n","import { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\n\nexport default class BrowserMessagingPrivateModePopupService implements MessagingService {\n  send(subscriber: string, arg: any = {}) {\n    const message = Object.assign({}, { command: subscriber }, arg);\n    (window as any).bitwardenBackgroundMessageListener(message);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService as LogServiceAbstraction } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\nimport { StateService as StateServiceAbstraction } from \"../../services/abstractions/state.service\";\n\nimport { PopupUtilsService } from \"./popup-utils.service\";\n\n@Injectable()\nexport class InitService {\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private popupUtilsService: PopupUtilsService,\n    private stateService: StateServiceAbstraction,\n    private logService: LogServiceAbstraction,\n    private themingService: AbstractThemingService\n  ) {}\n\n  init() {\n    return async () => {\n      await this.stateService.init();\n\n      if (!this.popupUtilsService.inPopup(window)) {\n        window.document.body.classList.add(\"body-full\");\n      } else if (window.screen.availHeight < 600) {\n        window.document.body.classList.add(\"body-xs\");\n      } else if (window.screen.availHeight <= 800) {\n        window.document.body.classList.add(\"body-sm\");\n      }\n\n      const htmlEl = window.document.documentElement;\n      await this.themingService.monitorThemeChanges();\n      htmlEl.classList.add(\"locale_\" + this.i18nService.translationLocale);\n\n      // Workaround for slow performance on external monitors on Chrome + MacOS\n      // See: https://bugs.chromium.org/p/chromium/issues/detail?id=971701#c64\n      if (\n        this.platformUtilsService.isChrome() &&\n        navigator.platform.indexOf(\"Mac\") > -1 &&\n        this.popupUtilsService.inPopup(window) &&\n        (window.screenLeft < 0 ||\n          window.screenTop < 0 ||\n          window.screenLeft > window.screen.width ||\n          window.screenTop > window.screen.height)\n      ) {\n        htmlEl.classList.add(\"force_redraw\");\n        this.logService.info(\"Force redraw is on\");\n      }\n    };\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { LockGuard as BaseLockGuardService } from \"@bitwarden/angular/guards/lock.guard\";\n\n@Injectable()\nexport class LockGuardService extends BaseLockGuardService {\n  protected homepage = \"tabs/current\";\n}\n","import { Component } from \"@angular/core\";\n\nimport { PasswordRepromptComponent as BasePasswordRepromptComponent } from \"@bitwarden/angular/components/password-reprompt.component\";\n\n@Component({\n  templateUrl: \"password-reprompt.component.html\",\n})\nexport class PasswordRepromptComponent extends BasePasswordRepromptComponent {}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\">\n      <div class=\"modal-body\">\n        <div class=\"box\">\n          <h1 class=\"box-header\">{{ \"passwordConfirmation\" | i18n }}</h1>\n          <div class=\"box-content\">\n            <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n              <div class=\"row-main\">\n                <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPassword\"\n                  class=\"monospaced\"\n                  [(ngModel)]=\"masterPassword\"\n                  required\n                  appAutofocus\n                />\n              </div>\n              <div class=\"action-buttons\">\n                <button\n                  type=\"button\"\n                  class=\"row-btn\"\n                  appStopClick\n                  appBlurClick\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword()\"\n                  [attr.aria-pressed]=\"showPassword\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n              </div>\n            </div>\n          </div>\n          <div class=\"box-footer\">\n            {{ \"passwordConfirmationDesc\" | i18n }}\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" appBlurClick>\n          <span>{{ \"ok\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Injectable } from \"@angular/core\";\n\nimport { PasswordRepromptService as BasePasswordRepromptService } from \"@bitwarden/angular/services/passwordReprompt.service\";\n\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\n\n@Injectable()\nexport class PasswordRepromptService extends BasePasswordRepromptService {\n  component = PasswordRepromptComponent;\n}\n","import { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { ConsoleLogService } from \"@bitwarden/common/services/consoleLog.service\";\nimport { SearchService } from \"@bitwarden/common/services/search.service\";\n\nexport class PopupSearchService extends SearchService {\n  constructor(\n    private mainSearchService: SearchService,\n    cipherService: CipherService,\n    consoleLogService: ConsoleLogService,\n    i18nService: I18nService\n  ) {\n    super(cipherService, consoleLogService, i18nService);\n  }\n\n  clearIndex() {\n    throw new Error(\"Not available.\");\n  }\n\n  indexCiphers(): Promise<void> {\n    throw new Error(\"Not available.\");\n  }\n\n  getIndexForSearch() {\n    return this.mainSearchService.getIndexForSearch();\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { UnauthGuard as BaseUnauthGuardService } from \"@bitwarden/angular/guards/unauth.guard\";\n\n@Injectable()\nexport class UnauthGuardService extends BaseUnauthGuardService {\n  protected homepage = \"tabs/current\";\n}\n","import { APP_INITIALIZER, LOCALE_ID, NgModule } from \"@angular/core\";\n\nimport { LockGuard as BaseLockGuardService } from \"@bitwarden/angular/guards/lock.guard\";\nimport { UnauthGuard as BaseUnauthGuardService } from \"@bitwarden/angular/guards/unauth.guard\";\nimport {\n  JslibServicesModule,\n  MEMORY_STORAGE,\n  SECURE_STORAGE,\n} from \"@bitwarden/angular/services/jslib-services.module\";\nimport { ThemingService } from \"@bitwarden/angular/services/theming/theming.service\";\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { AuthService as AuthServiceAbstraction } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { ExportService } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { FileUploadService } from \"@bitwarden/common/abstractions/fileUpload.service\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService as LogServiceAbstraction } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { NotificationsService } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SearchService as SearchServiceAbstraction } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { SettingsService } from \"@bitwarden/common/abstractions/settings.service\";\nimport { StateService as BaseStateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout.service\";\nimport { AuthService } from \"@bitwarden/common/services/auth.service\";\nimport { ConsoleLogService } from \"@bitwarden/common/services/consoleLog.service\";\nimport { SearchService } from \"@bitwarden/common/services/search.service\";\n\nimport MainBackground from \"../../background/main.background\";\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { AutofillService } from \"../../services/abstractions/autofill.service\";\nimport { StateService as StateServiceAbstraction } from \"../../services/abstractions/state.service\";\nimport { BrowserFileDownloadService } from \"../../services/browserFileDownloadService\";\nimport BrowserMessagingService from \"../../services/browserMessaging.service\";\nimport BrowserMessagingPrivateModePopupService from \"../../services/browserMessagingPrivateModePopup.service\";\nimport { VaultFilterService } from \"../../services/vaultFilter.service\";\n\nimport { DebounceNavigationService } from \"./debounceNavigationService\";\nimport { InitService } from \"./init.service\";\nimport { LockGuardService } from \"./lock-guard.service\";\nimport { PasswordRepromptService } from \"./password-reprompt.service\";\nimport { PopupSearchService } from \"./popup-search.service\";\nimport { PopupUtilsService } from \"./popup-utils.service\";\nimport { UnauthGuardService } from \"./unauth-guard.service\";\n\nconst isPrivateMode = BrowserApi.getBackgroundPage() == null;\nconst mainBackground: MainBackground = isPrivateMode\n  ? createLocalBgService()\n  : BrowserApi.getBackgroundPage().bitwardenMain;\n\nfunction createLocalBgService() {\n  const localBgService = new MainBackground(true);\n  localBgService.bootstrap();\n  return localBgService;\n}\n\nfunction getBgService<T>(service: keyof MainBackground) {\n  return (): T => {\n    return mainBackground ? (mainBackground[service] as any as T) : null;\n  };\n}\n\n@NgModule({\n  imports: [JslibServicesModule],\n  declarations: [],\n  providers: [\n    InitService,\n    DebounceNavigationService,\n    {\n      provide: LOCALE_ID,\n      useFactory: () => getBgService<I18nService>(\"i18nService\")().translationLocale,\n      deps: [],\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: (initService: InitService) => initService.init(),\n      deps: [InitService],\n      multi: true,\n    },\n    { provide: BaseLockGuardService, useClass: LockGuardService },\n    { provide: BaseUnauthGuardService, useClass: UnauthGuardService },\n    { provide: PopupUtilsService, useFactory: () => new PopupUtilsService(isPrivateMode) },\n    {\n      provide: MessagingService,\n      useFactory: () => {\n        return isPrivateMode\n          ? new BrowserMessagingPrivateModePopupService()\n          : new BrowserMessagingService();\n      },\n    },\n    {\n      provide: TwoFactorService,\n      useFactory: getBgService<TwoFactorService>(\"twoFactorService\"),\n      deps: [],\n    },\n    {\n      provide: AuthServiceAbstraction,\n      useFactory: getBgService<AuthService>(\"authService\"),\n      deps: [],\n    },\n    {\n      provide: SearchServiceAbstraction,\n      useFactory: (\n        cipherService: CipherService,\n        logService: ConsoleLogService,\n        i18nService: I18nService\n      ) => {\n        return new PopupSearchService(\n          getBgService<SearchService>(\"searchService\")(),\n          cipherService,\n          logService,\n          i18nService\n        );\n      },\n      deps: [CipherService, LogServiceAbstraction, I18nService],\n    },\n    { provide: AuditService, useFactory: getBgService<AuditService>(\"auditService\"), deps: [] },\n    {\n      provide: FileUploadService,\n      useFactory: getBgService<FileUploadService>(\"fileUploadService\"),\n      deps: [],\n    },\n    { provide: CipherService, useFactory: getBgService<CipherService>(\"cipherService\"), deps: [] },\n    {\n      provide: CryptoFunctionService,\n      useFactory: getBgService<CryptoFunctionService>(\"cryptoFunctionService\"),\n      deps: [],\n    },\n    {\n      provide: FolderService,\n      useFactory: getBgService<FolderService>(\"folderService\"),\n      deps: [],\n    },\n    {\n      provide: FolderApiServiceAbstraction,\n      useFactory: getBgService<FolderApiServiceAbstraction>(\"folderApiService\"),\n      deps: [],\n    },\n    {\n      provide: CollectionService,\n      useFactory: getBgService<CollectionService>(\"collectionService\"),\n      deps: [],\n    },\n    {\n      provide: LogServiceAbstraction,\n      useFactory: getBgService<ConsoleLogService>(\"logService\"),\n      deps: [],\n    },\n    {\n      provide: EnvironmentService,\n      useFactory: getBgService<EnvironmentService>(\"environmentService\"),\n      deps: [],\n    },\n    { provide: TotpService, useFactory: getBgService<TotpService>(\"totpService\"), deps: [] },\n    { provide: TokenService, useFactory: getBgService<TokenService>(\"tokenService\"), deps: [] },\n    { provide: I18nService, useFactory: getBgService<I18nService>(\"i18nService\"), deps: [] },\n    { provide: CryptoService, useFactory: getBgService<CryptoService>(\"cryptoService\"), deps: [] },\n    { provide: EventService, useFactory: getBgService<EventService>(\"eventService\"), deps: [] },\n    { provide: PolicyService, useFactory: getBgService<PolicyService>(\"policyService\"), deps: [] },\n    {\n      provide: PlatformUtilsService,\n      useFactory: getBgService<PlatformUtilsService>(\"platformUtilsService\"),\n      deps: [],\n    },\n    {\n      provide: PasswordGenerationService,\n      useFactory: getBgService<PasswordGenerationService>(\"passwordGenerationService\"),\n      deps: [],\n    },\n    { provide: ApiService, useFactory: getBgService<ApiService>(\"apiService\"), deps: [] },\n    { provide: SyncService, useFactory: getBgService<SyncService>(\"syncService\"), deps: [] },\n    {\n      provide: SettingsService,\n      useFactory: getBgService<SettingsService>(\"settingsService\"),\n      deps: [],\n    },\n    {\n      provide: AbstractStorageService,\n      useFactory: getBgService<AbstractStorageService>(\"storageService\"),\n      deps: [],\n    },\n    { provide: AppIdService, useFactory: getBgService<AppIdService>(\"appIdService\"), deps: [] },\n    {\n      provide: AutofillService,\n      useFactory: getBgService<AutofillService>(\"autofillService\"),\n      deps: [],\n    },\n    { provide: ExportService, useFactory: getBgService<ExportService>(\"exportService\"), deps: [] },\n    { provide: SendService, useFactory: getBgService<SendService>(\"sendService\"), deps: [] },\n    {\n      provide: KeyConnectorService,\n      useFactory: getBgService<KeyConnectorService>(\"keyConnectorService\"),\n      deps: [],\n    },\n    {\n      provide: UserVerificationService,\n      useFactory: getBgService<UserVerificationService>(\"userVerificationService\"),\n      deps: [],\n    },\n    {\n      provide: VaultTimeoutService,\n      useFactory: getBgService<VaultTimeoutService>(\"vaultTimeoutService\"),\n      deps: [],\n    },\n    {\n      provide: NotificationsService,\n      useFactory: getBgService<NotificationsService>(\"notificationsService\"),\n      deps: [],\n    },\n    {\n      provide: LogServiceAbstraction,\n      useFactory: getBgService<ConsoleLogService>(\"logService\"),\n      deps: [],\n    },\n    { provide: PasswordRepromptServiceAbstraction, useClass: PasswordRepromptService },\n    {\n      provide: OrganizationService,\n      useFactory: getBgService<OrganizationService>(\"organizationService\"),\n      deps: [],\n    },\n    {\n      provide: VaultFilterService,\n      useFactory: () => {\n        return new VaultFilterService(\n          getBgService<StateServiceAbstraction>(\"stateService\")(),\n          getBgService<OrganizationService>(\"organizationService\")(),\n          getBgService<FolderService>(\"folderService\")(),\n          getBgService<CipherService>(\"cipherService\")(),\n          getBgService<CollectionService>(\"collectionService\")(),\n          getBgService<PolicyService>(\"policyService\")()\n        );\n      },\n      deps: [],\n    },\n    {\n      provide: ProviderService,\n      useFactory: getBgService<ProviderService>(\"providerService\"),\n      deps: [],\n    },\n    {\n      provide: SECURE_STORAGE,\n      useFactory: getBgService<AbstractStorageService>(\"secureStorageService\"),\n      deps: [],\n    },\n    {\n      provide: MEMORY_STORAGE,\n      useFactory: getBgService<AbstractStorageService>(\"memoryStorageService\"),\n    },\n    {\n      provide: StateServiceAbstraction,\n      useFactory: getBgService<StateServiceAbstraction>(\"stateService\"),\n      deps: [],\n    },\n    {\n      provide: UsernameGenerationService,\n      useFactory: getBgService<UsernameGenerationService>(\"usernameGenerationService\"),\n      deps: [],\n    },\n    {\n      provide: BaseStateServiceAbstraction,\n      useExisting: StateServiceAbstraction,\n      deps: [],\n    },\n    {\n      provide: FileDownloadService,\n      useClass: BrowserFileDownloadService,\n    },\n    {\n      provide: AbstractThemingService,\n      useFactory: () => {\n        return new ThemingService(\n          getBgService<StateServiceAbstraction>(\"stateService\")(),\n          // Safari doesn't properly handle the (prefers-color-scheme) media query in the popup window, it always returns light.\n          // In Safari we have to use the background page instead, which comes with limitations like not dynamically changing the extension theme when the system theme is changed.\n          getBgService<PlatformUtilsService>(\"platformUtilsService\")().isSafari()\n            ? getBgService<Window>(\"backgroundWindow\")()\n            : window,\n          document\n        );\n      },\n    },\n  ],\n})\nexport class ServicesModule {}\n","import { A11yModule } from \"@angular/cdk/a11y\";\nimport { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { LayoutModule } from \"@angular/cdk/layout\";\nimport { OverlayModule } from \"@angular/cdk/overlay\";\nimport { ScrollingModule } from \"@angular/cdk/scrolling\";\nimport { CurrencyPipe, DatePipe, registerLocaleData } from \"@angular/common\";\nimport localeAz from \"@angular/common/locales/az\";\nimport localeBe from \"@angular/common/locales/be\";\nimport localeBg from \"@angular/common/locales/bg\";\nimport localeBn from \"@angular/common/locales/bn\";\nimport localeBs from \"@angular/common/locales/bs\";\nimport localeCa from \"@angular/common/locales/ca\";\nimport localeCs from \"@angular/common/locales/cs\";\nimport localeDa from \"@angular/common/locales/da\";\nimport localeDe from \"@angular/common/locales/de\";\nimport localeEl from \"@angular/common/locales/el\";\nimport localeEnGb from \"@angular/common/locales/en-GB\";\nimport localeEnIn from \"@angular/common/locales/en-IN\";\nimport localeEs from \"@angular/common/locales/es\";\nimport localeEt from \"@angular/common/locales/et\";\nimport localeFa from \"@angular/common/locales/fa\";\nimport localeFi from \"@angular/common/locales/fi\";\nimport localeFil from \"@angular/common/locales/fil\";\nimport localeFr from \"@angular/common/locales/fr\";\nimport localeHe from \"@angular/common/locales/he\";\nimport localeHi from \"@angular/common/locales/hi\";\nimport localeHr from \"@angular/common/locales/hr\";\nimport localeHu from \"@angular/common/locales/hu\";\nimport localeId from \"@angular/common/locales/id\";\nimport localeIt from \"@angular/common/locales/it\";\nimport localeJa from \"@angular/common/locales/ja\";\nimport localeKa from \"@angular/common/locales/ka\";\nimport localeKm from \"@angular/common/locales/km\";\nimport localeKn from \"@angular/common/locales/kn\";\nimport localeKo from \"@angular/common/locales/ko\";\nimport localeLt from \"@angular/common/locales/lt\";\nimport localeLv from \"@angular/common/locales/lv\";\nimport localeMl from \"@angular/common/locales/ml\";\nimport localeNb from \"@angular/common/locales/nb\";\nimport localeNl from \"@angular/common/locales/nl\";\nimport localeNn from \"@angular/common/locales/nn\";\nimport localePl from \"@angular/common/locales/pl\";\nimport localePtBr from \"@angular/common/locales/pt\";\nimport localePtPt from \"@angular/common/locales/pt-PT\";\nimport localeRo from \"@angular/common/locales/ro\";\nimport localeRu from \"@angular/common/locales/ru\";\nimport localeSi from \"@angular/common/locales/si\";\nimport localeSk from \"@angular/common/locales/sk\";\nimport localeSl from \"@angular/common/locales/sl\";\nimport localeSr from \"@angular/common/locales/sr\";\nimport localeSv from \"@angular/common/locales/sv\";\nimport localeTh from \"@angular/common/locales/th\";\nimport localeTr from \"@angular/common/locales/tr\";\nimport localeUk from \"@angular/common/locales/uk\";\nimport localeVi from \"@angular/common/locales/vi\";\nimport localeZhCn from \"@angular/common/locales/zh-Hans\";\nimport localeZhTw from \"@angular/common/locales/zh-Hant\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\n\nimport { BitwardenToastModule } from \"@bitwarden/angular/components/toastr.component\";\nimport { JslibModule } from \"@bitwarden/angular/jslib.module\";\n\nimport { EnvironmentComponent } from \"./accounts/environment.component\";\nimport { HintComponent } from \"./accounts/hint.component\";\nimport { HomeComponent } from \"./accounts/home.component\";\nimport { LockComponent } from \"./accounts/lock.component\";\nimport { LoginComponent } from \"./accounts/login.component\";\nimport { RegisterComponent } from \"./accounts/register.component\";\nimport { RemovePasswordComponent } from \"./accounts/remove-password.component\";\nimport { SetPasswordComponent } from \"./accounts/set-password.component\";\nimport { SsoComponent } from \"./accounts/sso.component\";\nimport { TwoFactorOptionsComponent } from \"./accounts/two-factor-options.component\";\nimport { TwoFactorComponent } from \"./accounts/two-factor.component\";\nimport { UpdateTempPasswordComponent } from \"./accounts/update-temp-password.component\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { ActionButtonsComponent } from \"./components/action-buttons.component\";\nimport { CipherRowComponent } from \"./components/cipher-row.component\";\nimport { PasswordRepromptComponent } from \"./components/password-reprompt.component\";\nimport { PopOutComponent } from \"./components/pop-out.component\";\nimport { PrivateModeWarningComponent } from \"./components/private-mode-warning.component\";\nimport { SendListComponent } from \"./components/send-list.component\";\nimport { SetPinComponent } from \"./components/set-pin.component\";\nimport { UserVerificationComponent } from \"./components/user-verification.component\";\nimport { GeneratorComponent } from \"./generator/generator.component\";\nimport { PasswordGeneratorHistoryComponent } from \"./generator/password-generator-history.component\";\nimport { EffluxDatesComponent as SendEffluxDatesComponent } from \"./send/efflux-dates.component\";\nimport { SendAddEditComponent } from \"./send/send-add-edit.component\";\nimport { SendGroupingsComponent } from \"./send/send-groupings.component\";\nimport { SendTypeComponent } from \"./send/send-type.component\";\nimport { ServicesModule } from \"./services/services.module\";\nimport { ExcludedDomainsComponent } from \"./settings/excluded-domains.component\";\nimport { ExportComponent } from \"./settings/export.component\";\nimport { FolderAddEditComponent } from \"./settings/folder-add-edit.component\";\nimport { FoldersComponent } from \"./settings/folders.component\";\nimport { OptionsComponent } from \"./settings/options.component\";\nimport { PremiumComponent } from \"./settings/premium.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SyncComponent } from \"./settings/sync.component\";\nimport { VaultTimeoutInputComponent } from \"./settings/vault-timeout-input.component\";\nimport { TabsComponent } from \"./tabs.component\";\nimport { AddEditCustomFieldsComponent } from \"./vault/add-edit-custom-fields.component\";\nimport { AddEditComponent } from \"./vault/add-edit.component\";\nimport { AttachmentsComponent } from \"./vault/attachments.component\";\nimport { CiphersComponent } from \"./vault/ciphers.component\";\nimport { CollectionsComponent } from \"./vault/collections.component\";\nimport { CurrentTabComponent } from \"./vault/current-tab.component\";\nimport { PasswordHistoryComponent } from \"./vault/password-history.component\";\nimport { ShareComponent } from \"./vault/share.component\";\nimport { VaultFilterComponent } from \"./vault/vault-filter.component\";\nimport { VaultSelectComponent } from \"./vault/vault-select.component\";\nimport { ViewCustomFieldsComponent } from \"./vault/view-custom-fields.component\";\nimport { ViewComponent } from \"./vault/view.component\";\n\nregisterLocaleData(localeAz, \"az\");\nregisterLocaleData(localeBe, \"be\");\nregisterLocaleData(localeBg, \"bg\");\nregisterLocaleData(localeBn, \"bn\");\nregisterLocaleData(localeBs, \"bs\");\nregisterLocaleData(localeCa, \"ca\");\nregisterLocaleData(localeCs, \"cs\");\nregisterLocaleData(localeDa, \"da\");\nregisterLocaleData(localeDe, \"de\");\nregisterLocaleData(localeEl, \"el\");\nregisterLocaleData(localeEnGb, \"en-GB\");\nregisterLocaleData(localeEnIn, \"en-IN\");\nregisterLocaleData(localeEs, \"es\");\nregisterLocaleData(localeEt, \"et\");\nregisterLocaleData(localeFa, \"fa\");\nregisterLocaleData(localeFi, \"fi\");\nregisterLocaleData(localeFil, \"fil\");\nregisterLocaleData(localeFr, \"fr\");\nregisterLocaleData(localeHe, \"he\");\nregisterLocaleData(localeHi, \"hi\");\nregisterLocaleData(localeHr, \"hr\");\nregisterLocaleData(localeHu, \"hu\");\nregisterLocaleData(localeId, \"id\");\nregisterLocaleData(localeIt, \"it\");\nregisterLocaleData(localeJa, \"ja\");\nregisterLocaleData(localeKa, \"ka\");\nregisterLocaleData(localeKm, \"km\");\nregisterLocaleData(localeKn, \"kn\");\nregisterLocaleData(localeKo, \"ko\");\nregisterLocaleData(localeLt, \"lt\");\nregisterLocaleData(localeLv, \"lv\");\nregisterLocaleData(localeMl, \"ml\");\nregisterLocaleData(localeNb, \"nb\");\nregisterLocaleData(localeNl, \"nl\");\nregisterLocaleData(localeNn, \"nn\");\nregisterLocaleData(localePl, \"pl\");\nregisterLocaleData(localePtBr, \"pt-BR\");\nregisterLocaleData(localePtPt, \"pt-PT\");\nregisterLocaleData(localeRo, \"ro\");\nregisterLocaleData(localeRu, \"ru\");\nregisterLocaleData(localeSi, \"si\");\nregisterLocaleData(localeSk, \"sk\");\nregisterLocaleData(localeSl, \"sl\");\nregisterLocaleData(localeSr, \"sr\");\nregisterLocaleData(localeSv, \"sv\");\nregisterLocaleData(localeTh, \"th\");\nregisterLocaleData(localeTr, \"tr\");\nregisterLocaleData(localeUk, \"uk\");\nregisterLocaleData(localeVi, \"vi\");\nregisterLocaleData(localeZhCn, \"zh-CN\");\nregisterLocaleData(localeZhTw, \"zh-TW\");\n\n@NgModule({\n  imports: [\n    A11yModule,\n    AppRoutingModule,\n    BitwardenToastModule.forRoot({\n      maxOpened: 2,\n      autoDismiss: true,\n      closeButton: true,\n      positionClass: \"toast-bottom-full-width\",\n    }),\n    BrowserAnimationsModule,\n    BrowserModule,\n    DragDropModule,\n    FormsModule,\n    JslibModule,\n    LayoutModule,\n    OverlayModule,\n    ReactiveFormsModule,\n    ScrollingModule,\n    ServicesModule,\n  ],\n  declarations: [\n    ActionButtonsComponent,\n    AddEditComponent,\n    AddEditCustomFieldsComponent,\n    AppComponent,\n    AttachmentsComponent,\n    CipherRowComponent,\n    CiphersComponent,\n    CollectionsComponent,\n    CurrentTabComponent,\n    EnvironmentComponent,\n    ExcludedDomainsComponent,\n    ExportComponent,\n    FolderAddEditComponent,\n    FoldersComponent,\n    VaultFilterComponent,\n    HintComponent,\n    HomeComponent,\n    LockComponent,\n    LoginComponent,\n    OptionsComponent,\n    GeneratorComponent,\n    PasswordGeneratorHistoryComponent,\n    PasswordHistoryComponent,\n    PasswordRepromptComponent,\n    PopOutComponent,\n    PremiumComponent,\n    PrivateModeWarningComponent,\n    RegisterComponent,\n    SendAddEditComponent,\n    SendEffluxDatesComponent,\n    SendGroupingsComponent,\n    SendListComponent,\n    SendTypeComponent,\n    SetPasswordComponent,\n    SetPinComponent,\n    SettingsComponent,\n    ShareComponent,\n    SsoComponent,\n    SyncComponent,\n    TabsComponent,\n    TwoFactorComponent,\n    TwoFactorOptionsComponent,\n    UpdateTempPasswordComponent,\n    UserVerificationComponent,\n    VaultTimeoutInputComponent,\n    ViewComponent,\n    ViewCustomFieldsComponent,\n    RemovePasswordComponent,\n    VaultSelectComponent,\n  ],\n  entryComponents: [],\n  providers: [CurrencyPipe, DatePipe],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\nrequire(\"./scss/popup.scss\");\n\nimport { AppModule } from \"./app.module\";\n\nif (process.env.ENV === \"production\") {\n  enableProdMode();\n}\n\nfunction init() {\n  platformBrowserDynamic().bootstrapModule(AppModule, { preserveWhitespaces: true });\n}\n\ninit();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t347: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_bitwarden_browser\"] = self[\"webpackChunk_bitwarden_browser\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [286,902], () => (__webpack_require__(24922)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","BitwardenToast","constructor","toastrService","toastPackage","super","trigger","state","style","opacity","transition","animate","BitwardenToastGlobalConfig","DefaultNoComponentGlobalConfig","toastComponent","BitwardenToastModule","config","ngModule","providers","provide","TOAST_CONFIG","useValue","default","CommonModule","numberFormats","Visa","cardLength","blocks","Mastercard","Maestro","Discover","JCB","UnionPay","Amex","Other","CreditCardNumberPipe","transform","creditCardNumber","brand","rules","length","matchingRule","find","r","chunks","total","forEach","c","push","slice","join","I18nService","I18nPipe","i18nService","p1","p2","p3","this","t","SearchPipe","items","searchText","prop1","prop2","prop3","trim","toLowerCase","filter","i","toString","indexOf","UserNamePipe","user","name","email","JslibModule","DatePipe","forRoot","maxOpened","autoDismiss","closeButton","FormsModule","ReactiveFormsModule","AuthenticationStatus","AuthService","MessagingService","KeyConnectorService","AuthGuard","authService","router","messagingService","keyConnectorService","canActivate","route","routerState","authStatus","getAuthStatus","LoggedOut","send","url","Locked","createUrlTree","queryParams","promptBiometric","includes","getConvertAccountRequired","LockGuard","homepage","loginpage","redirectUrl","UnauthGuard","PlatformUtilsService","EnvironmentService","platformUtilsService","environmentService","onSaved","EventEmitter","showCustom","urls","getUrls","baseUrl","base","webVaultUrl","webVault","apiUrl","api","identityUrl","identity","iconsUrl","icons","notificationsUrl","notifications","submit","resUrls","setUrls","showToast","saved","toggleCustom","emit","BlurClickDirective","el","onClick","nativeElement","blur","BoxRowDirective","elRef","ngOnInit","formEls","Array","from","querySelectorAll","formEl","addEventListener","classList","add","remove","event","target","contains","tagName","inputEl","type","click","focus","InputVerbatimDirective","renderer","condition","disableComplete","hasAttribute","setAttribute","EnvironmentComponent","navigate","PasswordHintRequest","ApiService","LogService","ValidationService","showError","data","defaultErrorMessage","errors","validationErrors","concat","getAllMessages","message","timeout","ApiActionDirective","validationService","logService","ngOnChanges","changes","appApiAction","loading","response","captchaRequired","error","getSingleMessage","nodeURL","window","Utils","inited","isNode","process","release","isBrowser","isMobileBrowser","isMobile","isAppleMobileBrowser","isAppleMobile","global","g","str","Uint8Array","Buffer","binaryString","atob","bytes","charCodeAt","fromB64ToArray","fromUrlB64ToB64","parseInt","substr","strUtf8","unescape","encodeURIComponent","arr","buffer","binary","byteLength","String","fromCharCode","btoa","fromB64toUrlB64","fromBufferToB64","b64Str","replace","encodedString","apply","decodeURIComponent","escape","prototype","map","call","x","urlB64Str","output","fromB64ToUtf8","utfStr","fromBufferToUrlB64","fromUtf8ToArray","Math","random","RegExp","test","uriString","getUrl","hostname","host","startsWith","httpUrl","tldEndingRegex","getUrlObject","tldjs","isValid","validIpAddress","urlDomain","getDomain","domain","search","Map","split","pair","parts","set","prop","a","b","collator","compare","localeCompare","source","Object","assign","obj","k","Number","isNaN","s","charAt","toUpperCase","ipString","win","mobile","navigator","userAgent","vendor","opera","match","URL","hasProtocol","anchor","document","createElement","href","regexpEmojiPresentation","init","AutofocusDirective","ngZone","autofocus","isStable","onStable","pipe","take","subscribe","HintComponent","apiService","successRoute","formPromise","postPasswordHint","onSuccessfulSubmit","PasswordGenerationService","CryptoFunctionService","HashPurpose","KeySuffixOptions","EncryptionType","HomeComponent","passwordGenerationService","stateService","cryptoFunctionService","launchSsoBrowser","passwordOptions","uppercase","lowercase","numbers","special","generatePassword","codeVerifier","codeVerifierHash","hash","codeChallenge","setSsoCodeVerifier","setSsoState","getWebVaultUrl","redirectUri","launchUri","EncString","encryptedStringOrType","iv","mac","encType","encryptedString","encryptionType","headerPieces","encPieces","AesCbc128_HmacSha256_B64","AesCbc256_B64","AesCbc256_HmacSha256_B64","Rsa2048_OaepSha256_B64","Rsa2048_OaepSha1_B64","decrypt","orgId","key","decryptedValue","cryptoService","containerService","getCryptoService","getOrgKey","decryptToUtf8","SecretVerificationRequest","CryptoService","VaultTimeoutService","vaultTimeoutService","masterPassword","pin","showPassword","pinLock","webVaultHostname","invalidPinAttempts","load","activeAccount","kdf","getKdfType","kdfIterations","getKdfIterations","failed","pinSet","makeKeyFromPin","getDecryptedPinProtected","encKey","getEncKey","protectedPin","getProtectedPin","setKeyAndContinue","makeKey","passwordValid","getKeyHash","compareAndUpdateKeyHash","request","serverKeyHash","hashPassword","ServerAuthorization","masterPasswordHash","postAccountVerifyPassword","localKeyHash","LocalAuthorization","setKeyHash","decPin","pinKey","makePinKey","setDecryptedPinProtected","encrypt","logOut","showDialog","unlockBiometric","biometricLock","success","getKey","Biometric","doContinue","togglePassword","input","getElementById","setKey","setBiometricLocked","setEverBeenUnlocked","disableFavicon","getDisableFavicon","setDisableFavicon","isPinLockSet","supportsBiometric","isBiometricLockSet","hasKeyStored","supportsSecureStorage","biometricText","getBiometricText","getEmail","usesKeyConnector","getUsesKeyConnector","hideInput","vaultUrl","getHostname","BiometricErrors","startDesktop","title","description","desktopIntegrationDisabled","StopClickDirective","$event","preventDefault","BrowserApi","tabsQueryFirst","active","windowId","chrome","windows","WINDOW_ID_CURRENT","currentWindow","tabsQuery","options","tabs","query","tab","command","tabSendMessage","sendMessage","runtime","lastError","browser","getAll","incognito","callback","onCreated","addListener","extension","getBackgroundPage","getManifest","version","getViews","extensionPage","create","onMessage","msg","sender","windowType","tabToClose","tabId","update","highlighted","isWebExtensionsApi","isFirefoxOnAndroid","finally","close","i18n","getUILanguage","location","reload","w","application","connectNative","isChromeApi","permission","permissions","reject","getPlatformInfo","isSafariApi","PopupUtilsService","privateMode","inSidebar","inTab","inPopout","inPopup","inPrivateMode","getContentScrollY","scrollingContainer","getElementsByTagName","scrollTop","setContentScrollY","scrollY","popOut","hrefParts","bodyRect","querySelector","getBoundingClientRect","width","round","height","closePopup","Domain","buildDomainModel","dataObj","notEncList","hasOwnProperty","objProp","buildDataModel","notEncStringList","decryptObj","viewModel","promises","self","theProp","p","mapProp","val","all","MasterPasswordPolicyOptions","minComplexity","minLength","requireUpper","requireLower","requireNumbers","requireSpecial","CalloutComponent","useAlertRole","calloutStyle","undefined","enforcedPolicyMessage","icon","getPasswordScoreAlertDisplay","enforcedPolicyOptions","PrivateModeWarningComponent","popupUtilsService","showWarning","A11yTitleDirective","LockComponent","pendingBiometric","isInitialLockScreen","previousPopupUrl","disableAutoBiometricsPrompt","getDisableAutoBiometricsPrompt","setTimeout","biometricError","AuthenticationType","PasswordLogInCredentials","captchaToken","twoFactor","SsoLogInCredentials","CaptchaIFrame","path","iframeId","successCallback","errorCallback","infoCallback","parseFunction","parseMessage","bind","connectorLink","stop","start","iframe","src","contentWindow","postMessage","base64Encode","cleanup","removeEventListener","createParams","URLSearchParams","JSON","stringify","parent","v","initComponent","params","validMessage","origin","parsedMessage","parse","siteKey","locale","translationLocale","CaptchaProtectedComponent","captchaSiteKey","setupCaptcha","captcha","token","info","showCaptcha","isNullOrWhitespace","handleCaptchaRequired","rememberEmail","twoFactorRoute","forcePasswordResetRoute","alwaysRememberEmail","getRememberedEmail","focusInput","credentials","logIn","setRememberedEmail","requiresTwoFactor","onSuccessfulLoginTwoFactorNavigate","forcePasswordReset","onSuccessfulLoginForceResetNavigate","onSuccessfulLogin","onSuccessfulLoginNavigate","clientId","ssoRedirectUri","ssoCodeVerifier","webUrl","SyncService","LoginComponent","syncService","fullSync","settings","InputsFieldMatch","matchTo","errorMessage","control","controls","value","inputsMatchError","inputsDoesntMatchError","field","fieldMatchTo","formGroup","fieldCtrl","fieldMatchToCtrl","setErrors","KdfType","DEFAULT_KDF_TYPE","PBKDF2_SHA256","DEFAULT_KDF_ITERATIONS","KeysRequest","publicKey","encryptedPrivateKey","RegisterRequest","masterPasswordHint","referenceData","captchaResponse","FormValidationErrorsService","formValidationErrorService","formBuilder","isInTrialFlow","createdAccount","showTerms","showErrorSummary","group","Validators","confirmMasterPassword","hint","validateInputsDoesntMatch","acceptPolicies","acceptPoliciesValidation","validator","validateFormInputsMatch","isSelfHost","masterPasswordScore","get","markAllAsTouched","hasError","invalid","errorText","getErrorToastMessage","strengthResult","passwordStrength","getPasswordStrengthUserInput","score","makeEncKey","hashedPassword","makeKeyPair","orgInvite","getOrganizationInvitation","organizationUserId","postRegister","updatePasswordStrength","masterPasswordStrengthTimeout","clearTimeout","userInput","atPosition","getFormValidationErrors","shift","errorName","errorTag","controlName","required","RegisterComponent","continuing","leaving","organization","getManagingOrganization","convert","actionPromise","migrateUser","removeConvertAccountRequired","leave","postLeaveOrganization","RemovePasswordComponent","OrganizationUserResetPasswordEnrollmentRequest","SetPasswordRequest","orgIdentifier","PolicyService","ChangePasswordComponent","policyService","getMasterPasswordPolicyOptions","strongPassword","setupSubmitActions","remakeEncKey","performSubmitActions","masterPasswordRetype","evaluateMasterPassword","syncLoading","identifier","resetPasswordAutoEnroll","first","qParams","getOrganizationAutoEnrollStatus","resetPasswordEnabled","getMasterPasswordPoliciesForInvitedUsers","setPassword","onSetPasswordSuccess","getOrganizationKeys","userId","getUserId","userEncKey","encryptedKey","rsaEncrypt","resetRequest","resetPasswordKey","putOrganizationUserResetPasswordEnrollment","onSuccessfulChangePassword","confirmField","setKdfType","setKdfIterations","setEncKey","setEncPrivateKey","SetPasswordComponent","loggingIn","changePasswordRoute","getSsoCodeVerifier","getSsoState","checkState","getOrgIdentifierFromState","returnUri","includeUserIdentifier","initiateSsoFormPromise","preValidateSso","authorizeUrl","buildAuthorizeUrl","sameWindow","getIdentityUrl","userIdentifier","getSsoUserIdentifier","orgIdFromState","sso","resetMasterPassword","onSuccessfulLoginChangePasswordNavigate","stateSplit","checkStateSplit","SsoComponent","Unlocked","reloadOpenWindows","open","TwoFactorService","twoFactorService","onProviderSelected","onRecoverSelected","getSupportedProviders","choose","recover","Window","TwoFactorOptionsComponent","setSelectedProvider","TwoFactorProviderType","WebAuthnIFrame","webAuthnNewTab","btnText","append","allow","TokenRequestTwoFactor","provider","remember","TwoFactorEmailRequest","TwoFactorProviders","Authenticator","priority","sort","premium","Yubikey","Duo","OrganizationDuo","Email","WebAuthn","selectedTwoFactorProviderType","twoFactorProvidersData","has","supportsDuo","supportsWebAuthn","getDefaultProvider","webAuthnSupported","providerType","providerPriority","_value","clearSelectedProvider","setProviders","twoFactorProviders2","clearProviders","getProviders","AppIdService","appIdService","webAuthnReady","selectedProviderType","webAuthn","twoFactorEmail","loginRoute","authing","needsLock","ngOnDestroy","cleanupWebAuthn","providerData","authWebAuthn","Host","sig_request","Signature","submit_callback","f","sig","size","sendEmail","doSubmit","logInTwoFactor","doToast","emailPromise","deviceIdentifier","getAppId","postTwoFactorEmail","authingWithPassword","authingWithSso","authingWithApiKey","BroadcasterService","TwoFactorComponent","broadcasterService","showNewWindowMessage","isFirefox","isSafari","snapshot","paramMap","isLinux","body","unsubscribe","anotherMethod","os","UpdateTempPasswordRequest","newKey","newPasswordHash","newEncKey","newMasterPasswordHash","putUpdateTempPassword","UpdateTempPasswordComponent","scoreWidth","Color","Text","Width","UsernameGenerationService","usernameGenerationService","comingFromAddEdit","onSelected","usernameOptions","username","password","showOptions","avoidAmbiguous","usernameWebsite","typeOptions","passTypeOptions","usernameTypeOptions","desc","subaddressOptions","catchallOptions","forwardOptions","passwordOptionsResponse","getOptions","enforcedPasswordPolicyOptions","ambiguous","subaddressEmail","subaddressType","catchallType","website","websiteOption","generatorOptions","getGeneratorOptions","regenerateWithoutButtonPress","regenerate","typeChanged","setGeneratorOptions","regeneratePassword","regenerateUsername","sliderChanged","savePasswordOptions","addHistory","sliderInput","normalizePasswordOptions","saveOptions","saveUsernameOptions","generateUsername","usernameGeneratingPromise","copy","copyOptions","copyToClipboard","select","toggleOptions","number","checked","normalizeOptions","PopOutComponent","show","expand","SelectCopyDirective","onCopy","copyText","selection","getSelection","rangeCount","text","getRangeAt","stringEndPos","newLinePos","substring","ColorPasswordPipe","generateTemplate","character","templateGenerator","passwordArray","colorizedPassword","isSpecial","GeneratorComponent","addEditCipherInfo","getAddEditCipherInfo","cipherState","cipher","login","hasUris","uris","setAddEditCipherInfo","back","PolicyType","SendType","history","getHistory","clear","PasswordGeneratorHistoryComponent","SendFileView","sizeName","fileName","SendTextView","hidden","SendView","accessId","notes","file","maxAccessCount","accessCount","revisionDate","deletionDate","expirationDate","disabled","hideEmail","Date","SendService","BrowserPath","DateField","DatePreset","AddEditComponent","datePipe","sendService","onSavedSend","onDeletedSend","onCancelled","copyLink","disableSend","disableHideEmail","sendType","canAccessPremium","emailVerified","alertShown","File","sendLinkBaseUrl","getSendUrl","urlB64Key","sendId","editMode","setDates","policyAppliesToUser","DisableSend","SendOptions","getCanAccessPremium","getEmailVerified","loadSend","setDate","getDate","hasPassword","files","encryptSend","encSend","uploadPromise","saveWithServer","link","copySuccess","copyLinkToClipboard","delete","deletePromise","deleteWithServer","sendData","togglePasswordVisible","StateService","datesChanged","datesForm","FormGroup","selectedDeletionDatePreset","FormControl","selectedExpirationDatePreset","defaultDeletionDateTime","defaultExpirationDateTime","fallbackDeletionDate","fallbackDeletionTime","fallbackExpirationDate","fallbackExpirationTime","deletionDatePresets","OneHour","OneDay","TwoDays","ThreeDays","SevenDays","ThirtyDays","Custom","expirationDatePresets","Never","Firefox","Safari","Default","setValue","formattedDeletionDate","browserPath","now","miliseconds","setTime","getTime","safariTimePresetOptions","DeletionDate","ExpriationDate","nextWeek","setInitialFormValues","emitDates","valueChanges","onDeletionDatePresetSelect","clearExpiration","formattedExpirationDate","initialDeletionDate","toISOString","toTimeString","initialExpirationDate","twentyFourHour","noon","midnight","ams","pms","h","m","hour","minutes","midnightOption","twelveHour","noonOption","amOption","pmOption","validTimes","popOutWindow","EffluxDatesComponent","ControlContainer","useExisting","NgForm","SendAddEditComponent","isUnsupportedMac","showFilePopoutMessage","showFirefoxFileWarning","showSafariFileWarning","showChromiumFileWarning","isChrome","appVersion","cancel","SearchService","indexedEntityId","SendComponent","searchService","loaded","refreshing","expired","sends","filteredSends","searchPending","hasSearched","getAllDecrypted","onSuccessfulLoad","selectAll","refresh","applyFilter","searchTimeout","isSearchable","applyTextSearch","removePassword","removePasswordWithServer","onSuccessfulRemovePassword","onSuccessfulDelete","searchTextChanged","clearSelections","selectedAll","selectType","selectedType","searchSends","StopPropDirective","stopPropagation","SendListComponent","disabledByPolicy","onCopySendLink","onRemovePassword","onDeleteSend","selectSend","copySendLink","ComponentId","SendGroupingsComponent","popupUtils","changeDetectorRef","showLeftHeader","typeCounts","calculateTypeCounts","setBrowserSendTypeComponentState","restoredScopeState","restoreState","syncInProgress","loadedTimeout","run","detectChanges","saveState","addSend","showSearching","setBrowserSendComponentState","getBrowserSendComponentState","SendTypeComponent","applySavedState","getBrowserSendTypeComponentState","groupingTitle","successfully","refreshTimeout","routeDirection","DebounceNavigationService","navigationStartSub","events","NavigationStart","pairwise","lastNavigation","thisNavigation","navigationSuccessSub","NavigationEnd","lastNavigationSuccessId","navigationTrigger","ExcludedDomainsComponent","excludedDomains","savedDomains","getNeverDomains","uri","showCurrentUris","loadCurrentUris","loadCurrentUrisTimeout","addUri","removeUri","splice","validDomain","setNeverDomains","trackByFunction","index","item","toggleUriInput","uriSet","Set","currentUris","EventType","ExportService","EventService","UserVerificationService","FileDownloadService","VerificationType","exportService","eventService","userVerificationService","fileDownloadService","exportForm","format","secret","formatOptions","checkExportDisabled","DisablePersonalVaultExport","disable","warningDialog","verifyUser","getExportData","downloadFile","collectEvent","encryptedFormat","getExport","getFileName","prefix","collect","User_ClientExportedVault","csv","download","blobData","blobOptions","disableRequestOTP","sentCode","processChanges","requestOTP","writeValue","registerOnChange","fn","onChange","registerOnTouched","setDisabledState","isDisabled","enable","OTP","MasterPassword","NG_VALUE_ACCESSOR","multi","UserVerificationComponent","OrganizationService","ExportScopeCalloutComponent","organizationService","organizationId","hasOrganizations","scopeConfig","scopeIdentifier","ExportComponent","FolderView","FolderService","FolderApiServiceAbstraction","folderService","folderApiService","onSavedFolder","onDeletedFolder","folder","save","folderId","FolderAddEditComponent","confirmed","ThemeType","UriMatchType","FoldersComponent","folders$","folderViews$","folders","folderSelected","addFolder","TotpService","AbstractThemingService","OptionsComponent","totpService","themingService","enableFavicon","enableBadgeCounter","enableAutoFillOnPageLoad","autoFillOnPageLoadDefault","enableAutoTotpCopy","enableContextMenuItem","enableAddLoginNotification","enableChangedPasswordNotification","showCardsCurrentTab","showIdentitiesCurrentTab","showClearClipboard","defaultUriMatch","showGeneral","showAutofill","showDisplay","themeOptions","System","Light","Dark","Nord","SolarizedDark","uriMatchOptions","StartsWith","RegularExpression","Exact","clearClipboardOptions","autoFillOnPageLoadOptions","getEnableAutoFillOnPageLoad","getAutoFillOnPageLoadDefault","getDisableAddLoginNotification","getDisableChangedPasswordNotification","getDisableContextMenuItem","getDontShowCardsCurrentTab","getDontShowIdentitiesCurrentTab","getDisableAutoTotpCopy","getDisableBadgeCounter","theme","getTheme","getDefaultUriMatch","clearClipboard","getClearClipboard","updateAddLoginNotification","setDisableAddLoginNotification","updateChangedPasswordNotification","setDisableChangedPasswordNotification","updateContextMenuItem","setDisableContextMenuItem","updateAutoTotpCopy","setDisableAutoTotpCopy","updateAutoFillOnPageLoad","setEnableAutoFillOnPageLoad","updateAutoFillOnPageLoadDefault","setAutoFillOnPageLoadDefault","updateFavicon","updateBadgeCounter","setDisableBadgeCounter","updateShowCardsCurrentTab","setDontShowCardsCurrentTab","updateShowIdentitiesCurrentTab","setDontShowIdentitiesCurrentTab","saveTheme","updateConfiguredTheme","saveDefaultUriMatch","setDefaultUriMatch","saveClearClipboard","setClearClipboard","isPremium","price","refreshPromise","refreshIdentityToken","purchase","manage","PremiumComponent","currencyPipe","thePrice","priceString","ModalRef","_onCreated","Subject","_onClose","_onClosed","_onShow","_onShown","asObservable","onClose","onClosed","onShow","onShown","next","shown","result","lastResult","closed","created","onClosedPromise","toPromise","DynamicModalComponent","modalService","cd","focusTrapFactory","modalRef","ngAfterViewInit","loadChildComponent","childComponentType","setComponentParameters","componentRef","instance","focusTrap","focusFirstTabbableElementWhenReady","componentType","componentFactory","resolveComponentFactory","modalContentRef","createComponent","destroy","getFocus","autoFocusEl","ViewContainerRef","ModalInjector","_parentInjector","_additionalTokens","notFoundValue","flags","DeviceType","ModalConfig","allowMultipleModals","ModalService","componentFactoryResolver","applicationRef","injector","modalList","factoryResolvers","modalCount","topModal","openViewRef","viewContainerRef","modalComponentRef","openInternal","insert","hostView","_","registerComponentFactoryResolver","attachToDom","createModalComponent","attachView","domElem","rootNodes","appendChild","detachView","pop","setupHandlers","backdrop","modalEl","dialogEl","className","zIndex","prepend","modals","closeElement","WeakMap","showPin","masterPassOnRestart","showMasterPassOnRestart","toggleVisibility","pinProtectedKey","encPin","setProtectedPin","setEncryptedPinProtected","SetPinComponent","form","vaultTimeout","custom","hours","CUSTOM_VALUE","customTimeInMinutes","MIN_CUSTOM_MINUTES","MaximumVaultTimeout","vaultTimeoutPolicy","vaultTimeoutPolicyHours","floor","vaultTimeoutPolicyMinutes","vaultTimeouts","validatorChange","getVaultTimeout","current","max","patchValue","every","onTouched","validate","policyError","exceedsMinimumTimout","minTimeoutError","registerOnValidatorChange","VaultTimeoutInputComponent","NG_VALIDATORS","RateUrls","ChromeExtension","FirefoxExtension","OperaExtension","EdgeExtension","VivaldiExtension","SafariExtension","SettingsComponent","biometric","enableAutoBiometricsPrompt","previousVaultTimeout","showChangeMasterPass","showOnLocked","vaultTimeoutActions","saveVaultTimeout","action","getVaultTimeoutAction","vaultTimeoutAction","newValue","setVaultTimeoutOptions","saveVaultTimeoutAction","option","vaultTimeoutActionSelectRef","updatePin","ref","clearPinProtectedKey","updateBiometric","granted","requestPermission","console","submitted","heightAuto","buttonsStyling","titleText","iconHtml","showCancelButton","cancelButtonText","showConfirmButton","allowOutsideClick","setBiometricAwaitingAcceptance","toggleKey","race","dismiss","authenticateBiometric","catch","setBiometricUnlock","updateAutoBiometricsPrompt","setDisableAutoBiometricsPrompt","lock","changePassword","createNewTab","twoStep","share","import","export","help","about","year","getFullYear","versionText","createTextNode","getApplicationVersion","div","innerHTML","html","fingerprint","getFingerprint","innerText","confirmButtonText","rate","deviceType","getDevice","ElementRef","CipherRepromptType","CipherType","OrganizationUserStatusType","SecureNoteType","LoginLinkedId","CardLinkedId","IdentityLinkedId","SyncComponent","lastSync","setLastSync","sync","syncPromise","last","getLastSync","toLocaleDateString","toLocaleTimeString","TabsComponent","showCurrentTab","LinkedMetadata","propertyKey","_i18nKey","linkedFieldOption","i18nKey","linkedFieldOptions","ItemView","CardView","cardholderName","expMonth","expYear","_brand","_number","_subTitle","repeat","count","exp","formatYear","IdentityView","middleName","address1","address2","address3","city","postalCode","country","company","phone","ssn","passportNumber","licenseNumber","_firstName","_lastName","firstName","lastName","address","addressPart2","LoginView","l","passwordRevisionDate","totp","autofillOnPageLoad","some","u","canLaunch","SecureNoteView","n","CipherView","favorite","organizationUseTotp","edit","viewPassword","card","secureNote","attachments","fields","passwordHistory","collectionIds","deletedDate","reprompt","None","localData","Login","SecureNote","Card","Identity","subTitle","hasAttachments","linkedFieldValue","linkedFieldI18nKey","CanLaunchWhitelist","LoginUriView","_uri","_domain","_hostname","_host","_canLaunch","getHost","CipherService","AuditService","CollectionService","PasswordRepromptService","FieldType","cipherService","auditService","collectionService","passwordRepromptService","cloneMode","onSavedCipher","onDeletedCipher","onRestoredCipher","onEditAttachments","onShareCipher","onEditCollections","onGeneratePassword","onGenerateUsername","collections","showCardNumber","showCardCode","cipherType","ownershipOptions","currentDate","allowPersonal","canUseReprompt","cardBrandOptions","cardExpMonthOptions","identityTitleOptions","autofillOnPageLoadOptions","PersonalOwnership","myEmail","getSortFunction","o","enabled","status","Confirmed","writeableCollections","loadCollections","cipherId","loadCipher","Generic","organizationChanged","previousCipherId","Cipher_ClientViewed","isDeleted","restore","encryptCipher","saveCipher","editCollections","deleteCipher","restorePromise","restoreCipher","Cipher_ClientToggledPasswordVisible","toggleCardNumber","Cipher_ClientToggledCardNumberVisible","toggleCardCode","Cipher_ClientToggledCardCodeVisible","toggleUriOptions","loginUriMatchChanged","org","useTotp","checkPassword","checkPasswordPromise","passwordLeaked","matches","repromptChanged","Password","readOnly","softDeleteWithServer","restoreWithServer","FieldView","newField","showValue","showCount","linkedId","addFieldType","fieldType","eventType","addFieldTypeOptions","Hidden","Boolean","addFieldLinkedTypeOption","Linked","thisCipherType","setLinkedFieldOptions","firstChange","resetCipherLinkedFields","addField","removeField","toggleFieldValue","Cipher_ClientToggledHiddenFieldVisible","drop","moveItemInArray","previousIndex","currentIndex","TrueFalseValueDirective","elementRef","trueValue","falseValue","propagateChange","onHostChange","ev","setProperty","forwardRef","AddEditCustomFieldsComponent","showAttachments","collectionId","collection","selectedVault","openAttachmentsInPopup","showAutoFillOnPageLoadOptions","destinationUrl","currentBaseUrl","saveCipherState","allowOwnershipOptions","BaseResponse","getResponseProperty","propertyName","exactName","otherCasePropertyName","ErrorResponse","identityResponse","errorModel","responseErrorModel","HCaptcha_SiteKey","statusCode","messages","lastSep","lastIndexOf","onUploadedAttachment","onDeletedAttachment","onReuploadedAttachment","deletePromises","reuploadPromises","emergencyAccessId","hasUpdatedKey","fileEl","saveCipherAttachment","cipherDomain","attachment","deleteCipherAttachment","downloading","canAccessAttachments","getAttachmentData","fetch","Request","cache","buf","arrayBuffer","decBuf","decryptFromBytes","hasEncKey","reuploadCipherAttachment","admin","saveAttachmentRawWithServer","foundAttachment","a2","saveAttachmentWithServer","attachmentId","deleteAttachmentWithServer","AttachmentsComponent","openedAttachmentsInPopup","activeCipherId","onCipherClicked","onCipherRightClicked","onAddCipher","onAddCipherOptions","ciphers","searchPlaceholder","deleted","deletedFilter","indexedCiphers","doSearch","selectCipher","rightClickCipher","addCipher","addCipherOptions","isSearching","searchCiphers","VaultFilter","selectedCollection","selectedFolder","myVaultOnly","refreshCollectionsAndFolders","resetFilter","selectedCollectionId","selectedFolderId","resetOrganization","selectedOrganizationId","buildFilter","cipherPassesFilter","TreeNode","node","children","ServiceUtils","nodeTree","partIndex","delimiter","end","partName","nestedTraverse","newPartName","getTreeNodeObject","DynamicTreeNode","hasId","fullList","storeCollapsedFilterNodes","collapsedFilterNodes","setCollapsedGroupings","buildCollapsedFilterNodes","getCollapsedGroupings","buildOrganizations","buildNestedFolders","transformation","storedFolders","orgCiphers","oc","nestedFolders","getAllFoldersNested","nestedList","mergeMap","buildCollections","storedCollections","nestedCollections","getAllNested","checkForSingleOrganizationPolicy","SingleOrg","checkForPersonalOwnershipPolicy","nodes","folderCopy","getFolderNested","firstValueFrom","VaultFilterService","vaultFilter","allVaults","myVault","getVaultFilter","setVaultFilter","filterCipherForSelectedVault","EllipsisPipe","limit","completeWords","ellipsis","VaultSelectComponent","vaultFilterService","overlay","onVaultSelectionChanged","isOpen","vaultFilterDisplay","enforcePersonalOwnwership","overlayPostition","originX","originY","overlayX","overlayY","organizations","openOverlay","viewPortHeight","documentElement","clientHeight","innerHeight","positionStrategy","position","flexibleConnectedTo","buttonRef","withFlexibleDimensions","withPush","withViewportMargin","withGrowAfterOpen","withPositions","overlayRef","hasBackdrop","maxHeight","backdropClass","scrollStrategy","scrollStrategies","templatePortal","TemplatePortal","templateRef","attach","merge","outsidePointerEvents","backdropClick","detachments","dispose","selectOrganization","selectAllVaults","selectMyVault","TemplateRef","FallbackSrcDirective","onError","appFallbackSrc","cardIcons","RuPay","IconComponent","getIconsUrl","image","fallbackImage","imageEnabled","setLoginIcon","setCardIcon","hostnameUri","isWebsite","ActionButtonsComponent","onView","launchEvent","showView","userHasPremiumAccess","launchCipher","typeI18nKey","aType","protectedFields","showPasswordPrompt","displayTotpCopyButton","getCode","Cipher_ClientCopiedCardCode","hasTotp","view","CipherRowComponent","viewCipher","CiphersComponent","searchTypeSearch","showOrganizations","noneFolder","showVaultFilter","preventSelected","getBrowserCipherComponentState","folderNode","collectionNode","getNested","setBrowserCipherComponentState","selectedTimeout","selectFolder","selectCollection","updateLastLaunchedDate","showGroupings","changeVaultSelection","allowSelectNone","onSavedCollections","loadCipherCollections","selectedCollectionIds","saveCollections","saveCollectionsWithServer","CollectionsComponent","AutofillService","CurrentTabComponent","autofillService","pageDetails","frameId","webExtSender","details","fillCipher","totpCode","totpTimeout","doAutoFill","doc","fillNewPassword","searchVault","closeOnEsc","getTabFromCurrentWindow","loginCiphers","otherTypes","dontShowCards","dontShowIdentities","getAllDecryptedForUrl","cardCiphers","identityCiphers","sortCiphersByLastUsedThenName","decCipher","PasswordHistoryComponent","onSharedCipher","allCollections","orgs","filterCollections","cipherView","orgName","shareWithServer","ShareComponent","replaceUrl","VaultFilterComponent","browserStateService","folderCounts","collectionCounts","deletedCount","selectedOrganization","showCollections","noFolderListSize","hasLoadedAllCiphers","allCiphers","noFolderCiphers","showNoFolderCiphers","getBrowserGroupingComponentState","replaceState","updateSelectedOrg","loadCollectionsAndFolders","loadCiphers","getCounts","loadFolders","allFolders","filterDeleted","selectTrash","vaultFilterChanged","favoriteCiphers","colId","setBrowserGroupingComponentState","TokenService","tokenService","onEditCipher","onCloneCipher","passwordReprompted","cleanUp","totpUpdateCode","interval","getTimeInterval","totpTick","totpInterval","setInterval","promptPassword","clone","showPasswordCount","togglePasswordCount","launch","Cipher_ClientCopiedHiddenField","setTextDataOnDrag","dataTransfer","setData","downloadAttachment","clearInterval","half","totpCodeFormatted","intervalSeconds","mod","totpSec","totpDash","totpLow","toggleFieldCount","ColorPasswordCountPipe","ViewCustomFieldsComponent","ViewComponent","loadPageDetailsTimeout","loadPageDetails","doAutofill","fillCipherAndSave","loginUri","routes","redirectTo","pathMatch","component","runGuardsAndResolvers","NoRouteReuseStrategy","shouldDetach","store","handle","shouldAttach","retrieve","shouldReuseRoute","future","curr","AppRoutingModule","RouteReuseStrategy","useClass","RouterModule","useHash","onSameUrlNavigation","queryShown","optional","queryChildRoute","queryTranslate","direction","axis","to","boxShadow","speed","queryTranslateX","queryTranslateY","inSlideLeft","outSlideRight","inSlideUp","outSlideDown","inSlideDown","routerTransition","fromState","toState","AppComponent","sanitizer","lastActivity","destroy$","clearComponentStates","takeUntil","activeUserId","runOutsideAngular","onmousedown","recordActivity","ontouchstart","onclick","onscroll","onkeypress","bitwardenPopupMainMessageListener","sendResponse","getValue","isOpera","reloadExtension","messageListener","urlAfterRedirects","complete","getState","outlet","activatedRouteData","activatedRoute","setLastActive","sanitize","SecurityContext","enableHtml","trustedHtml","timeOut","iconClasses","cancelText","confirmText","timer","dialogId","getIsAuthenticated","ThemeBuilder","configuredTheme","systemTheme","updateSystemTheme","StateVersion","SsoType","OpenIdConnectRedirectBehavior","Saml2BindingType","Saml2NameIdFormat","Saml2SigningBehavior","ThemingService","_theme","BehaviorSubject","theme$","monitorThemeChanges","getSystemTheme","monitorConfiguredThemeChanges","monitorSystemThemeChanges","setTheme","effectiveTheme","matchMedia","fromEvent","WINDOW","DOCUMENT","AbstractEncryptService","FileUploadService","NotificationsService","ProviderService","SettingsService","StateMigrationService","AbstractStorageService","AccountFactory","accountConstructor","args","GlobalStateFactory","globalStateConstructor","StateFactory","globalStateFactory","accountFactory","createGlobal","createAccount","EnvironmentUrls","keyConnector","EncryptionPair","DataEncryptionPair","TemporaryDataEncryption","AccountData","policies","passwordGenerationHistory","AccountKeys","cryptoSymmetricKey","organizationKeys","providerKeys","privateKey","AccountProfile","environmentUrls","pinProtected","AccountTokens","profile","tokens","WindowState","GlobalState","stateVersion","One","DeviceRequest","appId","getDeviceString","pushToken","TokenRequest","device","alterIdentityTokenHeaders","headers","setTwoFactor","toIdentityToken","scope","client_id","deviceName","twoFactorToken","twoFactorProvider","twoFactorRemember","ApiTokenRequest","clientSecret","grant_type","client_secret","ApiKeyResponse","apiKey","AttachmentResponse","CardApi","FieldApi","IdentityApi","LoginUriApi","LoginApi","SecureNoteApi","PasswordHistoryResponse","lastUsedDate","CipherResponse","AttachmentUploadDataResponse","fileUploadType","cipherResponse","cipherMiniResponse","BillingResponse","invoices","transactions","balance","paymentSource","BillingSourceResponse","BillingTransactionResponse","BillingInvoiceResponse","cardBrand","needsVerification","pdfUrl","paid","date","amount","createdDate","refunded","partiallyRefunded","refundedAmount","paymentMethodType","BillingHistoryResponse","BillingPaymentResponse","BreachAccountResponse","addedDate","breachDate","dataClasses","isActive","isVerified","logoPath","modifiedDate","pwnCount","SelectionReadOnlyResponse","hidePasswords","CollectionResponse","externalId","CollectionDetailsResponse","CollectionGroupDetailsResponse","groups","DeviceVerificationResponse","isDeviceVerificationSectionEnabled","unknownDeviceVerificationEnabled","GlobalDomainResponse","domains","excluded","DomainsResponse","globalEquivalentDomains","equivalentDomains","d","EmergencyAccessGranteeDetailsResponse","granteeId","waitTimeDays","creationDate","EmergencyAccessGrantorDetailsResponse","grantorId","EmergencyAccessTakeoverResponse","keyEncrypted","EmergencyAccessViewResponse","EventResponse","providerId","groupId","policyId","providerUserId","providerOrganizationId","actingUserId","ipAddress","installationId","GroupResponse","accessAll","GroupDetailsResponse","IdentityCaptchaResponse","IdentityTokenResponse","accessToken","access_token","expiresIn","expires_in","refreshToken","refresh_token","tokenType","token_type","apiUseKeyConnector","keyConnectorUrl","IdentityTwoFactorResponse","twoFactorProviders","KeyConnectorUserKeyResponse","ListResponse","dr","continuationToken","SsoConfigApi","configType","keyConnectorEnabled","authority","metadataAddress","redirectBehavior","getClaimsFromUserInfoEndpoint","additionalScopes","additionalUserIdClaimTypes","additionalEmailClaimTypes","additionalNameClaimTypes","acrValues","expectedReturnAcrValue","spNameIdFormat","spOutboundSigningAlgorithm","spSigningBehavior","spMinIncomingSigningAlgorithm","spWantAssertionsSigned","spValidateCertificates","idpEntityId","idpBindingType","idpSingleSignOnServiceUrl","idpSingleLogoutServiceUrl","idpX509PublicCert","idpOutboundSigningAlgorithm","idpAllowUnsolicitedAuthnResponse","idpDisableOutboundLogoutRequests","idpWantAuthnRequestsSigned","OpenIdConnect","openId","Saml2","saml","idpAllowOutboundLogoutRequests","OrganizationSsoResponse","SsoUrls","callbackPath","signedOutCallbackPath","spEntityId","spMetadataUrl","spAcsUrl","OrganizationApiKeyInformationResponse","keyType","OrganizationAutoEnrollStatusResponse","OrganizationConnectionResponse","rawConfig","KeysResponse","OrganizationKeysResponse","PlanResponse","product","isAnnual","nameLocalizationKey","descriptionLocalizationKey","canBeUsedByBusiness","baseSeats","baseStorageGb","maxCollections","maxUsers","hasAdditionalSeatsOption","maxAdditionalSeats","hasAdditionalStorageOption","maxAdditionalStorage","hasPremiumAccessOption","trialPeriodDays","hasSelfHost","hasPolicies","hasGroups","hasDirectory","hasEvents","has2fa","hasApi","hasSso","hasResetPassword","usersGetPremium","upgradeSortOrder","displaySortOrder","legacyYear","stripePlanId","stripeSeatPlanId","stripeStoragePlanId","stripePremiumAccessPlanId","basePrice","seatPrice","additionalStoragePricePerGb","premiumAccessOptionPrice","OrganizationResponse","businessName","businessAddress1","businessAddress2","businessAddress3","businessCountry","businessTaxNumber","billingEmail","plan","planType","seats","maxAutoscaleSeats","maxStorageGb","useGroups","useDirectory","useEvents","use2fa","useApi","useResetPassword","hasPublicAndPrivateKeys","OrganizationSponsorshipSyncStatusResponse","lastSyncDate","SubscriptionResponse","storageName","storageGb","license","expiration","usingInAppPurchase","subscription","upcomingInvoice","BillingSubscriptionResponse","BillingSubscriptionUpcomingInvoiceResponse","trialEndDate","periodStartDate","periodEndDate","cancelledDate","cancelAtEndDate","cancelled","BillingSubscriptionItemResponse","quantity","sponsoredSubscriptionItem","OrganizationSubscriptionResponse","OrganizationUserBulkPublicKeyResponse","OrganizationUserBulkResponse","PermissionsApi","accessEventLogs","accessImportExport","accessReports","manageAllCollections","manageAssignedCollections","createNewCollections","editAnyCollection","deleteAnyCollection","editAssignedCollections","deleteAssignedCollections","manageCiphers","manageGroups","manageSso","managePolicies","manageUsers","manageResetPassword","manageScim","OrganizationUserResponse","resetPasswordEnrolled","OrganizationUserUserDetailsResponse","twoFactorEnabled","OrganizationUserDetailsResponse","OrganizationUserResetPasswordDetailsReponse","ProfileOrganizationResponse","usePolicies","useSso","useKeyConnector","useScim","selfHost","ssoBound","providerName","familySponsorshipFriendlyName","familySponsorshipAvailable","planProductType","familySponsorshipLastSyncDateString","familySponsorshipLastSyncDate","familySponsorshipValidUntilString","familySponsorshipValidUntil","familySponsorshipToDelete","ProfileProviderOrganizationResponse","ProfileProviderResponse","ProfileResponse","providerOrganizations","premiumPersonally","premiumFromOrganization","culture","securityStamp","PaymentResponse","userProfile","paymentIntentClientSecret","PolicyResponse","PreloginResponse","ProviderOrganizationResponse","ProviderOrganizationOrganizationDetailsResponse","organizationName","ProviderResponse","ProviderUserBulkPublicKeyResponse","ProviderUserBulkResponse","ProviderUserResponse","ProviderUserUserDetailsResponse","SendFileApi","SendTextApi","SendAccessResponse","creatorIdentifier","SendFileDownloadDataResponse","SendResponse","SendFileUploadDataResponse","SsoPreValidateResponse","FolderResponse","SyncResponse","TaxInfoResponse","taxId","taxIdType","line1","line2","TaxRateResponse","TwoFactorAuthenticatorResponse","TwoFactorDuoResponse","secretKey","integrationKey","TwoFactorEmailResponse","TwoFactorProviderResponse","TwoFactorRecoverResponse","TwoFactorWebAuthnResponse","KeyResponse","migrated","ChallengeResponse","attestation","authenticatorSelection","challenge","fromUrlB64ToArray","excludeCredentials","extensions","pubKeyCredParams","rp","TwoFactorYubiKeyResponse","key1","key2","key3","key4","key5","nfc","UserKeyResponse","HtmlStorageLocation","logoutCallback","customUserAgent","isWebClient","isDesktopClient","IEBrowser","ChromeBrowser","EdgeBrowser","FirefoxBrowser","OperaBrowser","SafariBrowser","UnknownBrowser","VivaldiBrowser","WindowsDesktop","MacOsDesktop","LinuxDesktop","postIdentityToken","Headers","Accept","identityToken","getClientType","qsStringify","getCredentials","method","responseJson","isJsonResponse","json","TwoFactorProviders2","clearTwoFactorToken","doAuthRefresh","getProfile","getUserSubscription","getTaxInfo","putProfile","putTaxInfo","postPrelogin","isDev","getApiUrl","postEmailToken","postEmail","postPassword","postSetKeyConnectorKey","postSecurityStamp","deleteAccount","getAccountRevisionDate","postPremium","postIapCheck","postReinstatePremium","postCancelPremium","postAccountStorage","postAccountPayment","postAccountLicense","postAccountKeys","postAccountKey","postAccountVerifyEmail","postAccountVerifyEmailToken","postAccountRecoverDelete","postAccountRecoverDeleteToken","postAccountKdf","deleteSsoUser","postUserApiKey","postUserRotateApiKey","postAccountRequestOTP","postAccountVerifyOTP","postConvertToKeyConnector","getUserBillingHistory","getUserBillingPayment","getSend","postSendAccess","getSendFileDownloadData","getSends","postSend","postFileTypeSend","renewSendFileUploadUrl","fileId","postSendFile","postSendFileLegacy","putSend","putSendRemovePassword","deleteSend","getCipher","getFullCipherDetails","getCipherAdmin","getCiphersOrganization","postCipher","postCipherCreate","postCipherAdmin","putCipher","putCipherAdmin","deleteCipherAdmin","deleteManyCiphers","deleteManyCiphersAdmin","putMoveCiphers","putShareCipher","putShareCiphers","putCipherCollections","putCipherCollectionsAdmin","postPurgeCiphers","postImportCiphers","postImportOrganizationCiphers","putDeleteCipher","putDeleteCipherAdmin","putDeleteManyCiphers","putDeleteManyCiphersAdmin","putRestoreCipher","putRestoreCipherAdmin","putRestoreManyCiphers","postCipherAttachment","postCipherAttachmentLegacy","postCipherAttachmentAdminLegacy","deleteCipherAttachmentAdmin","postShareCipherAttachment","renewAttachmentUploadUrl","postAttachmentFile","getCollectionDetails","getUserCollections","getCollections","getCollectionUsers","postCollection","putCollection","putCollectionUsers","deleteCollection","deleteCollectionUser","getGroupDetails","getGroups","getGroupUsers","postGroup","putGroup","putGroupUsers","deleteGroup","deleteGroupUser","getPolicy","getPolicies","getPoliciesByToken","getPoliciesByInvitedUser","putPolicy","getOrganizationUser","getOrganizationUserGroups","getOrganizationUsers","getOrganizationUserResetPasswordDetails","postOrganizationUserInvite","postOrganizationUserReinvite","postManyOrganizationUserReinvite","postOrganizationUserAccept","postOrganizationUserConfirm","postOrganizationUsersPublicKey","postOrganizationUserBulkConfirm","putOrganizationUser","putOrganizationUserGroups","putOrganizationUserResetPassword","deleteOrganizationUser","deleteManyOrganizationUsers","deactivateOrganizationUser","deactivateManyOrganizationUsers","activateOrganizationUser","activateManyOrganizationUsers","getPlans","postImportDirectory","postPublicImportDirectory","getTaxRates","getSettingsDomains","putSettingsDomains","getSync","getTwoFactorProviders","getTwoFactorOrganizationProviders","getTwoFactorAuthenticator","getTwoFactorEmail","getTwoFactorDuo","getTwoFactorOrganizationDuo","getTwoFactorYubiKey","getTwoFactorWebAuthn","getTwoFactorWebAuthnChallenge","getTwoFactorRecover","putTwoFactorAuthenticator","putTwoFactorEmail","putTwoFactorDuo","putTwoFactorOrganizationDuo","putTwoFactorYubiKey","putTwoFactorWebAuthn","deviceResponse","rawId","getClientExtensionResults","AttestationObject","attestationObject","clientDataJson","clientDataJSON","deleteTwoFactorWebAuthn","putTwoFactorDisable","putTwoFactorOrganizationDisable","postTwoFactorRecover","postTwoFactorEmailSetup","getDeviceVerificationSettings","putDeviceVerificationSettings","getEmergencyAccessTrusted","getEmergencyAccessGranted","getEmergencyAccess","getEmergencyGrantorPolicies","putEmergencyAccess","deleteEmergencyAccess","postEmergencyAccessInvite","postEmergencyAccessReinvite","postEmergencyAccessAccept","postEmergencyAccessConfirm","postEmergencyAccessInitiate","postEmergencyAccessApprove","postEmergencyAccessReject","postEmergencyAccessTakeover","postEmergencyAccessPassword","postEmergencyAccessView","getOrganization","getOrganizationBilling","getOrganizationSubscription","getCloudCommunicationsEnabled","getOrganizationConnection","createOrganizationConnection","updateOrganizationConnection","organizationConnectionId","deleteOrganizationConnection","getOrganizationLicense","getOrganizationTaxInfo","getOrganizationSso","postOrganization","putOrganization","putOrganizationTaxInfo","postOrganizationLicense","postOrganizationLicenseUpdate","postOrganizationApiKey","getOrganizationApiKeyInformation","postOrganizationRotateApiKey","postOrganizationSso","postOrganizationUpgrade","postOrganizationUpdateSubscription","postOrganizationSeat","postOrganizationStorage","postOrganizationPayment","postOrganizationVerifyBank","postOrganizationCancel","postOrganizationReinstate","deleteOrganization","postOrganizationKeys","postProviderSetup","getProvider","putProvider","getProviderUsers","getProviderUser","postProviderUserInvite","postProviderUserReinvite","postManyProviderUserReinvite","postProviderUserBulkConfirm","deleteManyProviderUsers","postProviderUserAccept","postProviderUserConfirm","postProviderUsersPublicKey","putProviderUser","deleteProviderUser","getProviderClients","postProviderAddOrganization","postProviderCreateOrganization","deleteProviderOrganization","getEvents","addEventParameters","getEventsCipher","getEventsOrganization","getEventsOrganizationUser","getEventsProvider","getEventsProviderUser","postEventsCollect","authHeader","getActiveBearerToken","Authorization","getEventsUrl","getUserPublicKey","getHibpBreach","postBitPayInvoice","postSetupPayment","getUserKeyFromKeyConnector","handleError","postUserKeyToKeyConnector","getKeyConnectorAlive","getToken","tokenNeedsRefresh","nativeFetch","postCreateSponsorship","sponsoredOrgId","getSponsorshipSyncStatus","deleteRevokeSponsorship","sponsoringOrganizationId","deleteRemoveSponsorship","sponsoringOrgId","postPreValidateSponsorshipToken","sponsorshipToken","postRedeemSponsorship","postResendSponsorshipOffer","getRefreshToken","doRefreshToken","getClientId","getClientSecret","doApiTokenRefresh","decodedToken","decodeToken","tokenResponse","setTokens","deviceRequest","tokenRequest","setToken","authed","hasResponse","alterHeaders","requestUrl","requestInit","FormData","tokenError","isTextResponse","Message","hasBaseUrl","typeHeader","storageService","makeAndGetAppId","getAnonymousAppId","existingId","htmlStorageLocation","Local","guid","newGuid","hashBytes","fromBufferToHex","hashStart","hashEnding","breachedAccounts","throttleKey","descriptor","originalMethod","allThrottles","throttles","getThrottles","argsThrottleKey","queue","exec","onFinally","err","AuthResult","LogInStrategy","captchaBypassToken","startLogIn","processTwoFactorResponse","processCaptchaResponse","processTokenResponse","buildDeviceRequest","buildTwoFactor","userProvidedTwoFactor","storedTwoFactorToken","getTwoFactorToken","Remember","saveAccountInformation","accountInformation","addAccount","sub","hasPremiumPersonally","kdfType","setTwoFactorToken","createKeyPairForOldAccount","ApiLogInStrategy","getKeyConnectorUrl","getAndSetKey","setApiKeyClientId","setApiKeyClientSecret","PasswordTokenRequest","fromUtf8ToUrlB64","PasswordLogInStrategy","localHashedPassword","makePreloginKey","SsoTokenRequest","code_verifier","redirect_uri","SsoLogInStrategy","newSsoUser","convertNewSsoUserToKeyConnector","PreloginRequest","logInStrategy","strategy","clearState","requiresCaptcha","Auto","getEverBeenUnlocked","hasKeyInMemory","preloginResponse","startSessionTimeout","clearSessionTimeout","sessionTimeout","sequentialize","cacheKey","caches","getCache","argsCacheKey","AttachmentData","CardData","FieldData","IdentityData","LoginUriData","LoginData","PasswordHistoryData","SecureNoteData","CipherData","ph","AttachmentView","SymmetricCryptoKey","macKey","keyB64","encKeyB64","macKeyB64","jsonResult","Attachment","orgKey","decValue","decryptToBytes","toAttachmentData","toCardData","Field","toFieldData","toIdentityData","LoginUri","toLoginUriData","toLoginData","PasswordHistoryView","toPasswordHistoryData","toSecureNoteData","Cipher","model","reduce","promise","decAttachment","decField","decPh","toCipherData","SortedCiphersCache","comparator","sortedCiphersByUrl","timeouts","isCached","addCiphers","Ciphers","resetTimer","getLastUsed","getLastLaunched","getNext","updateLastUsedIndex","lastUsedIndex","lastLaunched","y","valueOf","getNextIndex","CipherBulkDeleteRequest","ids","CipherBulkMoveRequest","CipherBulkRestoreRequest","AttachmentRequest","CipherRequest","lastKnownRevisionDate","attachments2","attachmentRequest","CipherWithIdRequest","CipherBulkShareRequest","CipherCollectionsRequest","CipherCreateRequest","CipherShareRequest","DomainMatchBlacklist","settingsService","fileUploadService","sortedCiphersCache","sortCiphersByLastUsed","getDecryptedCipherCache","getDecryptedCiphers","setDecryptedCipherCache","setDecryptedCiphers","clearIndex","indexCiphers","clearCache","clearDecryptedCiphersState","originalCipher","existingCipher","hasFields","existingHiddenFields","hiddenFields","ef","matchedField","encryptObjProperty","encryptCipherData","encryptFields","encryptPasswordHistories","encryptAttachments","attachmentsModel","encAttachments","fieldsModel","encFields","encField","encryptField","fieldModel","phModels","encPhs","encPh","encryptPasswordHistory","phModel","getEncryptedCiphers","getLocalData","decCiphers","hasKey","getLocaleSortingFunction","getAllDecryptedForGrouping","groupingId","includeOtherTypes","defaultMatch","eqDomainsPromise","getEquivalentDomains","eqDomains","eqDomain","matchingDomains","domainUrlHost","urlHost","getAllFromApiForOrganization","getLastUsedForUrl","getCipherForUrl","getLastLaunchedForUrl","getNextCipherForUrl","updateLastUsedIndexForUrl","updateLastUsedDate","ciphersLocalData","setLocalData","decryptedCipherCache","cached","saveNeverDomain","upsert","attachmentPromises","shareAttachmentWithServer","encCipher","shareManyWithServer","encCiphers","unencryptedFile","reader","FileReader","readAsArrayBuffer","onload","evt","cData","onerror","filename","encFileName","dataEncKey","encData","encryptToBytes","fileSize","adminRequest","uploadDataResponse","uploadCipherAttachment","legacyServerAttachmentFileUpload","fd","blob","Blob","filepath","contentType","setEncryptedCiphers","clearEncryptedCiphersState","moveManyWithServer","deleteManyWithServer","deleteAttachment","aLastUsed","bLastUsed","bothNotNull","aName","bName","softDelete","setDeletedDate","softDeleteManyWithServer","clearDeletedDate","restoreManyWithServer","restores","attachmentView","attachmentResponse","theObj","modelProp","lastUsed","autofillOnPageLoadDefault","clearSortedCiphers","CollectionData","CollectionView","Collection","setDecryptedCollections","decryptMany","decCollections","getEncryptedCollections","decryptedCollections","getDecryptedCollections","collectionCopy","setEncryptedCollections","LogLevelType","ConsoleLogService","timersMap","debug","write","Debug","Info","warning","Warning","level","log","warn","time","label","hrtime","timeEnd","elapsed","EEFLongWordList","EncArrayBuffer","EncryptedObject","BaseEncryptedOrganizationKey","EncryptedOrganizationKey","ProviderEncryptedOrganizationKey","rsaDecrypt","toData","providerKey","getProviderKey","encryptService","platformUtilService","setCryptoMasterKey","storeKey","keyHash","setDecryptedCryptoSymmetricKey","setEncryptedCryptoSymmetricKey","encPrivateKey","setDecryptedPrivateKey","setEncryptedPrivateKey","setOrgKeys","providerOrgs","encOrgKeyData","setDecryptedOrganizationKeys","setEncryptedOrganizationKeys","setProviderKeys","setDecryptedProviderKeys","setEncryptedProviderKeys","keySuffix","inMemoryKey","getCryptoMasterKey","symmetricKey","getKeyFromStorage","retrieveKeyFromStorage","validateKey","clearSecretKeyStore","storedKeyHash","getEncKeyHelper","getPublicKey","inMemoryPublicKey","getPrivateKey","rsaExtractPublicKey","setPublicKey","decryptedPrivateKey","getDecryptedPrivateKey","getEncryptedPrivateKey","keyFingerprint","userFingerprint","hkdfExpand","hashPhrase","getOrgKeys","decryptedOrganizationKeys","getDecryptedOrganizationKeys","getEncryptedOrganizationKeys","encOrgKey","fromData","decOrgKey","orgKeys","getProviderKeys","decryptedProviderKeys","getDecryptedProviderKeys","encProviderKeys","getEncryptedProviderKeys","getCryptoMasterKeyAuto","hasCryptoMasterKeyBiometric","getEncryptedCryptoSymmetricKey","clearKey","clearSecretStorage","setLegacyEtmKey","clearStoredKey","setCryptoMasterKeyAuto","setCryptoMasterKeyBiometric","clearKeyHash","clearEncKey","memoryOnly","clearKeyPair","keysToClear","clearOrgKeys","clearProviderKeys","clearKeys","salt","pbkdf2","protectedKeyCs","getEncryptedPinProtected","decKey","makeShareKey","shareKey","randomBytes","keyPair","rsaGenerateKeyPair","stretchKey","makeSendKey","keyMaterial","sendKey","hkdf","hashPurpose","iterations","theKey","getKeyForEncryption","buildEncKey","plainValue","encValue","aesEncrypt","macLen","encBytes","privateKeyValue","Rsa2048_OaepSha256_HmacSha256_B64","Rsa2048_OaepSha1_HmacSha256_B64","alg","encString","decipher","aesDecryptToBytes","resolveLegacyKey","encBuf","ctBytes","ivBytes","macBytes","randomNumber","min","rval","range","bitsNeeded","ceil","log2","bytesNeeded","mask","pow","byteArray","shouldStoreKey","getBiometricUnlock","getCryptoMasterKeyBiometric","macData","hmac","keyForEnc","computedMac","aesDecrypt","legacyKey","getLegacyEtmKey","minimumEntropy","entropyPerWord","numWords","hashArr","phrase","hashNumber","remainder","divide","encKeyEnc","getDecryptedCryptoSymmetricKey","decEncKey","encKeyCipher","symmetricCryptoKey","EncryptService","logMacFailures","plainBuf","encObj","fastParams","aesDecryptFastParameters","hmacFast","compareFast","logMacFailed","aesDecryptFast","urlsSubject","scimUrl","setUrlsFromStorage","getNotificationsUrl","eventsUrl","getScimUrl","getEnvironmentUrls","envUrls","formatUrl","scim","setEnvironmentUrls","EventData","EventRequest","checkOnInterval","uploadEvents","uploadImmediately","orgIds","eventCollection","getEventCollection","setEventCollection","clearEvents","CardExport","FieldExport","IdentityExport","LoginUriExport","LoginExport","toView","toDomain","SecureNoteExport","CipherExport","values","build","CipherWithIdExport","CollectionExport","CollectionWithIdExport","EventExport","humanReadableMessage","appIcon","appName","userName","userEmail","ip","Folder","FolderExport","FolderWithIdExport","FileUploadType","getOrganizationExport","getEncryptedExport","getDecryptedExport","getPasswordProtectedExport","clearText","encKeyValidation","encText","jsonDoc","encrypted","passwordProtected","encKeyValidation_DO_NOT_EDIT","getOrganizationEncryptedExport","getOrganizationDecryptedExport","getEventExport","padNumber","getMonth","getHours","getMinutes","getSeconds","decFolders","foldersMap","exportCiphers","buildCommonCipher","collectionPromises","decCol","cipherPromises","collectionsMap","num","padCharacter","numString","login_uri","login_username","login_password","login_totp","AzureFileUploadService","upload","renewalCallback","azureUploadBlob","azureUploadBlocks","urlObject","toUTCString","searchParams","blobResponse","blockSize","getMaxBlockSize","blockIndex","numBlocks","blocksStaged","renewUrlIfNecessary","blockUrl","blockId","encodedBlockId","blockData","blockHeaders","blockRequest","blockResponse","blockListUrl","blockListXml","expiry","utfBlockId","fromUtf8ToB64","blockIdList","xml","Version","month","day","compareTo","BitwardenFileUploadService","encryptedFileName","encryptedFileData","apiCall","azureFileUploadService","bitwardenFileUploadService","uploadSendFile","uploadData","Direct","Azure","FolderData","FolderRequest","FolderApiService","postFolder","putFolder","deleteFolder","OrganizationUserType","_folders","_folderViews","activeAccountUnlocked","unlocked","getEncryptedFolders","updateObservables","getAllDecryptedFromState","decryptFolders","setEncryptedFolders","updates","cId","decryptFolderPromises","decryptedFolders","SetKeyConnectorKeyRequest","KeyConnectorUserKeyRequest","setUsesKeyConnector","userNeedsMigration","loggedInUsingSso","getIsExternal","requiredByOrganization","userIsNotUsingKeyConnector","keyConnectorRequest","handleKeyConnectorError","userKeyResponse","keyArr","Admin","Owner","isProviderUser","pubKey","privKey","setPasswordRequest","setConvertAccountRequired","setConvertAccountToKeyConnector","getConvertAccountToKeyConnector","NotificationType","NotificationResponse","contextId","payload","SyncCipherCreate","SyncCipherDelete","SyncCipherUpdate","SyncLoginDelete","SyncCipherNotification","SyncFolderCreate","SyncFolderDelete","SyncFolderUpdate","SyncFolderNotification","SyncVault","SyncCiphers","SyncOrgKeys","SyncSettings","LogOut","UserNotification","SyncSendCreate","SyncSendUpdate","SyncSendDelete","SyncSendNotification","Permissions","connected","inactive","reconnectTimer","signalrConnection","off","withUrl","accessTokenFactory","skipNegotiation","transport","withHubProtocol","on","processNotification","onclose","reconnect","isAuthedAndUnlocked","updateConnection","reconnectFromActivity","disconnectFromInactivity","notification","isAuthenticated","payloadUserId","UserId","myUserId","syncUpsertCipher","syncDeleteCipher","syncUpsertFolder","syncDeleteFolder","syncUpsertSend","syncDeleteSend","Organization","Manager","isAdmin","isManager","canCreateNewCollections","canEditAnyCollection","canDeleteAnyCollection","canDeleteAssignedCollections","canEditAssignedCollections","canManagePolicies","hasAnyPermission","AccessEventLogs","canAccessEventLogs","AccessImportExport","canAccessImportExport","AccessReports","canAccessReports","CreateNewCollections","EditAnyCollection","DeleteAnyCollection","EditAssignedCollections","DeleteAssignedCollections","ManageGroups","canManageGroups","ManageOrganization","isOwner","ManagePolicies","ManageUsers","canManageUsers","ManageUsersPassword","canManageUsersPassword","ManageSso","canManageSso","ManageScim","canManageScim","ManageBilling","canManageBilling","hasProvider","getOrganizations","getByIdentifier","setOrganizations","canManageSponsorships","GeneratedPasswordHistory","PasswordGeneratorPolicyOptions","defaultType","useUppercase","useLowercase","useNumbers","numberCount","useSpecial","specialCount","minNumberWords","capitalize","includeNumber","inEffect","DefaultOptions","minNumber","minUppercase","minLowercase","minSpecial","wordSeparator","generatePassphrase","sanitizePasswordLength","positions","shuffleArray","allCharSet","lowercaseCharSet","uppercaseCharSet","numberCharSet","specialCharSet","positionChars","randomCharIndex","listLength","wordList","wordIndex","appendRandomNumberToRandomWord","getPasswordGenerationOptions","setPasswordGenerationOptions","enforcedOptions","enforcePasswordGeneratorPoliciesOnOptions","getPasswordGeneratorPolicyOptions","PasswordGenerator","currentPolicy","useUpper","useLower","minNumbers","getDecryptedPasswordGenerationHistory","getEncryptedPasswordGenerationHistory","decrypted","decryptHistory","setDecryptedPasswordGenerationHistory","currentHistory","matchesPrevious","unshift","newHistory","encryptHistory","setEncryptedPasswordGenerationHistory","userInputs","globalUserInputs","finalUserInputs","array","j","forGeneration","minUppercaseCalc","minLowercaseCalc","minNumberCalc","minSpecialCalc","PolicyData","Policy","ResetPasswordPolicyOptions","autoEnrollEnabled","ProviderUserStatusType","ProviderUserType","setDecryptedPolicies","decryptedPolicies","getDecryptedPolicies","diskPolicies","getEncryptedPolicies","policy","getPolicyForOrganization","policyType","setEncryptedPolicies","mapPoliciesFromToken","newPassword","toLocaleLowerCase","toLocaleUpperCase","getResetPasswordPolicyOptions","resetPasswordPolicyOptions","ResetPassword","policiesResponse","policyFilter","filteredPolicies","policySet","Accepted","isExcemptFromPolicies","isExemptFromPolicies","Provider","isProviderAdmin","ProviderAdmin","indexing","immediateSearchLocales","defaultSearchableMinLength","searchableMinLength","locale$","lunr","Pipeline","registerFunction","normalizeAccentsPipelineFunction","normalizeSearchQuery","builder","Builder","pipeline","boost","extractor","uriExtractor","fieldExtractor","attachmentExtractor","results","isArray","getIndexForSearch","searchCiphersBasic","ciphersMap","searchResults","soWild","Query","wildcard","LEADING","TRAILING","q","tokenizer","term","sendsMatched","lowPriorityMatched","joined","protocolIndex","queryIndex","searchableFields","metadata","normalize","SendFileData","SendTextData","SendData","SendFile","SendText","Send","cryptoKey","SendRequest","fileLength","setDecryptedSends","fileData","passwordHash","ArrayBuffer","encryptFileData","parseFile","getEncryptedSends","decSends","getDecryptedSends","legacyServerSendFileUpload","setEncryptedSends","Keys","setSettings","getSettingsKey","setEquivalentDomains","setSettingsKey","getSettings","StorageLocation","ProviderData","State","globals","accounts","authenticatedAccounts","accountActivity","partialKeys","secureStorageService","memoryStorageService","stateMigrationService","stateFactory","useAccountCache","hasBeenInited","isRecoveredSession","accountDiskCache","needsMigration","migrate","setState","createGlobals","initAccountState","updateState","syncAccountFromDisk","storedActiveUser","pushAccounts","diskAccount","getAccountFromDisk","account","setAccountEnvironmentUrls","scaffoldNewAccountStorage","setActiveUser","clearDecryptedDataForActiveUser","clean","reconcileOptions","defaultInMemoryOptions","deAuthenticateAccount","dynamicallySetActiveUser","removeAccountFromDisk","removeAccountFromMemory","getAccessToken","getTimeoutBasedStorageOptions","getAccount","setAccessToken","saveAccount","getAlwaysShowDock","getGlobals","defaultOnDiskOptions","alwaysShowDock","setAlwaysShowDock","saveGlobals","getApiKeyClientId","apiKeyClientId","getApiKeyClientSecret","apiKeyClientSecret","getAutoConfirmFingerPrints","autoConfirmFingerPrints","setAutoConfirmFingerprints","getBiometricAwaitingAcceptance","biometricAwaitingAcceptance","getBiometricFingerprintValidated","biometricFingerprintValidated","setBiometricFingerprintValidated","getBiometricLocked","biometricLocked","setBiometricText","biometricUnlock","getHasPremiumPersonally","getHasPremiumFromOrganization","setHasPremiumPersonally","hasPremiumFromOrganization","setHasPremiumFromOrganization","defaultOnDiskLocalOptions","collapsedGroupings","convertAccountToKeyConnector","cryptoMasterKey","nextValue","defaultSecureStorageOptions","saveSecureStorageKey","getCryptoMasterKeyB64","setCryptoMasterKeyB64","getDecodedToken","setDecodedToken","decryptedSerialized","fromByteStringToArray","fromBufferToByteString","disableAddLoginNotification","disableAutoTotpCopy","disableBadgeCounter","disableChangedPasswordNotification","disableContextMenuItem","getDisableGa","disableGa","setDisableGa","dontShowCardsCurrentTab","dontShowIdentitiesCurrentTab","setEmail","setEmailVerified","getEnableAlwaysOnTop","accountPreference","enableAlwaysOnTop","globalPreference","setEnableAlwaysOnTop","getEnableBiometric","enableBiometrics","setEnableBiometric","getEnableBrowserIntegration","enableBrowserIntegration","setEnableBrowserIntegration","getEnableBrowserIntegrationFingerprint","enableBrowserIntegrationFingerprint","setEnableBrowserIntegrationFingerprint","getEnableCloseToTray","enableCloseToTray","setEnableCloseToTray","getEnableFullWidth","enableFullWidth","setEnableFullWidth","getEnableGravitars","enableGravitars","setEnableGravitars","getEnableMinimizeToTray","enableMinimizeToTray","setEnableMinimizeToTray","getEnableStartToTray","enableStartToTray","setEnableStartToTray","getEnableTray","enableTray","setEnableTray","defaultOnDiskMemoryOptions","getEntityId","entityId","setEntityId","getEntityType","entityType","setEntityType","getGlobalEnvironmentUrls","everBeenUnlocked","getForcePasswordReset","setForcePasswordReset","getInstalledVersion","installedVersion","setInstalledVersion","getLastActive","legacyEtmKey","getLocale","setLocale","getMainWindowSize","mainWindowSize","setMainWindowSize","getMinimizeOnCopyToClipboard","minimizeOnCopyToClipboard","setMinimizeOnCopyToClipboard","neverDomains","getNoAutoPromptBiometrics","noAutoPromptBiometrics","setNoAutoPromptBiometrics","getNoAutoPromptBiometricsText","noAutoPromptBiometricsText","setNoAutoPromptBiometricsText","getOpenAtLogin","openAtLogin","setOpenAtLogin","organizationInvitation","setOrganizationInvitation","passwordGenerationOptions","getUsernameGenerationOptions","usernameGenerationOptions","setUsernameGenerationOptions","publicKeySerialized","setRefreshToken","rememberedEmail","getSecurityStamp","setSecurityStamp","getSsoOrgIdentifier","ssoOrganizationIdentifier","setSsoOrganizationIdentifier","ssoState","setVaultTimeout","accountVaultTimeoutAction","globalVaultTimeoutAction","setVaultTimeoutAction","getStateVersion","setStateVersion","getWindow","setWindow","useMemory","storageLocation","getGlobalsFromMemory","useDisk","getGlobalsFromDisk","saveGlobalsToMemory","saveGlobalsToDisk","useSecureStorage","getAccountFromMemory","getUserIdFromMemory","cachedAccount","Memory","Both","Disk","saveAccountToMemory","saveAccountToDisk","deepClone","scaffoldNewAccountLocalStorage","scaffoldNewAccountSessionStorage","scaffoldNewAccountMemoryStorage","storedAccount","pruneInMemoryAccounts","requestedOptions","defaultOptions","Session","getActiveUserIdFromStorage","removeAccountFromLocalStorage","resetAccount","removeAccountFromSessionStorage","removeAccountFromSecureStorage","persistentAccountInformation","timeoutAction","stateUpdater","updatedState","withPrototype","converter","originalResult","getOwnPropertyDescriptors","withPrototypeForArrayMembers","memberConstructor","memberConverter","withPrototypeForObjectValues","valuesConstructor","valuesConverter","entries","withPrototypeForMap","initFromJson","decoded","fromUrlB64ToUtf8","clientIdClientSecret","setClientId","setClientSecret","clearToken","storedToken","getTokenExpirationDate","setUTCSeconds","tokenSecondsRemaining","offsetSeconds","msRemaining","email_verified","getName","getIssuer","iss","amr","v1Keys","autoConfirmFingerprints","enableBiometric","enableGravatars","encOrgKeys","encPrivate","lastActive","ssoIdentifier","stamp","usesConnector","v1KeyPrefixes","currentStateVersion","getCurrentStateVersion","Latest","migrateStateFrom1To2","Two","migrateStateFrom2To3","Three","migrateStateFrom3To4","Four","getAuthenticatedAccounts","migratedAccount","migrateAccountFrom4To5","setCurrentStateVersion","Five","clearV1Keys","clearingUserId","keyPrefix","defaultAccount","accountSettings","cryptoMasterKeyAuto","cryptoMasterKeyB64","cryptoMasterKeyBiometric","authenticationStatus","authenticatedUserIds","encryptedOrgKeys","newVersion","OrganizationData","providerService","toJSON","forceSync","allowThrowOnError","syncStarted","syncCompleted","needsSync","needsSyncing","syncProfile","syncFolders","syncCollections","syncCiphers","syncSends","syncSettings","syncPolicies","isEdit","localFolder","remoteFolder","shouldUpdate","localCipher","checkCollections","remoteCipher","localSend","remoteSend","B32Chars","SteamChars","period","digits","keyB32","isOtpAuth","isSteamAuth","getQueryParams","digitParams","periodParam","algParam","epoch","timeHex","leftPad","decToHex","timeBytes","fromHexToArray","keyBytes","b32ToBytes","sign","offset","otp","fullCode","trunc","b32ToHex","cleanedInput","bits","hex","byteIndex","chunk","signature","VerifyOTPRequest","buildRequest","verification","requestClass","alreadyHashed","validateInput","wordCapitalize","wordIncludeNumber","forwardedService","forwardedAnonAddyDomain","generateCatchall","generateSubaddress","generateForwarded","generateWord","word","zeroPad","atIndex","emailBeginning","emailEnding","subaddressString","randomString","catchallDomain","startString","forwardedSimpleLoginApiKey","generateSimpleLoginAlias","forwardedAnonAddyApiToken","generateAnonAddyAlias","forwardedFirefoxApiToken","generateFirefoxRelayAlias","charSet","redirect","Authentication","note","alias","apiToken","websiteNote","generated_for","full_address","lockedCallback","loggedOutCallback","startCheck","checkVaultTimeout","isViewOpen","shouldLock","executeTimeoutAction","allowSoftLock","currentAction","vaultTimeoutSeconds","DecryptParameters","WebCryptoFunctionService","crypto","subtle","algorithm","wcLen","passwordBuf","toBuf","pbkdf2Params","toWebCryptoAlgorithm","impKey","importKey","deriveBits","ikm","outputByteSize","hkdfParams","prk","hashLen","infoBuf","infoArr","runningOkmLength","previousT","okm","md","valueBytes","toByteString","digest","valueBuf","signingAlgorithm","mac1","mac2","arr1","arr2","getBytes","rand","Uint32Array","putInt32","meta","encKeyByteString","macKeyByteString","parameters","dataBuffer","finish","rsaParams","impPrivateKey","jwkPrivateKey","exportKey","jwkPublicKeyParams","kty","ext","impPublicKey","modulusLength","publicExponent","generateKey","getRandomValues","subscribers","messageCallback","InjectionToken","MEMORY_STORAGE","SECURE_STORAGE","STATE_FACTORY","STATE_SERVICE_USE_CACHE","LOGOUT_CALLBACK","LOCKED_CALLBACK","LOCALES_DIRECTORY","SYSTEM_LANGUAGE","LOG_MAC_FAILURES","JslibServicesModule","LOCALE_ID","useFactory","deps","language","Injector","controlErrors","keyError","ContainerService","attachToWindow","attachToGlobal","bitwardenContainerService","MemoryStorageService","SystemService","reloadCallback","reloadInterval","clearClipboardTimeout","clearClipboardTimeoutFunction","startProcessReload","cancelProcessReload","doRefresh","biometricLockedFingerprintValidated","clipboardValue","timeoutMs","clearSeconds","clipboardValueNow","readFromClipboard","clearing","clearPendingClipboard","SafariApp","resolveNow","messageId","MAX_SAFE_INTEGER","sendNativeMessage","responseData","BrowserComponentState","BrowserGroupingsComponentState","BrowserSendComponentState","AccountSettings","Account","groupings","AutofillScript","documentUUID","script","properties","autosubmit","AutoFillConstants","UsernameFieldNames","PasswordFieldIgnoreList","ExcludedAutofillTypes","CreditCardAutoFillConstants","CardAttributes","CardAttributesExtended","CardHolderFieldNames","CardHolderFieldNameValues","CardNumberFieldNames","CardNumberFieldNameValues","CardExpiryFieldNames","CardExpiryFieldNameValues","ExpiryMonthFieldNames","ExpiryYearFieldNames","CVVFieldNames","CardBrandFieldNames","MonthAbbr","YearAbbrShort","YearAbbrLong","IdentityAutoFillConstants","IdentityAttributes","FullNameFieldNames","FullNameFieldNameValues","TitleFieldNames","FirstnameFieldNames","MiddlenameFieldNames","LastnameFieldNames","EmailFieldNames","AddressFieldNames","AddressFieldNameValues","Address1FieldNames","Address2FieldNames","Address3FieldNames","PostalCodeFieldNames","CityFieldNames","StateFieldNames","CountryFieldNames","PhoneFieldNames","UserNameFieldNames","CompanyFieldNames","IsoCountries","afghanistan","albania","algeria","andorra","angola","anguilla","antarctica","argentina","armenia","aruba","australia","austria","azerbaijan","bahamas","bahrain","bangladesh","barbados","belarus","belgium","belize","benin","bermuda","bhutan","bolivia","botswana","brazil","bulgaria","burundi","cambodia","cameroon","canada","chad","chile","china","colombia","comoros","congo","croatia","cuba","cyprus","denmark","djibouti","dominica","ecuador","egypt","eritrea","estonia","ethiopia","fiji","finland","france","gabon","gambia","georgia","germany","ghana","gibraltar","greece","greenland","grenada","guadeloupe","guam","guatemala","guernsey","guinea","guyana","haiti","honduras","hungary","iceland","india","indonesia","iraq","ireland","israel","italy","jamaica","japan","jersey","jordan","kazakhstan","kenya","kiribati","kuwait","kyrgyzstan","latvia","lebanon","lesotho","liberia","liechtenstein","lithuania","luxembourg","macao","macedonia","madagascar","malawi","malaysia","maldives","mali","malta","martinique","mauritania","mauritius","mayotte","mexico","moldova","monaco","mongolia","montenegro","montserrat","morocco","mozambique","myanmar","namibia","nauru","nepal","netherlands","nicaragua","niger","nigeria","niue","norway","oman","pakistan","palau","panama","paraguay","peru","philippines","pitcairn","poland","portugal","qatar","reunion","romania","rwanda","samoa","senegal","serbia","seychelles","singapore","slovakia","slovenia","somalia","spain","sudan","suriname","swaziland","sweden","switzerland","taiwan","tajikistan","tanzania","thailand","togo","tokelau","tonga","tunisia","turkey","turkmenistan","tuvalu","uganda","ukraine","uruguay","uzbekistan","vanuatu","venezuela","vietnam","yemen","zambia","zimbabwe","IsoStates","alabama","alaska","arizona","arkansas","california","colorado","connecticut","delaware","florida","hawaii","idaho","illinois","indiana","iowa","kansas","kentucky","louisiana","maine","maryland","massachusetts","michigan","minnesota","mississippi","missouri","montana","nebraska","nevada","ohio","oklahoma","oregon","pennsylvania","tennessee","texas","utah","vermont","virginia","washington","wisconsin","wyoming","IsoProvinces","alberta","manitoba","ontario","quebec","saskatchewan","getFormsWithPasswordFields","formData","passwordFields","loadPasswordFields","formKey","forms","formPasswordFields","pf","uf","findUsernameField","passwords","totpPromise","getActiveTab","didAutofill","pd","fillScript","generateFillScript","skipUsernameOnlyFill","onlyEmptyFields","onlyVisibleFields","delay_between_operations","skipLastUsed","Cipher_ClientAutofilled","doAutoFillActiveTab","fromCommand","lastLaunchedCipher","filledFields","fieldNames","hasValue","opid","viewable","matchingIndex","findMatchingFieldIndex","matchingField","fillByOpid","generateLoginFillScript","generateCardFillScript","generateIdentityFillScript","usernames","setFillScriptForFocus","passwordFieldsForForm","passField","elementNumber","fieldIsFuzzyMatch","fillFields","forCustomFieldsOnly","isExcludedType","attr","isFieldMatch","makeScriptAction","selectInfo","siOptions","fieldAttrsContain","maxLength","colonIndex","fullMonth","fullYear","partYear","makeScriptActionWithValue","containsVal","doesContain","filledState","stateLower","isoState","filledCountry","countryLower","isoCountry","fullName","excludedTypes","containsOptions","checkValueContains","cipherData","dataProp","fieldProp","dataValue","doFill","canBeHidden","canBeReadOnly","mustBeEmpty","isPassword","valueIsLikePassword","cleanedValue","readonly","htmlID","htmlName","placeholder","autoCompleteType","passwordField","withoutForm","usernameField","names","fieldPropertyIsPrefixMatch","fieldPropertyIsMatch","property","separator","sepIndex","fieldVal","regexParts","csvParts","csvVals","fuzzyMatch","lastField","lastPasswordField","BrowserCryptoService","ClientType","AbstractChromeStorageService","chromeStorageApi","keyedObj","BrowserLocalStorageService","storage","local","BrowserMessagingService","subscriber","arg","BrowserMessagingPrivateModeBackgroundService","DialogPromiseExpiration","BrowserPlatformUtilsService","clipboardWriteCallback","biometricCallback","showDialogResolves","passwordDialogResolves","deviceCache","opr","addons","Browser","isEdge","isVivaldi","isIE","isMacAppStore","isPopupOpen","sidebarView","sidebarViewName","lockTimeout","PublicKeyCredential","bodyIsHtml","clearMs","sendMessageToApp","clipboard","writeText","clipboardData","queryCommandSupported","textarea","textContent","execCommand","removeChild","readText","resolveDialogPromise","resolvePasswordDialogPromise","canceled","resolveObj","tryResolve","getBrowserInfo","sidebarAction","systemLanguage","localesDirectory","getLocalesJson","_locale","ReplaySubject","supportedTranslationLocales","localeNames","defaultMessages","localeMessages","Intl","Collator","numeric","sensitivity","loadMessages","translate","messagesObj","formattedLocale","locales","placeholders","placeProp","content","replaceToken","replaceContent","getMessage","KeyGenerationService","makeEphemeralKey","numBytes","BrowserMemoryStorageService","session","LocalBackedSessionStorageService","keyGenerationService","localStorage","sessionStorage","getLocalSession","getSessionEncKey","sessionEncKey","localSession","setLocalSession","sessionJson","setSessionEncKey","jsonSession","encSession","storedKey","checkSafari","CommandsBackground","main","processCommand","commandToRetry","shortcut","commands","onCommand","generatePasswordToClipboard","autoFillLogin","openPopup","getTabFromCurrentWindowId","retryMessage","tabSendMessageData","collectPageDetailsForContentScript","ContextMenusBackground","noopCommandSuffix","contextMenus","onClicked","menuItemId","getClickedElement","parentMenuItemId","cipherAction","startAutofillPage","Cipher_ClientCopiedPassword","totpValue","loginToAutoFill","IdleBackground","notificationsService","idleTimer","idleState","idle","idleHandler","newState","onStateChanged","setDetectionInterval","pollIdle","handler","queryState","NativeMessagingBackground","runtimeBackground","resolver","secureSetupResolve","onAdded","connect","port","connecting","connectedCallback","disconnect","sharedSecret","validatingFingerprint","showFingerprintDialog","showWrongUserDialog","onDisconnect","timestamp","encryptMessage","secureCommunication","getResponse","rawMessage","abs","processMessage","sendUnencrypted","NotificationQueueMessageType","NotificationBackground","notificationQueue","cleanupNotificationQueue","getDataForTab","responseCommand","addLogin","changedPassword","removeTabFromNotificationQueue","saveOrUpdateCredentials","saveNever","checkNotificationQueue","doNotificationQueueCheck","currentTab","expires","tabDomain","AddLogin","typeData","isVaultLocked","wasVaultLocked","ChangePassword","loginInfo","loginDomain","normalizedUsername","disabledAddLogin","allowPersonalOwnership","pushAddLoginToQueue","usernameMatches","pushChangePasswordToQueue","changeData","currentPassword","passwordMatches","queueMessage","changePasswordMessage","getDecryptedCipherById","updateCipher","createNewCipher","addLoginMessage","loginModel","newCipher","RuntimeBackground","systemService","pageDetailsToAutoFill","onInstalledReason","lockedVaultPendingNotifications","onInstalled","reason","checkOnInstalled","backgroundMessageListener","isPrivateMode","bitwardenBackgroundMessageListener","closeLoginTab","focusSpecifiedTab","setIcon","refreshBadgeAndMenu","logout","reseedStorage","autofillTimeout","autofillPage","referrer","TabsBackground","notificationBackground","onFocusChanged","focusedWindowId","onActivated","activeInfo","onReplaced","addedTabId","removedTabId","onReplacedRan","onUpdated","changeInfo","onUpdatedRan","WebRequestBackground","pendingAuthRequests","webRequest","onAuthRequired","requestId","resolveAuthCredentials","onCompleted","completeAuthRequest","onErrorOccurred","authCredentials","MainBackground","backgroundWindow","menuOptionsLoaded","manifest_version","nativeMessagingBackground","that","backgroundMessagingService","reloadProcess","forceWindowReload","commandsBackground","tabsBackground","contextMenusBackground","idleBackground","webRequestBackground","bootstrap","getPrivateModeWindows","actionSetIcon","browserAction","onWindowCreated","suffix","forLocked","menuDisabled","contextMenusRemoveAll","buildContextMenu","loadMenuAndUpdateBadgeForNoAccessState","contextMenuReady","buildingContextMenu","contextMenusCreate","contexts","parentId","contextMenuEnabled","loadMenuAndUpdateBadge","actionSetBadgeBackgroundColor","loadLoginContextMenuOptions","theText","loadNoLoginsContextMenuOptions","sidebarActionSetBadgeText","browserActionSetBadgeText","getActiveTabs","loadContextMenuOptions","noLoginsMessage","idSuffix","sanitizeContextMenuTitle","override","syncInternal","lastSyncAgo","scheduleNextSync","syncTimeout","removeAll","theAction","setBadgeBackgroundColor","color","setBadgeText","setTitle","FileDownloadBuilder","_request","fileType","downloadMethod","fileNameLower","endsWith","BrowserFileDownloadService","msSaveOrOpenBlob","msSaveBlob","createObjectURL","BrowserMessagingPrivateModePopupService","InitService","screen","availHeight","htmlEl","platform","screenLeft","screenTop","LockGuardService","PasswordRepromptComponent","PopupSearchService","mainSearchService","consoleLogService","UnauthGuardService","mainBackground","localBgService","createLocalBgService","bitwardenMain","getBgService","service","ServicesModule","APP_INITIALIZER","initService","registerLocaleData","AppModule","CurrencyPipe","A11yModule","positionClass","BrowserAnimationsModule","BrowserModule","DragDropModule","LayoutModule","OverlayModule","ScrollingModule","enableProdMode","platformBrowser","bootstrapModule","preserveWhitespaces","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","O","chunkIds","notFulfilled","Infinity","fulfilled","getter","__esModule","definition","defineProperty","enumerable","globalThis","Function","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}